{"version":3,"file":"ux-aspects.umd.min.js","sources":["../../../../node_modules/.tmp/utils/facade/browser.ts","../../../../node_modules/.tmp/utils/theme-provider.ts","../../../../node_modules/.tmp/tooltip/tooltip-container.component.ts","../../../../node_modules/.tmp/utils/trigger.class.ts","../../../../node_modules/.tmp/utils/triggers.ts","../../../../node_modules/.tmp/component-loader/content-ref.class.ts","../../../../node_modules/.tmp/component-loader/component-loader.class.ts","../../../../node_modules/.tmp/positioning/ng-positioning.ts","../../../../node_modules/.tmp/positioning/positioning.service.ts","../../../../node_modules/.tmp/component-loader/component-loader.factory.ts","../../../../node_modules/.tmp/utils/warn-once.ts","../../../../node_modules/.tmp/tooltip/tooltip.directive.ts","../../../../node_modules/.tmp/utils/decorators.ts","../../../../node_modules/.tmp/tooltip/tooltip.module.ts","../../../../node_modules/.tmp/typeahead/latin-map.ts","../../../../node_modules/.tmp/typeahead/typeahead-match.class.ts","../../../../node_modules/.tmp/typeahead/typeahead-utils.ts","../../../../node_modules/.tmp/utils/utils.class.ts","../../../../node_modules/.tmp/typeahead/typeahead-container.component.ts","../../../../node_modules/.tmp/typeahead/typeahead.directive.ts","../../../../node_modules/.tmp/typeahead/typeahead.module.ts","~/@ux-aspects/ux-aspects/components/facets/facet-events.ts","~/@ux-aspects/ux-aspects/components/facets/facet-container.component.ts","~/@ux-aspects/ux-aspects/components/facets/base/facet-base/facet-base.component.ts","~/@ux-aspects/ux-aspects/components/facets/base/facet-header/facet-header.component.ts","~/@ux-aspects/ux-aspects/components/facets/facet-check-list/facet-check-list.component.ts","~/@ux-aspects/ux-aspects/components/facets/facet-typeahead-list/facet-typeahead-list.component.ts","~/@ux-aspects/ux-aspects/components/facets/facets.module.ts","~/@ux-aspects/ux-aspects/components/facets/models/facet.ts","../../../../node_modules/.tmp/dropdown/bs-dropdown.config.ts","../../../../node_modules/.tmp/dropdown/bs-dropdown.state.ts","../../../../node_modules/.tmp/dropdown/bs-dropdown-container.component.ts","../../../../node_modules/.tmp/dropdown/bs-dropdown.directive.ts","../../../../node_modules/.tmp/dropdown/bs-dropdown-menu.directive.ts","../../../../node_modules/.tmp/dropdown/bs-dropdown-toggle.directive.ts","../../../../node_modules/.tmp/dropdown/bs-dropdown.module.ts","~/@ux-aspects/ux-aspects/components/filters/filter-container.component.ts","~/@ux-aspects/ux-aspects/components/filters/filter-base/filter-base.component.ts","~/@ux-aspects/ux-aspects/components/filters/filter-dynamic/filter-dynamic.component.ts","~/@ux-aspects/ux-aspects/components/filters/filter-dropdown/filter-dropdown.component.ts","~/@ux-aspects/ux-aspects/components/filters/filter.module.ts","~/@ux-aspects/ux-aspects/components/flippable-card/flippable-card.component.ts","~/@ux-aspects/ux-aspects/components/flippable-card/flippable-card.module.ts","~/@ux-aspects/ux-aspects/components/floating-action-buttons/floating-action-buttons.service.ts","~/@ux-aspects/ux-aspects/components/floating-action-buttons/floating-action-buttons.component.ts","~/@ux-aspects/ux-aspects/components/floating-action-buttons/floating-action-button.component.ts","~/@ux-aspects/ux-aspects/components/floating-action-buttons/floating-action-buttons.module.ts","~/@ux-aspects/ux-aspects/components/item-display-panel/item-display-panel.component.ts","~/@ux-aspects/ux-aspects/components/item-display-panel/item-display-panel.module.ts","~/@ux-aspects/ux-aspects/components/wizard/wizard-step.component.ts","~/@ux-aspects/ux-aspects/components/wizard/wizard.component.ts","~/@ux-aspects/ux-aspects/components/wizard/wizard.module.ts","~/@ux-aspects/ux-aspects/components/marquee-wizard/marquee-wizard.service.ts","~/@ux-aspects/ux-aspects/components/marquee-wizard/marquee-wizard-step.component.ts","~/@ux-aspects/ux-aspects/components/marquee-wizard/marquee-wizard.component.ts","~/@ux-aspects/ux-aspects/components/marquee-wizard/marquee-wizard.module.ts","~/@ux-aspects/ux-aspects/components/navigation/navigation.component.ts","~/@ux-aspects/ux-aspects/components/navigation/navigation-item/navigation-item.component.ts","~/@ux-aspects/ux-aspects/components/navigation/navigation.module.ts","~/@ux-aspects/ux-aspects/services/color/color.service.ts","~/@ux-aspects/ux-aspects/services/color/color.module.ts","~/@ux-aspects/ux-aspects/components/notification/notification.service.ts","~/@ux-aspects/ux-aspects/components/notification/notification-list.component.ts","~/@ux-aspects/ux-aspects/components/notification/notification.module.ts","~/@ux-aspects/ux-aspects/components/number-picker/number-picker.component.ts","~/@ux-aspects/ux-aspects/components/number-picker/number-picker.module.ts","../../../../node_modules/src/operators/audit.ts","../../../../node_modules/src/util/isNumeric.ts","../../../../node_modules/src/util/isScheduler.ts","../../../../node_modules/src/observable/TimerObservable.ts","../../../../node_modules/src/operators/buffer.ts","../../../../node_modules/src/operators/bufferCount.ts","../../../../node_modules/src/operators/bufferTime.ts","../../../../node_modules/src/operators/bufferToggle.ts","../../../../node_modules/src/operators/bufferWhen.ts","../../../../node_modules/src/operators/catchError.ts","../../../../node_modules/src/observable/ScalarObservable.ts","../../../../node_modules/src/observable/EmptyObservable.ts","../../../../node_modules/src/observable/ArrayObservable.ts","../../../../node_modules/src/operators/combineLatest.ts","../../../../node_modules/src/observable/PromiseObservable.ts","../../../../node_modules/src/observable/IteratorObservable.ts","../../../../node_modules/src/observable/ArrayLikeObservable.ts","../../../../node_modules/src/operators/observeOn.ts","../../../../node_modules/src/observable/FromObservable.ts","../../../../node_modules/src/operators/mergeMap.ts","../../../../node_modules/src/operators/count.ts","../../../../node_modules/src/operators/debounce.ts","../../../../node_modules/src/operators/defaultIfEmpty.ts","../../../../node_modules/src/operators/delayWhen.ts","../../../../node_modules/src/operators/dematerialize.ts","../../../../node_modules/src/util/Set.ts","../../../../node_modules/src/operators/distinct.ts","../../../../node_modules/src/util/ArgumentOutOfRangeError.ts","../../../../node_modules/src/operators/elementAt.ts","../../../../node_modules/src/operators/every.ts","../../../../node_modules/src/operators/exhaust.ts","../../../../node_modules/src/operators/exhaustMap.ts","../../../../node_modules/src/operators/expand.ts","../../../../node_modules/src/operators/finalize.ts","../../../../node_modules/src/operators/find.ts","../../../../node_modules/src/util/EmptyError.ts","../../../../node_modules/src/operators/first.ts","../../../../node_modules/src/util/ObjectUnsubscribedError.ts","../../../../node_modules/src/SubjectSubscription.ts","../../../../node_modules/src/Subject.ts","../../../../node_modules/src/util/MapPolyfill.ts","../../../../node_modules/src/util/Map.ts","../../../../node_modules/src/util/FastMap.ts","../../../../node_modules/src/operators/groupBy.ts","../../../../node_modules/src/operators/ignoreElements.ts","../../../../node_modules/src/operators/isEmpty.ts","../../../../node_modules/src/operators/last.ts","../../../../node_modules/src/operators/mapTo.ts","../../../../node_modules/src/operators/materialize.ts","../../../../node_modules/src/operators/scan.ts","../../../../node_modules/src/operators/takeLast.ts","../../../../node_modules/src/operators/mergeMapTo.ts","../../../../node_modules/src/operators/mergeScan.ts","../../../../node_modules/src/operators/refCount.ts","../../../../node_modules/src/observable/ConnectableObservable.ts","../../../../node_modules/src/operators/onErrorResumeNext.ts","../../../../node_modules/src/operators/pairwise.ts","../../../../node_modules/src/BehaviorSubject.ts","../../../../node_modules/src/AsyncSubject.ts","../../../../node_modules/src/ReplaySubject.ts","../../../../node_modules/src/observable/race.ts","../../../../node_modules/src/operators/repeat.ts","../../../../node_modules/src/operators/repeatWhen.ts","../../../../node_modules/src/operators/retry.ts","../../../../node_modules/src/operators/retryWhen.ts","../../../../node_modules/src/operators/sample.ts","../../../../node_modules/src/operators/sampleTime.ts","../../../../node_modules/src/operators/sequenceEqual.ts","../../../../node_modules/src/operators/single.ts","../../../../node_modules/src/operators/skip.ts","../../../../node_modules/src/operators/skipLast.ts","../../../../node_modules/src/operators/skipUntil.ts","../../../../node_modules/src/operators/skipWhile.ts","../../../../node_modules/src/operators/switchMap.ts","../../../../node_modules/src/operators/switchMapTo.ts","../../../../node_modules/src/operators/take.ts","../../../../node_modules/src/operators/takeWhile.ts","../../../../node_modules/src/operators/tap.ts","../../../../node_modules/src/operators/throttle.ts","../../../../node_modules/src/operators/throttleTime.ts","../../../../node_modules/src/operators/timeInterval.ts","../../../../node_modules/src/util/TimeoutError.ts","../../../../node_modules/src/operators/timeout.ts","../../../../node_modules/src/operators/timeoutWith.ts","../../../../node_modules/src/operators/window.ts","../../../../node_modules/src/operators/windowCount.ts","../../../../node_modules/src/operators/windowTime.ts","../../../../node_modules/src/operators/windowToggle.ts","../../../../node_modules/src/operators/windowWhen.ts","../../../../node_modules/src/operators/withLatestFrom.ts","../../../../node_modules/src/operators/zip.ts","../../../../node_modules/src/operators.ts","~/@ux-aspects/ux-aspects/components/page-header/custom-menu/custom-menu.directive.ts","~/@ux-aspects/ux-aspects/components/page-header/page-header.service.ts","~/@ux-aspects/ux-aspects/components/page-header/page-header.component.ts","~/@ux-aspects/ux-aspects/components/page-header/icon-menu/icon-menu.component.ts","~/@ux-aspects/ux-aspects/components/page-header/navigation/navigation-dropdown-item/navigation-dropdown-item.component.ts","~/@ux-aspects/ux-aspects/components/page-header/navigation/navigation-item/navigation-item.component.ts","~/@ux-aspects/ux-aspects/components/page-header/navigation/navigation.component.ts","~/@ux-aspects/ux-aspects/components/page-header/page-header.module.ts","~/@ux-aspects/ux-aspects/components/progress-bar/progress-bar.component.ts","~/@ux-aspects/ux-aspects/components/progress-bar/progress-bar.module.ts","~/@ux-aspects/ux-aspects/components/radiobutton/radiobutton.component.ts","~/@ux-aspects/ux-aspects/components/radiobutton/radiobutton.module.ts","~/@ux-aspects/ux-aspects/components/search-builder/search-builder.service.ts","~/@ux-aspects/ux-aspects/components/search-builder/search-builder-group/search-builder-group.service.ts","~/@ux-aspects/ux-aspects/components/search-builder/search-builder-group/search-builder-group.component.ts","~/@ux-aspects/ux-aspects/components/search-builder/search-builder-outlet/search-builder-outlet.directive.ts","~/@ux-aspects/ux-aspects/components/search-builder/search-components/base-search.component.ts","~/@ux-aspects/ux-aspects/components/search-builder/search-components/text/text.component.ts","~/@ux-aspects/ux-aspects/components/search-builder/search-components/date/date.component.ts","~/@ux-aspects/ux-aspects/components/search-builder/search-components/date-range/date-range.component.ts","~/@ux-aspects/ux-aspects/components/search-builder/search-components/select/select.component.ts","~/@ux-aspects/ux-aspects/components/search-builder/search-builder.component.ts","../../../../node_modules/.tmp/popover/popover.config.ts","../../../../node_modules/.tmp/popover/popover-container.component.ts","../../../../node_modules/.tmp/popover/popover.directive.ts","../../../../node_modules/.tmp/popover/popover.module.ts","~/@ux-aspects/ux-aspects/components/typeahead/typeahead-event.ts","~/@ux-aspects/ux-aspects/components/typeahead/typeahead-key.service.ts","~/@ux-aspects/ux-aspects/components/typeahead/typeahead.component.ts","~/@ux-aspects/ux-aspects/directives/infinite-scroll/infinite-scroll-load-button.directive.ts","~/@ux-aspects/ux-aspects/directives/infinite-scroll/infinite-scroll-loading.directive.ts","~/@ux-aspects/ux-aspects/directives/infinite-scroll/infinite-scroll.directive.ts","~/@ux-aspects/ux-aspects/directives/infinite-scroll/infinite-scroll.module.ts","~/@ux-aspects/ux-aspects/directives/scroll-into-view-if/scroll-into-view.service.ts","~/@ux-aspects/ux-aspects/directives/scroll-into-view-if/scroll-into-view-if.directive.ts","~/@ux-aspects/ux-aspects/directives/scroll-into-view-if/scroll-into-view-if.module.ts","~/@ux-aspects/ux-aspects/components/typeahead/typeahead.module.ts","~/@ux-aspects/ux-aspects/components/select/select.component.ts","~/@ux-aspects/ux-aspects/components/tag-input/tag-input-event.ts","~/@ux-aspects/ux-aspects/components/tag-input/tag-input.component.ts","~/@ux-aspects/ux-aspects/directives/focus-if/focus-if.directive.ts","~/@ux-aspects/ux-aspects/directives/focus-if/focus-if.module.ts","~/@ux-aspects/ux-aspects/components/tag-input/tag-input.module.ts","~/@ux-aspects/ux-aspects/components/select/select.module.ts","~/@ux-aspects/ux-aspects/components/search-builder/search-builder.module.ts","~/@ux-aspects/ux-aspects/components/slider/slider.component.ts","~/@ux-aspects/ux-aspects/components/slider/slider.module.ts","~/@ux-aspects/ux-aspects/components/spark/spark.component.ts","~/@ux-aspects/ux-aspects/components/spark/spark.module.ts","~/@ux-aspects/ux-aspects/components/timeline/timeline.component.ts","~/@ux-aspects/ux-aspects/components/timeline/timeline-event/timeline-event.component.ts","~/@ux-aspects/ux-aspects/components/timeline/timeline.module.ts","~/@ux-aspects/ux-aspects/components/toggleswitch/toggleswitch.component.ts","~/@ux-aspects/ux-aspects/components/toggleswitch/toggleswitch.module.ts","~/@ux-aspects/ux-aspects/components/toolbar-search/toolbar-search-field.directive.ts","~/@ux-aspects/ux-aspects/components/toolbar-search/toolbar-search-button.directive.ts","~/@ux-aspects/ux-aspects/components/toolbar-search/toolbar-search.component.ts","~/@ux-aspects/ux-aspects/components/toolbar-search/toolbar-search.module.ts","~/@ux-aspects/ux-aspects/services/frame-extraction/frame-extraction.service.ts","~/@ux-aspects/ux-aspects/services/frame-extraction/frame-extraction.module.ts","~/@ux-aspects/ux-aspects/components/media-player/media-player.service.ts","~/@ux-aspects/ux-aspects/services/audio/audio.service.ts","~/@ux-aspects/ux-aspects/services/audio/audio.module.ts","~/@ux-aspects/ux-aspects/components/media-player/media-player.component.ts","~/@ux-aspects/ux-aspects/components/media-player/extensions/base-extension.directive.ts","~/@ux-aspects/ux-aspects/components/media-player/extensions/timeline/timeline.component.ts","~/@ux-aspects/ux-aspects/components/media-player/extensions/controls/controls.component.ts","~/@ux-aspects/ux-aspects/pipes/duration/duration.pipe.ts","~/@ux-aspects/ux-aspects/pipes/duration/duration.module.ts","~/@ux-aspects/ux-aspects/pipes/file-size/file-size.pipe.ts","~/@ux-aspects/ux-aspects/pipes/file-size/file-size.module.ts","~/@ux-aspects/ux-aspects/components/media-player/media-player.module.ts","~/@ux-aspects/ux-aspects/components/virtual-scroll/directives/virtual-scroll-loading.directive.ts","~/@ux-aspects/ux-aspects/components/virtual-scroll/directives/virtual-scroll-load-button.directive.ts","~/@ux-aspects/ux-aspects/components/virtual-scroll/directives/virtual-scroll-cell.directive.ts","~/@ux-aspects/ux-aspects/components/virtual-scroll/virtual-scroll.component.ts","~/@ux-aspects/ux-aspects/components/virtual-scroll/virtual-scroll.module.ts","~/@ux-aspects/ux-aspects/directives/fixed-header-table/fixed-header-table.directive.ts","~/@ux-aspects/ux-aspects/directives/fixed-header-table/fixed-header-table.module.ts","~/@ux-aspects/ux-aspects/directives/help-center/help-center.service.ts","~/@ux-aspects/ux-aspects/directives/help-center/help-center-item.directive.ts","~/@ux-aspects/ux-aspects/directives/help-center/help-center.module.ts","~/@ux-aspects/ux-aspects/directives/hover-action/hover-action.service.ts","~/@ux-aspects/ux-aspects/directives/hover-action/hover-action-container.directive.ts","~/@ux-aspects/ux-aspects/directives/hover-action/hover-action.directive.ts","~/@ux-aspects/ux-aspects/directives/hover-action/hover-action.module.ts","~/@ux-aspects/ux-aspects/directives/layout-switcher/layout-switcher-item.directive.ts","~/@ux-aspects/ux-aspects/directives/layout-switcher/layout-switcher.directive.ts","~/@ux-aspects/ux-aspects/directives/layout-switcher/layout-switcher.module.ts","~/@ux-aspects/ux-aspects/directives/selection/strategies/selection.strategy.ts","~/@ux-aspects/ux-aspects/directives/selection/strategies/row-selection.strategy.ts","~/@ux-aspects/ux-aspects/directives/selection/strategies/simple-selection.strategy.ts","~/@ux-aspects/ux-aspects/directives/selection/selection.service.ts","~/@ux-aspects/ux-aspects/directives/selection/selection-item.directive.ts","~/@ux-aspects/ux-aspects/directives/selection/selection.directive.ts","~/@ux-aspects/ux-aspects/directives/selection/selection.module.ts","~/@ux-aspects/ux-aspects/directives/reorderable/reorderable-handle.directive.ts","~/@ux-aspects/ux-aspects/directives/reorderable/reorderable-model.directive.ts","~/@ux-aspects/ux-aspects/directives/reorderable/dragula.ts","~/@ux-aspects/ux-aspects/directives/reorderable/reorderable.directive.ts","~/@ux-aspects/ux-aspects/directives/reorderable/reorderable.module.ts","~/@ux-aspects/ux-aspects/pipes/string-filter/string-filter.pipe.ts","~/@ux-aspects/ux-aspects/pipes/string-filter/string-filter.module.ts","~/@ux-aspects/ux-aspects/services/persistent-data/adapters/cookie-adapter.ts","~/@ux-aspects/ux-aspects/services/persistent-data/adapters/local-storage-adapter.ts","~/@ux-aspects/ux-aspects/services/persistent-data/adapters/session-storage-adapter.ts","~/@ux-aspects/ux-aspects/services/persistent-data/persistent-data.service.ts","~/@ux-aspects/ux-aspects/services/persistent-data/persistent-data.module.ts","~/@ux-aspects/ux-aspects/services/persistent-data/adapters/storage-adapter.ts","~/@ux-aspects/ux-aspects/hybrid/components/contacts/contacts.component.ts","~/@ux-aspects/ux-aspects/hybrid/components/expand-input/expand-input.component.ts","~/@ux-aspects/ux-aspects/hybrid/components/floating-action-button/floating-action-button.component.ts","~/@ux-aspects/ux-aspects/hybrid/components/flot/flot.component.ts","~/@ux-aspects/ux-aspects/hybrid/components/grid/grid.component.ts","~/@ux-aspects/ux-aspects/hybrid/components/hierarchy-bar/hierarchy-bar.component.ts","~/@ux-aspects/ux-aspects/hybrid/components/marquee-wizard/marquee-wizard.component.ts","~/@ux-aspects/ux-aspects/hybrid/components/nested-donut/nested-donut.component.ts","~/@ux-aspects/ux-aspects/hybrid/components/organization-chart/organization-chart.component.ts","~/@ux-aspects/ux-aspects/hybrid/components/partition-map/partition-map.component.ts","~/@ux-aspects/ux-aspects/hybrid/components/peity-chart/peity-bar-chart.component.ts","~/@ux-aspects/ux-aspects/hybrid/components/peity-chart/peity-line-chart.component.ts","~/@ux-aspects/ux-aspects/hybrid/components/peity-chart/peity-pie-chart.component.ts","~/@ux-aspects/ux-aspects/hybrid/components/peity-chart/peity-updating-line-chart.component.ts","~/@ux-aspects/ux-aspects/hybrid/components/sankey-chart/sankey.component.ts","~/@ux-aspects/ux-aspects/hybrid/components/search-toolbar/search-toolbar.component.ts","~/@ux-aspects/ux-aspects/hybrid/components/select-table/select-table.component.ts","~/@ux-aspects/ux-aspects/hybrid/components/slider-chart/slider-chart.directive.ts","~/@ux-aspects/ux-aspects/hybrid/components/social-chart/social-chart.component.ts","~/@ux-aspects/ux-aspects/hybrid/components/sort-direction-toggle/sort-direction-toggle.component.ts","~/@ux-aspects/ux-aspects/hybrid/components/tree-grid/tree-grid.component.ts","~/@ux-aspects/ux-aspects/hybrid/components/thumbnail/thumbnail.component.ts","~/@ux-aspects/ux-aspects/hybrid/services/navigation-menu/navigation-menu.service.ts","~/@ux-aspects/ux-aspects/hybrid/services/pdf/pdf.service.ts","~/@ux-aspects/ux-aspects/hybrid/services/time-ago/time-ago.service.ts","~/@ux-aspects/ux-aspects/hybrid/hybrid.module.ts","~/@ux-aspects/ux-aspects/components/breadcrumbs/breadcrumbs.component.ts","~/@ux-aspects/ux-aspects/components/breadcrumbs/breadcrumbs.module.ts","~/@ux-aspects/ux-aspects/components/checkbox/checkbox.component.ts","~/@ux-aspects/ux-aspects/components/checkbox/checkbox.module.ts","~/@ux-aspects/ux-aspects/components/column-sorting/column-sorting.component.ts","~/@ux-aspects/ux-aspects/components/column-sorting/column-sorting.directive.ts","~/@ux-aspects/ux-aspects/components/column-sorting/column-sorting.module.ts","../../../../node_modules/src/util/isFunction.ts","../../../../node_modules/src/util/isArray.ts","../../../../node_modules/src/util/isObject.ts","../../../../node_modules/src/util/tryCatch.ts","../../../../node_modules/src/util/errorObject.ts","../../../../node_modules/src/util/UnsubscriptionError.ts","../../../../node_modules/src/Subscription.ts","../../../../node_modules/src/Observer.ts","../../../../node_modules/src/util/root.ts","../../../../node_modules/src/symbol/rxSubscriber.ts","../../../../node_modules/src/Subscriber.ts","../../../../node_modules/src/operators/filter.ts","../../../../node_modules/src/scheduler/Action.ts","../../../../node_modules/src/scheduler/AsyncAction.ts","../../../../node_modules/src/Scheduler.ts","../../../../node_modules/src/scheduler/AsyncScheduler.ts","../../../../node_modules/src/scheduler/async.ts","../../../../node_modules/src/util/isDate.ts","../../../../node_modules/src/util/toSubscriber.ts","../../../../node_modules/src/symbol/observable.ts","../../../../node_modules/src/util/noop.ts","../../../../node_modules/src/util/pipe.ts","../../../../node_modules/src/Observable.ts","../../../../node_modules/src/Notification.ts","../../../../node_modules/src/operators/delay.ts","../../../../node_modules/src/operators/map.ts","../../../../node_modules/src/operators/distinctUntilChanged.ts","~/@ux-aspects/ux-aspects/components/dashboard/dashboard.service.ts","~/@ux-aspects/ux-aspects/components/dashboard/dashboard.component.ts","~/@ux-aspects/ux-aspects/components/dashboard/widget/dashboard-widget.component.ts","../../../../node_modules/src/OuterSubscriber.ts","../../../../node_modules/src/util/isArrayLike.ts","../../../../node_modules/src/util/isPromise.ts","../../../../node_modules/src/symbol/iterator.ts","../../../../node_modules/src/InnerSubscriber.ts","../../../../node_modules/src/util/subscribeToResult.ts","../../../../node_modules/src/operators/takeUntil.ts","~/@ux-aspects/ux-aspects/directives/drag/drag.directive.ts","~/@ux-aspects/ux-aspects/components/dashboard/drag-handle/drag-handle.directive.ts","~/@ux-aspects/ux-aspects/directives/resize/resize.service.ts","../../../../node_modules/src/operators/debounceTime.ts","~/@ux-aspects/ux-aspects/directives/resize/resize.directive.ts","~/@ux-aspects/ux-aspects/directives/resize/resize.module.ts","~/@ux-aspects/ux-aspects/directives/drag/drag.module.ts","~/@ux-aspects/ux-aspects/components/dashboard/dashboard.module.ts","../../../../node_modules/.tmp/timepicker/reducer/timepicker.actions.ts","../../../../node_modules/.tmp/timepicker/timepicker.utils.ts","../../../../node_modules/.tmp/timepicker/timepicker-controls.util.ts","../../../../node_modules/.tmp/timepicker/timepicker.config.ts","../../../../node_modules/.tmp/timepicker/reducer/timepicker.reducer.ts","../../../../node_modules/.tmp/mini-ngrx/store.class.ts","../../../../node_modules/src/scheduler/QueueAction.ts","../../../../node_modules/src/scheduler/queue.ts","../../../../node_modules/src/scheduler/QueueScheduler.ts","../../../../node_modules/.tmp/mini-ngrx/state.class.ts","../../../../node_modules/.tmp/timepicker/reducer/timepicker.store.ts","../../../../node_modules/.tmp/timepicker/timepicker.component.ts","../../../../node_modules/.tmp/timepicker/timepicker.module.ts","../../../../node_modules/.tmp/buttons/button-checkbox.directive.ts","../../../../node_modules/.tmp/buttons/button-radio-group.directive.ts","../../../../node_modules/.tmp/buttons/button-radio.directive.ts","../../../../node_modules/.tmp/buttons/buttons.module.ts","~/@ux-aspects/ux-aspects/components/date-time-picker/date-time-picker.utils.ts","~/@ux-aspects/ux-aspects/components/date-time-picker/date-time-picker.config.ts","~/@ux-aspects/ux-aspects/components/date-time-picker/date-time-picker.service.ts","~/@ux-aspects/ux-aspects/components/date-time-picker/date-time-picker.component.ts","~/@ux-aspects/ux-aspects/components/date-time-picker/day-view/day-view.component.ts","~/@ux-aspects/ux-aspects/components/date-time-picker/month-view/month-view.component.ts","~/@ux-aspects/ux-aspects/components/date-time-picker/year-view/year-view.component.ts","~/@ux-aspects/ux-aspects/components/date-time-picker/header/header.component.ts","~/@ux-aspects/ux-aspects/components/date-time-picker/time-view/time-view.component.ts","~/@ux-aspects/ux-aspects/components/date-time-picker/date-time-picker.module.ts","~/@ux-aspects/ux-aspects/components/ebox/ebox.component.ts","~/@ux-aspects/ux-aspects/components/ebox/ebox.module.ts","../../../../node_modules/.tmp/tooltip/tooltip.config.ts"],"sourcesContent":["/*tslint:disable */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * JS version of browser APIs. This library can only run in the browser.\n */\nvar win = (typeof window !== 'undefined' && window) || <any>{};\n\nexport { win as window };\nexport var document = win.document;\nexport var location = win.location;\nexport var gc = win['gc'] ? () => win['gc']() : (): any => null;\nexport var performance = win['performance'] ? win['performance'] : null;\nexport const Event = win['Event'];\nexport const MouseEvent = win['MouseEvent'];\nexport const KeyboardEvent = win['KeyboardEvent'];\nexport const EventTarget = win['EventTarget'];\nexport const History = win['History'];\nexport const Location = win['Location'];\nexport const EventListener = win['EventListener'];\n","import { window } from './facade/browser';\n\nlet guessedVersion: 'bs3' | 'bs4';\n\nfunction _guessBsVersion(): 'bs3' | 'bs4' {\n  if (typeof document === 'undefined') {\n    return null;\n  }\n  const spanEl = document.createElement('span');\n  spanEl.innerText = 'test bs version';\n  document.body.appendChild(spanEl);\n  spanEl.classList.add('d-none');\n  const rect = spanEl.getBoundingClientRect();\n  document.body.removeChild(spanEl);\n  if (!rect) {\n    return 'bs3';\n  }\n\n  return rect.top === 0 ? 'bs4' : 'bs3';\n}\n\nexport function setTheme(theme: 'bs3' | 'bs4'): void {\n  guessedVersion = theme;\n}\n\n// todo: in ngx-bootstrap, bs4 will became a default one\nexport function isBs3(): boolean {\n  if (typeof window === 'undefined') {\n    return true;\n  }\n\n  if (typeof window.__theme === 'undefined') {\n    if (guessedVersion) {\n      return guessedVersion === 'bs3';\n    }\n    guessedVersion = _guessBsVersion();\n\n    return guessedVersion === 'bs3';\n  }\n\n  return window.__theme !== 'bs4';\n}\n","import {\n  AfterViewInit,\n  Component,\n  ChangeDetectionStrategy\n} from '@angular/core';\nimport { TooltipConfig } from './tooltip.config';\nimport { isBs3 } from '../utils/theme-provider';\n\n\nexport class TooltipContainerComponent implements AfterViewInit {\n  classMap: any;\n  placement: string;\n  containerClass: string;\n  animation: boolean;\n\n  get isBs3(): boolean {\n    return isBs3();\n  }\n\n  constructor(config: TooltipConfig) {\n    Object.assign(this, config);\n  }\n\n  ngAfterViewInit(): void {\n    this.classMap = { in: false, fade: false };\n    this.classMap[this.placement] = true;\n    this.classMap[`tooltip-${this.placement}`] = true;\n\n    this.classMap.in = true;\n    if (this.animation) {\n      this.classMap.fade = true;\n    }\n\n    if (this.containerClass) {\n      this.classMap[this.containerClass] = true;\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'bs-tooltip-container',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  // tslint:disable-next-line\n  host: {\n    '[class]':\n      '\"tooltip in tooltip-\" + placement + \" \" + \"bs-tooltip-\" + placement + \" \" + placement + \" \" + containerClass',\n    '[class.show]': '!isBs3',\n    role: 'tooltip'\n  },\n  styles: [\n    `\n    :host.tooltip {\n      display: block;\n    }\n    :host.bs-tooltip-top .arrow, :host.bs-tooltip-bottom .arrow {\n      left: 50%;\n    }\n    :host.bs-tooltip-left .arrow, :host.bs-tooltip-right .arrow {\n      top: 50%;\n    }\n  `\n  ],\n  template: `\n    <div class=\"tooltip-arrow arrow\"></div>\n    <div class=\"tooltip-inner\"><ng-content></ng-content></div>\n    `\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: TooltipConfig, },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @copyright Valor Software\n * @copyright Angular ng-bootstrap team\n */\n\nexport class Trigger {\n  open: string;\n  close?: string;\n\n  constructor(open: string, close?: string) {\n    this.open = open;\n    this.close = close || open;\n  }\n\n  isManual(): boolean {\n    return this.open === 'manual' || this.close === 'manual';\n  }\n}\n","/**\n * @copyright Valor Software\n * @copyright Angular ng-bootstrap team\n */\nimport { Renderer2 } from '@angular/core';\nimport { Trigger } from './trigger.class';\nimport {\n  BsEventCallback, ListenOptions\n} from '../component-loader/listen-options.model';\n\nconst DEFAULT_ALIASES = {\n  hover: ['mouseover', 'mouseout'],\n  focus: ['focusin', 'focusout']\n};\n\nexport function parseTriggers(triggers: string, aliases: any = DEFAULT_ALIASES): Trigger[] {\n  const trimmedTriggers = (triggers || '').trim();\n\n  if (trimmedTriggers.length === 0) {\n    return [];\n  }\n\n  const parsedTriggers = trimmedTriggers\n    .split(/\\s+/)\n    .map((trigger: string) => trigger.split(':'))\n    .map((triggerPair: string[]) => {\n      const alias = aliases[triggerPair[0]] || triggerPair;\n\n      return new Trigger(alias[0], alias[1]);\n    });\n\n  const manualTriggers = parsedTriggers.filter((triggerPair: Trigger) =>\n    triggerPair.isManual()\n  );\n\n  if (manualTriggers.length > 1) {\n    throw new Error('Triggers parse error: only one manual trigger is allowed');\n  }\n\n  if (manualTriggers.length === 1 && parsedTriggers.length > 1) {\n    throw new Error('Triggers parse error: manual trigger can\\'t be mixed with other triggers');\n  }\n\n  return parsedTriggers;\n}\n\nexport function listenToTriggers(renderer: Renderer2,\n                                 target: any,\n                                 triggers: string,\n                                 showFn: BsEventCallback,\n                                 hideFn: BsEventCallback,\n                                 toggleFn: BsEventCallback): Function {\n  const parsedTriggers = parseTriggers(triggers);\n  const listeners: any[] = [];\n\n  if (parsedTriggers.length === 1 && parsedTriggers[0].isManual()) {\n    return Function.prototype;\n  }\n\n  parsedTriggers.forEach((trigger: Trigger) => {\n    if (trigger.open === trigger.close) {\n      listeners.push(renderer.listen(target, trigger.open, toggleFn));\n\n      return;\n    }\n\n    listeners.push(\n      renderer.listen(target, trigger.open, showFn),\n      renderer.listen(target, trigger.close, hideFn)\n    );\n  });\n\n  return () => {\n    listeners.forEach((unsubscribeFn: Function) => unsubscribeFn());\n  };\n}\n\nexport function listenToTriggersV2(renderer: Renderer2,\n                                   options: ListenOptions): Function {\n  const parsedTriggers = parseTriggers(options.triggers);\n  const target = options.target;\n  // do nothing\n  if (parsedTriggers.length === 1 && parsedTriggers[0].isManual()) {\n    return Function.prototype;\n  }\n\n  // all listeners\n  const listeners: any[] = [];\n\n  // lazy listeners registration\n  const _registerHide: Function[] = [];\n  const registerHide = () => {\n    // add hide listeners to unregister array\n    _registerHide.forEach((fn: Function) => listeners.push(fn()));\n    // register hide events only once\n    _registerHide.length = 0;\n  };\n\n  // register open\\close\\toggle listeners\n  parsedTriggers.forEach((trigger: Trigger) => {\n    const useToggle = trigger.open === trigger.close;\n    const showFn = useToggle ? options.toggle : options.show;\n\n    if (!useToggle) {\n      _registerHide.push(() =>\n        renderer.listen(target, trigger.close, options.hide)\n      );\n    }\n\n    listeners.push(\n      renderer.listen(target, trigger.open, () => showFn(registerHide))\n    );\n  });\n\n  return () => {\n    listeners.forEach((unsubscribeFn: Function) => unsubscribeFn());\n  };\n}\n\nexport function registerOutsideClick(renderer: Renderer2,\n                                     options: ListenOptions) {\n  if (!options.outsideClick) {\n    return Function.prototype;\n  }\n\n  return renderer.listen('document', 'click', (event: any) => {\n    if (options.target && options.target.contains(event.target)) {\n      return;\n    }\n    if (\n      options.targets &&\n      options.targets.some(target => target.contains(event.target))\n    ) {\n      return;\n    }\n\n    options.hide();\n  });\n}\n","/**\n * @copyright Valor Software\n * @copyright Angular ng-bootstrap team\n */\n\nimport { ComponentRef, ViewRef } from '@angular/core';\n\nexport class ContentRef {\n  nodes: any[];\n  viewRef?: ViewRef;\n  componentRef?: ComponentRef<any>;\n\n  constructor(\n    nodes: any[],\n    viewRef?: ViewRef,\n    componentRef?: ComponentRef<any>\n  ) {\n    this.nodes = nodes;\n    this.viewRef = viewRef;\n    this.componentRef = componentRef;\n  }\n}\n","// tslint:disable:max-file-line-count\n// todo: add delay support\n// todo: merge events onShow, onShown, etc...\n// todo: add global positioning configuration?\nimport {\n  ApplicationRef,\n  ComponentFactory,\n  ComponentFactoryResolver,\n  ComponentRef,\n  ElementRef,\n  EmbeddedViewRef,\n  EventEmitter,\n  Injector,\n  NgZone,\n  Provider,\n  ReflectiveInjector,\n  Renderer2,\n  TemplateRef,\n  Type,\n  ViewContainerRef\n} from '@angular/core';\nimport { PositioningOptions, PositioningService } from '../positioning/index';\nimport { listenToTriggersV2, registerOutsideClick } from '../utils/triggers';\nimport { ContentRef } from './content-ref.class';\nimport { ListenOptions } from './listen-options.model';\n\nexport class ComponentLoader<T> {\n  onBeforeShow: EventEmitter<any> = new EventEmitter();\n  onShown: EventEmitter<any> = new EventEmitter();\n  onBeforeHide: EventEmitter<any> = new EventEmitter();\n  onHidden: EventEmitter<any> = new EventEmitter();\n\n  instance: T;\n  _componentRef: ComponentRef<T>;\n  _inlineViewRef: EmbeddedViewRef<T>;\n\n  private _providers: Provider[] = [];\n  private _componentFactory: ComponentFactory<T>;\n  private _zoneSubscription: any;\n  private _contentRef: ContentRef;\n  private _innerComponent: ComponentRef<T>;\n\n  private _unregisterListenersFn: Function;\n\n  get isShown(): boolean {\n    if (this._isHiding) {\n      return false;\n    }\n\n    return !!this._componentRef;\n  }\n\n  private _isHiding = false;\n\n  /**\n   * Placement of a component. Accepts: \"top\", \"bottom\", \"left\", \"right\"\n   */\n  private attachment: string;\n\n  /**\n   * A selector specifying the element the popover should be appended to.\n   * Currently only supports \"body\".\n   */\n  private container: string | ElementRef | any;\n\n  /**\n   * Specifies events that should trigger. Supports a space separated list of\n   * event names.\n   */\n  private triggers: string;\n\n  private _listenOpts: ListenOptions = {};\n  private _globalListener = Function.prototype;\n\n  /**\n   * Do not use this directly, it should be instanced via\n   * `ComponentLoadFactory.attach`\n   * @internal\n   */\n  // tslint:disable-next-line\n  public constructor(\n    private _viewContainerRef: ViewContainerRef,\n    private _renderer: Renderer2,\n    private _elementRef: ElementRef,\n    private _injector: Injector,\n    private _componentFactoryResolver: ComponentFactoryResolver,\n    private _ngZone: NgZone,\n    private _applicationRef: ApplicationRef,\n    private _posService: PositioningService\n  ) {}\n\n  attach(compType: Type<T>): ComponentLoader<T> {\n    this._componentFactory = this._componentFactoryResolver\n      .resolveComponentFactory<T>(compType);\n\n    return this;\n  }\n\n  // todo: add behaviour: to target element, `body`, custom element\n  to(container?: string): ComponentLoader<T> {\n    this.container = container || this.container;\n\n    return this;\n  }\n\n  position(opts?: PositioningOptions): ComponentLoader<T> {\n    this.attachment = opts.attachment || this.attachment;\n    this._elementRef = (opts.target as ElementRef) || this._elementRef;\n\n    return this;\n  }\n\n  provide(provider: Provider): ComponentLoader<T> {\n    this._providers.push(provider);\n\n    return this;\n  }\n\n  // todo: appendChild to element or document.querySelector(this.container)\n\n  show(opts: {\n    content?: string | TemplateRef<any>;\n    context?: any;\n    initialState?: any; [key: string]: any;\n  } = {}\n  ): ComponentRef<T> {\n\n    this._subscribePositioning();\n    this._innerComponent = null;\n\n    if (!this._componentRef) {\n      this.onBeforeShow.emit();\n      this._contentRef = this._getContentRef(opts.content, opts.context, opts.initialState);\n      const injector = ReflectiveInjector.resolveAndCreate(this._providers, this._injector);\n\n      this._componentRef = this._componentFactory.create(injector, this._contentRef.nodes);\n      this._applicationRef.attachView(this._componentRef.hostView);\n      // this._componentRef = this._viewContainerRef\n      //   .createComponent(this._componentFactory, 0, injector, this._contentRef.nodes);\n      this.instance = this._componentRef.instance;\n\n      Object.assign(this._componentRef.instance, opts);\n\n      if (this.container instanceof ElementRef) {\n        this.container.nativeElement.appendChild(\n          this._componentRef.location.nativeElement\n        );\n      }\n\n      if (this.container === 'body' && typeof document !== 'undefined') {\n        document\n          .querySelector(this.container as string)\n          .appendChild(this._componentRef.location.nativeElement);\n      }\n\n      if (\n        !this.container &&\n        this._elementRef &&\n        this._elementRef.nativeElement.parentElement\n      ) {\n        this._elementRef.nativeElement.parentElement.appendChild(\n          this._componentRef.location.nativeElement\n        );\n      }\n\n      // we need to manually invoke change detection since events registered\n      // via\n      // Renderer::listen() are not picked up by change detection with the\n      // OnPush strategy\n      if (this._contentRef.componentRef) {\n        this._innerComponent = this._contentRef.componentRef.instance;\n        this._contentRef.componentRef.changeDetectorRef.markForCheck();\n        this._contentRef.componentRef.changeDetectorRef.detectChanges();\n      }\n      this._componentRef.changeDetectorRef.markForCheck();\n      this._componentRef.changeDetectorRef.detectChanges();\n      this.onShown.emit(this._componentRef.instance);\n    }\n\n    this._registerOutsideClick();\n\n    return this._componentRef;\n  }\n\n  hide(): ComponentLoader<T> {\n    if (!this._componentRef) {\n      return this;\n    }\n\n    this.onBeforeHide.emit(this._componentRef.instance);\n\n    const componentEl = this._componentRef.location.nativeElement;\n    componentEl.parentNode.removeChild(componentEl);\n    if (this._contentRef.componentRef) {\n      this._contentRef.componentRef.destroy();\n    }\n    this._componentRef.destroy();\n    if (this._viewContainerRef && this._contentRef.viewRef) {\n      this._viewContainerRef.remove(\n        this._viewContainerRef.indexOf(this._contentRef.viewRef)\n      );\n    }\n    if (this._contentRef.viewRef) {\n      this._contentRef.viewRef.destroy();\n    }\n    // this._viewContainerRef.remove(this._viewContainerRef.indexOf(this._componentRef.hostView));\n    //\n    // if (this._contentRef.viewRef && this._viewContainerRef.indexOf(this._contentRef.viewRef) !== -1) {\n    //   this._viewContainerRef.remove(this._viewContainerRef.indexOf(this._contentRef.viewRef));\n    // }\n\n    this._contentRef = null;\n    this._componentRef = null;\n    this._removeGlobalListener();\n\n    this.onHidden.emit();\n\n    return this;\n  }\n\n  toggle(): void {\n    if (this.isShown) {\n      this.hide();\n\n      return;\n    }\n\n    this.show();\n  }\n\n  dispose(): void {\n    if (this.isShown) {\n      this.hide();\n    }\n\n    this._unsubscribePositioning();\n\n    if (this._unregisterListenersFn) {\n      this._unregisterListenersFn();\n    }\n  }\n\n  listen(listenOpts: ListenOptions): ComponentLoader<T> {\n    this.triggers = listenOpts.triggers || this.triggers;\n    this._listenOpts.outsideClick = listenOpts.outsideClick;\n    listenOpts.target = listenOpts.target || this._elementRef.nativeElement;\n\n    const hide = (this._listenOpts.hide = () =>\n      listenOpts.hide ? listenOpts.hide() : void this.hide());\n    const show = (this._listenOpts.show = (registerHide: Function) => {\n      listenOpts.show ? listenOpts.show(registerHide) : this.show(registerHide);\n      registerHide();\n    });\n\n    const toggle = (registerHide: Function) => {\n      this.isShown ? hide() : show(registerHide);\n    };\n\n    this._unregisterListenersFn = listenToTriggersV2(this._renderer, {\n      target: listenOpts.target,\n      triggers: listenOpts.triggers,\n      show,\n      hide,\n      toggle\n    });\n\n    return this;\n  }\n\n  _removeGlobalListener() {\n    if (this._globalListener) {\n      this._globalListener();\n      this._globalListener = null;\n    }\n  }\n\n  attachInline(\n    vRef: ViewContainerRef,\n    template: TemplateRef<any>\n  ): ComponentLoader<T> {\n    this._inlineViewRef = vRef.createEmbeddedView(template);\n\n    return this;\n  }\n\n  _registerOutsideClick(): void {\n    if (!this._componentRef || !this._componentRef.location) {\n      return;\n    }\n    // why: should run after first event bubble\n    if (this._listenOpts.outsideClick) {\n      const target = this._componentRef.location.nativeElement;\n      setTimeout(() => {\n        this._globalListener = registerOutsideClick(this._renderer, {\n          targets: [target, this._elementRef.nativeElement],\n          outsideClick: this._listenOpts.outsideClick,\n          hide: () => this._listenOpts.hide()\n        });\n      });\n    }\n  }\n\n  getInnerComponent(): ComponentRef<T> {\n    return this._innerComponent;\n  }\n\n  private _subscribePositioning(): void {\n    if (this._zoneSubscription || !this.attachment) {\n      return;\n    }\n\n    this._zoneSubscription = this._ngZone.onStable.subscribe(() => {\n      if (!this._componentRef) {\n        return;\n      }\n      this._posService.position({\n        element: this._componentRef.location,\n        target: this._elementRef,\n        attachment: this.attachment,\n        appendToBody: this.container === 'body'\n      });\n    });\n  }\n\n  private _unsubscribePositioning(): void {\n    if (!this._zoneSubscription) {\n      return;\n    }\n    this._zoneSubscription.unsubscribe();\n    this._zoneSubscription = null;\n  }\n\n  private _getContentRef(\n    content: string | TemplateRef<any> | any,\n    context?: any,\n    initialState?: any\n  ): ContentRef {\n    if (!content) {\n      return new ContentRef([]);\n    }\n\n    if (content instanceof TemplateRef) {\n      if (this._viewContainerRef) {\n        const _viewRef = this._viewContainerRef\n          .createEmbeddedView<TemplateRef<T>>(content, context);\n        _viewRef.markForCheck();\n\n        return new ContentRef([_viewRef.rootNodes], _viewRef);\n      }\n      const viewRef = content.createEmbeddedView({});\n      this._applicationRef.attachView(viewRef);\n\n      return new ContentRef([viewRef.rootNodes], viewRef);\n    }\n\n    if (typeof content === 'function') {\n      const contentCmptFactory = this._componentFactoryResolver.resolveComponentFactory(\n        content\n      );\n      const modalContentInjector = ReflectiveInjector.resolveAndCreate(\n        [...this._providers],\n        this._injector\n      );\n      const componentRef = contentCmptFactory.create(modalContentInjector);\n      Object.assign(componentRef.instance, initialState);\n      this._applicationRef.attachView(componentRef.hostView);\n\n      return new ContentRef(\n        [[componentRef.location.nativeElement]],\n        componentRef.hostView,\n        componentRef\n      );\n    }\n\n    return new ContentRef([[this._renderer.createText(`${content}`)]]);\n  }\n}\n","/**\n * @copyright Valor Software\n * @copyright Angular ng-bootstrap team\n */\n\n// previous version:\n// https://github.com/angular-ui/bootstrap/blob/07c31d0731f7cb068a1932b8e01d2312b796b4ec/src/position/position.js\n// tslint:disable\nexport class Positioning {\n  public position(element: HTMLElement, round = true): ClientRect {\n    let elPosition: ClientRect;\n    let parentOffset: ClientRect = {\n      width: 0,\n      height: 0,\n      top: 0,\n      bottom: 0,\n      left: 0,\n      right: 0\n    };\n\n    if (this.getStyle(element, 'position') === 'fixed') {\n      const bcRect = element.getBoundingClientRect();\n      elPosition = {\n        width: bcRect.width,\n        height: bcRect.height,\n        top: bcRect.top,\n        bottom: bcRect.bottom,\n        left: bcRect.left,\n        right: bcRect.right\n      };\n    } else {\n      const offsetParentEl = this.offsetParent(element);\n\n      elPosition = this.offset(element, false);\n\n      if (offsetParentEl !== document.documentElement) {\n        parentOffset = this.offset(offsetParentEl, false);\n      }\n\n      parentOffset.top += offsetParentEl.clientTop;\n      parentOffset.left += offsetParentEl.clientLeft;\n    }\n\n    elPosition.top -= parentOffset.top;\n    elPosition.bottom -= parentOffset.top;\n    elPosition.left -= parentOffset.left;\n    elPosition.right -= parentOffset.left;\n\n    if (round) {\n      elPosition.top = Math.round(elPosition.top);\n      elPosition.bottom = Math.round(elPosition.bottom);\n      elPosition.left = Math.round(elPosition.left);\n      elPosition.right = Math.round(elPosition.right);\n    }\n\n    return elPosition;\n  }\n\n  public offset(element: HTMLElement, round = true): ClientRect {\n    const elBcr = element.getBoundingClientRect();\n    const viewportOffset = {\n      top: window.pageYOffset - document.documentElement.clientTop,\n      left: window.pageXOffset - document.documentElement.clientLeft\n    };\n\n    let elOffset = {\n      height: elBcr.height || element.offsetHeight,\n      width: elBcr.width || element.offsetWidth,\n      top: elBcr.top + viewportOffset.top,\n      bottom: elBcr.bottom + viewportOffset.top,\n      left: elBcr.left + viewportOffset.left,\n      right: elBcr.right + viewportOffset.left\n    };\n\n    if (round) {\n      elOffset.height = Math.round(elOffset.height);\n      elOffset.width = Math.round(elOffset.width);\n      elOffset.top = Math.round(elOffset.top);\n      elOffset.bottom = Math.round(elOffset.bottom);\n      elOffset.left = Math.round(elOffset.left);\n      elOffset.right = Math.round(elOffset.right);\n    }\n\n    return elOffset;\n  }\n\n  public positionElements(\n    hostElement: HTMLElement,\n    targetElement: HTMLElement,\n    placement: string,\n    appendToBody?: boolean\n  ): ClientRect {\n    const hostElPosition = appendToBody\n      ? this.offset(hostElement, false)\n      : this.position(hostElement, false);\n    const targetElStyles = this.getAllStyles(targetElement);\n    const shiftWidth: any = {\n      left: hostElPosition.left,\n      center:\n        hostElPosition.left +\n        hostElPosition.width / 2 -\n        targetElement.offsetWidth / 2,\n      right: hostElPosition.left + hostElPosition.width\n    };\n    const shiftHeight: any = {\n      top: hostElPosition.top,\n      center:\n        hostElPosition.top +\n        hostElPosition.height / 2 -\n        targetElement.offsetHeight / 2,\n      bottom: hostElPosition.top + hostElPosition.height\n    };\n    const targetElBCR = targetElement.getBoundingClientRect();\n    let placementPrimary = placement.split(' ')[0] || 'top';\n    const placementSecondary = placement.split(' ')[1] || 'center';\n\n    let targetElPosition: ClientRect = {\n      height: targetElBCR.height || targetElement.offsetHeight,\n      width: targetElBCR.width || targetElement.offsetWidth,\n      top: 0,\n      bottom: targetElBCR.height || targetElement.offsetHeight,\n      left: 0,\n      right: targetElBCR.width || targetElement.offsetWidth\n    };\n\n    if (placementPrimary === 'auto') {\n      let newPlacementPrimary = this.autoPosition(\n        targetElPosition,\n        hostElPosition,\n        targetElement,\n        placementSecondary\n      );\n      if (!newPlacementPrimary)\n        newPlacementPrimary = this.autoPosition(\n          targetElPosition,\n          hostElPosition,\n          targetElement\n        );\n      if (newPlacementPrimary) placementPrimary = newPlacementPrimary;\n      targetElement.classList.add(placementPrimary);\n    }\n\n    switch (placementPrimary) {\n      case 'top':\n        targetElPosition.top =\n          hostElPosition.top -\n          (targetElement.offsetHeight +\n            parseFloat(targetElStyles.marginBottom));\n        targetElPosition.bottom +=\n          hostElPosition.top - targetElement.offsetHeight;\n        targetElPosition.left = shiftWidth[placementSecondary];\n        targetElPosition.right += shiftWidth[placementSecondary];\n        break;\n      case 'bottom':\n        targetElPosition.top = shiftHeight[placementPrimary];\n        targetElPosition.bottom += shiftHeight[placementPrimary];\n        targetElPosition.left = shiftWidth[placementSecondary];\n        targetElPosition.right += shiftWidth[placementSecondary];\n        break;\n      case 'left':\n        targetElPosition.top = shiftHeight[placementSecondary];\n        targetElPosition.bottom += shiftHeight[placementSecondary];\n        targetElPosition.left =\n          hostElPosition.left -\n          (targetElement.offsetWidth + parseFloat(targetElStyles.marginRight));\n        targetElPosition.right +=\n          hostElPosition.left - targetElement.offsetWidth;\n        break;\n      case 'right':\n        targetElPosition.top = shiftHeight[placementSecondary];\n        targetElPosition.bottom += shiftHeight[placementSecondary];\n        targetElPosition.left = shiftWidth[placementPrimary];\n        targetElPosition.right += shiftWidth[placementPrimary];\n        break;\n    }\n\n    targetElPosition.top = Math.round(targetElPosition.top);\n    targetElPosition.bottom = Math.round(targetElPosition.bottom);\n    targetElPosition.left = Math.round(targetElPosition.left);\n    targetElPosition.right = Math.round(targetElPosition.right);\n\n    return targetElPosition;\n  }\n\n  private autoPosition(\n    targetElPosition: ClientRect,\n    hostElPosition: ClientRect,\n    targetElement: HTMLElement,\n    preferredPosition?: string\n  ) {\n    if (\n      (!preferredPosition || preferredPosition === 'right') &&\n      targetElPosition.left + hostElPosition.left - targetElement.offsetWidth <\n        0\n    ) {\n      return 'right';\n    } else if (\n      (!preferredPosition || preferredPosition === 'top') &&\n      targetElPosition.bottom +\n        hostElPosition.bottom +\n        targetElement.offsetHeight >\n        window.innerHeight\n    ) {\n      return 'top';\n    } else if (\n      (!preferredPosition || preferredPosition === 'bottom') &&\n      targetElPosition.top + hostElPosition.top - targetElement.offsetHeight < 0\n    ) {\n      return 'bottom';\n    } else if (\n      (!preferredPosition || preferredPosition === 'left') &&\n      targetElPosition.right +\n        hostElPosition.right +\n        targetElement.offsetWidth >\n        window.innerWidth\n    ) {\n      return 'left';\n    }\n    return null;\n  }\n\n  private getAllStyles(element: HTMLElement) {\n    return window.getComputedStyle(element);\n  }\n\n  private getStyle(element: HTMLElement, prop: string): string {\n    return (this.getAllStyles(element) as any)[prop];\n  }\n\n  private isStaticPositioned(element: HTMLElement): boolean {\n    return (this.getStyle(element, 'position') || 'static') === 'static';\n  }\n\n  private offsetParent(element: HTMLElement): HTMLElement {\n    let offsetParentEl =\n      <HTMLElement>element.offsetParent || document.documentElement;\n\n    while (\n      offsetParentEl &&\n      offsetParentEl !== document.documentElement &&\n      this.isStaticPositioned(offsetParentEl)\n    ) {\n      offsetParentEl = <HTMLElement>offsetParentEl.offsetParent;\n    }\n\n    return offsetParentEl || document.documentElement;\n  }\n}\n\nconst positionService = new Positioning();\n\nexport function positionElements(\n  hostElement: HTMLElement,\n  targetElement: HTMLElement,\n  placement: string,\n  appendToBody?: boolean\n): void {\n  const pos = positionService.positionElements(\n    hostElement,\n    targetElement,\n    placement,\n    appendToBody\n  );\n\n  targetElement.style.top = `${pos.top}px`;\n  targetElement.style.left = `${pos.left}px`;\n}\n","import { Injectable, ElementRef } from '@angular/core';\nimport { positionElements } from './ng-positioning';\n\nexport interface PositioningOptions {\n  /** The DOM element, ElementRef, or a selector string of an element which will be moved */\n  element?: HTMLElement | ElementRef | string;\n\n  /** The DOM element, ElementRef, or a selector string of an element which the element will be attached to  */\n  target?: HTMLElement | ElementRef | string;\n\n  /**\n   * A string of the form 'vert-attachment horiz-attachment' or 'placement'\n   * - placement can be \"top\", \"bottom\", \"left\", \"right\"\n   * not yet supported:\n   * - vert-attachment can be any of 'top', 'middle', 'bottom'\n   * - horiz-attachment can be any of 'left', 'center', 'right'\n   */\n  attachment?: string;\n\n  /** A string similar to `attachment`. The one difference is that, if it's not provided,\n   * `targetAttachment` will assume the mirror image of `attachment`.\n   */\n  targetAttachment?: string;\n\n  /** A string of the form 'vert-offset horiz-offset'\n   * - vert-offset and horiz-offset can be of the form \"20px\" or \"55%\"\n   */\n  offset?: string;\n\n  /** A string similar to `offset`, but referring to the offset of the target */\n  targetOffset?: string;\n\n  /** If true component will be attached to body */\n  appendToBody?: boolean;\n}\n\n\nexport class PositioningService {\n  position(options: PositioningOptions): void {\n    const {element, target, attachment, appendToBody} = options;\n    positionElements(\n      _getHtmlElement(target),\n      _getHtmlElement(element),\n      attachment,\n      appendToBody\n    );\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction _getHtmlElement(element: HTMLElement | ElementRef | string): HTMLElement {\n  // it means that we got a selector\n  if (typeof element === 'string') {\n    return document.querySelector(element) as HTMLElement;\n  }\n\n  if (element instanceof ElementRef) {\n    return element.nativeElement;\n  }\n\n  return element as HTMLElement;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {\n  ApplicationRef, ComponentFactoryResolver, ElementRef, Injectable, Injector,\n  NgZone, Renderer2, ViewContainerRef\n} from '@angular/core';\nimport { ComponentLoader } from './component-loader.class';\nimport { PositioningService } from '../positioning/index';\n\n\nexport class ComponentLoaderFactory {\n  constructor(private _componentFactoryResolver: ComponentFactoryResolver,\n              private _ngZone: NgZone,\n              private _injector: Injector,\n              private _posService: PositioningService,\n              private _applicationRef: ApplicationRef) {}\n\n  /**\n   *\n   * @param _elementRef\n   * @param _viewContainerRef\n   * @param _renderer\n   * @returns {ComponentLoader}\n   */\n  createLoader<T>(_elementRef: ElementRef,\n                  _viewContainerRef: ViewContainerRef,\n                  _renderer: Renderer2): ComponentLoader<T> {\n    return new ComponentLoader<T>(\n      _viewContainerRef,\n      _renderer,\n      _elementRef,\n      this._injector,\n      this._componentFactoryResolver,\n      this._ngZone,\n      this._applicationRef,\n      this._posService\n    );\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ComponentFactoryResolver, },\n{type: NgZone, },\n{type: Injector, },\n{type: PositioningService, },\n{type: ApplicationRef, },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { isDevMode } from '@angular/core';\nconst _messagesHash: { [key: string]: boolean } = {};\nconst _hideMsg = typeof console === 'undefined' || !('warn' in console);\n\nexport function warnOnce(msg: string): void {\n  if (!isDevMode() || _hideMsg || msg in _messagesHash) {\n    return;\n  }\n\n  _messagesHash[msg] = true;\n  /*tslint:disable-next-line*/\n  console.warn(msg);\n}\n","// tslint:disable:deprecation\nimport {\n  Directive, ElementRef, EventEmitter, Input, OnDestroy, OnInit, Output,\n  Renderer2, TemplateRef, ViewContainerRef\n} from '@angular/core';\nimport { TooltipContainerComponent } from './tooltip-container.component';\nimport { TooltipConfig } from './tooltip.config';\nimport { ComponentLoader, ComponentLoaderFactory } from '../component-loader/index';\nimport { OnChange } from '../utils/decorators';\nimport { warnOnce } from '../utils/warn-once';\nimport { parseTriggers } from '../utils/triggers';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/observable/timer';\n\n\nexport class TooltipDirective implements OnInit, OnDestroy {\n  /**\n   * Content to be displayed as tooltip.\n   */\n  @OnChange()\n  \n  tooltip: string | TemplateRef<any>;\n  /** Fired when tooltip content changes */\n  \n  tooltipChange: EventEmitter<string | TemplateRef<any>> = new EventEmitter();\n\n  /**\n   * Placement of a tooltip. Accepts: \"top\", \"bottom\", \"left\", \"right\"\n   */\n   placement: string;\n  /**\n   * Specifies events that should trigger. Supports a space separated list of\n   * event names.\n   */\n   triggers: string;\n  /**\n   * A selector specifying the element the tooltip should be appended to.\n   * Currently only supports \"body\".\n   */\n   container: string;\n\n  /**\n   * Returns whether or not the tooltip is currently being shown\n   */\n  \n  get isOpen(): boolean {\n    return this._tooltip.isShown;\n  }\n\n  set isOpen(value: boolean) {\n    if (value) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n\n  /**\n   * Allows to disable tooltip\n   */\n   isDisabled: boolean;\n\n  /**\n   * Css class for tooltip container\n   */\n   containerClass = '';\n  /**\n   * Delay before showing the tooltip\n   */\n   delay: number;\n\n  /**\n   * Emits an event when the tooltip is shown\n   */\n   onShown: EventEmitter<any>;\n  /**\n   * Emits an event when the tooltip is hidden\n   */\n   onHidden: EventEmitter<any>;\n\n  /** @deprecated - please use `tooltip` instead */\n  \n  set htmlContent(value: string | TemplateRef<any>) {\n    warnOnce('tooltipHtml was deprecated, please use `tooltip` instead');\n    this.tooltip = value;\n  }\n\n  /** @deprecated - please use `placement` instead */\n  \n  set _placement(value: string) {\n    warnOnce('tooltipPlacement was deprecated, please use `placement` instead');\n    this.placement = value;\n  }\n\n  /** @deprecated - please use `isOpen` instead*/\n  \n  set _isOpen(value: boolean) {\n    warnOnce('tooltipIsOpen was deprecated, please use `isOpen` instead');\n    this.isOpen = value;\n  }\n\n  get _isOpen(): boolean {\n    warnOnce('tooltipIsOpen was deprecated, please use `isOpen` instead');\n    return this.isOpen;\n  }\n\n  /** @deprecated - please use `isDisabled` instead */\n  \n  set _enable(value: boolean) {\n    warnOnce('tooltipEnable was deprecated, please use `isDisabled` instead');\n    this.isDisabled = value;\n  }\n\n  get _enable(): boolean {\n    warnOnce('tooltipEnable was deprecated, please use `isDisabled` instead');\n    return this.isDisabled;\n  }\n\n  /** @deprecated - please use `container=\"body\"` instead */\n  \n  set _appendToBody(value: boolean) {\n    warnOnce(\n      'tooltipAppendToBody was deprecated, please use `container=\"body\"` instead'\n    );\n    this.container = value ? 'body' : this.container;\n  }\n\n  get _appendToBody(): boolean {\n    warnOnce(\n      'tooltipAppendToBody was deprecated, please use `container=\"body\"` instead'\n    );\n    return this.container === 'body';\n  }\n\n  /** @deprecated - removed, will be added to configuration */\n   _animation = true;\n\n  /** @deprecated - will replaced with customClass */\n  \n  set _popupClass(value: string) {\n    warnOnce('tooltipClass deprecated');\n  }\n\n  /** @deprecated - removed */\n  \n  set _tooltipContext(value: any) {\n    warnOnce('tooltipContext deprecated');\n  }\n\n  /** @deprecated */\n  \n  set _tooltipPopupDelay(value: number) {\n    warnOnce('tooltipPopupDelay is deprecated, use `delay` instead');\n    this.delay = value;\n  }\n\n  /** @deprecated */\n   _fadeDuration = 150;\n\n  /** @deprecated -  please use `triggers` instead */\n  \n  get _tooltipTrigger(): string | string[] {\n    warnOnce('tooltipTrigger was deprecated, please use `triggers` instead');\n    return this.triggers;\n  }\n\n  set _tooltipTrigger(value: string | string[]) {\n    warnOnce('tooltipTrigger was deprecated, please use `triggers` instead');\n    this.triggers = (value || '').toString();\n  }\n\n  /** @deprecated */\n  \n  tooltipStateChanged: EventEmitter<boolean> = new EventEmitter<boolean>();\n  protected _delayTimeoutId: number | any;\n  protected _tooltipCancelShowFn: Function;\n\n  private _tooltip: ComponentLoader<TooltipContainerComponent>;\n\n  constructor(_viewContainerRef: ViewContainerRef,\n                     private _renderer: Renderer2,\n                     private _elementRef: ElementRef,\n                     cis: ComponentLoaderFactory,\n                     config: TooltipConfig) {\n    this._tooltip = cis\n      .createLoader<TooltipContainerComponent>(\n        this._elementRef,\n        _viewContainerRef,\n        this._renderer\n      )\n      .provide({provide: TooltipConfig, useValue: config});\n\n    Object.assign(this, config);\n    this.onShown = this._tooltip.onShown;\n    this.onHidden = this._tooltip.onHidden;\n  }\n\n  ngOnInit(): void {\n    this._tooltip.listen({\n      triggers: this.triggers,\n      show: () => this.show()\n    });\n    this.tooltipChange.subscribe((value: any) => {\n      if (!value) {\n        this._tooltip.hide();\n      }\n    });\n  }\n\n  /**\n   * Toggles an element’s tooltip. This is considered a “manual” triggering of\n   * the tooltip.\n   */\n  toggle(): void {\n    if (this.isOpen) {\n      return this.hide();\n    }\n\n    this.show();\n  }\n\n  /**\n   * Opens an element’s tooltip. This is considered a “manual” triggering of\n   * the tooltip.\n   */\n  show(): void {\n    if (\n      this.isOpen ||\n      this.isDisabled ||\n      this._delayTimeoutId ||\n      !this.tooltip\n    ) {\n      return;\n    }\n\n    const showTooltip = () => {\n      if (this._delayTimeoutId) {\n        this._delayTimeoutId = undefined;\n      }\n\n      this._tooltip\n        .attach(TooltipContainerComponent)\n        .to(this.container)\n        .position({attachment: this.placement})\n        .show({\n          content: this.tooltip,\n          placement: this.placement,\n          containerClass: this.containerClass\n        });\n    };\n    const cancelDelayedTooltipShowing = () => {\n      if (this._tooltipCancelShowFn) {\n        this._tooltipCancelShowFn();\n      }\n    };\n\n    if (this.delay) {\n      const timer = Observable.timer(this.delay).subscribe(() => {\n        showTooltip();\n        cancelDelayedTooltipShowing();\n      });\n\n      if (this.triggers) {\n        const triggers = parseTriggers(this.triggers);\n        this._tooltipCancelShowFn = this._renderer.listen(this._elementRef.nativeElement, triggers[0].close, () => {\n          timer.unsubscribe();\n          cancelDelayedTooltipShowing();\n        });\n      }\n    } else {\n      showTooltip();\n    }\n  }\n\n  /**\n   * Closes an element’s tooltip. This is considered a “manual” triggering of\n   * the tooltip.\n   */\n  hide(): void {\n    if (this._delayTimeoutId) {\n      clearTimeout(this._delayTimeoutId);\n      this._delayTimeoutId = undefined;\n    }\n\n    if (!this._tooltip.isShown) {\n      return;\n    }\n\n    this._tooltip.instance.classMap.in = false;\n    setTimeout(() => {\n      this._tooltip.hide();\n    }, this._fadeDuration);\n  }\n\n  ngOnDestroy(): void {\n    this._tooltip.dispose();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[tooltip], [tooltipHtml]',\n  exportAs: 'bs-tooltip'\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n{type: Renderer2, },\n{type: ElementRef, },\n{type: ComponentLoaderFactory, },\n{type: TooltipConfig, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'tooltip': [{ type: Input },],\n'tooltipChange': [{ type: Output },],\n'placement': [{ type: Input },],\n'triggers': [{ type: Input },],\n'container': [{ type: Input },],\n'isOpen': [{ type: Input },],\n'isDisabled': [{ type: Input },],\n'containerClass': [{ type: Input },],\n'delay': [{ type: Input },],\n'onShown': [{ type: Output },],\n'onHidden': [{ type: Output },],\n'htmlContent': [{ type: Input, args: ['tooltipHtml', ] },],\n'_placement': [{ type: Input, args: ['tooltipPlacement', ] },],\n'_isOpen': [{ type: Input, args: ['tooltipIsOpen', ] },],\n'_enable': [{ type: Input, args: ['tooltipEnable', ] },],\n'_appendToBody': [{ type: Input, args: ['tooltipAppendToBody', ] },],\n'_animation': [{ type: Input, args: ['tooltipAnimation', ] },],\n'_popupClass': [{ type: Input, args: ['tooltipClass', ] },],\n'_tooltipContext': [{ type: Input, args: ['tooltipContext', ] },],\n'_tooltipPopupDelay': [{ type: Input, args: ['tooltipPopupDelay', ] },],\n'_fadeDuration': [{ type: Input, args: ['tooltipFadeDuration', ] },],\n'_tooltipTrigger': [{ type: Input, args: ['tooltipTrigger', ] },],\n'tooltipStateChanged': [{ type: Output },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*tslint:disable:no-invalid-this */\nexport function OnChange(defaultValue?: any): any {\n  const sufix = 'Change';\n\n  return function OnChangeHandler(target: any, propertyKey: string): void {\n    const _key = ` __${propertyKey}Value`;\n    Object.defineProperty(target, propertyKey, {\n      get(): any {\n        return this[_key];\n      },\n      set(value: any): void {\n        const prevValue = this[_key];\n        this[_key] = value;\n        if (prevValue !== value && this[propertyKey + sufix]) {\n          this[propertyKey + sufix].emit(value);\n        }\n      }\n    });\n  };\n}\n/* tslint:enable */\n","import { CommonModule } from '@angular/common';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\nimport { TooltipContainerComponent } from './tooltip-container.component';\nimport { TooltipDirective } from './tooltip.directive';\nimport { TooltipConfig } from './tooltip.config';\nimport { ComponentLoaderFactory } from '../component-loader/index';\nimport { PositioningService } from '../positioning/index';\n\n\nexport class TooltipModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: TooltipModule,\n      providers: [TooltipConfig, ComponentLoaderFactory, PositioningService]\n    };\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [CommonModule],\n  declarations: [TooltipDirective, TooltipContainerComponent],\n  exports: [TooltipDirective],\n  entryComponents: [TooltipContainerComponent]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/* tslint:disable */\nexport const latinMap: { [key: string]: string } = {\n    'Á': 'A',\n    'Ă': 'A',\n    'Ắ': 'A',\n    'Ặ': 'A',\n    'Ằ': 'A',\n    'Ẳ': 'A',\n    'Ẵ': 'A',\n    'Ǎ': 'A',\n    'Â': 'A',\n    'Ấ': 'A',\n    'Ậ': 'A',\n    'Ầ': 'A',\n    'Ẩ': 'A',\n    'Ẫ': 'A',\n    'Ä': 'A',\n    'Ǟ': 'A',\n    'Ȧ': 'A',\n    'Ǡ': 'A',\n    'Ạ': 'A',\n    'Ȁ': 'A',\n    'À': 'A',\n    'Ả': 'A',\n    'Ȃ': 'A',\n    'Ā': 'A',\n    'Ą': 'A',\n    'Å': 'A',\n    'Ǻ': 'A',\n    'Ḁ': 'A',\n    'Ⱥ': 'A',\n    'Ã': 'A',\n    'Ꜳ': 'AA',\n    'Æ': 'AE',\n    'Ǽ': 'AE',\n    'Ǣ': 'AE',\n    'Ꜵ': 'AO',\n    'Ꜷ': 'AU',\n    'Ꜹ': 'AV',\n    'Ꜻ': 'AV',\n    'Ꜽ': 'AY',\n    'Ḃ': 'B',\n    'Ḅ': 'B',\n    'Ɓ': 'B',\n    'Ḇ': 'B',\n    'Ƀ': 'B',\n    'Ƃ': 'B',\n    'Ć': 'C',\n    'Č': 'C',\n    'Ç': 'C',\n    'Ḉ': 'C',\n    'Ĉ': 'C',\n    'Ċ': 'C',\n    'Ƈ': 'C',\n    'Ȼ': 'C',\n    'Ď': 'D',\n    'Ḑ': 'D',\n    'Ḓ': 'D',\n    'Ḋ': 'D',\n    'Ḍ': 'D',\n    'Ɗ': 'D',\n    'Ḏ': 'D',\n    'ǲ': 'D',\n    'ǅ': 'D',\n    'Đ': 'D',\n    'Ƌ': 'D',\n    'Ǳ': 'DZ',\n    'Ǆ': 'DZ',\n    'É': 'E',\n    'Ĕ': 'E',\n    'Ě': 'E',\n    'Ȩ': 'E',\n    'Ḝ': 'E',\n    'Ê': 'E',\n    'Ế': 'E',\n    'Ệ': 'E',\n    'Ề': 'E',\n    'Ể': 'E',\n    'Ễ': 'E',\n    'Ḙ': 'E',\n    'Ë': 'E',\n    'Ė': 'E',\n    'Ẹ': 'E',\n    'Ȅ': 'E',\n    'È': 'E',\n    'Ẻ': 'E',\n    'Ȇ': 'E',\n    'Ē': 'E',\n    'Ḗ': 'E',\n    'Ḕ': 'E',\n    'Ę': 'E',\n    'Ɇ': 'E',\n    'Ẽ': 'E',\n    'Ḛ': 'E',\n    'Ꝫ': 'ET',\n    'Ḟ': 'F',\n    'Ƒ': 'F',\n    'Ǵ': 'G',\n    'Ğ': 'G',\n    'Ǧ': 'G',\n    'Ģ': 'G',\n    'Ĝ': 'G',\n    'Ġ': 'G',\n    'Ɠ': 'G',\n    'Ḡ': 'G',\n    'Ǥ': 'G',\n    'Ḫ': 'H',\n    'Ȟ': 'H',\n    'Ḩ': 'H',\n    'Ĥ': 'H',\n    'Ⱨ': 'H',\n    'Ḧ': 'H',\n    'Ḣ': 'H',\n    'Ḥ': 'H',\n    'Ħ': 'H',\n    'Í': 'I',\n    'Ĭ': 'I',\n    'Ǐ': 'I',\n    'Î': 'I',\n    'Ï': 'I',\n    'Ḯ': 'I',\n    'İ': 'I',\n    'Ị': 'I',\n    'Ȉ': 'I',\n    'Ì': 'I',\n    'Ỉ': 'I',\n    'Ȋ': 'I',\n    'Ī': 'I',\n    'Į': 'I',\n    'Ɨ': 'I',\n    'Ĩ': 'I',\n    'Ḭ': 'I',\n    'Ꝺ': 'D',\n    'Ꝼ': 'F',\n    'Ᵹ': 'G',\n    'Ꞃ': 'R',\n    'Ꞅ': 'S',\n    'Ꞇ': 'T',\n    'Ꝭ': 'IS',\n    'Ĵ': 'J',\n    'Ɉ': 'J',\n    'Ḱ': 'K',\n    'Ǩ': 'K',\n    'Ķ': 'K',\n    'Ⱪ': 'K',\n    'Ꝃ': 'K',\n    'Ḳ': 'K',\n    'Ƙ': 'K',\n    'Ḵ': 'K',\n    'Ꝁ': 'K',\n    'Ꝅ': 'K',\n    'Ĺ': 'L',\n    'Ƚ': 'L',\n    'Ľ': 'L',\n    'Ļ': 'L',\n    'Ḽ': 'L',\n    'Ḷ': 'L',\n    'Ḹ': 'L',\n    'Ⱡ': 'L',\n    'Ꝉ': 'L',\n    'Ḻ': 'L',\n    'Ŀ': 'L',\n    'Ɫ': 'L',\n    'ǈ': 'L',\n    'Ł': 'L',\n    'Ǉ': 'LJ',\n    'Ḿ': 'M',\n    'Ṁ': 'M',\n    'Ṃ': 'M',\n    'Ɱ': 'M',\n    'Ń': 'N',\n    'Ň': 'N',\n    'Ņ': 'N',\n    'Ṋ': 'N',\n    'Ṅ': 'N',\n    'Ṇ': 'N',\n    'Ǹ': 'N',\n    'Ɲ': 'N',\n    'Ṉ': 'N',\n    'Ƞ': 'N',\n    'ǋ': 'N',\n    'Ñ': 'N',\n    'Ǌ': 'NJ',\n    'Ó': 'O',\n    'Ŏ': 'O',\n    'Ǒ': 'O',\n    'Ô': 'O',\n    'Ố': 'O',\n    'Ộ': 'O',\n    'Ồ': 'O',\n    'Ổ': 'O',\n    'Ỗ': 'O',\n    'Ö': 'O',\n    'Ȫ': 'O',\n    'Ȯ': 'O',\n    'Ȱ': 'O',\n    'Ọ': 'O',\n    'Ő': 'O',\n    'Ȍ': 'O',\n    'Ò': 'O',\n    'Ỏ': 'O',\n    'Ơ': 'O',\n    'Ớ': 'O',\n    'Ợ': 'O',\n    'Ờ': 'O',\n    'Ở': 'O',\n    'Ỡ': 'O',\n    'Ȏ': 'O',\n    'Ꝋ': 'O',\n    'Ꝍ': 'O',\n    'Ō': 'O',\n    'Ṓ': 'O',\n    'Ṑ': 'O',\n    'Ɵ': 'O',\n    'Ǫ': 'O',\n    'Ǭ': 'O',\n    'Ø': 'O',\n    'Ǿ': 'O',\n    'Õ': 'O',\n    'Ṍ': 'O',\n    'Ṏ': 'O',\n    'Ȭ': 'O',\n    'Ƣ': 'OI',\n    'Ꝏ': 'OO',\n    'Ɛ': 'E',\n    'Ɔ': 'O',\n    'Ȣ': 'OU',\n    'Ṕ': 'P',\n    'Ṗ': 'P',\n    'Ꝓ': 'P',\n    'Ƥ': 'P',\n    'Ꝕ': 'P',\n    'Ᵽ': 'P',\n    'Ꝑ': 'P',\n    'Ꝙ': 'Q',\n    'Ꝗ': 'Q',\n    'Ŕ': 'R',\n    'Ř': 'R',\n    'Ŗ': 'R',\n    'Ṙ': 'R',\n    'Ṛ': 'R',\n    'Ṝ': 'R',\n    'Ȑ': 'R',\n    'Ȓ': 'R',\n    'Ṟ': 'R',\n    'Ɍ': 'R',\n    'Ɽ': 'R',\n    'Ꜿ': 'C',\n    'Ǝ': 'E',\n    'Ś': 'S',\n    'Ṥ': 'S',\n    'Š': 'S',\n    'Ṧ': 'S',\n    'Ş': 'S',\n    'Ŝ': 'S',\n    'Ș': 'S',\n    'Ṡ': 'S',\n    'Ṣ': 'S',\n    'Ṩ': 'S',\n    'Ť': 'T',\n    'Ţ': 'T',\n    'Ṱ': 'T',\n    'Ț': 'T',\n    'Ⱦ': 'T',\n    'Ṫ': 'T',\n    'Ṭ': 'T',\n    'Ƭ': 'T',\n    'Ṯ': 'T',\n    'Ʈ': 'T',\n    'Ŧ': 'T',\n    'Ɐ': 'A',\n    'Ꞁ': 'L',\n    'Ɯ': 'M',\n    'Ʌ': 'V',\n    'Ꜩ': 'TZ',\n    'Ú': 'U',\n    'Ŭ': 'U',\n    'Ǔ': 'U',\n    'Û': 'U',\n    'Ṷ': 'U',\n    'Ü': 'U',\n    'Ǘ': 'U',\n    'Ǚ': 'U',\n    'Ǜ': 'U',\n    'Ǖ': 'U',\n    'Ṳ': 'U',\n    'Ụ': 'U',\n    'Ű': 'U',\n    'Ȕ': 'U',\n    'Ù': 'U',\n    'Ủ': 'U',\n    'Ư': 'U',\n    'Ứ': 'U',\n    'Ự': 'U',\n    'Ừ': 'U',\n    'Ử': 'U',\n    'Ữ': 'U',\n    'Ȗ': 'U',\n    'Ū': 'U',\n    'Ṻ': 'U',\n    'Ų': 'U',\n    'Ů': 'U',\n    'Ũ': 'U',\n    'Ṹ': 'U',\n    'Ṵ': 'U',\n    'Ꝟ': 'V',\n    'Ṿ': 'V',\n    'Ʋ': 'V',\n    'Ṽ': 'V',\n    'Ꝡ': 'VY',\n    'Ẃ': 'W',\n    'Ŵ': 'W',\n    'Ẅ': 'W',\n    'Ẇ': 'W',\n    'Ẉ': 'W',\n    'Ẁ': 'W',\n    'Ⱳ': 'W',\n    'Ẍ': 'X',\n    'Ẋ': 'X',\n    'Ý': 'Y',\n    'Ŷ': 'Y',\n    'Ÿ': 'Y',\n    'Ẏ': 'Y',\n    'Ỵ': 'Y',\n    'Ỳ': 'Y',\n    'Ƴ': 'Y',\n    'Ỷ': 'Y',\n    'Ỿ': 'Y',\n    'Ȳ': 'Y',\n    'Ɏ': 'Y',\n    'Ỹ': 'Y',\n    'Ź': 'Z',\n    'Ž': 'Z',\n    'Ẑ': 'Z',\n    'Ⱬ': 'Z',\n    'Ż': 'Z',\n    'Ẓ': 'Z',\n    'Ȥ': 'Z',\n    'Ẕ': 'Z',\n    'Ƶ': 'Z',\n    'Ĳ': 'IJ',\n    'Œ': 'OE',\n    'ᴀ': 'A',\n    'ᴁ': 'AE',\n    'ʙ': 'B',\n    'ᴃ': 'B',\n    'ᴄ': 'C',\n    'ᴅ': 'D',\n    'ᴇ': 'E',\n    'ꜰ': 'F',\n    'ɢ': 'G',\n    'ʛ': 'G',\n    'ʜ': 'H',\n    'ɪ': 'I',\n    'ʁ': 'R',\n    'ᴊ': 'J',\n    'ᴋ': 'K',\n    'ʟ': 'L',\n    'ᴌ': 'L',\n    'ᴍ': 'M',\n    'ɴ': 'N',\n    'ᴏ': 'O',\n    'ɶ': 'OE',\n    'ᴐ': 'O',\n    'ᴕ': 'OU',\n    'ᴘ': 'P',\n    'ʀ': 'R',\n    'ᴎ': 'N',\n    'ᴙ': 'R',\n    'ꜱ': 'S',\n    'ᴛ': 'T',\n    'ⱻ': 'E',\n    'ᴚ': 'R',\n    'ᴜ': 'U',\n    'ᴠ': 'V',\n    'ᴡ': 'W',\n    'ʏ': 'Y',\n    'ᴢ': 'Z',\n    'á': 'a',\n    'ă': 'a',\n    'ắ': 'a',\n    'ặ': 'a',\n    'ằ': 'a',\n    'ẳ': 'a',\n    'ẵ': 'a',\n    'ǎ': 'a',\n    'â': 'a',\n    'ấ': 'a',\n    'ậ': 'a',\n    'ầ': 'a',\n    'ẩ': 'a',\n    'ẫ': 'a',\n    'ä': 'a',\n    'ǟ': 'a',\n    'ȧ': 'a',\n    'ǡ': 'a',\n    'ạ': 'a',\n    'ȁ': 'a',\n    'à': 'a',\n    'ả': 'a',\n    'ȃ': 'a',\n    'ā': 'a',\n    'ą': 'a',\n    'ᶏ': 'a',\n    'ẚ': 'a',\n    'å': 'a',\n    'ǻ': 'a',\n    'ḁ': 'a',\n    'ⱥ': 'a',\n    'ã': 'a',\n    'ꜳ': 'aa',\n    'æ': 'ae',\n    'ǽ': 'ae',\n    'ǣ': 'ae',\n    'ꜵ': 'ao',\n    'ꜷ': 'au',\n    'ꜹ': 'av',\n    'ꜻ': 'av',\n    'ꜽ': 'ay',\n    'ḃ': 'b',\n    'ḅ': 'b',\n    'ɓ': 'b',\n    'ḇ': 'b',\n    'ᵬ': 'b',\n    'ᶀ': 'b',\n    'ƀ': 'b',\n    'ƃ': 'b',\n    'ɵ': 'o',\n    'ć': 'c',\n    'č': 'c',\n    'ç': 'c',\n    'ḉ': 'c',\n    'ĉ': 'c',\n    'ɕ': 'c',\n    'ċ': 'c',\n    'ƈ': 'c',\n    'ȼ': 'c',\n    'ď': 'd',\n    'ḑ': 'd',\n    'ḓ': 'd',\n    'ȡ': 'd',\n    'ḋ': 'd',\n    'ḍ': 'd',\n    'ɗ': 'd',\n    'ᶑ': 'd',\n    'ḏ': 'd',\n    'ᵭ': 'd',\n    'ᶁ': 'd',\n    'đ': 'd',\n    'ɖ': 'd',\n    'ƌ': 'd',\n    'ı': 'i',\n    'ȷ': 'j',\n    'ɟ': 'j',\n    'ʄ': 'j',\n    'ǳ': 'dz',\n    'ǆ': 'dz',\n    'é': 'e',\n    'ĕ': 'e',\n    'ě': 'e',\n    'ȩ': 'e',\n    'ḝ': 'e',\n    'ê': 'e',\n    'ế': 'e',\n    'ệ': 'e',\n    'ề': 'e',\n    'ể': 'e',\n    'ễ': 'e',\n    'ḙ': 'e',\n    'ë': 'e',\n    'ė': 'e',\n    'ẹ': 'e',\n    'ȅ': 'e',\n    'è': 'e',\n    'ẻ': 'e',\n    'ȇ': 'e',\n    'ē': 'e',\n    'ḗ': 'e',\n    'ḕ': 'e',\n    'ⱸ': 'e',\n    'ę': 'e',\n    'ᶒ': 'e',\n    'ɇ': 'e',\n    'ẽ': 'e',\n    'ḛ': 'e',\n    'ꝫ': 'et',\n    'ḟ': 'f',\n    'ƒ': 'f',\n    'ᵮ': 'f',\n    'ᶂ': 'f',\n    'ǵ': 'g',\n    'ğ': 'g',\n    'ǧ': 'g',\n    'ģ': 'g',\n    'ĝ': 'g',\n    'ġ': 'g',\n    'ɠ': 'g',\n    'ḡ': 'g',\n    'ᶃ': 'g',\n    'ǥ': 'g',\n    'ḫ': 'h',\n    'ȟ': 'h',\n    'ḩ': 'h',\n    'ĥ': 'h',\n    'ⱨ': 'h',\n    'ḧ': 'h',\n    'ḣ': 'h',\n    'ḥ': 'h',\n    'ɦ': 'h',\n    'ẖ': 'h',\n    'ħ': 'h',\n    'ƕ': 'hv',\n    'í': 'i',\n    'ĭ': 'i',\n    'ǐ': 'i',\n    'î': 'i',\n    'ï': 'i',\n    'ḯ': 'i',\n    'ị': 'i',\n    'ȉ': 'i',\n    'ì': 'i',\n    'ỉ': 'i',\n    'ȋ': 'i',\n    'ī': 'i',\n    'į': 'i',\n    'ᶖ': 'i',\n    'ɨ': 'i',\n    'ĩ': 'i',\n    'ḭ': 'i',\n    'ꝺ': 'd',\n    'ꝼ': 'f',\n    'ᵹ': 'g',\n    'ꞃ': 'r',\n    'ꞅ': 's',\n    'ꞇ': 't',\n    'ꝭ': 'is',\n    'ǰ': 'j',\n    'ĵ': 'j',\n    'ʝ': 'j',\n    'ɉ': 'j',\n    'ḱ': 'k',\n    'ǩ': 'k',\n    'ķ': 'k',\n    'ⱪ': 'k',\n    'ꝃ': 'k',\n    'ḳ': 'k',\n    'ƙ': 'k',\n    'ḵ': 'k',\n    'ᶄ': 'k',\n    'ꝁ': 'k',\n    'ꝅ': 'k',\n    'ĺ': 'l',\n    'ƚ': 'l',\n    'ɬ': 'l',\n    'ľ': 'l',\n    'ļ': 'l',\n    'ḽ': 'l',\n    'ȴ': 'l',\n    'ḷ': 'l',\n    'ḹ': 'l',\n    'ⱡ': 'l',\n    'ꝉ': 'l',\n    'ḻ': 'l',\n    'ŀ': 'l',\n    'ɫ': 'l',\n    'ᶅ': 'l',\n    'ɭ': 'l',\n    'ł': 'l',\n    'ǉ': 'lj',\n    'ſ': 's',\n    'ẜ': 's',\n    'ẛ': 's',\n    'ẝ': 's',\n    'ḿ': 'm',\n    'ṁ': 'm',\n    'ṃ': 'm',\n    'ɱ': 'm',\n    'ᵯ': 'm',\n    'ᶆ': 'm',\n    'ń': 'n',\n    'ň': 'n',\n    'ņ': 'n',\n    'ṋ': 'n',\n    'ȵ': 'n',\n    'ṅ': 'n',\n    'ṇ': 'n',\n    'ǹ': 'n',\n    'ɲ': 'n',\n    'ṉ': 'n',\n    'ƞ': 'n',\n    'ᵰ': 'n',\n    'ᶇ': 'n',\n    'ɳ': 'n',\n    'ñ': 'n',\n    'ǌ': 'nj',\n    'ó': 'o',\n    'ŏ': 'o',\n    'ǒ': 'o',\n    'ô': 'o',\n    'ố': 'o',\n    'ộ': 'o',\n    'ồ': 'o',\n    'ổ': 'o',\n    'ỗ': 'o',\n    'ö': 'o',\n    'ȫ': 'o',\n    'ȯ': 'o',\n    'ȱ': 'o',\n    'ọ': 'o',\n    'ő': 'o',\n    'ȍ': 'o',\n    'ò': 'o',\n    'ỏ': 'o',\n    'ơ': 'o',\n    'ớ': 'o',\n    'ợ': 'o',\n    'ờ': 'o',\n    'ở': 'o',\n    'ỡ': 'o',\n    'ȏ': 'o',\n    'ꝋ': 'o',\n    'ꝍ': 'o',\n    'ⱺ': 'o',\n    'ō': 'o',\n    'ṓ': 'o',\n    'ṑ': 'o',\n    'ǫ': 'o',\n    'ǭ': 'o',\n    'ø': 'o',\n    'ǿ': 'o',\n    'õ': 'o',\n    'ṍ': 'o',\n    'ṏ': 'o',\n    'ȭ': 'o',\n    'ƣ': 'oi',\n    'ꝏ': 'oo',\n    'ɛ': 'e',\n    'ᶓ': 'e',\n    'ɔ': 'o',\n    'ᶗ': 'o',\n    'ȣ': 'ou',\n    'ṕ': 'p',\n    'ṗ': 'p',\n    'ꝓ': 'p',\n    'ƥ': 'p',\n    'ᵱ': 'p',\n    'ᶈ': 'p',\n    'ꝕ': 'p',\n    'ᵽ': 'p',\n    'ꝑ': 'p',\n    'ꝙ': 'q',\n    'ʠ': 'q',\n    'ɋ': 'q',\n    'ꝗ': 'q',\n    'ŕ': 'r',\n    'ř': 'r',\n    'ŗ': 'r',\n    'ṙ': 'r',\n    'ṛ': 'r',\n    'ṝ': 'r',\n    'ȑ': 'r',\n    'ɾ': 'r',\n    'ᵳ': 'r',\n    'ȓ': 'r',\n    'ṟ': 'r',\n    'ɼ': 'r',\n    'ᵲ': 'r',\n    'ᶉ': 'r',\n    'ɍ': 'r',\n    'ɽ': 'r',\n    'ↄ': 'c',\n    'ꜿ': 'c',\n    'ɘ': 'e',\n    'ɿ': 'r',\n    'ś': 's',\n    'ṥ': 's',\n    'š': 's',\n    'ṧ': 's',\n    'ş': 's',\n    'ŝ': 's',\n    'ș': 's',\n    'ṡ': 's',\n    'ṣ': 's',\n    'ṩ': 's',\n    'ʂ': 's',\n    'ᵴ': 's',\n    'ᶊ': 's',\n    'ȿ': 's',\n    'ɡ': 'g',\n    'ᴑ': 'o',\n    'ᴓ': 'o',\n    'ᴝ': 'u',\n    'ť': 't',\n    'ţ': 't',\n    'ṱ': 't',\n    'ț': 't',\n    'ȶ': 't',\n    'ẗ': 't',\n    'ⱦ': 't',\n    'ṫ': 't',\n    'ṭ': 't',\n    'ƭ': 't',\n    'ṯ': 't',\n    'ᵵ': 't',\n    'ƫ': 't',\n    'ʈ': 't',\n    'ŧ': 't',\n    'ᵺ': 'th',\n    'ɐ': 'a',\n    'ᴂ': 'ae',\n    'ǝ': 'e',\n    'ᵷ': 'g',\n    'ɥ': 'h',\n    'ʮ': 'h',\n    'ʯ': 'h',\n    'ᴉ': 'i',\n    'ʞ': 'k',\n    'ꞁ': 'l',\n    'ɯ': 'm',\n    'ɰ': 'm',\n    'ᴔ': 'oe',\n    'ɹ': 'r',\n    'ɻ': 'r',\n    'ɺ': 'r',\n    'ⱹ': 'r',\n    'ʇ': 't',\n    'ʌ': 'v',\n    'ʍ': 'w',\n    'ʎ': 'y',\n    'ꜩ': 'tz',\n    'ú': 'u',\n    'ŭ': 'u',\n    'ǔ': 'u',\n    'û': 'u',\n    'ṷ': 'u',\n    'ü': 'u',\n    'ǘ': 'u',\n    'ǚ': 'u',\n    'ǜ': 'u',\n    'ǖ': 'u',\n    'ṳ': 'u',\n    'ụ': 'u',\n    'ű': 'u',\n    'ȕ': 'u',\n    'ù': 'u',\n    'ủ': 'u',\n    'ư': 'u',\n    'ứ': 'u',\n    'ự': 'u',\n    'ừ': 'u',\n    'ử': 'u',\n    'ữ': 'u',\n    'ȗ': 'u',\n    'ū': 'u',\n    'ṻ': 'u',\n    'ų': 'u',\n    'ᶙ': 'u',\n    'ů': 'u',\n    'ũ': 'u',\n    'ṹ': 'u',\n    'ṵ': 'u',\n    'ᵫ': 'ue',\n    'ꝸ': 'um',\n    'ⱴ': 'v',\n    'ꝟ': 'v',\n    'ṿ': 'v',\n    'ʋ': 'v',\n    'ᶌ': 'v',\n    'ⱱ': 'v',\n    'ṽ': 'v',\n    'ꝡ': 'vy',\n    'ẃ': 'w',\n    'ŵ': 'w',\n    'ẅ': 'w',\n    'ẇ': 'w',\n    'ẉ': 'w',\n    'ẁ': 'w',\n    'ⱳ': 'w',\n    'ẘ': 'w',\n    'ẍ': 'x',\n    'ẋ': 'x',\n    'ᶍ': 'x',\n    'ý': 'y',\n    'ŷ': 'y',\n    'ÿ': 'y',\n    'ẏ': 'y',\n    'ỵ': 'y',\n    'ỳ': 'y',\n    'ƴ': 'y',\n    'ỷ': 'y',\n    'ỿ': 'y',\n    'ȳ': 'y',\n    'ẙ': 'y',\n    'ɏ': 'y',\n    'ỹ': 'y',\n    'ź': 'z',\n    'ž': 'z',\n    'ẑ': 'z',\n    'ʑ': 'z',\n    'ⱬ': 'z',\n    'ż': 'z',\n    'ẓ': 'z',\n    'ȥ': 'z',\n    'ẕ': 'z',\n    'ᵶ': 'z',\n    'ᶎ': 'z',\n    'ʐ': 'z',\n    'ƶ': 'z',\n    'ɀ': 'z',\n    'ﬀ': 'ff',\n    'ﬃ': 'ffi',\n    'ﬄ': 'ffl',\n    'ﬁ': 'fi',\n    'ﬂ': 'fl',\n    'ĳ': 'ij',\n    'œ': 'oe',\n    'ﬆ': 'st',\n    'ₐ': 'a',\n    'ₑ': 'e',\n    'ᵢ': 'i',\n    'ⱼ': 'j',\n    'ₒ': 'o',\n    'ᵣ': 'r',\n    'ᵤ': 'u',\n    'ᵥ': 'v',\n    'ₓ': 'x'\n};\n","export class TypeaheadMatch {\n  readonly value: string;\n  readonly item: any;\n  protected header: boolean;\n\n  constructor(item: any, value: string = item, header = false) {\n    this.item = item;\n    this.value = value;\n    this.header = header;\n  }\n\n  isHeader(): boolean {\n    return this.header;\n  }\n\n  toString(): string {\n    return this.value;\n  }\n}\n","import { latinMap } from './latin-map';\n\nexport function latinize(str: string): string {\n  if (!str) {\n    return '';\n  }\n\n  return str.replace(/[^A-Za-z0-9\\[\\] ]/g, function (a: string): string {\n    return latinMap[a] || a;\n  });\n}\n\nexport function escapeRegexp(queryToEscape: string): string {\n  // Regex: capture the whole query string and replace it with the string\n  // that will be used to match the results, for example if the capture is\n  // 'a' the result will be \\a\n  return queryToEscape.replace(/([.?*+^$[\\]\\\\(){}|-])/g, '\\\\$1');\n}\n\n/* tslint:disable */\nexport function tokenize(str: string,\n                         wordRegexDelimiters = ' ',\n                         phraseRegexDelimiters = ''): Array<string> {\n  /* tslint:enable */\n  const regexStr = `(?:[${phraseRegexDelimiters}])([^${phraseRegexDelimiters}]+)` +\n    `(?:[${phraseRegexDelimiters}])|([^${wordRegexDelimiters}]+)`;\n  const preTokenized: string[] = str.split(new RegExp(regexStr, 'g'));\n  const result: string[] = [];\n  const preTokenizedLength: number = preTokenized.length;\n  let token: string;\n  const replacePhraseDelimiters = new RegExp(`[${phraseRegexDelimiters}]+`, 'g');\n\n  for (let i = 0; i < preTokenizedLength; i += 1) {\n    token = preTokenized[i];\n    if (token && token.length && token !== wordRegexDelimiters) {\n      result.push(token.replace(replacePhraseDelimiters, ''));\n    }\n  }\n\n  return result;\n}\n\nexport function getValueFromObject(object: any, option: string): string {\n  if (!option || typeof object !== 'object') {\n    return object.toString();\n  }\n\n  if (option.endsWith('()')) {\n    const functionName = option.slice(0, option.length - 2);\n\n    return object[functionName]().toString();\n  }\n\n  const properties: string = option\n    .replace(/\\[(\\w+)\\]/g, '.$1')\n    .replace(/^\\./, '');\n  const propertiesArray: string[] = properties.split('.');\n\n  for (const property of propertiesArray) {\n    if (property in object) {\n      // tslint:disable-next-line\n      object = object[property];\n    }\n  }\n  if (!object) {return ''; }\n\n  return object.toString();\n}\n","import { window } from './facade/browser';\n\nexport class Utils {\n  static reflow(element: any): void {\n    ((bs: any): void => bs)(element.offsetHeight);\n  }\n\n  // source: https://github.com/jquery/jquery/blob/master/src/css/var/getStyles.js\n  static getStyles(elem: any): any {\n    // Support: IE <=11 only, Firefox <=30 (#15098, #14150)\n    // IE throws on elements created in popups\n    // FF meanwhile throws on frame elements through \"defaultView.getComputedStyle\"\n    let view = elem.ownerDocument.defaultView;\n\n    if (!view || !view.opener) {\n      view = window;\n    }\n\n    return view.getComputedStyle(elem);\n  }\n}\n","import { Component, ElementRef, HostListener, QueryList, TemplateRef, ViewChild, ViewChildren, Renderer2 } from '@angular/core';\nimport { isBs3 } from '../utils/theme-provider';\nimport { TypeaheadMatch } from './typeahead-match.class';\nimport { latinize } from './typeahead-utils';\nimport { TypeaheadDirective } from './typeahead.directive';\nimport { Utils } from '../utils/utils.class';\n\n\nexport class TypeaheadContainerComponent {\n  parent: TypeaheadDirective;\n  query: any;\n  element: ElementRef;\n  isFocused = false;\n  top: string;\n  left: string;\n  display: string;\n  placement: string;\n  dropup: boolean;\n  guiHeight: string;\n  needScrollbar: boolean;\n\n  get isBs4(): boolean {\n    return !isBs3();\n  }\n\n  protected _active: TypeaheadMatch;\n  protected _matches: TypeaheadMatch[] = [];\n\n  \n  private ulElement: ElementRef;\n\n  \n  private liElements: QueryList<ElementRef>;\n\n  constructor(element: ElementRef, private renderer: Renderer2) {\n    this.element = element;\n  }\n\n  get active(): TypeaheadMatch {\n    return this._active;\n  }\n\n  get matches(): TypeaheadMatch[] {\n    return this._matches;\n  }\n\n  set matches(value: TypeaheadMatch[]) {\n    this._matches = value;\n    this.needScrollbar = this.typeaheadScrollable && this.typeaheadOptionsInScrollableView < this.matches.length;\n    if (this.typeaheadScrollable) {\n      setTimeout(() => {\n        this.setScrollableMode();\n      });\n    }\n\n    if (this._matches.length > 0) {\n      this._active = this._matches[0];\n      if (this._active.isHeader()) {\n        this.nextActiveMatch();\n      }\n    }\n  }\n\n  get optionsListTemplate(): TemplateRef<any> {\n    return this.parent ? this.parent.optionsListTemplate : undefined;\n  }\n\n  get typeaheadScrollable(): boolean {\n    return this.parent ? this.parent.typeaheadScrollable : false;\n  }\n\n\n  get typeaheadOptionsInScrollableView(): number {\n    return this.parent ? this.parent.typeaheadOptionsInScrollableView : 5;\n  }\n\n  get itemTemplate(): TemplateRef<any> {\n    return this.parent ? this.parent.typeaheadItemTemplate : undefined;\n  }\n\n  selectActiveMatch(): void {\n    this.selectMatch(this._active);\n  }\n\n  prevActiveMatch(): void {\n    const index = this.matches.indexOf(this._active);\n    this._active = this.matches[\n      index - 1 < 0 ? this.matches.length - 1 : index - 1\n      ];\n    if (this._active.isHeader()) {\n      this.prevActiveMatch();\n    }\n    if (this.typeaheadScrollable) {\n      this.scrollPrevious(index);\n    }\n  }\n\n  nextActiveMatch(): void {\n    const index = this.matches.indexOf(this._active);\n    this._active = this.matches[\n      index + 1 > this.matches.length - 1 ? 0 : index + 1\n      ];\n    if (this._active.isHeader()) {\n      this.nextActiveMatch();\n    }\n    if (this.typeaheadScrollable) {\n      this.scrollNext(index);\n    }\n  }\n\n  selectActive(value: TypeaheadMatch): void {\n    this.isFocused = true;\n    this._active = value;\n  }\n\n  hightlight(match: TypeaheadMatch, query: any): string {\n    let itemStr: string = match.value;\n    let itemStrHelper: string = (this.parent && this.parent.typeaheadLatinize\n      ? latinize(itemStr)\n      : itemStr).toLowerCase();\n    let startIdx: number;\n    let tokenLen: number;\n    // Replaces the capture string with the same string inside of a \"strong\" tag\n    if (typeof query === 'object') {\n      const queryLen: number = query.length;\n      for (let i = 0; i < queryLen; i += 1) {\n        // query[i] is already latinized and lower case\n        startIdx = itemStrHelper.indexOf(query[i]);\n        tokenLen = query[i].length;\n        if (startIdx >= 0 && tokenLen > 0) {\n          itemStr =\n            `${itemStr.substring(0, startIdx)}<strong>${itemStr.substring(startIdx, startIdx + tokenLen)}</strong>` +\n            `${itemStr.substring(startIdx + tokenLen)}`;\n          itemStrHelper =\n            `${itemStrHelper.substring(0, startIdx)}        ${' '.repeat(tokenLen)}         ` +\n            `${itemStrHelper.substring(startIdx + tokenLen)}`;\n        }\n      }\n    } else if (query) {\n      // query is already latinized and lower case\n      startIdx = itemStrHelper.indexOf(query);\n      tokenLen = query.length;\n      if (startIdx >= 0 && tokenLen > 0) {\n        itemStr =\n          `${itemStr.substring(0, startIdx)}<strong>${itemStr.substring(startIdx, startIdx + tokenLen)}</strong>` +\n          `${itemStr.substring(startIdx + tokenLen)}`;\n      }\n    }\n\n    return itemStr;\n  }\n\n  \n  \n  focusLost(): void {\n    this.isFocused = false;\n  }\n\n  isActive(value: TypeaheadMatch): boolean {\n    return this._active === value;\n  }\n\n  selectMatch(value: TypeaheadMatch, e: Event = void 0): boolean {\n    if (e) {\n      e.stopPropagation();\n      e.preventDefault();\n    }\n    this.parent.changeModel(value);\n    setTimeout(() => this.parent.typeaheadOnSelect.emit(value), 0);\n\n    return false;\n  }\n\n  setScrollableMode(): void {\n    if (!this.ulElement) {\n      this.ulElement = this.element;\n    }\n    if (this.liElements.first) {\n      const ulStyles = Utils.getStyles(this.ulElement.nativeElement);\n      const liStyles = Utils.getStyles(this.liElements.first.nativeElement);\n      const ulPaddingBottom = parseFloat((ulStyles['padding-bottom'] ? ulStyles['padding-bottom'] : '').replace('px', ''));\n      const ulPaddingTop = parseFloat((ulStyles['padding-top'] ? ulStyles['padding-top'] : '0').replace('px', ''));\n      const optionHeight = parseFloat((liStyles['height'] ? liStyles['height'] : '0').replace('px', ''));\n      const height = this.typeaheadOptionsInScrollableView * optionHeight;\n      this.guiHeight = (height + ulPaddingTop + ulPaddingBottom) + 'px';\n    }\n    this.renderer.setStyle(this.element.nativeElement, 'visibility', 'visible');\n  }\n\n  scrollPrevious(index: number): void {\n    if (index === 0) {\n      this.scrollToBottom();\n      return;\n    }\n    if (this.liElements) {\n      const liElement = this.liElements.toArray()[index - 1];\n      if (liElement && !this.isScrolledIntoView(liElement.nativeElement)) {\n        this.ulElement.nativeElement.scrollTop = liElement.nativeElement.offsetTop;\n      }\n    }\n  }\n\n  scrollNext(index: number): void {\n    if (index + 1 > this.matches.length - 1) {\n      this.scrollToTop();\n      return;\n    }\n    if (this.liElements) {\n      const liElement = this.liElements.toArray()[index + 1];\n      if (liElement && !this.isScrolledIntoView(liElement.nativeElement)) {\n        this.ulElement.nativeElement.scrollTop =\n          liElement.nativeElement.offsetTop -\n          this.ulElement.nativeElement.offsetHeight +\n          liElement.nativeElement.offsetHeight;\n      }\n    }\n  }\n\n\n  private isScrolledIntoView = function (elem: HTMLElement) {\n    const containerViewTop = this.ulElement.nativeElement.scrollTop;\n    const containerViewBottom = containerViewTop + this.ulElement.nativeElement.offsetHeight;\n    const elemTop = elem.offsetTop;\n    const elemBottom = elemTop + elem.offsetHeight;\n\n    return ((elemBottom <= containerViewBottom) && (elemTop >= containerViewTop));\n  }\n\n  private scrollToBottom(): void {\n    this.ulElement.nativeElement.scrollTop = this.ulElement.nativeElement.scrollHeight;\n  }\n\n  private scrollToTop(): void {\n    this.ulElement.nativeElement.scrollTop = 0;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'typeahead-container',\n  // tslint:disable-next-line\n  template: \"<!-- inject options list template --> <ng-template [ngTemplateOutlet]=\\\"optionsListTemplate || (isBs4 ? bs4Template : bs3Template)\\\" [ngTemplateOutletContext]=\\\"{matches:matches, itemTemplate:itemTemplate, query:query}\\\"></ng-template> <!-- default options item template --> <ng-template #bsItemTemplate let-match=\\\"match\\\" let-query=\\\"query\\\"><span [innerHtml]=\\\"hightlight(match, query)\\\"></span> </ng-template> <!-- Bootstrap 3 options list template --> <ng-template #bs3Template> <ul class=\\\"dropdown-menu\\\" #ulElement [style.overflow-y]=\\\"needScrollbar ? 'scroll': 'auto'\\\" [style.height]=\\\"needScrollbar ? guiHeight: 'auto'\\\"> <ng-template ngFor let-match let-i=\\\"index\\\" [ngForOf]=\\\"matches\\\"> <li #liElements *ngIf=\\\"match.isHeader()\\\" class=\\\"dropdown-header\\\">{{ match }}</li> <li #liElements *ngIf=\\\"!match.isHeader()\\\" [class.active]=\\\"isActive(match)\\\" (mouseenter)=\\\"selectActive(match)\\\"> <a href=\\\"#\\\" (click)=\\\"selectMatch(match, $event)\\\" tabindex=\\\"-1\\\"> <ng-template [ngTemplateOutlet]=\\\"itemTemplate || bsItemTemplate\\\" [ngTemplateOutletContext]=\\\"{item:match.item, index:i, match:match, query:query}\\\"></ng-template> </a> </li> </ng-template> </ul> </ng-template> <!-- Bootstrap 4 options list template --> <ng-template #bs4Template> <ng-template ngFor let-match let-i=\\\"index\\\" [ngForOf]=\\\"matches\\\"> <h6 *ngIf=\\\"match.isHeader()\\\" class=\\\"dropdown-header\\\">{{ match }}</h6> <ng-template [ngIf]=\\\"!match.isHeader()\\\"> <button #liElements class=\\\"dropdown-item\\\" (click)=\\\"selectMatch(match, $event)\\\" (mouseenter)=\\\"selectActive(match)\\\" [class.active]=\\\"isActive(match)\\\"> <ng-template [ngTemplateOutlet]=\\\"itemTemplate || bsItemTemplate\\\" [ngTemplateOutletContext]=\\\"{item:match.item, index:i, match:match, query:query}\\\"></ng-template> </button> </ng-template> </ng-template> </ng-template> \",\n  host: {\n    class: 'dropdown open',\n    '[class.dropdown-menu]': 'isBs4',\n    '[style.overflow-y]' : `isBs4 && needScrollbar ? 'scroll': 'visible'`,\n    '[style.height]': `isBs4 && needScrollbar ? guiHeight: 'auto'`,\n    '[style.visibility]': `typeaheadScrollable ? 'hidden' : 'visible'`,\n    '[class.dropup]': 'dropup',\n    style: 'position: absolute;display: block;'\n  }\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer2, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'ulElement': [{ type: ViewChild, args: ['ulElement', ] },],\n'liElements': [{ type: ViewChildren, args: ['liElements', ] },],\n'focusLost': [{ type: HostListener, args: ['mouseleave', ] },{ type: HostListener, args: ['blur', ] },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/* tslint:disable:max-file-line-count */\nimport {\n  ChangeDetectorRef,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  Renderer2,\n  TemplateRef,\n  ViewContainerRef\n} from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport 'rxjs/add/observable/from';\nimport 'rxjs/add/operator/debounceTime';\nimport 'rxjs/add/operator/filter';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/mergeMap';\nimport 'rxjs/add/operator/toArray';\n\nimport { Observable } from 'rxjs/Observable';\nimport { Subscription } from 'rxjs/Subscription';\nimport { ComponentLoader, ComponentLoaderFactory } from '../component-loader/index';\nimport { TypeaheadContainerComponent } from './typeahead-container.component';\nimport { TypeaheadMatch } from './typeahead-match.class';\nimport { getValueFromObject, latinize, tokenize } from './typeahead-utils';\n\n\nexport class TypeaheadDirective implements OnInit, OnDestroy {\n  /** options source, can be Array of strings, objects or\n   * an Observable for external matching process\n   */\n   typeahead: any;\n  /** minimal no of characters that needs to be entered before\n   * typeahead kicks-in. When set to 0, typeahead shows on focus with full\n   * list of options (limited as normal by typeaheadOptionsLimit)\n   */\n   typeaheadMinLength: number = void 0;\n  /** minimal wait time after last character typed before typeahead kicks-in */\n   typeaheadWaitMs: number;\n  /** maximum length of options items list */\n   typeaheadOptionsLimit: number;\n  /** when options source is an array of objects, the name of field\n   * that contains the options value, we use array item as option in case\n   * of this field is missing. Supports nested properties and methods.\n   */\n   typeaheadOptionField: string;\n  /** when options source is an array of objects, the name of field that\n   * contains the group value, matches are grouped by this field when set.\n   */\n   typeaheadGroupField: string;\n  /** should be used only in case of typeahead attribute is array.\n   * If true - loading of options will be async, otherwise - sync.\n   * true make sense if options array is large.\n   */\n   typeaheadAsync: boolean = void 0;\n  /** match latin symbols.\n   * If true the word súper would match super and vice versa.\n   */\n   typeaheadLatinize = true;\n  /** break words with spaces. If true the text \"exact phrase\"\n   * here match would match with match exact phrase here\n   * but not with phrase here exact match (kind of \"google style\").\n   */\n   typeaheadSingleWords = true;\n  /** should be used only in case typeaheadSingleWords attribute is true.\n   * Sets the word delimiter to break words. Defaults to space.\n   */\n   typeaheadWordDelimiters = ' ';\n  /** should be used only in case typeaheadSingleWords attribute is true.\n   * Sets the word delimiter to match exact phrase.\n   * Defaults to simple and double quotes.\n   */\n   typeaheadPhraseDelimiters = '\\'\"';\n  /** used to specify a custom item template.\n   * Template variables exposed are called item and index;\n   */\n   typeaheadItemTemplate: TemplateRef<any>;\n  /** used to specify a custom options list template.\n   * Template variables: matches, itemTemplate, query\n   */\n   optionsListTemplate: TemplateRef<any>;\n  /** specifies if typeahead is scrollable  */\n   typeaheadScrollable = false;\n  /** specifies number of options to show in scroll view  */\n   typeaheadOptionsInScrollableView = 5;\n  /** fired when 'busy' state of this component was changed,\n   * fired on async mode only, returns boolean\n   */\n   typeaheadLoading: EventEmitter<boolean> = new EventEmitter();\n  /** fired on every key event and returns true\n   * in case of matches are not detected\n   */\n   typeaheadNoResults: EventEmitter<boolean> = new EventEmitter();\n  /** fired when option was selected, return object with data of this option */\n   typeaheadOnSelect: EventEmitter<TypeaheadMatch> = new EventEmitter();\n  /** fired when blur event occurres. returns the active item */\n   typeaheadOnBlur: EventEmitter<any> = new EventEmitter();\n\n  /**\n   * A selector specifying the element the typeahead should be appended to.\n   * Currently only supports \"body\".\n   */\n   container: string;\n\n  /** This attribute indicates that the dropdown should be opened upwards */\n   dropup = false;\n\n  // not yet implemented\n  /** if false restrict model values to the ones selected from the popup only will be provided */\n  // @Input() protected typeaheadEditable:boolean;\n  /** if false the first match automatically will not be focused as you type */\n  // @Input() protected typeaheadFocusFirst:boolean;\n  /** format the ng-model result after selection */\n  // @Input() protected typeaheadInputFormatter:any;\n  /** if true automatically select an item when there is one option that exactly matches the user input */\n  // @Input() protected typeaheadSelectOnExact:boolean;\n  /**  if true select the currently highlighted match on blur */\n  // @Input() protected typeaheadSelectOnBlur:boolean;\n  /**  if false don't focus the input element the typeahead directive is associated with on selection */\n    // @Input() protected typeaheadFocusOnSelect:boolean;\n\n  _container: TypeaheadContainerComponent;\n  isTypeaheadOptionsListActive = false;\n\n  protected keyUpEventEmitter: EventEmitter<any> = new EventEmitter();\n  protected _matches: TypeaheadMatch[];\n  protected placement = 'bottom-left';\n  // protected popup:ComponentRef<TypeaheadContainerComponent>;\n\n  private _typeahead: ComponentLoader<TypeaheadContainerComponent>;\n  private _subscriptions: Subscription[] = [];\n  private _outsideClickListener: Function;\n\n  constructor(private ngControl: NgControl,\n              private element: ElementRef,\n              viewContainerRef: ViewContainerRef,\n              private renderer: Renderer2,\n              cis: ComponentLoaderFactory,\n              private changeDetection: ChangeDetectorRef) {\n    this._typeahead = cis.createLoader<TypeaheadContainerComponent>(\n      element,\n      viewContainerRef,\n      renderer\n    );\n  }\n\n  ngOnInit(): void {\n    this.typeaheadOptionsLimit = this.typeaheadOptionsLimit || 20;\n    this.typeaheadMinLength =\n      this.typeaheadMinLength === void 0 ? 1 : this.typeaheadMinLength;\n    this.typeaheadWaitMs = this.typeaheadWaitMs || 0;\n\n    // async should be false in case of array\n    if (\n      this.typeaheadAsync === undefined &&\n      !(this.typeahead instanceof Observable)\n    ) {\n      this.typeaheadAsync = false;\n    }\n\n    if (this.typeahead instanceof Observable) {\n      this.typeaheadAsync = true;\n    }\n\n    if (this.typeaheadAsync) {\n      this.asyncActions();\n    } else {\n      this.syncActions();\n    }\n  }\n\n  \n  onInput(e: any): void {\n    // For `<input>`s, use the `value` property. For others that don't have a\n    // `value` (such as `<span contenteditable=\"true\">`), use either\n    // `textContent` or `innerText` (depending on which one is supported, i.e.\n    // Firefox or IE).\n    const value =\n      e.target.value !== undefined\n        ? e.target.value\n        : e.target.textContent !== undefined\n        ? e.target.textContent\n        : e.target.innerText;\n    if (value != null && value.trim().length >= this.typeaheadMinLength) {\n      this.typeaheadLoading.emit(true);\n      this.keyUpEventEmitter.emit(e.target.value);\n    } else {\n      this.typeaheadLoading.emit(false);\n      this.typeaheadNoResults.emit(false);\n      this.hide();\n    }\n  }\n\n  \n  onChange(e: any): void {\n    if (this._container) {\n      // esc\n      if (e.keyCode === 27) {\n        this.hide();\n\n        return;\n      }\n\n      // up\n      if (e.keyCode === 38) {\n        this._container.prevActiveMatch();\n\n        return;\n      }\n\n      // down\n      if (e.keyCode === 40) {\n        this._container.nextActiveMatch();\n\n        return;\n      }\n\n      // enter, tab\n      if (e.keyCode === 13) {\n        this._container.selectActiveMatch();\n\n        return;\n      }\n    }\n  }\n\n  \n  \n  onFocus(): void {\n    if (this.typeaheadMinLength === 0) {\n      this.typeaheadLoading.emit(true);\n      this.keyUpEventEmitter.emit(this.element.nativeElement.value || '');\n    }\n  }\n\n  \n  onBlur(): void {\n    if (this._container && !this._container.isFocused) {\n      this.typeaheadOnBlur.emit(this._container.active);\n    }\n  }\n\n  \n  onKeydown(e: any): void {\n    // no container - no problems\n    if (!this._container) {\n      return;\n    }\n\n    // if an item is visible - prevent form submission\n    if (e.keyCode === 13) {\n      e.preventDefault();\n\n      return;\n    }\n\n    // if an item is visible - don't change focus\n    if (e.keyCode === 9) {\n      e.preventDefault();\n      this._container.selectActiveMatch();\n\n      return;\n    }\n  }\n\n  changeModel(match: TypeaheadMatch): void {\n    const valueStr: string = match.value;\n    this.ngControl.viewToModelUpdate(valueStr);\n    (this.ngControl.control).setValue(valueStr);\n    this.changeDetection.markForCheck();\n    this.hide();\n  }\n\n  get matches(): any[] {\n    return this._matches;\n  }\n\n  show(): void {\n    this._typeahead\n      .attach(TypeaheadContainerComponent)\n      // todo: add append to body, after updating positioning service\n      .to(this.container)\n      .position({attachment: `${this.dropup ? 'top' : 'bottom'} left`})\n      .show({\n        typeaheadRef: this,\n        placement: this.placement,\n        animation: false,\n        dropup: this.dropup\n      });\n\n    this._outsideClickListener = this.renderer.listen('document', 'click', (e: MouseEvent) => {\n      if (this.typeaheadMinLength === 0 && this.element.nativeElement.contains(e.target)) {\n        return;\n      }\n      this.onOutsideClick();\n    });\n\n    this._container = this._typeahead.instance;\n    this._container.parent = this;\n    // This improves the speed as it won't have to be done for each list item\n    const normalizedQuery = (this.typeaheadLatinize\n      ? latinize(this.ngControl.control.value)\n      : this.ngControl.control.value)\n      .toString()\n      .toLowerCase();\n    this._container.query = this.typeaheadSingleWords\n      ? tokenize(\n        normalizedQuery,\n        this.typeaheadWordDelimiters,\n        this.typeaheadPhraseDelimiters\n      )\n      : normalizedQuery;\n    this._container.matches = this._matches;\n    this.element.nativeElement.focus();\n  }\n\n  hide(): void {\n    if (this._typeahead.isShown) {\n      this._typeahead.hide();\n      this._outsideClickListener();\n      this._container = null;\n    }\n  }\n\n  onOutsideClick(): void {\n    if (this._container && !this._container.isFocused) {\n      this.hide();\n    }\n  }\n\n  ngOnDestroy(): any {\n    // clean up subscriptions\n    for (const sub of this._subscriptions) {\n      sub.unsubscribe();\n    }\n    this._typeahead.dispose();\n  }\n\n  protected asyncActions(): void {\n    this._subscriptions.push(\n      this.keyUpEventEmitter\n        .debounceTime(this.typeaheadWaitMs)\n        .mergeMap(() => this.typeahead)\n        .subscribe((matches: any[]) => {\n          this.finalizeAsyncCall(matches);\n        })\n    );\n  }\n\n  protected syncActions(): void {\n    this._subscriptions.push(\n      this.keyUpEventEmitter\n        .debounceTime(this.typeaheadWaitMs)\n        .mergeMap((value: string) => {\n          const normalizedQuery = this.normalizeQuery(value);\n\n          return Observable.from(this.typeahead)\n            .filter((option: any) => {\n              return (\n                option &&\n                this.testMatch(this.normalizeOption(option), normalizedQuery)\n              );\n            })\n            .toArray();\n        })\n        .subscribe((matches: any[]) => {\n          this.finalizeAsyncCall(matches);\n        })\n    );\n  }\n\n  protected normalizeOption(option: any): any {\n    const optionValue: string = getValueFromObject(\n      option,\n      this.typeaheadOptionField\n    );\n    const normalizedOption = this.typeaheadLatinize\n      ? latinize(optionValue)\n      : optionValue;\n\n    return normalizedOption.toLowerCase();\n  }\n\n  protected normalizeQuery(value: string): any {\n    // If singleWords, break model here to not be doing extra work on each\n    // iteration\n    let normalizedQuery: any = (this.typeaheadLatinize\n      ? latinize(value)\n      : value)\n      .toString()\n      .toLowerCase();\n    normalizedQuery = this.typeaheadSingleWords\n      ? tokenize(\n        normalizedQuery,\n        this.typeaheadWordDelimiters,\n        this.typeaheadPhraseDelimiters\n      )\n      : normalizedQuery;\n\n    return normalizedQuery;\n  }\n\n  protected testMatch(match: string, test: any): boolean {\n    let spaceLength: number;\n\n    if (typeof test === 'object') {\n      spaceLength = test.length;\n      for (let i = 0; i < spaceLength; i += 1) {\n        if (test[i].length > 0 && match.indexOf(test[i]) < 0) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    return match.indexOf(test) >= 0;\n  }\n\n  protected finalizeAsyncCall(matches: any[]): void {\n    this.prepareMatches(matches);\n\n    this.typeaheadLoading.emit(false);\n    this.typeaheadNoResults.emit(!this.hasMatches());\n\n    if (!this.hasMatches()) {\n      this.hide();\n\n      return;\n    }\n\n    if (this._container) {\n      // This improves the speed as it won't have to be done for each list item\n      const normalizedQuery = (this.typeaheadLatinize\n        ? latinize(this.ngControl.control.value)\n        : this.ngControl.control.value)\n        .toString()\n        .toLowerCase();\n      this._container.query = this.typeaheadSingleWords\n        ? tokenize(\n          normalizedQuery,\n          this.typeaheadWordDelimiters,\n          this.typeaheadPhraseDelimiters\n        )\n        : normalizedQuery;\n      this._container.matches = this._matches;\n    } else {\n      this.show();\n    }\n  }\n\n  protected prepareMatches(options: any[]): void {\n    const limited: any[] = options.slice(0, this.typeaheadOptionsLimit);\n\n    if (this.typeaheadGroupField) {\n      let matches: TypeaheadMatch[] = [];\n\n      // extract all group names\n      const groups = limited\n        .map((option: any) =>\n          getValueFromObject(option, this.typeaheadGroupField)\n        )\n        .filter((v: string, i: number, a: any[]) => a.indexOf(v) === i);\n\n      groups.forEach((group: string) => {\n        // add group header to array of matches\n        matches.push(new TypeaheadMatch(group, group, true));\n\n        // add each item of group to array of matches\n        matches = matches.concat(\n          limited\n            .filter(\n              (option: any) =>\n                getValueFromObject(option, this.typeaheadGroupField) === group\n            )\n            .map(\n              (option: any) =>\n                new TypeaheadMatch(\n                  option,\n                  getValueFromObject(option, this.typeaheadOptionField)\n                )\n            )\n        );\n      });\n\n      this._matches = matches;\n    } else {\n      this._matches = limited.map(\n        (option: any) =>\n          new TypeaheadMatch(\n            option,\n            getValueFromObject(option, this.typeaheadOptionField)\n          )\n      );\n    }\n  }\n\n  protected hasMatches(): boolean {\n    return this._matches.length > 0;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: '[typeahead]', exportAs: 'bs-typeahead'}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NgControl, },\n{type: ElementRef, },\n{type: ViewContainerRef, },\n{type: Renderer2, },\n{type: ComponentLoaderFactory, },\n{type: ChangeDetectorRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'typeahead': [{ type: Input },],\n'typeaheadMinLength': [{ type: Input },],\n'typeaheadWaitMs': [{ type: Input },],\n'typeaheadOptionsLimit': [{ type: Input },],\n'typeaheadOptionField': [{ type: Input },],\n'typeaheadGroupField': [{ type: Input },],\n'typeaheadAsync': [{ type: Input },],\n'typeaheadLatinize': [{ type: Input },],\n'typeaheadSingleWords': [{ type: Input },],\n'typeaheadWordDelimiters': [{ type: Input },],\n'typeaheadPhraseDelimiters': [{ type: Input },],\n'typeaheadItemTemplate': [{ type: Input },],\n'optionsListTemplate': [{ type: Input },],\n'typeaheadScrollable': [{ type: Input },],\n'typeaheadOptionsInScrollableView': [{ type: Input },],\n'typeaheadLoading': [{ type: Output },],\n'typeaheadNoResults': [{ type: Output },],\n'typeaheadOnSelect': [{ type: Output },],\n'typeaheadOnBlur': [{ type: Output },],\n'container': [{ type: Input },],\n'dropup': [{ type: Input },],\n'onInput': [{ type: HostListener, args: ['input', ['$event'], ] },],\n'onChange': [{ type: HostListener, args: ['keyup', ['$event'], ] },],\n'onFocus': [{ type: HostListener, args: ['click', ] },{ type: HostListener, args: ['focus', ] },],\n'onBlur': [{ type: HostListener, args: ['blur', ] },],\n'onKeydown': [{ type: HostListener, args: ['keydown', ['$event'], ] },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { TypeaheadContainerComponent } from './typeahead-container.component';\nimport { TypeaheadDirective } from './typeahead.directive';\nimport { ComponentLoaderFactory } from '../component-loader/index';\nimport { PositioningService } from '../positioning/index';\n\n\nexport class TypeaheadModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: TypeaheadModule,\n      providers: [ComponentLoaderFactory, PositioningService]\n    };\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [CommonModule],\n  declarations: [TypeaheadContainerComponent, TypeaheadDirective],\n  exports: [TypeaheadContainerComponent, TypeaheadDirective],\n  entryComponents: [TypeaheadContainerComponent]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Facet } from './models/facet';\nexport class FacetSelect {\n/**\n * @param {?} facet\n */\nconstructor(public facet: Facet) {}\n}\n\nfunction FacetSelect_tsickle_Closure_declarations() {\n/** @type {?} */\nFacetSelect.prototype.facet;\n}\n\nexport class FacetDeselect {\n/**\n * @param {?} facet\n */\nconstructor(public facet: Facet) {}\n}\n\nfunction FacetDeselect_tsickle_Closure_declarations() {\n/** @type {?} */\nFacetDeselect.prototype.facet;\n}\n\nexport class FacetDeselectAll {\nconstructor() {}\n}\n\nexport type FacetEvent = FacetSelect | FacetDeselect | FacetDeselectAll;","import { Component, Input, EventEmitter, Output } from '@angular/core';\nimport { FacetEvent, FacetSelect, FacetDeselect, FacetDeselectAll } from './facet-events';\nimport { Facet } from './models/facet';\nexport class FacetContainerComponent {\n\n     header: string = 'Selected:';\n     clearTooltip: string = 'Clear All';\n     emptyText: string = 'No Items';\n     facets: Facet[] = [];\n\n     facetsChange: EventEmitter<Facet[]> = new EventEmitter<Facet[]>();\n     events: EventEmitter<FacetEvent> = new EventEmitter<FacetEvent>();\n/**\n * @param {?} facet\n * @return {?}\n */\nselectFacet(facet: Facet): void {\n        // push the facet on to the list\n        this.facets.push(facet);\n\n        // update the two way binding\n        this.facetsChange.emit(this.facets);\n\n        // trigger event\n        this.triggerEvent(new FacetSelect(facet));\n    }\n/**\n * @param {?} facet\n * @return {?}\n */\ndeselectFacet(facet: Facet): void {\n\n        // find the index of the item in the selected array\n        let /** @type {?} */ idx = this.facets.findIndex(selectedFacet => facet === selectedFacet);\n\n        // if match there was no match then finish\n        if (idx === -1) {\n            return;\n        }\n\n        // remove the last item\n        this.facets.splice(idx, 1);\n\n        // update the two way binding\n        this.facetsChange.emit(this.facets);\n\n        // trigger event\n        this.triggerEvent(new FacetDeselect(facet));\n    }\n/**\n * @return {?}\n */\ndeselectAllFacets(): void {\n\n        // empty the selected array\n        this.facets = [];\n\n        // update the two way binding\n        this.facetsChange.emit(this.facets);\n\n        // trigger event\n        this.triggerEvent(new FacetDeselectAll());\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nprivate triggerEvent(event: FacetEvent) {\n        this.events.next(event);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-facet-container',\n    template: `\n      <!-- Display Any Selected Facets -->\n      <div class=\"facets-selected-container\">\n\n          <!-- Display Title an Clear Button -->\n          <div class=\"facets-selected-header-container\">\n\n              <!-- Show The Selected Text -->\n              <span class=\"facets-selected-header-label\">{{ header }}</span>\n\n              <!-- Add a Clear Button -->\n              <div class=\"facets-selected-clear-button\" tabindex=\"0\" [tooltip]=\"clearTooltip\" placement=\"left\" container=\"body\" (click)=\"deselectAllFacets()\"\n                  (keyup.enter)=\"deselectAllFacets()\" *ngIf=\"facets.length > 0\">\n\n                  <svg class=\"facets-selected-clear-graphic\" viewBox=\"0 0 19 12\" shape-rendering=\"geometricPrecision\">\n                      <rect class=\"light-grey\" x=\"0\" y=\"2\" width=\"7\" height=\"2\"></rect>\n                      <rect class=\"dark-grey\" x=\"0\" y=\"5\" width=\"9\" height=\"2\"></rect>\n                      <rect class=\"light-grey\" x=\"0\" y=\"8\" width=\"7\" height=\"2\"></rect>\n                      <path class=\"dark-grey\" d=\"M9,1 h1 l9,9 v1 h-1 l-9,-9 v-1 Z\"></path>\n                      <path class=\"dark-grey\" d=\"M9,11 v-1 l9,-9 h1 v1 l-9,9 h-1 Z\"></path>\n                  </svg>\n              </div>\n\n          </div>\n\n          <!-- Display Tags For Selected Items -->\n          <div class=\"facets-selected-list\">\n\n              <!-- Show Selected Tags -->\n              <div class=\"facet-selected-tag\" tabindex=\"0\" *ngFor=\"let facet of facets\" (mousedown)=\"$event.preventDefault()\" (click)=\"deselectFacet(facet)\" (keyup.enter)=\"deselectFacet(facet)\">\n\n                  <!-- Display Label -->\n                  <span class=\"facet-selected-tag-label\">{{ facet.title }}</span>\n\n                  <!-- Display Remove Icon -->\n                  <span class=\"hpe-icon hpe-close\"></span>\n              </div>\n\n          </div>\n\n          <!-- Show Message Here if No Facets Selected -->\n          <p class=\"facets-selected-none-label\" *ngIf=\"emptyText && facets.length === 0\">{{ emptyText }}</p>\n\n      </div>\n\n      <!-- Any Facet Elements Should be Added Here By User -->\n      <div class=\"facets-region\">\n          <ng-content></ng-content>\n      </div>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'header': [{ type: Input },],\n'clearTooltip': [{ type: Input },],\n'emptyText': [{ type: Input },],\n'facets': [{ type: Input },],\n'facetsChange': [{ type: Output },],\n'events': [{ type: Output },],\n};\n}\n\nfunction FacetContainerComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nFacetContainerComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFacetContainerComponent.ctorParameters;\n/** @type {?} */\nFacetContainerComponent.propDecorators;\n/** @type {?} */\nFacetContainerComponent.prototype.header;\n/** @type {?} */\nFacetContainerComponent.prototype.clearTooltip;\n/** @type {?} */\nFacetContainerComponent.prototype.emptyText;\n/** @type {?} */\nFacetContainerComponent.prototype.facets;\n/** @type {?} */\nFacetContainerComponent.prototype.facetsChange;\n/** @type {?} */\nFacetContainerComponent.prototype.events;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Host, Input, Output, EventEmitter, OnInit, ElementRef } from '@angular/core';\nimport { FacetContainerComponent } from '../../facet-container.component';\nimport { FacetEvent, FacetDeselectAll, FacetDeselect, FacetSelect } from '../../facet-events';\nimport { Facet } from '../../models/facet';\nimport { Subject } from 'rxjs/Subject';\nimport'rxjs/add/operator/filter';\nexport class FacetBaseComponent implements OnInit {\n\n     selected: Facet[] = [];\n     selectedChange: EventEmitter<Facet[]> = new EventEmitter<Facet[]>();\n\n     events: Subject<FacetEvent> = new Subject<FacetEvent>();\n/**\n * @param {?} facetContainer\n * @param {?} _elementRef\n */\nconstructor(\nprivate facetContainer: FacetContainerComponent,\npublic _elementRef: ElementRef) {\n\n        if (facetContainer) {\n\n            // subscribe to any deselect events from the facet container\n            facetContainer.events.filter(event => event instanceof FacetDeselect)\n                .filter((event: FacetDeselect) => !!this.selected.find(facet => facet === event.facet))\n                .subscribe((event: FacetDeselect) => this.deselectFacet(event.facet));\n\n            // subscribe to any deselect all events from facet container\n            facetContainer.events.filter(event => event instanceof FacetDeselectAll).subscribe(_ => this.deselectAll());\n\n        }\n    }\n/**\n * @return {?}\n */\nngOnInit(): void {\n        // check if there should be any facets initially selected\n        if (this.facetContainer) {\n            this.selected.forEach(facet => this.facetContainer.selectFacet(facet));\n        }\n    }\n/**\n * @param {?} facet\n * @return {?}\n */\nselectFacet(facet: Facet): void {\n\n        // if the facet is disabled it should not be selected\n        if (facet.disabled) {\n            return;\n        }\n\n        // add the facet to the list of selected facets\n        this.selected.push(facet);\n\n        // send the new value to the event emitter\n        this.selectedChange.emit(this.selected);\n\n        // fire the event to the observable\n        this.triggerEvent(new FacetSelect(facet));\n\n        // tell the facet container about the selected facet\n        if (this.facetContainer) {\n            this.facetContainer.selectFacet(facet);\n        }\n    }\n/**\n * @param {?} facet\n * @return {?}\n */\ndeselectFacet(facet: Facet): void {\n\n        // find facet to remove\n        let /** @type {?} */ index = this.selected.findIndex(selectedFacet => selectedFacet === facet);\n\n        // only continue if facet is found\n        if (index !== -1) {\n\n            // remove the facet from the selected list\n            this.selected.splice(index, 1);\n\n            // emit the changes to selected event emitter\n            this.selectedChange.emit(this.selected);\n\n            // fire the event to the observable\n            this.triggerEvent(new FacetDeselect(facet));\n\n            // deselect the facet in the facet container\n            if (this.facetContainer) {\n                this.facetContainer.deselectFacet(facet);\n            }\n        }\n    }\n/**\n * @return {?}\n */\ndeselectAll(): void {\n\n        // remove all selected facets\n        this.selected = [];\n\n        // fire the event to the observable\n        this.triggerEvent(new FacetDeselectAll());\n\n        // emit the changes to the selected event emitter\n        this.selectedChange.emit(this.selected);\n    }\n/**\n * @param {?} facet\n * @return {?}\n */\ntoggleFacetSelection(facet: Facet): void {\n\n        // if the facet is selected then deselect - otherwise select it\n        if (this.isFacetSelected(facet)) {\n            this.deselectFacet(facet);\n        } else {\n            this.selectFacet(facet);\n        }\n\n    }\n/**\n * @param {?} facet\n * @return {?}\n */\nisFacetSelected(facet: Facet): boolean {\n        // determine if a facet is currently selected\n        return !!this.selected.find(selectedFacet => selectedFacet === facet);\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nprivate triggerEvent(event: FacetEvent): void {\n        this.events.next(event);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-facet-base',\n    template: '',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: FacetContainerComponent, decorators: [{ type: Host }, ]},\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'selected': [{ type: Input },],\n'selectedChange': [{ type: Output },],\n'events': [{ type: Output },],\n};\n}\n\nfunction FacetBaseComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nFacetBaseComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFacetBaseComponent.ctorParameters;\n/** @type {?} */\nFacetBaseComponent.propDecorators;\n/** @type {?} */\nFacetBaseComponent.prototype.selected;\n/** @type {?} */\nFacetBaseComponent.prototype.selectedChange;\n/** @type {?} */\nFacetBaseComponent.prototype.events;\n/** @type {?} */\nFacetBaseComponent.prototype.facetContainer;\n/** @type {?} */\nFacetBaseComponent.prototype._elementRef;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Output, EventEmitter, Input } from '@angular/core';\nexport class FacetHeaderComponent {\n\n     header: string;\n     canExpand: boolean = true;    \n     expanded: boolean = true;\n     expandedChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n/**\n * @return {?}\n */\ntoggleExpand(): void {\n\n        // if not expandable then do nothing\n        if (this.canExpand) {\n            this.expanded = !this.expanded;\n            this.expandedChange.emit(this.expanded);\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-facet-header',\n    template: `\n      <span class=\"facet-header-title\">{{ header }}</span>\n      <span class=\"hpe-icon\" [class.hpe-down]=\"expanded\" [class.hpe-previous]=\"!expanded\" *ngIf=\"canExpand\"></span>\n    `,\n    host: {\n        'tabindex': '0',\n        '(click)': 'toggleExpand()',\n        '(keyup.enter)': 'toggleExpand()'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'header': [{ type: Input },],\n'canExpand': [{ type: Input },],\n'expanded': [{ type: Input },],\n'expandedChange': [{ type: Output },],\n};\n}\n\nfunction FacetHeaderComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nFacetHeaderComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFacetHeaderComponent.ctorParameters;\n/** @type {?} */\nFacetHeaderComponent.propDecorators;\n/** @type {?} */\nFacetHeaderComponent.prototype.header;\n/** @type {?} */\nFacetHeaderComponent.prototype.canExpand;\n/** @type {?} */\nFacetHeaderComponent.prototype.expanded;\n/** @type {?} */\nFacetHeaderComponent.prototype.expandedChange;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input } from '@angular/core';\nimport { FacetBaseComponent } from '../base/facet-base/facet-base.component';\nimport { Facet } from '../models/facet';\nexport class FacetCheckListComponent extends FacetBaseComponent {\n\n     facets: Facet[] = [];\n     header: string;\n     scrollbar: boolean = true;\n     expanded: boolean = true;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-facet-check-list',\n    template: `\n      <ux-facet-header [header]=\"header\" [(expanded)]=\"expanded\"></ux-facet-header>\n\n      <!-- Create a container which will show when section is expanded -->\n      <div class=\"facet-check-list-container\" [class.facet-check-list-scrollbar]=\"scrollbar\" *ngIf=\"expanded\">\n\n          <!-- Iterate through each possible facet -->\n          <div class=\"facet-check-list-item\" *ngFor=\"let facet of facets\" [class.facet-active]=\"isFacetSelected(facet)\" tabindex=\"0\"\n              (click)=\"toggleFacetSelection(facet)\" (keyup.enter)=\"toggleFacetSelection(facet)\" [class.disabled]=\"facet.disabled\">\n\n              <!-- Show check icon to indicate the state -->\n              <span class=\"facet-check-list-item-check\">\n                  <span class=\"hpe-icon hpe-active\"></span>\n              </span>\n\n              <!-- Display the title -->\n              <span class=\"facet-check-list-item-title\">{{ facet.title }}</span>\n\n              <!-- Display the count if specified -->\n              <span class=\"facet-check-list-item-count\" *ngIf=\"facet.count !== undefined\">({{ facet.count }})</span>\n          </div>\n      </div>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'facets': [{ type: Input },],\n'header': [{ type: Input },],\n'scrollbar': [{ type: Input },],\n'expanded': [{ type: Input },],\n};\n}\n\nfunction FacetCheckListComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nFacetCheckListComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFacetCheckListComponent.ctorParameters;\n/** @type {?} */\nFacetCheckListComponent.propDecorators;\n/** @type {?} */\nFacetCheckListComponent.prototype.facets;\n/** @type {?} */\nFacetCheckListComponent.prototype.header;\n/** @type {?} */\nFacetCheckListComponent.prototype.scrollbar;\n/** @type {?} */\nFacetCheckListComponent.prototype.expanded;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, OnInit, Input, Host, Pipe, PipeTransform } from '@angular/core';\nimport { FacetBaseComponent } from '../base/facet-base/facet-base.component';\nimport { Observable } from 'rxjs/Observable';\nimport { Facet } from '../models/facet';\nimport { FacetContainerComponent } from '../facet-container.component';\nimport { TypeaheadMatch } from 'ngx-bootstrap/typeahead';\nimport'rxjs/add/operator/map';\nimport'rxjs/add/observable/of';\nimport { Observer } from 'rxjs/Observer';\nexport class FacetTypeaheadListComponent extends FacetBaseComponent implements OnInit {\n\n     facets: Facet[] | Observable<Facet[]>;\n     header: string;\n     expanded: boolean = true;\n     typeaheadConfig: FacetTypeaheadListConfig = {};\n     suggestions: Facet[] = [];\n     simplified: boolean = true;\n\n    typeaheadOptions: Observable<Facet[]>;\n    searchQuery: string;\nprivate _nativeElement: HTMLElement = /** @type {?} */(( this._elementRef.nativeElement as HTMLElement));\nprivate _defaultTypeaheadConfig: FacetTypeaheadListConfig = {\n        placeholder: '',\n        maxResults: 50,\n        minCharacters: 1\n    };\n/**\n * @return {?}\n */\nngOnInit() {\n\n        // wrap the observable and filter out any already selected items or any disabled items\n        if (this.facets instanceof Observable) {\n\n            // handle an observable of data\n            this.typeaheadOptions = Observable.from(this.facets).map((facets: Facet[]) => {\n\n                // remove disabled facets, selected facets and facets that dont match search term\n                return facets.filter(facet => !facet.disabled)\n                    .filter(facet => !this.selected.find(selectedFacet => selectedFacet === facet))\n                    .filter(facet => facet.title.toUpperCase().includes(this.searchQuery.toUpperCase()));\n            });\n\n        } else {\n\n            // handle an array of data\n            this.typeaheadOptions = Observable.of(this.facets).map((facets: Facet[]) => {\n\n                // remove disabled facets, selected facets and facets that dont match search term\n                return facets.filter(facet => !facet.disabled)\n                    .filter(facet => !this.selected.find(selectedFacet => selectedFacet === facet))\n                    .filter(facet => facet.title.toUpperCase().includes(this.searchQuery.toUpperCase()));\n            });\n        }\n\n        // provide default values for typeahead config\n        for (let /** @type {?} */ prop in this._defaultTypeaheadConfig) {\n\n            // check if prop has been defined in the users typeahead config - if not set default value\n            if (this.typeaheadConfig.hasOwnProperty(prop) === false) {\n                this.typeaheadConfig[prop] = this._defaultTypeaheadConfig[prop];\n            }\n        }\n    }\n/**\n * @param {?} typeaheadOption\n * @return {?}\n */\nselectOption(typeaheadOption: TypeaheadMatch) {\n\n        // check to make sure that the item is not currently selected\n        if (this.selected.find(facet => facet === typeaheadOption.item)) {\n            return;\n        }\n\n        // select the facet\n        this.selectFacet(typeaheadOption.item);\n\n        // clear the typeahead\n        this.searchQuery = '';\n    }\n/**\n * @return {?}\n */\nscrollToFocused(): void {\n\n        let /** @type {?} */ dropdown = this._nativeElement.querySelector('.dropdown-menu');\n\n        // delay to allow the typeahead ui to update\n        setTimeout(() => {\n\n            // find the currently active element if there is one\n            let /** @type {?} */ activeElement = dropdown.querySelector('.dropdown-menu > li.active');\n\n            if (activeElement) {\n\n                // check if element is not in view\n                let /** @type {?} */ elementBounds = activeElement.getBoundingClientRect();\n                let /** @type {?} */ dropdownBounds = dropdown.getBoundingClientRect();\n\n                if (elementBounds.top < dropdownBounds.top) {\n                    dropdown.scrollTop += elementBounds.top - dropdownBounds.top;\n                }\n\n                if (elementBounds.bottom > dropdownBounds.bottom) {\n                    dropdown.scrollTop += elementBounds.bottom - dropdownBounds.bottom;\n                }\n            }\n        });\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-facet-typeahead-list',\n    template: `\n      <ux-facet-header [header]=\"header\" [(expanded)]=\"expanded\"></ux-facet-header>\n\n      <div class=\"facet-typeahead-list-container\" *ngIf=\"expanded\">\n\n          <div class=\"facet-typeahead-list-selected-container\" *ngIf=\"suggestions?.length > 0\">\n\n              <div class=\"facet-typeahead-list-selected-option\" tabindex=\"0\" *ngFor=\"let facet of suggestions\" (click)=\"toggleFacetSelection(facet)\"\n                  (keyup.enter)=\"toggleFacetSelection(facet)\">\n\n                  <ux-checkbox [clickable]=\"false\" [value]=\"isFacetSelected(facet)\" [simplified]=\"simplified\">\n                      <span class=\"facet-typeahead-list-selected-option-title\">{{ facet.title }}</span>\n                      <span class=\"facet-typeahead-list-selected-option-count\">({{ facet.count }})</span>\n                  </ux-checkbox>\n\n              </div>\n\n          </div>\n\n          <div class=\"facet-typeahead-list-control\">\n\n              <!-- Create Typeahead Control -->\n              <input type=\"text\" class=\"form-control\" [placeholder]=\"typeaheadConfig?.placeholder\" [typeahead]=\"typeaheadOptions\" [(ngModel)]=\"searchQuery\"\n                  [typeaheadMinLength]=\"typeaheadConfig?.minCharacters\" [typeaheadOptionsLimit]=\"typeaheadConfig?.maxResults\" [typeaheadWaitMs]=\"typeaheadConfig?.delay\"\n                  (typeaheadOnSelect)=\"selectOption($event)\" [typeaheadItemTemplate]=\"facetOptionTemplate\" (keyup.ArrowUp)=\"scrollToFocused()\" (keyup.ArrowDown)=\"scrollToFocused()\">\n\n          </div>\n\n      </div>\n\n      <ng-template #facetOptionTemplate let-model=\"item\" let-index=\"index\">\n          <p class=\"facet-typeahead-list-option\"><span [innerHTML]=\"model.title | facetTypeaheadHighlight: searchQuery\"></span> <span class=\"facet-typeahead-list-option-count\"\n                  *ngIf=\"model.count\">({{ model.count }})</span></p>\n      </ng-template>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'facets': [{ type: Input },],\n'header': [{ type: Input },],\n'expanded': [{ type: Input },],\n'typeaheadConfig': [{ type: Input },],\n'suggestions': [{ type: Input },],\n'simplified': [{ type: Input },],\n};\n}\n\nfunction FacetTypeaheadListComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nFacetTypeaheadListComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFacetTypeaheadListComponent.ctorParameters;\n/** @type {?} */\nFacetTypeaheadListComponent.propDecorators;\n/** @type {?} */\nFacetTypeaheadListComponent.prototype.facets;\n/** @type {?} */\nFacetTypeaheadListComponent.prototype.header;\n/** @type {?} */\nFacetTypeaheadListComponent.prototype.expanded;\n/** @type {?} */\nFacetTypeaheadListComponent.prototype.typeaheadConfig;\n/** @type {?} */\nFacetTypeaheadListComponent.prototype.suggestions;\n/** @type {?} */\nFacetTypeaheadListComponent.prototype.simplified;\n/** @type {?} */\nFacetTypeaheadListComponent.prototype.typeaheadOptions;\n/** @type {?} */\nFacetTypeaheadListComponent.prototype.searchQuery;\n/** @type {?} */\nFacetTypeaheadListComponent.prototype._nativeElement;\n/** @type {?} */\nFacetTypeaheadListComponent.prototype._defaultTypeaheadConfig;\n}\n\n\nexport interface FacetTypeaheadListConfig {\n    placeholder?: string;\n    minCharacters?: number;\n    maxResults?: number;\n    delay?: number;\n}\nexport class FacetTypeaheadHighlight implements PipeTransform {\n/**\n * @param {?} value\n * @param {?} searchQuery\n * @return {?}\n */\ntransform(value: string, searchQuery: string): string {\n        let /** @type {?} */ regex = new RegExp(searchQuery, 'i');\n        return value.replace(regex, `<b class=\"facet-typeahead-highlighted\">${ value.match(regex) }</b>`);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{\n    name: 'facetTypeaheadHighlight'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction FacetTypeaheadHighlight_tsickle_Closure_declarations() {\n/** @type {?} */\nFacetTypeaheadHighlight.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFacetTypeaheadHighlight.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { TypeaheadModule } from 'ngx-bootstrap/typeahead';\nimport { CommonModule } from '@angular/common';\nimport { FacetContainerComponent } from './facet-container.component';\nimport { FacetBaseComponent } from './base/facet-base/facet-base.component';\nimport { FacetHeaderComponent } from './base/facet-header/facet-header.component';\nimport { FacetCheckListComponent } from './facet-check-list/facet-check-list.component';\nimport { FacetTypeaheadListComponent, FacetTypeaheadHighlight } from './facet-typeahead-list/facet-typeahead-list.component';\nimport { FormsModule } from '@angular/forms';\nimport { CheckboxModule } from '../../index';\n\nconst /** @type {?} */ DECLARATIONS = [\n    FacetContainerComponent,\n    FacetHeaderComponent,\n    FacetBaseComponent,\n    FacetCheckListComponent,\n    FacetTypeaheadListComponent,\n    FacetTypeaheadHighlight\n];\nexport class FacetsModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        FormsModule,\n        CheckboxModule,\n        TooltipModule.forRoot(),\n        TypeaheadModule.forRoot()\n    ],\n    exports: DECLARATIONS,\n    declarations: DECLARATIONS\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction FacetsModule_tsickle_Closure_declarations() {\n/** @type {?} */\nFacetsModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFacetsModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\nexport class Facet {\n/**\n * @param {?} title\n * @param {?=} data\n * @param {?=} count\n * @param {?=} disabled\n * @param {?=} id\n */\nconstructor(\npublic title: string,\npublic data: any = {},\npublic count?: number,\npublic disabled: boolean = false,\npublic id?: string | number\n    ) { }\n}\n\nfunction Facet_tsickle_Closure_declarations() {\n/** @type {?} */\nFacet.prototype.title;\n/** @type {?} */\nFacet.prototype.data;\n/** @type {?} */\nFacet.prototype.count;\n/** @type {?} */\nFacet.prototype.disabled;\n/** @type {?} */\nFacet.prototype.id;\n}\n","import { Injectable } from '@angular/core';\n\n/** Default dropdown configuration */\n\nexport class BsDropdownConfig {\n  /** default dropdown auto closing behavior */\n  autoClose = true;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { EventEmitter, Injectable } from '@angular/core';\nimport { BsComponentRef } from '../component-loader/bs-component-ref.class';\n\n\nexport class BsDropdownState {\n  direction: 'down' | 'up' = 'down';\n  autoClose: boolean;\n  isOpenChange = new EventEmitter<boolean>();\n  isDisabledChange = new EventEmitter<boolean>();\n  toggleClick = new EventEmitter<boolean>();\n\n  /**\n   * Content to be displayed as popover.\n   */\n  dropdownMenu: Promise<BsComponentRef<any>>;\n  resolveDropdownMenu: (componentRef: BsComponentRef<any>) => void;\n\n  constructor() {\n    this.dropdownMenu = new Promise(resolve => {\n      this.resolveDropdownMenu = resolve;\n    });\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  OnDestroy,\n  Renderer2\n} from '@angular/core';\nimport { BsDropdownState } from './bs-dropdown.state';\nimport { isBs3 } from '../utils/theme-provider';\n\n\nexport class BsDropdownContainerComponent implements OnDestroy {\n  isOpen = false;\n\n  get direction(): 'down' | 'up' {\n    return this._state.direction;\n  }\n\n  private _subscription: any;\n\n  constructor(\n    private _state: BsDropdownState,\n    private cd: ChangeDetectorRef,\n    private _renderer: Renderer2,\n    _element: ElementRef\n  ) {\n    this._subscription = _state.isOpenChange.subscribe((value: boolean) => {\n      this.isOpen = value;\n      const dropdown = _element.nativeElement.querySelector('.dropdown-menu');\n      if (dropdown && !isBs3()) {\n        this._renderer.addClass(dropdown, 'show');\n        if (dropdown.classList.contains('dropdown-menu-right')) {\n          this._renderer.setStyle(dropdown, 'left', 'auto');\n          this._renderer.setStyle(dropdown, 'right', '0');\n        }\n        if (this.direction === 'up') {\n          this._renderer.setStyle(dropdown, 'top', 'auto');\n          this._renderer.setStyle(\n            dropdown,\n            'transform',\n            'translateY(-101%)'\n          );\n        }\n      }\n      this.cd.markForCheck();\n      this.cd.detectChanges();\n    });\n  }\n\n  ngOnDestroy(): void {\n    this._subscription.unsubscribe();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'bs-dropdown-container',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    style: 'display:block;position: absolute;'\n  },\n  template: `\n    <div [class.dropup]=\"direction === 'up'\"\n         [class.dropdown]=\"direction === 'down'\"\n         [class.show]=\"isOpen\"\n         [class.open]=\"isOpen\"><ng-content></ng-content></div>\n  `\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: BsDropdownState, },\n{type: ChangeDetectorRef, },\n{type: Renderer2, },\n{type: ElementRef, },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// tslint:disable:max-file-line-count\nimport {\n  Directive, ElementRef, EmbeddedViewRef, EventEmitter, Input, OnDestroy,\n  OnInit, Output, Renderer2, ViewContainerRef\n} from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\nimport 'rxjs/add/operator/filter';\nimport { ComponentLoader, ComponentLoaderFactory } from '../component-loader/index';\n\nimport { BsDropdownConfig } from './bs-dropdown.config';\nimport { BsDropdownContainerComponent } from './bs-dropdown-container.component';\nimport { BsDropdownState } from './bs-dropdown.state';\nimport { BsComponentRef } from '../component-loader/bs-component-ref.class';\nimport { BsDropdownMenuDirective } from './';\nimport { isBs3 } from '../utils/theme-provider';\n\n\nexport class BsDropdownDirective implements OnInit, OnDestroy {\n  /**\n   * Placement of a popover. Accepts: \"top\", \"bottom\", \"left\", \"right\"\n   */\n   placement: string;\n  /**\n   * Specifies events that should trigger. Supports a space separated list of\n   * event names.\n   */\n   triggers: string;\n  /**\n   * A selector specifying the element the popover should be appended to.\n   * Currently only supports \"body\".\n   */\n   container: string;\n\n  /**\n   * This attribute indicates that the dropdown should be opened upwards\n   */\n   dropup: boolean;\n\n  /**\n   * Indicates that dropdown will be closed on item or document click,\n   * and after pressing ESC\n   */\n  \n  set autoClose(value: boolean) {\n    this._state.autoClose = value;\n  }\n\n  get autoClose(): boolean {\n    return this._state.autoClose;\n  }\n\n  /**\n   * Disables dropdown toggle and hides dropdown menu if opened\n   */\n  \n  set isDisabled(value: boolean) {\n    this._isDisabled = value;\n    this._state.isDisabledChange.emit(value);\n    if (value) {\n      this.hide();\n    }\n  }\n\n  get isDisabled(): boolean {\n    return this._isDisabled;\n  }\n\n  /**\n   * Returns whether or not the popover is currently being shown\n   */\n  \n  get isOpen(): boolean {\n    if (this._showInline) {\n      return this._isInlineOpen;\n    }\n\n    return this._dropdown.isShown;\n  }\n\n  set isOpen(value: boolean) {\n    if (value) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n\n  /**\n   * Emits an event when isOpen change\n   */\n   isOpenChange: EventEmitter<any>;\n\n  /**\n   * Emits an event when the popover is shown\n   */\n   onShown: EventEmitter<any>;\n\n  /**\n   * Emits an event when the popover is hidden\n   */\n   onHidden: EventEmitter<any>;\n\n  get isBs4(): boolean {\n    return !isBs3();\n  }\n\n  // todo: move to component loader\n  private _isInlineOpen = false;\n\n  private get _showInline(): boolean {\n    return !this.container;\n  }\n\n  private _inlinedMenu: EmbeddedViewRef<BsDropdownMenuDirective>;\n\n  private _isDisabled: boolean;\n  private _dropdown: ComponentLoader<BsDropdownContainerComponent>;\n  private _subscriptions: Subscription[] = [];\n  private _isInited = false;\n\n  constructor(private _elementRef: ElementRef,\n              private _renderer: Renderer2,\n              private _viewContainerRef: ViewContainerRef,\n              private _cis: ComponentLoaderFactory,\n              private _config: BsDropdownConfig,\n              private _state: BsDropdownState) {\n    // set initial dropdown state from config\n    this._state.autoClose = this._config.autoClose;\n\n    // create dropdown component loader\n    this._dropdown = this._cis\n      .createLoader<BsDropdownContainerComponent>(\n        this._elementRef,\n        this._viewContainerRef,\n        this._renderer\n      )\n      .provide({provide: BsDropdownState, useValue: this._state});\n\n    this.onShown = this._dropdown.onShown;\n    this.onHidden = this._dropdown.onHidden;\n    this.isOpenChange = this._state.isOpenChange;\n\n  }\n\n  ngOnInit(): void {\n    // fix: seems there are an issue with `routerLinkActive`\n    // which result in duplicated call ngOnInit without call to ngOnDestroy\n    // read more: https://github.com/valor-software/ngx-bootstrap/issues/1885\n    if (this._isInited) {\n      return;\n    }\n    this._isInited = true;\n\n    // attach DOM listeners\n    this._dropdown.listen({\n      // because of dropdown inline mode\n      outsideClick: false,\n      triggers: this.triggers,\n      show: () => this.show()\n    });\n\n    // toggle visibility on toggle element click\n    this._subscriptions.push(\n      this._state.toggleClick.subscribe((value: boolean) => this.toggle(value))\n    );\n\n    // hide dropdown if set disabled while opened\n    this._subscriptions.push(\n      this._state.isDisabledChange\n        .filter((value: boolean) => value)\n        .subscribe((value: boolean) => this.hide())\n    );\n  }\n\n  /**\n   * Opens an element’s popover. This is considered a “manual” triggering of\n   * the popover.\n   */\n  show(): void {\n    if (this.isOpen || this.isDisabled) {\n      return;\n    }\n\n    if (this._showInline) {\n      if (!this._inlinedMenu) {\n        this._state.dropdownMenu.then(\n          (dropdownMenu: BsComponentRef<BsDropdownMenuDirective>) => {\n            this._dropdown.attachInline(\n              dropdownMenu.viewContainer,\n              dropdownMenu.templateRef\n            );\n            this._inlinedMenu = this._dropdown._inlineViewRef;\n            this.addBs4Polyfills();\n          }\n        )\n        // swallow errors\n          .catch();\n      }\n      this.addBs4Polyfills();\n      this._isInlineOpen = true;\n      this.onShown.emit(true);\n      this._state.isOpenChange.emit(true);\n\n      return;\n    }\n    this._state.dropdownMenu.then(dropdownMenu => {\n      // check direction in which dropdown should be opened\n      const _dropup =\n        this.dropup ||\n        (typeof this.dropup !== 'undefined' && this.dropup);\n      this._state.direction = _dropup ? 'up' : 'down';\n      const _placement =\n        this.placement || (_dropup ? 'top left' : 'bottom left');\n\n      // show dropdown\n      this._dropdown\n        .attach(BsDropdownContainerComponent)\n        .to(this.container)\n        .position({attachment: _placement})\n        .show({\n          content: dropdownMenu.templateRef,\n          placement: _placement\n        });\n\n      this._state.isOpenChange.emit(true);\n    })\n    // swallow error\n      .catch();\n  }\n\n  /**\n   * Closes an element’s popover. This is considered a “manual” triggering of\n   * the popover.\n   */\n  hide(): void {\n    if (!this.isOpen) {\n      return;\n    }\n\n    if (this._showInline) {\n      this.removeShowClass();\n      this._isInlineOpen = false;\n      this.onHidden.emit(true);\n    } else {\n      this._dropdown.hide();\n    }\n\n    this._state.isOpenChange.emit(false);\n  }\n\n  /**\n   * Toggles an element’s popover. This is considered a “manual” triggering of\n   * the popover.\n   */\n  toggle(value?: boolean): void {\n    if (this.isOpen || !value) {\n      return this.hide();\n    }\n\n    return this.show();\n  }\n\n  ngOnDestroy(): void {\n    // clean up subscriptions and destroy dropdown\n    for (const sub of this._subscriptions) {\n      sub.unsubscribe();\n    }\n    this._dropdown.dispose();\n  }\n\n  private addBs4Polyfills(): void {\n    if (!isBs3()) {\n      this.addShowClass();\n      this.checkRightAlignment();\n      this.checkDropup();\n    }\n  }\n\n  private addShowClass(): void {\n    if (this._inlinedMenu && this._inlinedMenu.rootNodes[0]) {\n      this._renderer.addClass(this._inlinedMenu.rootNodes[0], 'show');\n    }\n  }\n\n  private removeShowClass(): void {\n    if (this._inlinedMenu && this._inlinedMenu.rootNodes[0]) {\n      this._renderer.removeClass(this._inlinedMenu.rootNodes[0], 'show');\n    }\n  }\n\n  private checkRightAlignment(): void {\n    if (this._inlinedMenu && this._inlinedMenu.rootNodes[0]) {\n      const isRightAligned = this._inlinedMenu.rootNodes[0].classList.contains(\n        'dropdown-menu-right'\n      );\n      this._renderer.setStyle(\n        this._inlinedMenu.rootNodes[0],\n        'left',\n        isRightAligned ? 'auto' : '0'\n      );\n      this._renderer.setStyle(\n        this._inlinedMenu.rootNodes[0],\n        'right',\n        isRightAligned ? '0' : 'auto'\n      );\n    }\n  }\n\n  private checkDropup(): void {\n    if (this._inlinedMenu && this._inlinedMenu.rootNodes[0]) {\n      // a little hack to not break support of bootstrap 4 beta\n      this._renderer.setStyle(\n        this._inlinedMenu.rootNodes[0],\n        'top',\n        this.dropup ? 'auto' : '100%'\n      );\n      this._renderer.setStyle(\n        this._inlinedMenu.rootNodes[0],\n        'transform',\n        this.dropup ? 'translateY(-101%)' : 'translateY(0)'\n      );\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[bsDropdown],[dropdown]',\n  exportAs: 'bs-dropdown',\n  providers: [BsDropdownState],\n  host: {\n    '[class.dropup]': 'dropup',\n    '[class.open]': 'isOpen',\n    '[class.show]': 'isOpen && isBs4'\n  }\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer2, },\n{type: ViewContainerRef, },\n{type: ComponentLoaderFactory, },\n{type: BsDropdownConfig, },\n{type: BsDropdownState, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'placement': [{ type: Input },],\n'triggers': [{ type: Input },],\n'container': [{ type: Input },],\n'dropup': [{ type: Input },],\n'autoClose': [{ type: Input },],\n'isDisabled': [{ type: Input },],\n'isOpen': [{ type: Input },],\n'isOpenChange': [{ type: Output },],\n'onShown': [{ type: Output },],\n'onHidden': [{ type: Output },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { BsDropdownState } from './bs-dropdown.state';\n\n\nexport class BsDropdownMenuDirective {\n  constructor(\n    _state: BsDropdownState,\n    _viewContainer: ViewContainerRef,\n    _templateRef: TemplateRef<any>\n  ) {\n    _state.resolveDropdownMenu({\n      templateRef: _templateRef,\n      viewContainer: _viewContainer\n    });\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[bsDropdownMenu],[dropdownMenu]',\n  exportAs: 'bs-dropdown-menu'\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: BsDropdownState, },\n{type: ViewContainerRef, },\n{type: TemplateRef, },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {\n  Directive,\n  ElementRef,\n  HostBinding,\n  HostListener,\n  Input,\n  OnDestroy\n} from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\n\nimport { BsDropdownState } from './bs-dropdown.state';\n\n\nexport class BsDropdownToggleDirective implements OnDestroy {\n   isDisabled: boolean = null;\n\n  // @HostBinding('class.active')\n   isOpen: boolean;\n\n  private _subscriptions: Subscription[] = [];\n\n  constructor(private _state: BsDropdownState, private _element: ElementRef) {\n    // sync is open value with state\n    this._subscriptions.push(\n      this._state.isOpenChange.subscribe(\n        (value: boolean) => (this.isOpen = value)\n      )\n    );\n    // populate disabled state\n    this._subscriptions.push(\n      this._state.isDisabledChange.subscribe(\n        (value: boolean) => (this.isDisabled = value || null)\n      )\n    );\n  }\n\n  \n  onClick(): void {\n    if (this.isDisabled) {\n      return;\n    }\n    this._state.toggleClick.emit(true);\n  }\n\n  \n  onDocumentClick(event: any): void {\n    if (\n      this._state.autoClose &&\n      event.button !== 2 &&\n      !this._element.nativeElement.contains(event.target)\n    ) {\n      this._state.toggleClick.emit(false);\n    }\n  }\n\n  \n  onEsc(): void {\n    if (this._state.autoClose) {\n      this._state.toggleClick.emit(false);\n    }\n  }\n\n  ngOnDestroy(): void {\n    for (const sub of this._subscriptions) {\n      sub.unsubscribe();\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[bsDropdownToggle],[dropdownToggle]',\n  exportAs: 'bs-dropdown-toggle',\n  host: {\n    '[attr.aria-haspopup]': 'true'\n  }\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: BsDropdownState, },\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'isDisabled': [{ type: HostBinding, args: ['attr.disabled', ] },],\n'isOpen': [{ type: HostBinding, args: ['attr.aria-expanded', ] },],\n'onClick': [{ type: HostListener, args: ['click', [], ] },],\n'onDocumentClick': [{ type: HostListener, args: ['document:click', ['$event'], ] },],\n'onEsc': [{ type: HostListener, args: ['keyup.esc', ] },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { ComponentLoaderFactory } from '../component-loader/index';\n\nimport { PositioningService } from '../positioning/index';\nimport { BsDropdownContainerComponent } from './bs-dropdown-container.component';\nimport { BsDropdownMenuDirective } from './bs-dropdown-menu.directive';\nimport { BsDropdownToggleDirective } from './bs-dropdown-toggle.directive';\nimport { BsDropdownConfig } from './bs-dropdown.config';\n\nimport { BsDropdownDirective } from './bs-dropdown.directive';\nimport { BsDropdownState } from './bs-dropdown.state';\n\n\nexport class BsDropdownModule {\n  static forRoot(config?: any): ModuleWithProviders {\n    return {\n      ngModule: BsDropdownModule,\n      providers: [\n        ComponentLoaderFactory,\n        PositioningService,\n        BsDropdownState,\n        {\n          provide: BsDropdownConfig,\n          useValue: config ? config : { autoClose: true }\n        }\n      ]\n    };\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  declarations: [\n    BsDropdownMenuDirective,\n    BsDropdownToggleDirective,\n    BsDropdownContainerComponent,\n    BsDropdownDirective\n  ],\n  exports: [\n    BsDropdownMenuDirective,\n    BsDropdownToggleDirective,\n    BsDropdownDirective\n  ],\n  entryComponents: [BsDropdownContainerComponent]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nexport class FilterContainerComponent {\n\n     filters: Filter[] = [];\n     clearTooltip: string;\n     filtersChange: EventEmitter<Filter[]> = new EventEmitter<Filter[]>();\n     events: EventEmitter<FilterEvent> = new EventEmitter<FilterEvent>();\n/**\n * @param {?} filter\n * @return {?}\n */\naddFilter(filter: Filter): void {\n        this.filters.push(filter);\n        this.events.next(new FilterAddEvent(filter));\n        this.filtersChange.emit(this.filters);\n    }\n/**\n * @param {?} filter\n * @return {?}\n */\nremoveFilter(filter: Filter): void {\n        let /** @type {?} */ idx = this.filters.findIndex(filters => filters === filter);\n\n        if (idx !== -1) {\n            this.filters.splice(idx, 1);\n            this.events.next(new FilterRemoveEvent(filter));\n            this.filtersChange.emit(this.filters);\n        }\n    }\n/**\n * @return {?}\n */\nremoveAll(): void {\n        this.events.next(new FilterRemoveAllEvent());\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-filter-container',\n    template: `\n      <ng-content></ng-content>\n\n      <!-- Add a Clear Button -->\n      <div class=\"filter-selected-clear-button\" *ngIf=\"filters.length > 0\" [tooltip]=\"clearTooltip || 'Clear All'\" (click)=\"removeAll()\">\n    \n          <svg class=\"filter-selected-clear-graphic\" width=\"19\" height=\"12\" viewBox=\"0 0 19 12\" shape-rendering=\"geometricPrecision\">\n              <rect class=\"light-grey\" x=\"0\" y=\"2\" width=\"7\" height=\"2\"></rect>\n              <rect class=\"dark-grey\" x=\"0\" y=\"5\" width=\"9\" height=\"2\"></rect>\n              <rect class=\"light-grey\" x=\"0\" y=\"8\" width=\"7\" height=\"2\"></rect>\n              <path class=\"dark-grey\" d=\"M9,1 h1 l9,9 v1 h-1 l-9,-9 v-1 Z\"></path>\n              <path class=\"dark-grey\" d=\"M9,11 v-1 l9,-9 h1 v1 l-9,9 h-1 Z\"></path>\n          </svg>\n\n      </div>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'filters': [{ type: Input },],\n'clearTooltip': [{ type: Input },],\n'filtersChange': [{ type: Output },],\n'events': [{ type: Output },],\n};\n}\n\nfunction FilterContainerComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nFilterContainerComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFilterContainerComponent.ctorParameters;\n/** @type {?} */\nFilterContainerComponent.propDecorators;\n/** @type {?} */\nFilterContainerComponent.prototype.filters;\n/** @type {?} */\nFilterContainerComponent.prototype.clearTooltip;\n/** @type {?} */\nFilterContainerComponent.prototype.filtersChange;\n/** @type {?} */\nFilterContainerComponent.prototype.events;\n}\n\n\nexport interface Filter {\n    group: string;\n    title: string;\n    name: string;\n    initial?: boolean;\n}\nexport class FilterAddEvent {\n/**\n * @param {?} filter\n */\nconstructor(public filter: Filter) {}\n}\n\nfunction FilterAddEvent_tsickle_Closure_declarations() {\n/** @type {?} */\nFilterAddEvent.prototype.filter;\n}\n\nexport class FilterRemoveEvent {\n/**\n * @param {?} filter\n */\nconstructor(public filter: Filter) {}\n}\n\nfunction FilterRemoveEvent_tsickle_Closure_declarations() {\n/** @type {?} */\nFilterRemoveEvent.prototype.filter;\n}\n\nexport class FilterRemoveAllEvent {\n}\n\nexport type FilterEvent = FilterAddEvent | FilterRemoveEvent | FilterRemoveAllEvent;\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, Host, Input, Output } from '@angular/core';\nimport { FilterContainerComponent, Filter, FilterRemoveAllEvent } from '../filter-container.component';\nexport class FilterBaseComponent {\n\n     filters: Filter[];\n/**\n * @param {?} filtersContainer\n */\nconstructor(\nprivate filtersContainer: FilterContainerComponent) {\n\n        filtersContainer.events.filter(event => event instanceof FilterRemoveAllEvent).subscribe(this.removeFilter.bind(this));\n    }\n/**\n * @param {?} filter\n * @return {?}\n */\naddFilter(filter: Filter): void {\n        if (!filter.initial) {\n            this.filtersContainer.addFilter(filter);\n        }\n    }\n/**\n * @param {?} filter\n * @return {?}\n */\nremoveFilter(filter: Filter): void {\n        if (!filter) {\n            return;\n        }\n\n        this.filtersContainer.removeFilter(filter);\n    }\n    \nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'ux-filter-base'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: FilterContainerComponent, decorators: [{ type: Host }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'filters': [{ type: Input },],\n};\n}\n\nfunction FilterBaseComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nFilterBaseComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFilterBaseComponent.ctorParameters;\n/** @type {?} */\nFilterBaseComponent.propDecorators;\n/** @type {?} */\nFilterBaseComponent.prototype.filters;\n/** @type {?} */\nFilterBaseComponent.prototype.filtersContainer;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { BsDropdownDirective } from 'ngx-bootstrap/dropdown';\nimport { Component, Input, ViewChild } from '@angular/core';\nimport { FilterBaseComponent } from '../filter-base/filter-base.component';\nimport { Filter, FilterContainerComponent, FilterRemoveAllEvent } from '../filter-container.component';\nimport { TypeaheadMatch } from 'ngx-bootstrap/typeahead';\nexport class FilterDynamicComponent extends FilterBaseComponent {\n\n     filters: Filter[];\n     initial: Filter;\n     options: FilterDynamicListConfig;\n\n     dropdown: BsDropdownDirective;\n\n    defaultOptions: FilterDynamicListConfig = {\n        placeholder: '',\n        minCharacters: 3\n    };\n    searchQuery: string;\n    selected: Filter;\n    showTypeahead: boolean = true;\n    typeaheadItems: string[] = [];\n/**\n * @return {?}\n */\ngetItems(): string[] {\n        return this.filters.filter(item => item !== this.initial).map(item => item.name);\n    }\n/**\n * @return {?}\n */\nngOnInit() {\n        this.selected = this.initial;\n        this.typeaheadItems = this.getItems();\n\n        if (this.options && this.options.maxIndividualItems && this.options.maxIndividualItems + 1 >= this.filters.length ) {\n            this.showTypeahead = false;\n        }\n    }\n/**\n * @param {?} typeaheadOption\n * @return {?}\n */\nselectOption(typeaheadOption: TypeaheadMatch) { \n        this.removeFilter();\n        let /** @type {?} */ idx = this.filters.findIndex(filter => filter.name === typeaheadOption.value);\n        this.selected = this.filters[idx];\n        this.addFilter(this.selected);\n        this.searchQuery = '';\n        this.dropdown.hide();\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nclickOff(event: MouseEvent) {\n\n        let /** @type {?} */ target = /** @type {?} */(( event.target as HTMLElement));\n        let /** @type {?} */ hideDropdown = true;\n\n        while (target && target.nodeName !== 'BODY') {\n            if (target.classList.contains('ux-dynamic-filter')) {\n                hideDropdown = false;\n                break;\n            } else {\n                target = target.parentElement;\n            }\n        }\n\n        if (hideDropdown) {\n            this.searchQuery = '';\n            this.dropdown.hide();\n        }\n        \n    }\n/**\n * @return {?}\n */\nremoveFilter(): void { \n        if (this.selected !== this.initial) {\n            super.removeFilter(this.selected);\n            this.selected = this.initial;\n        }\n        this.searchQuery = '';\n    }\n/**\n * @param {?} filter\n * @return {?}\n */\nselectFilter(filter: Filter) {\n        this.removeFilter();\n        this.selected = filter;\n        this.addFilter(this.selected);\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-filter-dynamic',\n    template: `\n      <div class=\"btn-group ux-dynamic-filter\" dropdown #dynamicDropdown=\"bs-dropdown\">\n          <button (click)=\"dynamicDropdown.show()\" type=\"button\" [class.active]=\"selected !== initial\" class=\"filter-dropdown btn dropdown-toggle\">{{ selected?.title }} \n              <span class=\"hpe-icon hpe-down\"></span>\n          </button>\n          <ul *dropdownMenu class=\"dropdown-menu\" role=\"menu\">\n\n              <li class=\"dropdown-list-item\" *ngIf=\"showTypeahead\" role=\"menuitem\">\n                  <a class=\"dropdown-item\" (click)=\"removeFilter(); dynamicDropdown.hide();\">\n                      <i class=\"hpe-icon\" [class.hpe-checkmark]=\"initial === selected\"></i>\n                      <span class=\"filter-dropdown-title\">{{ initial.name }}</span>\n                  </a>\n              </li>\n\n              <li class=\"dropdown-list-item\" *ngIf=\"selected !== initial && showTypeahead\" role=\"menuitem\">\n                  <a class=\"dropdown-item\">\n                      <i class=\"hpe-icon hpe-checkmark\"></i>\n                      <span class=\"filter-dropdown-title\">{{ selected.name }}</span>\n                  </a>\n              </li>\n\n              <hr>\n\n              <li *ngIf=\"showTypeahead\" class=\"typeahead-box\">\n                  <input [(ngModel)]=\"searchQuery\" [typeahead]=\"typeaheadItems\" class=\"form-control\" \n                  (typeaheadOnSelect)=\"selectOption($event)\" \n                  [placeholder]=\"options?.placeholder || defaultOptions.placeholder\"\n                  [typeaheadMinLength]=\"options?.minCharacters || defaultOptions.minCharacters\"\n                  [typeaheadOptionsLimit]=\"options?.maxResults\">\n              </li>\n\n              <span *ngIf=\"!showTypeahead\">\n                  <li class=\"dropdown-list-item\" *ngFor=\"let filter of filters\" role=\"menuitem\">\n                      <a class=\"dropdown-item\" (click)=\"selectFilter(filter)\">\n                          <i class=\"hpe-icon\" [class.hpe-checkmark]=\"filter === selected\"></i>\n                          <span class=\"filter-dropdown-title\">{{ filter.name }}</span>\n                      </a>\n                  </li>\n              </span>\n\n          </ul>\n      </div>\n    `,\n    host: {\n        '(document:click)': 'clickOff($event)',\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'filters': [{ type: Input },],\n'initial': [{ type: Input },],\n'options': [{ type: Input },],\n'dropdown': [{ type: ViewChild, args: [BsDropdownDirective, ] },],\n};\n}\n\nfunction FilterDynamicComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nFilterDynamicComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFilterDynamicComponent.ctorParameters;\n/** @type {?} */\nFilterDynamicComponent.propDecorators;\n/** @type {?} */\nFilterDynamicComponent.prototype.filters;\n/** @type {?} */\nFilterDynamicComponent.prototype.initial;\n/** @type {?} */\nFilterDynamicComponent.prototype.options;\n/** @type {?} */\nFilterDynamicComponent.prototype.dropdown;\n/** @type {?} */\nFilterDynamicComponent.prototype.defaultOptions;\n/** @type {?} */\nFilterDynamicComponent.prototype.searchQuery;\n/** @type {?} */\nFilterDynamicComponent.prototype.selected;\n/** @type {?} */\nFilterDynamicComponent.prototype.showTypeahead;\n/** @type {?} */\nFilterDynamicComponent.prototype.typeaheadItems;\n}\n\n\nexport interface FilterDynamicListConfig {\n    placeholder?: string;\n    minCharacters?: number;\n    maxResults?: number;\n    maxIndividualItems?: number;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input } from '@angular/core';\nimport { FilterBaseComponent } from '../filter-base/filter-base.component';\nimport { Filter, FilterContainerComponent, FilterRemoveAllEvent } from '../filter-container.component';\nexport class FilterDropdownComponent extends FilterBaseComponent {\n\n     initial: Filter;\n\n    selected: Filter;\n/**\n * @return {?}\n */\nremoveFilter(): void {\n        super.removeFilter(this.selected);\n        this.selected = this.initial;\n    }\n/**\n * @return {?}\n */\nngOnInit() {\n        this.selected = this.initial;\n    }\n/**\n * @param {?} filter\n * @return {?}\n */\nselectFilter(filter: Filter) {\n        this.removeFilter();\n        this.selected = filter;\n        this.addFilter(this.selected);\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-filter-dropdown',\n    template: `\n      <div class=\"btn-group\" dropdown>\n          <button dropdownToggle type=\"button\" class=\"filter-dropdown btn dropdown-toggle\" [class.active]=\"selected !== initial\">{{ selected?.title }} \n              <span class=\"hpe-icon hpe-down\"></span>\n          </button>\n          <ul *dropdownMenu class=\"dropdown-menu\" role=\"menu\">\n              <li class=\"dropdown-list-item\" *ngFor=\"let filter of filters\" role=\"menuitem\">\n                  <a class=\"dropdown-item\" (click)=\"selectFilter(filter)\">\n                      <i class=\"hpe-icon\" [class.hpe-checkmark]=\"filter === selected\"></i>\n                      <span class=\"filter-dropdown-title\">{{ filter.name }}</span>\n                  </a>\n              </li>\n          </ul>\n      </div>\n    `,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'initial': [{ type: Input },],\n};\n}\n\nfunction FilterDropdownComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nFilterDropdownComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFilterDropdownComponent.ctorParameters;\n/** @type {?} */\nFilterDropdownComponent.propDecorators;\n/** @type {?} */\nFilterDropdownComponent.prototype.initial;\n/** @type {?} */\nFilterDropdownComponent.prototype.selected;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { FilterDynamicComponent } from './filter-dynamic/filter-dynamic.component';\nimport { FilterDropdownComponent } from './filter-dropdown/filter-dropdown.component';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { FilterContainerComponent } from './filter-container.component';\nimport { FilterBaseComponent } from './filter-base/filter-base.component';\nimport { TypeaheadModule } from 'ngx-bootstrap/typeahead';\nimport { FormsModule } from '@angular/forms';\n\nconst /** @type {?} */ DECLARATIONS = [\n    FilterBaseComponent,\n    FilterContainerComponent,\n    FilterDropdownComponent,\n    FilterDynamicComponent\n];\nexport class FilterModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        BsDropdownModule.forRoot(),\n        TypeaheadModule.forRoot(),\n        TooltipModule.forRoot(),\n        FormsModule,\n        CommonModule\n    ],\n    exports: DECLARATIONS,\n    declarations: DECLARATIONS\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction FilterModule_tsickle_Closure_declarations() {\n/** @type {?} */\nFilterModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFilterModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, Directive, HostListener, Output, EventEmitter } from '@angular/core';\nexport class FlippableCardComponent {\n\n     direction: 'horizontal' | 'vertical' = 'horizontal';\n     trigger: 'click' | 'hover' | 'manual' = 'hover';\n     width: number = 280;\n     height: number = 200;\n     flipped: boolean = false;\n     flippedChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n/**\n * @param {?} state\n * @return {?}\n */\nsetFlipped(state: boolean) {\n        this.flipped = state;\n        this.flippedChange.emit(this.flipped);\n    }\n/**\n * @return {?}\n */\ntoggleFlipped() {\n        this.setFlipped(!this.flipped);\n    }\n/**\n * @return {?}\n */\nclickTrigger() {\n\n        // add or remove the class depending on whether or not the card has been flipped\n        if (this.trigger === 'click') {\n            this.toggleFlipped();\n        }\n    }\n/**\n * @return {?}\n */\nhoverEnter() {\n        // if the trigger is hover then begin to flip\n        if (this.trigger === 'hover') {\n            this.setFlipped(true);\n        }\n    }\n/**\n * @return {?}\n */\nhoverExit() {\n        if (this.trigger === 'hover') {\n            this.setFlipped(false);\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-flippable-card',\n    template: `\n      <div class=\"ux-flipper\" [class.ux-flip-card]=\"flipped\" [style.width.px]=\"width\" [style.height.px]=\"height\">\n\n          <div class=\"ux-flippable-card-front\" [style.width.px]=\"width\" [style.height.px]=\"height\">\n              <ng-content select=\"ux-flippable-card-front\"></ng-content>\n          </div>\n\n          <div class=\"ux-flippable-card-back\" [style.width.px]=\"width\" [style.height.px]=\"height\">\n              <ng-content select=\"ux-flippable-card-back\"></ng-content>\n          </div>\n      </div>\n    `,\n    host: {\n        '[class.horizontal]': 'direction === \"horizontal\"',\n        '[class.vertical]': 'direction === \"vertical\"'\n    },\n    exportAs: 'ux-flippable-card'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'direction': [{ type: Input },],\n'trigger': [{ type: Input },],\n'width': [{ type: Input },],\n'height': [{ type: Input },],\n'flipped': [{ type: Input },],\n'flippedChange': [{ type: Output },],\n'clickTrigger': [{ type: HostListener, args: ['click', ] },],\n'hoverEnter': [{ type: HostListener, args: ['mouseenter', ] },],\n'hoverExit': [{ type: HostListener, args: ['mouseleave', ] },],\n};\n}\n\nfunction FlippableCardComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nFlippableCardComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFlippableCardComponent.ctorParameters;\n/** @type {?} */\nFlippableCardComponent.propDecorators;\n/** @type {?} */\nFlippableCardComponent.prototype.direction;\n/** @type {?} */\nFlippableCardComponent.prototype.trigger;\n/** @type {?} */\nFlippableCardComponent.prototype.width;\n/** @type {?} */\nFlippableCardComponent.prototype.height;\n/** @type {?} */\nFlippableCardComponent.prototype.flipped;\n/** @type {?} */\nFlippableCardComponent.prototype.flippedChange;\n}\n\nexport class FlippableCardFrontDirective { static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'ux-flippable-card-front'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction FlippableCardFrontDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nFlippableCardFrontDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFlippableCardFrontDirective.ctorParameters;\n}\n\nexport class FlippableCardBackDirective { static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'ux-flippable-card-back'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction FlippableCardBackDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nFlippableCardBackDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFlippableCardBackDirective.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\n\nimport { FlippableCardComponent, FlippableCardBackDirective, FlippableCardFrontDirective } from './flippable-card.component';\nexport class FlippableCardModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    exports: [FlippableCardComponent, FlippableCardBackDirective, FlippableCardFrontDirective],\n    declarations: [FlippableCardComponent, FlippableCardBackDirective, FlippableCardFrontDirective]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction FlippableCardModule_tsickle_Closure_declarations() {\n/** @type {?} */\nFlippableCardModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFlippableCardModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nexport class FloatingActionButtonsService {\n\n    open$ = new BehaviorSubject<boolean>(false);\n/**\n * @return {?}\n */\nopen(): void {\n        this.open$.next(true);\n    }\n/**\n * @return {?}\n */\ntoggle(): void {\n        this.open$.next(!this.open$.getValue());\n    }\n/**\n * @return {?}\n */\nclose(): void {\n        this.open$.next(false);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction FloatingActionButtonsService_tsickle_Closure_declarations() {\n/** @type {?} */\nFloatingActionButtonsService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFloatingActionButtonsService.ctorParameters;\n/** @type {?} */\nFloatingActionButtonsService.prototype.open$;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, ChangeDetectionStrategy, HostListener, ElementRef, ContentChildren, QueryList, OnDestroy, AfterViewInit } from '@angular/core';\nimport { trigger, state, style, transition, animate, query, stagger } from '@angular/animations';\nimport { TooltipDirective } from 'ngx-bootstrap/tooltip';\nimport { Subscription } from 'rxjs/Subscription';\nimport { filter } from 'rxjs/operators/filter';\n\nimport { FloatingActionButtonComponent } from './floating-action-button.component';\nimport { FloatingActionButtonsService } from './floating-action-buttons.service';\nexport class FloatingActionButtonsComponent implements AfterViewInit, OnDestroy {\n\n     direction: FloatingActionButtonDirection = 'top';\n     tooltips: QueryList<TooltipDirective>;\nprivate _subscription: Subscription;\n/**\n * @param {?} fab\n * @param {?} _elementRef\n */\nconstructor(public fab: FloatingActionButtonsService,\nprivate _elementRef: ElementRef) { }\n/**\n * @return {?}\n */\nngAfterViewInit(): void {\n        this._subscription = this.fab.open$.pipe(filter(open => open === false))\n            .subscribe(() => this.tooltips.forEach(tooltip => tooltip.hide()));\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        this._subscription.unsubscribe();\n    }\n/**\n * @param {?} target\n * @return {?}\n */\nclose(target: HTMLElement): void {\n        if (!this._elementRef.nativeElement.contains(target)) {\n            this.fab.close();\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-floating-action-buttons',\n    template: `\n      <ng-content select=\"[fab-primary]\"></ng-content>\n\n      <div class=\"floating-action-button-list\" [@fabAnimation]=\"fab.open$ | async\" [ngClass]=\"direction\" *ngIf=\"fab.open$ | async\">\n          <ng-content></ng-content>\n      </div>\n    `,\n    providers: [FloatingActionButtonsService],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    preserveWhitespaces: false,\n    animations: [\n        trigger('fabAnimation', [\n            transition('void => true', [\n                query('ux-floating-action-button', style({ opacity: 0 })),\n                query('ux-floating-action-button', stagger(50, animate(250, style({ opacity: 1 }))))\n            ]),\n            transition('true => void', [\n                query('ux-floating-action-button', stagger(-50, animate(250, style({ opacity: 0 }))))\n            ])\n        ])\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: FloatingActionButtonsService, },\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'direction': [{ type: Input },],\n'tooltips': [{ type: ContentChildren, args: [TooltipDirective, ] },],\n'close': [{ type: HostListener, args: ['document:click', ['$event.target'], ] },],\n};\n}\n\nfunction FloatingActionButtonsComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nFloatingActionButtonsComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFloatingActionButtonsComponent.ctorParameters;\n/** @type {?} */\nFloatingActionButtonsComponent.propDecorators;\n/** @type {?} */\nFloatingActionButtonsComponent.prototype.direction;\n/** @type {?} */\nFloatingActionButtonsComponent.prototype.tooltips;\n/** @type {?} */\nFloatingActionButtonsComponent.prototype._subscription;\n/** @type {?} */\nFloatingActionButtonsComponent.prototype.fab;\n/** @type {?} */\nFloatingActionButtonsComponent.prototype._elementRef;\n}\n\n\nexport type FloatingActionButtonDirection = 'top' | 'right' | 'bottom' | 'left';\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, ChangeDetectionStrategy, HostBinding, HostListener, Attribute } from '@angular/core';\nimport { FloatingActionButtonsService } from './floating-action-buttons.service';\nexport class FloatingActionButtonComponent {\n\n     icon: string;    \n     tabindex = 1;\n    \n    primary: boolean = false;\n/**\n * @param {?} primary\n * @param {?} fab\n */\nconstructor( primary: string,\npublic fab: FloatingActionButtonsService) {\n        this.primary = primary !== null;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-floating-action-button',\n    template: `\n      <button class=\"btn floating-action-button\" \n              [class.button-primary]=\"primary\" \n              [class.button-secondary]=\"!primary\" \n              (click)=\"primary ? fab.open() : fab.close()\">\n\n          <span class=\"hpe-icon floating-action-button-icon\" *ngIf=\"icon\" [ngClass]=\"icon\"></span>\n          <ng-content *ngIf=\"!icon\"></ng-content>\n\n      </button>\n    `,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    preserveWhitespaces: false\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Attribute, args: ['fab-primary', ] }, ]},\n{type: FloatingActionButtonsService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'icon': [{ type: Input },],\n'tabindex': [{ type: HostBinding },],\n};\n}\n\nfunction FloatingActionButtonComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nFloatingActionButtonComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFloatingActionButtonComponent.ctorParameters;\n/** @type {?} */\nFloatingActionButtonComponent.propDecorators;\n/** @type {?} */\nFloatingActionButtonComponent.prototype.icon;\n/** @type {?} */\nFloatingActionButtonComponent.prototype.tabindex;\n/** @type {?} */\nFloatingActionButtonComponent.prototype.primary;\n/** @type {?} */\nFloatingActionButtonComponent.prototype.fab;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FloatingActionButtonsComponent } from './floating-action-buttons.component';\nimport { FloatingActionButtonComponent } from './floating-action-button.component';\nexport class FloatingActionButtonsModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule\n    ],\n    exports: [\n        FloatingActionButtonsComponent,\n        FloatingActionButtonComponent\n    ],\n    declarations: [\n        FloatingActionButtonsComponent,\n        FloatingActionButtonComponent\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction FloatingActionButtonsModule_tsickle_Closure_declarations() {\n/** @type {?} */\nFloatingActionButtonsModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFloatingActionButtonsModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Directive, Input, SimpleChange, Output, EventEmitter, ContentChild } from '@angular/core';\nexport class ItemDisplayPanelContentDirective { static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxItemDisplayPanelContent]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ItemDisplayPanelContentDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nItemDisplayPanelContentDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nItemDisplayPanelContentDirective.ctorParameters;\n}\n\nexport class ItemDisplayPanelFooterDirective { static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxItemDisplayPanelFooter]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ItemDisplayPanelFooterDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nItemDisplayPanelFooterDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nItemDisplayPanelFooterDirective.ctorParameters;\n}\n\nexport class ItemDisplayPanelComponent {\n\n     header: string;\n     top: number;\n     boxShadow: boolean = true;\n     closeVisible: boolean = true;\n     preventClose: boolean = false;\n     inline: boolean = false;\n     animate: boolean = false;\n     shadow: boolean = false;\n     width: number;\n\n     footer: ItemDisplayPanelFooterDirective;\n\n     visibleChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n/**\n * @deprecated \n * Title used for adding tooltips and shouldn't be used as an input\n * instead header will be used. This is here to support backward compatibility only\n * this property should not be used.\n * @param {?} value\n * @return {?}\n */\nset title(value: string) {\n        this.header = value;\n    }\n/**\n * @return {?}\n */\nget title() {\n        return this.header;\n    }\n/**\n * @param {?} visible\n * @return {?}\n */\nset visible(visible: boolean) {\n\n        this._visible = visible;\n\n        // invoke change event\n        this.visibleChange.emit(this._visible);\n\n    }\n/**\n * @return {?}\n */\nget visible() {\n        return this._visible;\n    }\nprivate _visible: boolean = false;\n/**\n * @param {?} event\n * @return {?}\n */\nclickOff(event: MouseEvent) {\n\n        // dont close\n        if (this.preventClose) {\n            return;\n        }\n\n        // dont do anything if the panel is hidden\n        if (this._visible) {\n\n            let /** @type {?} */ target = /** @type {?} */(( event.target as HTMLElement));\n\n            // if the target node is the HTML tag, then this was triggered by scrolling and we should not close the panel\n            if (target.nodeName === 'HTML') {\n                return;\n            }\n\n            let /** @type {?} */ hidePanel = true;\n\n            while (target && target.nodeName !== 'BODY') {\n                if (target.classList.contains('ux-item-display-panel')) {\n                    hidePanel = false;\n                    break;\n                } else {\n                    target = target.parentElement;\n                }\n            }\n\n            if (hidePanel) {\n                this._visible = false;\n                this.visibleChange.emit(this._visible);\n            }\n        }\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-item-display-panel',\n    template: `\n      <div class=\"ux-item-display-panel\" [class.box-shadow]=\"boxShadow\" [class.inline]=\"inline\" [class.animate]=\"animate\" [class.item-display-panel-hide]=\"!visible\" [style.width]=\"width\" [style.top.px]=\"top\" [style.height]='\"calc(100% - \" + top + \"px)\"'>\n\n          <div class=\"item-display-panel-header\" [class.item-display-panel-shadow]=\"shadow\">\n              <div class=\"heading-flex-box\">\n                  <h3>{{ header }}</h3>\n                  <span *ngIf=\"closeVisible\" class=\"heading-close-button\" tabindex=\"0\" (click)=\"visible = false\" (keydown.enter)=\"visible = false\">\n                      <i class=\"hpe-icon hpe-close\"></i>\n                  </span>\n              </div>\n          </div>\n\n          <div class=\"item-display-panel-content\">\n              <ng-content select=\"[uxItemDisplayPanelContent]\"></ng-content>\n          </div>\n\n          <div class=\"item-display-panel-footer\" *ngIf=\"footer\">\n              <ng-content select=\"[uxItemDisplayPanelFooter]\"></ng-content>\n          </div>\n\n      </div>\n    `,\n    host: {\n        '(document:click)': 'clickOff($event)',\n        '(document:keyup.escape)': 'visible = false',\n        '[class.inline-host]': 'inline',\n        '[class.visible-host]': 'visible'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'header': [{ type: Input },],\n'top': [{ type: Input },],\n'boxShadow': [{ type: Input },],\n'closeVisible': [{ type: Input },],\n'preventClose': [{ type: Input },],\n'inline': [{ type: Input },],\n'animate': [{ type: Input },],\n'shadow': [{ type: Input },],\n'width': [{ type: Input },],\n'footer': [{ type: ContentChild, args: [ItemDisplayPanelFooterDirective, ] },],\n'visibleChange': [{ type: Output },],\n'title': [{ type: Input },],\n'visible': [{ type: Input },],\n};\n}\n\nfunction ItemDisplayPanelComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nItemDisplayPanelComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nItemDisplayPanelComponent.ctorParameters;\n/** @type {?} */\nItemDisplayPanelComponent.propDecorators;\n/** @type {?} */\nItemDisplayPanelComponent.prototype.header;\n/** @type {?} */\nItemDisplayPanelComponent.prototype.top;\n/** @type {?} */\nItemDisplayPanelComponent.prototype.boxShadow;\n/** @type {?} */\nItemDisplayPanelComponent.prototype.closeVisible;\n/** @type {?} */\nItemDisplayPanelComponent.prototype.preventClose;\n/** @type {?} */\nItemDisplayPanelComponent.prototype.inline;\n/** @type {?} */\nItemDisplayPanelComponent.prototype.animate;\n/** @type {?} */\nItemDisplayPanelComponent.prototype.shadow;\n/** @type {?} */\nItemDisplayPanelComponent.prototype.width;\n/** @type {?} */\nItemDisplayPanelComponent.prototype.footer;\n/** @type {?} */\nItemDisplayPanelComponent.prototype.visibleChange;\n/** @type {?} */\nItemDisplayPanelComponent.prototype._visible;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { CommonModule } from '@angular/common';\nimport { ItemDisplayPanelComponent, ItemDisplayPanelContentDirective, ItemDisplayPanelFooterDirective } from './item-display-panel.component';\nimport { NgModule, Input } from '@angular/core';\nimport { ModalModule } from 'ngx-bootstrap/modal';\n\nconst /** @type {?} */ DECLARATIONS = [\n    ItemDisplayPanelComponent,\n    ItemDisplayPanelContentDirective,\n    ItemDisplayPanelFooterDirective\n];\nexport class ItemDisplayPanelModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule\n    ],\n    exports: DECLARATIONS,\n    declarations: DECLARATIONS\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ItemDisplayPanelModule_tsickle_Closure_declarations() {\n/** @type {?} */\nItemDisplayPanelModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nItemDisplayPanelModule.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, EventEmitter } from '@angular/core';\nexport class WizardStepComponent {\n    \n     header: string;\n     valid: boolean = true;\n     visitedChange = new EventEmitter<boolean>();\nprivate _active: boolean = false;\nprivate _visited: boolean = false;\n/**\n * @return {?}\n */\nget visited(): boolean {\n        return this._visited;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset visited(value: boolean) {\n        this._visited = value;\n        this.visitedChange.next(value);\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset active(value: boolean) {\n        \n        // store the active state of the step\n        this._active = value;\n\n        // if the value is true then the step should also be marked as visited\n        if (value === true) {\n            this.visited = true;\n        }\n    }\n/**\n * @return {?}\n */\nget active(): boolean {\n        return this._active;\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-wizard-step',\n    template: `\n      <ng-container *ngIf=\"active\">\n          <ng-content></ng-content>\n      </ng-container>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'header': [{ type: Input },],\n'valid': [{ type: Input },],\n'visitedChange': [{ type: Input },],\n'visited': [{ type: Input },],\n};\n}\n\nfunction WizardStepComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nWizardStepComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nWizardStepComponent.ctorParameters;\n/** @type {?} */\nWizardStepComponent.propDecorators;\n/** @type {?} */\nWizardStepComponent.prototype.header;\n/** @type {?} */\nWizardStepComponent.prototype.valid;\n/** @type {?} */\nWizardStepComponent.prototype.visitedChange;\n/** @type {?} */\nWizardStepComponent.prototype._active;\n/** @type {?} */\nWizardStepComponent.prototype._visited;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { AfterViewInit, Component, ContentChildren, EventEmitter, Input, Output, QueryList } from '@angular/core';\nimport { WizardStepComponent } from './wizard-step.component';\nexport class WizardComponent implements AfterViewInit {\nprivate _step: number = 0;\n\n     steps = new QueryList<WizardStepComponent>();\n\n     orientation: 'horizontal' | 'vertical' = 'horizontal';\n\n     nextText: string = 'Next';\n     previousText: string = 'Previous';\n     cancelText: string = 'Cancel';\n     finishText: string = 'Finish';\n\n     nextTooltip: string = 'Go to the next step';\n     previousTooltip: string = 'Go to the previous step';\n     cancelTooltip: string = 'Cancel the wizard';\n     finishTooltip: string = 'Finish the wizard';\n\n     nextDisabled: boolean = false;\n     previousDisabled: boolean = false;\n     cancelDisabled: boolean = false;\n     finishDisabled: boolean = false;\n\n     nextVisible: boolean = true;\n     previousVisible: boolean = true;\n     cancelVisible: boolean = true;\n     finishVisible: boolean = true;\n     cancelAlwaysVisible: boolean = false;\n     finishAlwaysVisible: boolean = false;\n\n     onNext = new EventEmitter<number>();\n     onPrevious = new EventEmitter<number>();\n     onCancel = new EventEmitter<void>();\n     onFinishing = new EventEmitter<void>();\n     onFinish = new EventEmitter<void>();\n     stepChanging = new EventEmitter<StepChangingEvent>();\n     stepChange = new EventEmitter<number>();\n\n    invalidIndicator: boolean = false;\n/**\n * @return {?}\n */\nget step() {\n        return this._step;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset step(value: number) {\n\n        // only accept numbers as valid options\n        if (typeof value === 'number') {\n\n            // store the active step\n            this._step = value;\n\n            // update which steps should be active\n            this.update();\n\n            // emit the change event\n            this.stepChange.next(this.step);\n\n            // reset the invalid state\n            this.invalidIndicator = false;\n        }\n    }\n/**\n * @return {?}\n */\nngAfterViewInit(): void {\n\n        // initially set the correct visibility of the steps\n        setTimeout(this.update.bind(this));\n    }\n/**\n * Navigate to the next step\n * @return {?}\n */\nnext(): void {\n\n        this.stepChanging.next(new StepChangingEvent(this.step, this.step + 1));\n\n        // check if current step is invalid\n        if (!this.getCurrentStep().valid) {\n            this.invalidIndicator = true;\n            return;\n        }\n\n        // check if we are currently on the last step\n        if ((this.step + 1) < this.steps.length) {\n            this.step++;\n\n            // emit the current step\n            this.onNext.next(this.step);\n        }\n    }\n/**\n * Navigate to the previous step\n * @return {?}\n */\nprevious(): void {\n\n        this.stepChanging.next(new StepChangingEvent(this.step, this.step - 1));\n\n        // check if we are currently on the last step\n        if (this.step > 0) {\n            this.step--;\n\n            // emit the current step\n            this.onPrevious.next(this.step);\n        }\n    }\n/**\n * Perform actions when the finish button is clicked\n * @return {?}\n */\nfinish(): Promise<void> {\n\n        // fires when the finish button is clicked always\n        this.onFinishing.next();\n\n        /**\n         * This is required because we need to ensure change detection has run\n         * to determine whether or not we have the latest value for the 'valid' input\n         * on the current step. Unfortunately we can't use ChangeDetectorRef as we are looking to run\n         * on content children, and we cant use ApplicationRef.tick() as this does not work in a hybrid app, eg. our docs\n         */\n        return new Promise<void>(resolve => {\n            setTimeout(() => {\n\n                // only fires when the finish button is clicked and the step is valid\n                if (this.getCurrentStep().valid) {\n                    this.onFinish.next();        \n                }\n\n                resolve();\n            });\n        });\n    }\n/**\n * Perform actions when the cancel button is clicked\n * @return {?}\n */\ncancel(): void {\n        this.onCancel.next();\n    }\n/**\n * Update the active state of each step\n * @return {?}\n */\nupdate(): void {\n        // update which steps should be active\n        this.steps.forEach((step, idx) => step.active = idx === this.step);\n    }\n/**\n * Jump to a specific step only if the step has previously been visited\n * @param {?} step\n * @return {?}\n */\ngotoStep(step: WizardStepComponent): void {\n        if (step.visited) {\n\n            const /** @type {?} */ stepIndex = this.steps.toArray().findIndex(stp => stp === step);\n\n            this.stepChanging.next(new StepChangingEvent(this.step, stepIndex));\n\n            this.step = stepIndex;\n        }\n    }\n/**\n * Determine if the current step is the last step\n * @return {?}\n */\nisLastStep(): boolean {\n        return this.step === (this.steps.length - 1);\n    }\n/**\n * Reset the wizard - goes to first step and resets visited state\n * @return {?}\n */\nreset(): void {\n\n        // mark all steps as not visited\n        this.steps.forEach(step => step.visited = false);\n\n        // go to the first step\n        this.step = 0;\n    }\n/**\n * Get the step at the current index\n * @return {?}\n */\ngetCurrentStep(): WizardStepComponent {\n        return this.getStepAtIndex(this.step);\n    }\n/**\n * Return a step at a specific index\n * @param {?} index\n * @return {?}\n */\ngetStepAtIndex(index: number): WizardStepComponent {\n        return this.steps.toArray()[index];\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-wizard',\n    template: `\n      <div class=\"wizard-body\">\n\n          <div class=\"wizard-steps\">\n    \n              <div class=\"wizard-step\" [class.active]=\"stp.active\" [class.visited]=\"stp.visited\" [class.invalid]=\"stp.active && !stp.valid && invalidIndicator\" (click)=\"gotoStep(stp)\" *ngFor=\"let stp of steps\">\n                  {{ stp.header }}\n              </div>\n    \n          </div>\n    \n          <div class=\"wizard-content\">\n              <ng-content></ng-content>\n          </div>\n    \n      </div>\n\n      <div class=\"wizard-footer\">\n          <button #tip=\"bs-tooltip\" class=\"btn button-secondary\" *ngIf=\"previousVisible\" [tooltip]=\"previousTooltip\" container=\"body\" [disabled]=\"previousDisabled || step === 0\"\n              (click)=\"previous(); tip.hide()\">{{ previousText }}</button>\n\n          <button #tip=\"bs-tooltip\" class=\"btn button-primary\" *ngIf=\"nextVisible && !isLastStep()\" [tooltip]=\"nextTooltip\" container=\"body\" [disabled]=\"nextDisabled\"\n              (click)=\"next(); tip.hide()\">{{ nextText }}</button>\n\n          <button #tip=\"bs-tooltip\" class=\"btn button-primary\" *ngIf=\"finishVisible && isLastStep() || finishAlwaysVisible\" [tooltip]=\"finishTooltip\"\n              container=\"body\" [disabled]=\"finishDisabled\" (click)=\"finish(); tip.hide()\">{{ finishText }}</button>\n\n          <button #tip=\"bs-tooltip\" class=\"btn button-secondary\" *ngIf=\"cancelVisible && !isLastStep() || cancelAlwaysVisible\" [tooltip]=\"cancelTooltip\"\n              container=\"body\" [disabled]=\"cancelDisabled\" (click)=\"cancel(); tip.hide()\">{{ cancelText }}</button>\n      </div>\n    `,\n    host: {\n        '[class]': 'orientation'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'steps': [{ type: ContentChildren, args: [WizardStepComponent, ] },],\n'orientation': [{ type: Input },],\n'nextText': [{ type: Input },],\n'previousText': [{ type: Input },],\n'cancelText': [{ type: Input },],\n'finishText': [{ type: Input },],\n'nextTooltip': [{ type: Input },],\n'previousTooltip': [{ type: Input },],\n'cancelTooltip': [{ type: Input },],\n'finishTooltip': [{ type: Input },],\n'nextDisabled': [{ type: Input },],\n'previousDisabled': [{ type: Input },],\n'cancelDisabled': [{ type: Input },],\n'finishDisabled': [{ type: Input },],\n'nextVisible': [{ type: Input },],\n'previousVisible': [{ type: Input },],\n'cancelVisible': [{ type: Input },],\n'finishVisible': [{ type: Input },],\n'cancelAlwaysVisible': [{ type: Input },],\n'finishAlwaysVisible': [{ type: Input },],\n'onNext': [{ type: Output },],\n'onPrevious': [{ type: Output },],\n'onCancel': [{ type: Output },],\n'onFinishing': [{ type: Output },],\n'onFinish': [{ type: Output },],\n'stepChanging': [{ type: Output },],\n'stepChange': [{ type: Output },],\n'step': [{ type: Input },],\n};\n}\n\nfunction WizardComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nWizardComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nWizardComponent.ctorParameters;\n/** @type {?} */\nWizardComponent.propDecorators;\n/** @type {?} */\nWizardComponent.prototype._step;\n/** @type {?} */\nWizardComponent.prototype.steps;\n/** @type {?} */\nWizardComponent.prototype.orientation;\n/** @type {?} */\nWizardComponent.prototype.nextText;\n/** @type {?} */\nWizardComponent.prototype.previousText;\n/** @type {?} */\nWizardComponent.prototype.cancelText;\n/** @type {?} */\nWizardComponent.prototype.finishText;\n/** @type {?} */\nWizardComponent.prototype.nextTooltip;\n/** @type {?} */\nWizardComponent.prototype.previousTooltip;\n/** @type {?} */\nWizardComponent.prototype.cancelTooltip;\n/** @type {?} */\nWizardComponent.prototype.finishTooltip;\n/** @type {?} */\nWizardComponent.prototype.nextDisabled;\n/** @type {?} */\nWizardComponent.prototype.previousDisabled;\n/** @type {?} */\nWizardComponent.prototype.cancelDisabled;\n/** @type {?} */\nWizardComponent.prototype.finishDisabled;\n/** @type {?} */\nWizardComponent.prototype.nextVisible;\n/** @type {?} */\nWizardComponent.prototype.previousVisible;\n/** @type {?} */\nWizardComponent.prototype.cancelVisible;\n/** @type {?} */\nWizardComponent.prototype.finishVisible;\n/** @type {?} */\nWizardComponent.prototype.cancelAlwaysVisible;\n/** @type {?} */\nWizardComponent.prototype.finishAlwaysVisible;\n/** @type {?} */\nWizardComponent.prototype.onNext;\n/** @type {?} */\nWizardComponent.prototype.onPrevious;\n/** @type {?} */\nWizardComponent.prototype.onCancel;\n/** @type {?} */\nWizardComponent.prototype.onFinishing;\n/** @type {?} */\nWizardComponent.prototype.onFinish;\n/** @type {?} */\nWizardComponent.prototype.stepChanging;\n/** @type {?} */\nWizardComponent.prototype.stepChange;\n/** @type {?} */\nWizardComponent.prototype.invalidIndicator;\n}\n\nexport class StepChangingEvent {\n/**\n * @param {?} from\n * @param {?} to\n */\nconstructor(public from: number,\npublic to: number) { }\n}\n\nfunction StepChangingEvent_tsickle_Closure_declarations() {\n/** @type {?} */\nStepChangingEvent.prototype.from;\n/** @type {?} */\nStepChangingEvent.prototype.to;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { WizardComponent } from './wizard.component';\nimport { WizardStepComponent } from './wizard-step.component';\n\nconst /** @type {?} */ DECLARATIONS = [\n    WizardComponent,\n    WizardStepComponent\n];\nexport class WizardModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        TooltipModule.forRoot()\n    ],\n    exports: DECLARATIONS,\n    declarations: DECLARATIONS\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction WizardModule_tsickle_Closure_declarations() {\n/** @type {?} */\nWizardModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nWizardModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { MarqueeWizardStepComponent } from './marquee-wizard-step.component';\n/**\n * This service is required to provide a form of communication\n * between the marquee wizard steps and the containing marquee wizard.\n * We cannot inject the Host due to the steps being content children \n * rather than view children.\n */\nexport class MarqueeWizardService {\n    valid$ = new Subject<MarqueeWizardValidEvent>();\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MarqueeWizardService_tsickle_Closure_declarations() {\n/** @type {?} */\nMarqueeWizardService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMarqueeWizardService.ctorParameters;\n/** @type {?} */\nMarqueeWizardService.prototype.valid$;\n}\n\n\nexport interface MarqueeWizardValidEvent {\n    step: MarqueeWizardStepComponent;\n    valid: boolean;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { WizardStepComponent } from '../wizard/index';\nimport { MarqueeWizardService } from './marquee-wizard.service';\nexport class MarqueeWizardStepComponent extends WizardStepComponent {\n\n     icon: string;\n     completed: boolean = false;\n     completedChange = new EventEmitter<boolean>();\n/**\n * @return {?}\n */\nget valid(): boolean {\n        return this._valid;\n    }\n/**\n * @param {?} valid\n * @return {?}\n */\nset valid(valid: boolean) {\n        this._valid = valid;\n\n        if (this._marqueeWizardService) {\n            this._marqueeWizardService.valid$.next({ step: this, valid: valid });\n        }\n    }\nprivate _valid: boolean = true;\n/**\n * @param {?} _marqueeWizardService\n */\nconstructor(private _marqueeWizardService: MarqueeWizardService) {\n        super();\n    }\n/**\n * Update the completed state and emit the latest value\n * @param {?} completed whether or not the step is completed\n * @return {?}\n */\nsetCompleted(completed: boolean): void {\n        this.completed = completed;\n        this.completedChange.emit(completed);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-marquee-wizard-step',\n    template: `\n      <ng-container *ngIf=\"active\">\n          <ng-content></ng-content>\n      </ng-container>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: MarqueeWizardService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'icon': [{ type: Input },],\n'completed': [{ type: Input },],\n'completedChange': [{ type: Output },],\n};\n}\n\nfunction MarqueeWizardStepComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nMarqueeWizardStepComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMarqueeWizardStepComponent.ctorParameters;\n/** @type {?} */\nMarqueeWizardStepComponent.propDecorators;\n/** @type {?} */\nMarqueeWizardStepComponent.prototype.icon;\n/** @type {?} */\nMarqueeWizardStepComponent.prototype.completed;\n/** @type {?} */\nMarqueeWizardStepComponent.prototype.completedChange;\n/** @type {?} */\nMarqueeWizardStepComponent.prototype._valid;\n/** @type {?} */\nMarqueeWizardStepComponent.prototype._marqueeWizardService;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, ContentChildren, QueryList, TemplateRef } from '@angular/core';\nimport { filter } from 'rxjs/operators/filter';\n\nimport { WizardComponent } from '../wizard/index';\nimport { MarqueeWizardStepComponent } from './marquee-wizard-step.component';\nimport { MarqueeWizardService, MarqueeWizardValidEvent } from './marquee-wizard.service';\nexport class MarqueeWizardComponent extends WizardComponent {\n\n     description: string | TemplateRef<any>;\n     steps = new QueryList<MarqueeWizardStepComponent>();\n/**\n * @return {?}\n */\nget isTemplate(): boolean {\n        return this.description && this.description instanceof TemplateRef;\n    }\n/**\n * @param {?} marqueeWizardService\n */\nconstructor(marqueeWizardService: MarqueeWizardService) {\n        super();\n\n        marqueeWizardService.valid$.pipe(\n            filter((event: MarqueeWizardValidEvent) => !event.valid)\n        ).subscribe(this.validChange.bind(this));\n    }\n/**\n * If the current step is valid, mark it as\n * complete and go to the next step\n * @return {?}\n */\nnext(): void {\n\n        // get the current step\n        const /** @type {?} */ step = /** @type {?} */(( this.getCurrentStep() as MarqueeWizardStepComponent));\n\n        if (step.valid) {\n            super.next();\n\n            // mark this step as completed\n            step.setCompleted(true);\n        }\n    }\n/**\n * Emit the onFinishing event and if valid the onFinish event.\n * Also mark the final step as completed if it is valid\n * @return {?}\n */\nfinish(): Promise<void> {\n\n        // get the current step\n        const /** @type {?} */ step = /** @type {?} */(( this.getCurrentStep() as MarqueeWizardStepComponent));\n\n        // call the original finish function\n        return super.finish().then(() => {\n            // if the step is valid indicate that it is now complete\n            if (step.valid) {\n                step.setCompleted(true);\n            }\n        });\n    }\n/**\n * If a step in the wizard becomes invalid, all steps sequentially after\n * it, should become unvisited and incomplete\n * @param {?} state\n * @return {?}\n */\nvalidChange(state: MarqueeWizardValidEvent): void {\n        \n        const /** @type {?} */ steps = this.steps.toArray();\n        const /** @type {?} */ current = steps.findIndex(step => step === state.step);\n        const /** @type {?} */ affected = steps.slice(current);\n\n        affected.forEach(step => {\n\n            // the step should no longer be completed\n            step.completed = false;\n\n            // if the step is not the current step then also mark it as unvisited\n            if (step !== state.step) {\n                step.visited = false;\n            }\n        });\n\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-marquee-wizard',\n    template: `\n      <div class=\"marquee-wizard-side-panel\">\n\n          <div class=\"marquee-wizard-description-container\" *ngIf=\"description\">\n              <!-- If a template was provided display it -->\n              <ng-container *ngIf=\"isTemplate\" [ngTemplateOutlet]=\"description\"></ng-container>\n\n              <!-- Otherwise wimply display the string -->\n              <ng-container *ngIf=\"!isTemplate\">\n                  <p>{{ description }}</p>\n              </ng-container>\n          </div>\n\n          <ul class=\"marquee-wizard-steps\">\n\n              <li class=\"marquee-wizard-step\" *ngFor=\"let step of steps\" (click)=\"gotoStep(step)\" [class.active]=\"step.active\" [class.visited]=\"step.visited\" [class.invalid]=\"!step.valid\">\n                  <i class=\"marquee-wizard-step-icon\" [ngClass]=\"step.icon\"></i>\n                  <span class=\"marquee-wizard-step-title\">{{ step.header }}</span>\n                  <span class=\"marquee-wizard-step-status hpe-icon hpe-checkmark\" *ngIf=\"step.completed\"></span>\n              </li>\n\n          </ul>\n      </div>\n\n      <div class=\"marquee-wizard-content-panel\">\n          <div class=\"marquee-wizard-content\">\n              <ng-content></ng-content>\n          </div>\n\n          <div class=\"modal-footer\">\n\n              <button #tip=\"bs-tooltip\" class=\"btn button-secondary\" *ngIf=\"previousVisible\" [tooltip]=\"previousTooltip\" container=\"body\"\n                  [disabled]=\"previousDisabled || step === 0\" (click)=\"previous(); tip.hide()\">{{ previousText }}</button>\n\n              <button #tip=\"bs-tooltip\" class=\"btn button-primary\" *ngIf=\"nextVisible && !isLastStep()\" [tooltip]=\"nextTooltip\" container=\"body\"\n                  [disabled]=\"nextDisabled\" (click)=\"next(); tip.hide()\">{{ nextText }}</button>\n\n              <button #tip=\"bs-tooltip\" class=\"btn button-primary\" *ngIf=\"finishVisible && isLastStep() || finishAlwaysVisible\" [tooltip]=\"finishTooltip\"\n                  container=\"body\" [disabled]=\"finishDisabled\" (click)=\"finish(); tip.hide()\">{{ finishText }}</button>\n\n              <button #tip=\"bs-tooltip\" class=\"btn button-secondary\" *ngIf=\"cancelVisible && !isLastStep() || cancelAlwaysVisible\" [tooltip]=\"cancelTooltip\"\n                  container=\"body\" [disabled]=\"cancelDisabled\" (click)=\"cancel(); tip.hide()\">{{ cancelText }}</button>\n          </div>\n      </div>\n    `,\n    providers: [ MarqueeWizardService ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: MarqueeWizardService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'description': [{ type: Input },],\n'steps': [{ type: ContentChildren, args: [MarqueeWizardStepComponent, ] },],\n};\n}\n\nfunction MarqueeWizardComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nMarqueeWizardComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMarqueeWizardComponent.ctorParameters;\n/** @type {?} */\nMarqueeWizardComponent.propDecorators;\n/** @type {?} */\nMarqueeWizardComponent.prototype.description;\n/** @type {?} */\nMarqueeWizardComponent.prototype.steps;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\n\nimport { WizardModule } from '../wizard/index';\nimport { MarqueeWizardComponent } from './marquee-wizard.component';\nimport { MarqueeWizardStepComponent } from './marquee-wizard-step.component';\nexport class MarqueeWizardModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        WizardModule,\n        TooltipModule.forRoot()\n    ],\n    exports: [\n        MarqueeWizardComponent,\n        MarqueeWizardStepComponent\n    ],\n    declarations: [\n        MarqueeWizardComponent,\n        MarqueeWizardStepComponent\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MarqueeWizardModule_tsickle_Closure_declarations() {\n/** @type {?} */\nMarqueeWizardModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMarqueeWizardModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input } from '@angular/core';\nexport class NavigationComponent {\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-navigation',\n    template: `\n      <nav class=\"tree\" role=\"navigation\">\n          <ol class=\"nav\">\n              <ng-content></ng-content>\n          </ol>\n      </nav>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NavigationComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nNavigationComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNavigationComponent.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { ActivatedRoute, NavigationEnd, Router, RouterState, UrlTree } from '@angular/router';\nimport { AfterContentInit, AfterViewInit, Component, ContentChildren, ElementRef, Input, OnDestroy, Optional, QueryList, Renderer2, SkipSelf, HostBinding } from '@angular/core';\nimport { filter } from 'rxjs/operators/filter';\nimport { Subscription } from 'rxjs/Subscription';\nexport class NavigationItemComponent implements AfterViewInit, AfterContentInit, OnDestroy {\n\n     header: string;\n     icon: string;\n     link: string;\n      expanded: boolean = false;\n/**\n * @return {?}\n */\nget active(): boolean {\n        if (this.link) {\n            return this._router.isActive(this.link, true);\n        }\n    }\n\n    level: number = 1;\n    indentWithoutArrow: boolean = true;\nprivate _navigationEnd: Subscription;\nprivate _childrenChanges: Subscription;\nprivate _children: QueryList<NavigationItemComponent>;\n/**\n * @return {?}\n */\nget children(): NavigationItemComponent[] {\n        return this._children.filter(item => item !== this);\n    }\n/**\n * @param {?} _elementRef\n * @param {?} _renderer\n * @param {?} _parent\n * @param {?} _router\n * @param {?} _activatedRoute\n */\nconstructor(\nprivate _elementRef: ElementRef,\nprivate _renderer: Renderer2,\nprivate _parent: NavigationItemComponent,\nprivate _router: Router,\nprivate _activatedRoute: ActivatedRoute\n    ) {\n        this.level = _parent ? _parent.level + 1 : 1;\n\n        this._navigationEnd = _router.events.pipe(filter(event => event instanceof NavigationEnd))\n            .subscribe(() => this.expanded = this.hasActiveLink(this.link));\n    }\n/**\n * @return {?}\n */\nngAfterViewInit(): void {\n        // Add classes to parent for styling\n        const /** @type {?} */ parentListElement = this._elementRef.nativeElement.parentElement;\n        if (parentListElement) {\n            const /** @type {?} */ levelClass: string = this.getLevelClass();\n            if (levelClass.length > 0) {\n                this._renderer.addClass(parentListElement, 'nav');\n                this._renderer.addClass(parentListElement, levelClass);\n            }\n        }\n    }\n/**\n * @return {?}\n */\nngAfterContentInit(): void {\n        // Set 'indentWithoutArrow'\n        this.setIndentWithoutArrow();\n\n        // Update 'indentWithoutArrow' in response to changes to children\n        this._childrenChanges = this._children.changes.subscribe(() => this.setIndentWithoutArrow());\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        this._navigationEnd.unsubscribe();\n        this._childrenChanges.unsubscribe();\n    }\n/**\n * @param {?} link\n * @return {?}\n */\nprivate hasActiveLink(link: string | UrlTree): boolean {\n\n        const /** @type {?} */ tree = this._router.createUrlTree([link], {\n            relativeTo: this._activatedRoute,\n            queryParams: this._activatedRoute.snapshot.queryParams,\n            fragment: this._activatedRoute.snapshot.fragment\n        });\n\n        if (link && this._router.isActive(tree, true)) {\n            return true;\n        }\n\n        // If this component has children, check if any of them, or their descendants, are active.\n        return this.children.some((item) => item.hasActiveLink(item.link));\n    }\n/**\n * @return {?}\n */\nprivate getLevelClass(): string {\n        switch (this.level) {\n            case 2:\n                return 'nav-second-level';\n            case 3:\n                return 'nav-third-level';\n            case 4:\n                return 'nav-fourth-level';\n            case 5:\n                return 'nav-fifth-level';\n        }\n\n        return '';\n    }\n/**\n * @return {?}\n */\nprivate setIndentWithoutArrow(): void {\n        if (this.children.length > 0) {\n            // If this element has children it will be indented and will have an arrow\n            this.indentWithoutArrow = false;\n        } else if (this._parent) {\n           // If this element has a parent, indent it if any of its siblings have children\n            this.indentWithoutArrow = !this._parent.children.every((item) => item.children.length === 0);\n        } else {\n            // Top-level elements should be indented\n            this.indentWithoutArrow = true;\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: '[ux-navigation-item]',\n    template: `\n      <a *ngIf=\"link\" [class.has-arrow]=\"children.length > 0\" [class.no-arrow]=\"indentWithoutArrow\" [routerLink]=\"link\">\n          <span>{{header}}</span>\n      </a>\n      <a *ngIf=\"!link\" (click)=\"expanded = !expanded\" [class.has-arrow]=\"children.length > 0\" [class.no-arrow]=\"indentWithoutArrow\">\n          <span>{{header}}</span>\n      </a>\n      <ng-content></ng-content>\n    `,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer2, },\n{type: NavigationItemComponent, decorators: [{ type: Optional }, { type: SkipSelf }, ]},\n{type: Router, },\n{type: ActivatedRoute, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'header': [{ type: Input },],\n'icon': [{ type: Input },],\n'link': [{ type: Input },],\n'expanded': [{ type: Input },{ type: HostBinding, args: ['class.selected', ] },],\n'active': [{ type: HostBinding, args: ['class.active', ] },],\n'_children': [{ type: ContentChildren, args: [NavigationItemComponent, { descendants: true }, ] },],\n};\n}\n\nfunction NavigationItemComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nNavigationItemComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNavigationItemComponent.ctorParameters;\n/** @type {?} */\nNavigationItemComponent.propDecorators;\n/** @type {?} */\nNavigationItemComponent.prototype.header;\n/** @type {?} */\nNavigationItemComponent.prototype.icon;\n/** @type {?} */\nNavigationItemComponent.prototype.link;\n/** @type {?} */\nNavigationItemComponent.prototype.expanded;\n/** @type {?} */\nNavigationItemComponent.prototype.level;\n/** @type {?} */\nNavigationItemComponent.prototype.indentWithoutArrow;\n/** @type {?} */\nNavigationItemComponent.prototype._navigationEnd;\n/** @type {?} */\nNavigationItemComponent.prototype._childrenChanges;\n/** @type {?} */\nNavigationItemComponent.prototype._children;\n/** @type {?} */\nNavigationItemComponent.prototype._elementRef;\n/** @type {?} */\nNavigationItemComponent.prototype._renderer;\n/** @type {?} */\nNavigationItemComponent.prototype._parent;\n/** @type {?} */\nNavigationItemComponent.prototype._router;\n/** @type {?} */\nNavigationItemComponent.prototype._activatedRoute;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { NavigationComponent } from './navigation.component';\nimport { NavigationItemComponent } from './navigation-item/navigation-item.component';\nexport class NavigationModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        RouterModule\n    ],\n    exports: [\n        NavigationComponent,\n        NavigationItemComponent\n    ],\n    declarations: [\n        NavigationComponent,\n        NavigationItemComponent\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NavigationModule_tsickle_Closure_declarations() {\n/** @type {?} */\nNavigationModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNavigationModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable, Inject } from '@angular/core';\nimport { DOCUMENT } from '@angular/platform-browser';\nimport { ColorValueSet, ColorClassSet } from './color.service';\nexport class ColorService {\nprivate _html: string;\nprivate _element: HTMLElement;\nprivate _colors: ThemeColors;\nprivate _colorSet: any = colorSets.keppel;\n/**\n * @param {?} document\n */\nconstructor( document: Document) {\n        if (this._colorSet.colorClassSet) {\n            this.setColors();\n        } else {\n            for (let key in this._colorSet.colorValueSet) {\n                this._colors[key] = this.getColorValueByHex(this._colorSet.colorValueSet[key]);\n            }\n        }\n    }\n/**\n * @return {?}\n */\nprivate setColors() {\n\n        this._html = '';\n\n        for (let /** @type {?} */ key in this._colorSet.colorClassSet) {\n            this._html += '<div class=\"' + this._colorSet.colorClassSet[key] + '-color\"></div>';\n        }\n\n        this._element = document.createElement('div');\n        this._element.className = 'color-chart';\n        this._element.innerHTML = this._html;\n\n        document.body.appendChild(this._element);\n\n        this._colors = {};\n\n        for (let /** @type {?} */ key in this._colorSet.colorClassSet) {\n            this._colors[key] = this.getColorValue(this._colorSet.colorClassSet[key]);\n        }\n\n        this._element.parentNode.removeChild(this._element);\n    }\n/**\n * @param {?} color\n * @return {?}\n */\nprivate getColorValueByHex(color: string): ThemeColor {\n        const /** @type {?} */ hex = color.replace('#', '');\n\n        const /** @type {?} */ r = parseInt(hex.substring(0, 2), 16).toString();\n        const /** @type {?} */ g = parseInt(hex.substring(2, 4), 16).toString();\n        const /** @type {?} */ b = parseInt(hex.substring(4, 6), 16).toString();\n\n        return new ThemeColor(r, g, b, '1');\n    }\n/**\n * @param {?} color\n * @return {?}\n */\nprivate getColorValue(color: ColorIdentifier): ThemeColor {\n\n        const /** @type {?} */ target = this._element.querySelector('.' + this._colorSet.colorClassSet[color] + '-color');\n\n        if (!target) {\n            throw new Error('Invalid color');\n        }\n\n        const /** @type {?} */ colorValue = window.getComputedStyle(target).backgroundColor;\n\n        const /** @type {?} */ rgba = colorValue.match(/^rgba?\\((\\d+),\\s*(\\d+),\\s*(\\d+)(?:,\\s*(\\d+(?:\\.\\d+)?))?\\)$/);\n\n        return new ThemeColor(rgba[1], rgba[2], rgba[3], rgba[4]);\n    }\n/**\n * @param {?} color\n * @return {?}\n */\ngetColor(color: ColorIdentifier): ThemeColor {\n        const /** @type {?} */ themeColor = this._colors[this.resolveColorName(color)];\n        if (!themeColor) {\n            throw new Error('Color not found: ' + color);\n        }\n        \n        return new ThemeColor(themeColor.getRed(), themeColor.getGreen(), themeColor.getBlue(), themeColor.getAlpha());\n    }\n/**\n * @return {?}\n */\ngetColorSet() {\n        return this._colorSet;\n    }\n/**\n * @param {?} colorSet\n * @return {?}\n */\nsetColorSet(colorSet: ColorSet) {\n        this._colorSet = colorSet;\n        this._colors = {};\n\n        if (this._colorSet.colorClassSet) {\n            this.setColors();\n        } else {\n            for (let /** @type {?} */ key in this._colorSet.colorValueSet) {\n                this._colors[key] = this.getColorValueByHex(this._colorSet.colorValueSet[key]);\n            }\n        }\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nresolve(value: string): string {\n        if (!value) {\n            return;\n        }\n        \n        const /** @type {?} */ colorName = this.resolveColorName(value);\n        \n        for (let /** @type {?} */ color in this._colors) {\n            if (colorName === color.toLowerCase()) {\n                return this.getColor(colorName).toRgba();\n            }\n        }\n\n        return value;\n    }\n/**\n * @param {?=} value\n * @return {?}\n */\nresolveColorName(value: string = ''): string {\n        return value.replace(/\\s+/g, '-').toLowerCase();\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Document, decorators: [{ type: Inject, args: [DOCUMENT, ] }, ]},\n];\n}\n\nfunction ColorService_tsickle_Closure_declarations() {\n/** @type {?} */\nColorService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nColorService.ctorParameters;\n/** @type {?} */\nColorService.prototype._html;\n/** @type {?} */\nColorService.prototype._element;\n/** @type {?} */\nColorService.prototype._colors;\n/** @type {?} */\nColorService.prototype._colorSet;\n}\n\nexport class ThemeColor {\nprivate _r: string;\nprivate _g: string;\nprivate _b: string;\nprivate _a: string;\n/**\n * @param {?} r\n * @param {?} g\n * @param {?} b\n * @param {?} a\n */\nconstructor(r: string, g: string, b: string, a: string) {\n        this._r = r;\n        this._g = g;\n        this._b = b;\n        this._a = a === undefined ? '1' : a;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nstatic parse(value: string): ThemeColor {\n        let /** @type {?} */ r, /** @type {?} */ g, /** @type {?} */ b, /** @type {?} */ a = '1';\n\n        const /** @type {?} */ rgbaPattern = /^rgba?\\((\\d+),\\s*(\\d+),\\s*(\\d+)(?:,\\s*(\\d+(?:\\.\\d+)?))?\\)$/;\n        const /** @type {?} */ shortHexPattern = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n        const /** @type {?} */ longHexPattern = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/;\n\n        const /** @type {?} */ rgbaMatch = value.match(rgbaPattern);\n        const /** @type {?} */ shortHexMatch = value.match(shortHexPattern);\n        const /** @type {?} */ longHexMatch = value.match(longHexPattern);\n\n        if (rgbaMatch) {\n            r = rgbaMatch[1];\n            g = rgbaMatch[2];\n            b = rgbaMatch[3];\n            a = rgbaMatch[4] ? rgbaMatch[4] : '1';\n        } else if (longHexMatch) {\n            r = parseInt(longHexMatch[1], 16).toString();\n            g = parseInt(longHexMatch[2], 16).toString();\n            b = parseInt(longHexMatch[3], 16).toString();\n        } else if (shortHexMatch) {\n            r = parseInt(shortHexMatch[1] + shortHexMatch[1], 16).toString();\n            g = parseInt(shortHexMatch[2] + shortHexMatch[2], 16).toString();\n            b = parseInt(shortHexMatch[3] + shortHexMatch[3], 16).toString();\n        } else {\n            throw new Error(`Cannot parse color - ${value} is not a valid color.`);\n        }\n        return new ThemeColor(r, g, b, a);\n    }\n/**\n * @return {?}\n */\ntoHex() {\n        let /** @type {?} */ red = parseInt(this._r).toString(16);\n        let /** @type {?} */ green = parseInt(this._g).toString(16);\n        let /** @type {?} */ blue = parseInt(this._b).toString(16);\n\n        if (red.length < 2) {\n            red = '0' + red;\n        }\n        if (green.length < 2) {\n            green = '0' + green;\n        }\n        if (blue.length < 2) {\n            blue = '0' + blue;\n        }\n\n        return '#' + red + green + blue;\n    }\n/**\n * @return {?}\n */\ntoRgb() {\n        return 'rgb(' + this._r + ', ' + this._g + ', ' + this._b + ')';\n    }\n/**\n * @return {?}\n */\ntoRgba() {\n        return 'rgba(' + this._r + ', ' + this._g + ', ' + this._b + ', ' + this._a + ')';\n    }\n/**\n * @return {?}\n */\ngetRed() {\n        return this._r;\n    }\n/**\n * @return {?}\n */\ngetGreen() {\n        return this._g;\n    }\n/**\n * @return {?}\n */\ngetBlue() {\n        return this._b;\n    }\n/**\n * @return {?}\n */\ngetAlpha() {\n        return this._a;\n    }\n/**\n * @param {?} red\n * @return {?}\n */\nsetRed(red: string) {\n        this._r = red;\n        return this;\n    }\n/**\n * @param {?} green\n * @return {?}\n */\nsetGreen(green: string) {\n        this._g = green;\n        return this;\n    }\n/**\n * @param {?} blue\n * @return {?}\n */\nsetBlue(blue: string) {\n        this._b = blue;\n        return this;\n    }\n/**\n * @param {?} alpha\n * @return {?}\n */\nsetAlpha(alpha: string | number) {\n        this._a = alpha.toString();\n        return this;\n    }\n}\n\nfunction ThemeColor_tsickle_Closure_declarations() {\n/** @type {?} */\nThemeColor.prototype._r;\n/** @type {?} */\nThemeColor.prototype._g;\n/** @type {?} */\nThemeColor.prototype._b;\n/** @type {?} */\nThemeColor.prototype._a;\n}\n\n\nexport const /** @type {?} */ colorSets = {\n    keppel: {\n        colorClassSet: {\n            'primary': 'primary',\n            'accent': 'accent',\n            'secondary': 'secondary',\n            'alternate1': 'alternate1',\n            'alternate2': 'alternate2',\n            'alternate3': 'alternate3',\n            'vibrant1': 'vibrant1',\n            'vibrant2': 'vibrant2',\n            'grey1': 'grey1',\n            'grey2': 'grey2',\n            'grey3': 'grey3',\n            'grey4': 'grey4',\n            'grey5': 'grey5',\n            'grey6': 'grey6',\n            'grey7': 'grey7',\n            'grey8': 'grey8',\n            'chart1': 'chart1',\n            'chart2': 'chart2',\n            'chart3': 'chart3',\n            'chart4': 'chart4',\n            'chart5': 'chart5',\n            'chart6': 'chart6',\n            'ok': 'ok',\n            'warning': 'warning',\n            'critical': 'critical',\n            'partition1': 'partition1',\n            'partition9': 'partition9',\n            'partition10': 'partition10',\n            'partition11': 'partition11',\n            'partition12': 'partition12',\n            'partition13': 'partition13',\n            'partition14': 'partition14',\n            'social-chart-node': 'social-chart-node',\n            'social-chart-edge': 'social-chart-edge'\n        }\n    },\n    microFocus: {\n        'colorValueSet': {\n            'cerulean': '#1668c1',\n            'aqua': '#29ceff',\n            'aquamarine': '#2fd6c3',\n            'fuchsia': '#c6179d',\n            'indigo': '#7425ad',\n            'dark-blue': '#231ca5',\n            'white': '#ffffff',\n            'slightly-gray': '#f5f7f8',\n            'bright-gray': '#f1f2f3',\n            'gray': '#dcdedf',\n            'silver': '#bdbec0',\n            'dim-gray': '#656668',\n            'dark-gray': '#323435',\n            'black': '#000000',\n            'crimson-negative': '#e5004c',\n            'apricot': '#f48b34',\n            'yellow': '#fcdb1f',\n            'green-positive': '#1aac60',\n            'ultramarine': '#3939c6',\n            'skyblue': '#00abf3',\n            'pale-aqua': '#43e4ff',\n            'pale-green': '#1ffbba',\n            'lime': '#75da4d',\n            'orange': '#ffce00',\n            'magenta': '#eb23c2',\n            'pale-purple': '#ba47e2',\n            'dark-ultramarine': '#271782',\n            'steelblue': '#014272',\n            'arctic-blue': '#0b8eac',\n            'emerald': '#00a989',\n            'olive': '#5bba36',\n            'goldenrod': '#ffb000',\n            'purple': '#9b1e83',\n            'pale-eggplant': '#5216ac',\n            'red': '#ff454f',\n            'pale-amber': '#ffb24d',\n            'pale-lemon': '#fde159',\n            'pale-emerald': '#33c180',\n            'plum': '#b21646',\n            'copper': '#e57828',\n            'amber': '#ffc002',\n            'leaf-green': '#118c4f',\n            'forest-green': '#00645a',\n            'primary': '#0073e7',\n            'accent': '#7425ad',\n            'secondary': '#ffffff',\n            'alternate1': '#29ceff',\n            'alternate2': '#2fd6c3',\n            'alternate3': '#c6179d',\n            'vibrant1': '#43e4ff',\n            'vibrant2': '#ffce00',\n            'grey1': '#000000',\n            'grey2': '#323435',\n            'grey3': '#656668',\n            'grey4': '#bdbec0',\n            'grey5': '#dcdedf',\n            'grey6': '#f1f2f3',\n            'grey7': '#f5f7f8',\n            'grey8': '#ffffff',\n            'chart1': '#3939c6',\n            'chart2': '#00abf3',\n            'chart3': '#75da4d',\n            'chart4': '#ffce00',\n            'chart5': '#eb23c2',\n            'chart6': '#ba47e2',\n            'ok': '#1aac60',\n            'warning': '#f48b34',\n            'critical': 'e5004c',\n            'partition1': '#7425ad',\n            'partition9': '#5216ac',\n            'partition10': '#5bba36',\n            'partition11': '#014272',\n            'partition12': '#ffb000',\n            'partition13': '#bdbec0',\n            'partition14': '#271782',\n            'social-chart-node': '#ff00ff',\n            'social-chart-edge': '#ff00ff'\n        }\n    }\n};\n\nexport interface ThemeColors {\n    [name: string]: ThemeColor;\n}\n\nexport interface ColorSet {\n    colorClassSet?: ColorClassSet;\n    colorValueSet?: ColorValueSet;\n}\n\nexport interface ColorClassSet {\n    [name: string]: string;\n}\n\nexport interface ColorValueSet {\n    [name: string]: string;\n}\n\nexport type ColorIdentifier = string;\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { ColorService } from './color.service';\nexport class ColorServiceModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    providers: [ColorService],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ColorServiceModule_tsickle_Closure_declarations() {\n/** @type {?} */\nColorServiceModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nColorServiceModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable, TemplateRef } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { ColorService } from '../../services/color/index';\nexport class NotificationService {\n\n    // provide default options\n    options: NotificationOptions = {\n        duration: 4,\n        height: 100,\n        spacing: 10,\n        backgroundColor: this._colorService.getColor('accent').toHex(),\n        iconColor: this._colorService.getColor('accent').toHex()\n    };\n\n    direction: NotificationListDirection = 'above';\n\n    notifications$: BehaviorSubject<NotificationRef[]> = new BehaviorSubject<NotificationRef[]>([]);\n/**\n * @param {?} templateRef\n * @param {?=} options\n * @return {?}\n */\nshow(templateRef: TemplateRef<any>, options: NotificationOptions = this.options): NotificationRef {\n\n        options = { ...this.options, ...options };\n\n        const /** @type {?} */ notificationRef: NotificationRef = {\n            templateRef: templateRef,\n            duration: options.duration,\n            date: new Date(),\n            visible: true,\n            height: options.height,\n            spacing: options.spacing,\n            backgroundColor: options.backgroundColor,\n            iconColor: options.iconColor\n        };\n\n        const /** @type {?} */ notifications = this.notifications$.getValue();\n\n        if (this.direction === 'above') {\n            notifications.unshift(notificationRef);\n        } else {\n            notifications.push(notificationRef);\n        }\n\n        this.notifications$.next(notifications);\n\n        // remove notification after delay\n        if (options.duration !== 0) {\n            setTimeout(() => this.dismiss(notificationRef), options.duration * 1000);\n        }\n\n        return notificationRef;\n    }\n/**\n * @return {?}\n */\ngetHistory(): NotificationRef[] {\n        return this.notifications$.getValue();\n    }\n/**\n * @param {?} notificationRef\n * @return {?}\n */\ndismiss(notificationRef: NotificationRef): void {\n        notificationRef.visible = false;\n        this.notifications$.next(this.notifications$.getValue());\n    }\n/**\n * @return {?}\n */\ndismissAll(): void {\n        this.notifications$.getValue().forEach(notificationRef => notificationRef.visible = false);\n        this.notifications$.next(this.notifications$.getValue());        \n    }\n/**\n * @param {?} _colorService\n */\nconstructor(private _colorService: ColorService) {\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ColorService, },\n];\n}\n\nfunction NotificationService_tsickle_Closure_declarations() {\n/** @type {?} */\nNotificationService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNotificationService.ctorParameters;\n/** @type {?} */\nNotificationService.prototype.options;\n/** @type {?} */\nNotificationService.prototype.direction;\n/** @type {?} */\nNotificationService.prototype.notifications$;\n/** @type {?} */\nNotificationService.prototype._colorService;\n}\n\n\nexport interface NotificationRef {\n    templateRef: TemplateRef<any>;\n    duration: number;\n    date: Date;\n    visible?: boolean;\n    height?: number;\n    spacing?: number;\n    backgroundColor?: string;\n    iconColor?: string;\n}\n\nexport interface NotificationOptions {\n    duration?: number;\n    height?: number;\n    spacing?: number;\n    backgroundColor?: string;\n    iconColor?: string;\n}\n\nexport type NotificationListDirection = 'above' | 'below';\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, HostBinding, Input, ChangeDetectionStrategy } from '@angular/core';\nimport { NotificationService, NotificationRef, NotificationListDirection } from './notification.service';\nimport { trigger, state, style, animate, transition } from '@angular/animations';\nimport { map } from 'rxjs/operators/map';\nimport { Observable } from 'rxjs/Observable';\nexport class NotificationListComponent {\n/**\n * @param {?} direction\n * @return {?}\n */\nset direction(direction: NotificationListDirection) {\n        this._notificationService.direction = direction;\n    }\n\n      position: NotificationListPostion = 'top-right';\n\n    notifications$: Observable<NotificationRef[]> = this._notificationService.notifications$.pipe(\n        map((notificationRefs: NotificationRef[]) => notificationRefs.filter(notificationRef => notificationRef.visible),\n    ));\n/**\n * @param {?} _notificationService\n */\nconstructor(private _notificationService: NotificationService) {\n\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-notification-list',\n    template: `\n      <div class=\"notification\" *ngFor=\"let notificationRef of notifications$ | async; let idx = index\" \n          [style.top.px]=\"(notificationRef.height + notificationRef.spacing) * idx\"\n          [style.height.px]=\"notificationRef.height\"\n          [style.background-color]=\"notificationRef.backgroundColor\"\n          [@notificationState]>\n          <ng-container *ngTemplateOutlet=\"notificationRef.templateRef; context: { $implicit: notificationRef }\"></ng-container>\n      </div>\n    `,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    animations: [\n        trigger('notificationState', [\n            state('in', style({ transform: 'translateY(0)', opacity: 0.9 })),\n            transition(':enter', [\n                style({ transform: 'translateY(-50px)', opacity: 0 }),\n                animate(500)\n            ]),\n            transition(':leave', [\n                animate(500, style({ transform: 'translateY(50px)', opacity: 0 }))\n            ])\n        ])\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NotificationService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'direction': [{ type: Input },],\n'position': [{ type: Input },{ type: HostBinding, args: ['class', ] },],\n};\n}\n\nfunction NotificationListComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nNotificationListComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNotificationListComponent.ctorParameters;\n/** @type {?} */\nNotificationListComponent.propDecorators;\n/** @type {?} */\nNotificationListComponent.prototype.position;\n/** @type {?} */\nNotificationListComponent.prototype.notifications$;\n/** @type {?} */\nNotificationListComponent.prototype._notificationService;\n}\n\n\nexport type NotificationListPostion = 'top-left' | 'top-right' | 'bottom-left' | 'bottom-right';\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NotificationListComponent } from './notification-list.component';\nimport { NotificationService } from './notification.service';\nimport { ColorServiceModule } from '../../services/color/index';\nexport class NotificationModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        ColorServiceModule\n    ],\n    exports: [\n        NotificationListComponent\n    ],\n    declarations: [\n        NotificationListComponent\n    ],\n    providers: [\n        NotificationService\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NotificationModule_tsickle_Closure_declarations() {\n/** @type {?} */\nNotificationModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNotificationModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, ViewEncapsulation, EventEmitter, Output, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nexport const /** @type {?} */ NUMBER_PICKER_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => NumberPickerComponent),\n    multi: true\n};\nexport class NumberPickerComponent implements ControlValueAccessor {\nprivate _min: number = -Infinity;\nprivate _max: number = Infinity;\nprivate _step: number = 1;\nprivate _disabled: boolean = false;\nprivate _value: number = 0;\nprivate _propagateChange = (_: any) => { };\n\n     valid: boolean = true;\n     valueChange = new EventEmitter<number>();\n/**\n * @return {?}\n */\nget value(): number {\n        return this._value;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset value(value: number) {\n        this._value = value;\n        this.valueChange.emit(value);\n        this._propagateChange(value);\n    }\n/**\n * @return {?}\n */\nget min(): number {\n        return this._min;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset min(value) {\n        this._min = typeof value === 'string' ? parseFloat(value) : value;\n    }\n/**\n * @return {?}\n */\nget max(): number {\n        return this._max;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset max(value) {\n        this._max = typeof value === 'string' ? parseFloat(value) : value;\n    }\n/**\n * @return {?}\n */\nget step(): number {\n        return this._step;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset step(value) {\n        this._step = typeof value === 'string' ? parseFloat(value) : value;\n    }\n/**\n * @return {?}\n */\nget disabled(): boolean {\n        return this._disabled;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset disabled(value) {\n        this._disabled = typeof value === 'string' && (value === '' || value === 'true' || value === 'disabled') || value === true;\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nincrement(event: MouseEvent | KeyboardEvent): void {\n        event.preventDefault();\n\n        if (!this.disabled) {\n            this.value = Math.max(Math.min(this.value + this.step, this.max), this.min);\n        }\n    }\n/**\n * @param {?} event\n * @return {?}\n */\ndecrement(event: MouseEvent | KeyboardEvent): void {\n        event.preventDefault();\n\n        if (!this.disabled) {\n            this.value = Math.min(Math.max(this.value - this.step, this.min), this.max);\n        }\n    }\n/**\n * @return {?}\n */\nisValid(): boolean {\n        if (this.value < this.min || this.value > this.max) {\n            return false;\n        }\n\n        return this.valid;\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nonScroll(event: WheelEvent): void {\n\n        let /** @type {?} */ scrollValue = event.deltaY || event.wheelDelta;\n\n        if (scrollValue < 0) {\n            this.increment(event);\n        } else {\n            this.decrement(event);\n        }\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nwriteValue(value: any): void {\n        if (value !== undefined) {\n            this._value = value;\n        }\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnChange(fn: any): void {\n        this._propagateChange = fn;\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnTouched(fn: any): void { }\n/**\n * @param {?} isDisabled\n * @return {?}\n */\nsetDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-number-picker',\n    template: `\n      <input type=\"number\" class=\"form-control number-picker-input\" [(ngModel)]=\"value\" [min]=\"min\" [max]=\"max\" (keydown.ArrowDown)=\"decrement($event)\"\n          (keydown.ArrowUp)=\"increment($event)\" (wheel)=\"onScroll($event)\" step=\"any\" [disabled]=\"disabled\">\n\n      <div class=\"number-picker-controls\">\n\n          <div class=\"number-picker-control-up\" (click)=\"increment($event)\" [class.disabled]=\"disabled || value >= max\">\n              <span class=\"hpe-icon hpe-up\"></span>\n          </div>\n\n          <div class=\"number-picker-control-down\" (click)=\"decrement($event)\" [class.disabled]=\"disabled || value <= min\">\n              <span class=\"hpe-icon hpe-down\"></span>\n          </div>\n\n      </div>\n    `,\n    providers: [NUMBER_PICKER_VALUE_ACCESSOR],\n    host: {\n        '[class.has-error]': '!isValid()'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'valid': [{ type: Input },],\n'valueChange': [{ type: Output },],\n'value': [{ type: Input, args: ['value', ] },],\n'min': [{ type: Input },],\n'max': [{ type: Input },],\n'step': [{ type: Input },],\n'disabled': [{ type: Input },],\n};\n}\n\nfunction NumberPickerComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nNumberPickerComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNumberPickerComponent.ctorParameters;\n/** @type {?} */\nNumberPickerComponent.propDecorators;\n/** @type {?} */\nNumberPickerComponent.prototype._min;\n/** @type {?} */\nNumberPickerComponent.prototype._max;\n/** @type {?} */\nNumberPickerComponent.prototype._step;\n/** @type {?} */\nNumberPickerComponent.prototype._disabled;\n/** @type {?} */\nNumberPickerComponent.prototype._value;\n/** @type {?} */\nNumberPickerComponent.prototype._propagateChange;\n/** @type {?} */\nNumberPickerComponent.prototype.valid;\n/** @type {?} */\nNumberPickerComponent.prototype.valueChange;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\nimport { NumberPickerComponent } from './number-picker.component';\nexport class NumberPickerModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        FormsModule\n    ],\n    exports: [NumberPickerComponent],\n    declarations: [NumberPickerComponent]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NumberPickerModule_tsickle_Closure_declarations() {\n/** @type {?} */\nNumberPickerModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNumberPickerModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable, SubscribableOrPromise } from '../Observable';\nimport { Subscription, TeardownLogic } from '../Subscription';\n\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Ignores source values for a duration determined by another Observable, then\n * emits the most recent value from the source Observable, then repeats this\n * process.\n *\n * <span class=\"informal\">It's like {@link auditTime}, but the silencing\n * duration is determined by a second Observable.</span>\n *\n * <img src=\"./img/audit.png\" width=\"100%\">\n *\n * `audit` is similar to `throttle`, but emits the last value from the silenced\n * time window, instead of the first value. `audit` emits the most recent value\n * from the source Observable on the output Observable as soon as its internal\n * timer becomes disabled, and ignores source values while the timer is enabled.\n * Initially, the timer is disabled. As soon as the first source value arrives,\n * the timer is enabled by calling the `durationSelector` function with the\n * source value, which returns the \"duration\" Observable. When the duration\n * Observable emits a value or completes, the timer is disabled, then the most\n * recent source value is emitted on the output Observable, and this process\n * repeats for the next source value.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.audit(ev => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounce}\n * @see {@link delayWhen}\n * @see {@link sample}\n * @see {@link throttle}\n *\n * @param {function(value: T): SubscribableOrPromise} durationSelector A function\n * that receives a value from the source Observable, for computing the silencing\n * duration, returned as an Observable or a Promise.\n * @return {Observable<T>} An Observable that performs rate-limiting of\n * emissions from the source Observable.\n * @method audit\n * @owner Observable\n */\nexport function audit<T>(durationSelector: (value: T) => SubscribableOrPromise<any>): MonoTypeOperatorFunction<T> {\n  return function auditOperatorFunction(source: Observable<T>) {\n    return source.lift(new AuditOperator(durationSelector));\n  };\n}\n\nclass AuditOperator<T> implements Operator<T, T> {\n  constructor(private durationSelector: (value: T) => SubscribableOrPromise<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new AuditSubscriber<T, T>(subscriber, this.durationSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass AuditSubscriber<T, R> extends OuterSubscriber<T, R> {\n\n  private value: T;\n  private hasValue: boolean = false;\n  private throttled: Subscription;\n\n  constructor(destination: Subscriber<T>,\n              private durationSelector: (value: T) => SubscribableOrPromise<any>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    this.value = value;\n    this.hasValue = true;\n    if (!this.throttled) {\n      const duration = tryCatch(this.durationSelector)(value);\n      if (duration === errorObject) {\n        this.destination.error(errorObject.e);\n      } else {\n        const innerSubscription = subscribeToResult(this, duration);\n        if (innerSubscription.closed) {\n          this.clearThrottle();\n        } else {\n          this.add(this.throttled = innerSubscription);\n        }\n      }\n    }\n  }\n\n  clearThrottle() {\n    const { value, hasValue, throttled } = this;\n    if (throttled) {\n      this.remove(throttled);\n      this.throttled = null;\n      throttled.unsubscribe();\n    }\n    if (hasValue) {\n      this.value = null;\n      this.hasValue = false;\n      this.destination.next(value);\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R, outerIndex: number, innerIndex: number): void {\n    this.clearThrottle();\n  }\n\n  notifyComplete(): void {\n    this.clearThrottle();\n  }\n}\n","import { isArray } from '../util/isArray';\n\nexport function isNumeric(val: any): val is number {\n  // parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n  // ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n  // subtraction forces infinities to NaN\n  // adding 1 corrects loss of precision from parseFloat (#15100)\n  return !isArray(val) && (val - parseFloat(val) + 1) >= 0;\n};\n","import { Scheduler } from '../Scheduler';\nexport function isScheduler(value: any): value is Scheduler {\n  return value && typeof (<any>value).schedule === 'function';\n}\n","import { isNumeric } from '../util/isNumeric';\nimport { IScheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { async } from '../scheduler/async';\nimport { isScheduler } from '../util/isScheduler';\nimport { isDate } from '../util/isDate';\nimport { TeardownLogic } from '../Subscription';\nimport { Subscriber } from '../Subscriber';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class TimerObservable extends Observable<number> {\n\n  /**\n   * Creates an Observable that starts emitting after an `initialDelay` and\n   * emits ever increasing numbers after each `period` of time thereafter.\n   *\n   * <span class=\"informal\">Its like {@link interval}, but you can specify when\n   * should the emissions start.</span>\n   *\n   * <img src=\"./img/timer.png\" width=\"100%\">\n   *\n   * `timer` returns an Observable that emits an infinite sequence of ascending\n   * integers, with a constant interval of time, `period` of your choosing\n   * between those emissions. The first emission happens after the specified\n   * `initialDelay`. The initial delay may be a {@link Date}. By default, this\n   * operator uses the `async` IScheduler to provide a notion of time, but you\n   * may pass any IScheduler to it. If `period` is not specified, the output\n   * Observable emits only one value, `0`. Otherwise, it emits an infinite\n   * sequence.\n   *\n   * @example <caption>Emits ascending numbers, one every second (1000ms), starting after 3 seconds</caption>\n   * var numbers = Rx.Observable.timer(3000, 1000);\n   * numbers.subscribe(x => console.log(x));\n   *\n   * @example <caption>Emits one number after five seconds</caption>\n   * var numbers = Rx.Observable.timer(5000);\n   * numbers.subscribe(x => console.log(x));\n   *\n   * @see {@link interval}\n   * @see {@link delay}\n   *\n   * @param {number|Date} initialDelay The initial delay time to wait before\n   * emitting the first value of `0`.\n   * @param {number} [period] The period of time between emissions of the\n   * subsequent numbers.\n   * @param {Scheduler} [scheduler=async] The IScheduler to use for scheduling\n   * the emission of values, and providing a notion of \"time\".\n   * @return {Observable} An Observable that emits a `0` after the\n   * `initialDelay` and ever increasing numbers after each `period` of time\n   * thereafter.\n   * @static true\n   * @name timer\n   * @owner Observable\n   */\n  static create(initialDelay: number | Date = 0,\n                period?: number | IScheduler,\n                scheduler?: IScheduler): Observable<number> {\n    return new TimerObservable(initialDelay, period, scheduler);\n  }\n\n  static dispatch(state: any) {\n\n    const { index, period, subscriber } = state;\n    const action = (<any> this);\n\n    subscriber.next(index);\n\n    if (subscriber.closed) {\n      return;\n    } else if (period === -1) {\n      return subscriber.complete();\n    }\n\n    state.index = index + 1;\n    action.schedule(state, period);\n  }\n\n  private period: number = -1;\n  private dueTime: number = 0;\n  private scheduler: IScheduler;\n\n  constructor(dueTime: number | Date = 0,\n              period?: number | IScheduler,\n              scheduler?: IScheduler) {\n    super();\n\n    if (isNumeric(period)) {\n      this.period = Number(period) < 1 && 1 || Number(period);\n    } else if (isScheduler(period)) {\n      scheduler = <IScheduler> period;\n    }\n\n    if (!isScheduler(scheduler)) {\n      scheduler = async;\n    }\n\n    this.scheduler = scheduler;\n    this.dueTime = isDate(dueTime) ?\n      (+dueTime - this.scheduler.now()) :\n      (<number> dueTime);\n  }\n\n  protected _subscribe(subscriber: Subscriber<number>): TeardownLogic {\n    const index = 0;\n    const { period, dueTime, scheduler } = this;\n\n    return scheduler.schedule(TimerObservable.dispatch, dueTime, {\n      index, period, subscriber\n    });\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Buffers the source Observable values until `closingNotifier` emits.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * that array only when another Observable emits.</span>\n *\n * <img src=\"./img/buffer.png\" width=\"100%\">\n *\n * Buffers the incoming Observable values until the given `closingNotifier`\n * Observable emits a value, at which point it emits the buffer on the output\n * Observable and starts a new buffer internally, awaiting the next time\n * `closingNotifier` emits.\n *\n * @example <caption>On every click, emit array of most recent interval events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var interval = Rx.Observable.interval(1000);\n * var buffered = interval.buffer(clicks);\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link window}\n *\n * @param {Observable<any>} closingNotifier An Observable that signals the\n * buffer to be emitted on the output Observable.\n * @return {Observable<T[]>} An Observable of buffers, which are arrays of\n * values.\n * @method buffer\n * @owner Observable\n */\nexport function buffer<T>(closingNotifier: Observable<any>): OperatorFunction<T, T[]> {\n  return function bufferOperatorFunction(source: Observable<T>) {\n    return source.lift(new BufferOperator<T>(closingNotifier));\n  };\n}\n\nclass BufferOperator<T> implements Operator<T, T[]> {\n\n  constructor(private closingNotifier: Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T[]>, source: any): any {\n    return source.subscribe(new BufferSubscriber(subscriber, this.closingNotifier));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass BufferSubscriber<T> extends OuterSubscriber<T, any> {\n  private buffer: T[] = [];\n\n  constructor(destination: Subscriber<T[]>, closingNotifier: Observable<any>) {\n    super(destination);\n    this.add(subscribeToResult(this, closingNotifier));\n  }\n\n  protected _next(value: T) {\n    this.buffer.push(value);\n  }\n\n  notifyNext(outerValue: T, innerValue: any,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, any>): void {\n    const buffer = this.buffer;\n    this.buffer = [];\n    this.destination.next(buffer);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Buffers the source Observable values until the size hits the maximum\n * `bufferSize` given.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * that array only when its size reaches `bufferSize`.</span>\n *\n * <img src=\"./img/bufferCount.png\" width=\"100%\">\n *\n * Buffers a number of values from the source Observable by `bufferSize` then\n * emits the buffer and clears it, and starts a new buffer each\n * `startBufferEvery` values. If `startBufferEvery` is not provided or is\n * `null`, then new buffers are started immediately at the start of the source\n * and when each buffer closes and is emitted.\n *\n * @example <caption>Emit the last two click events as an array</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferCount(2);\n * buffered.subscribe(x => console.log(x));\n *\n * @example <caption>On every click, emit the last two click events as an array</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferCount(2, 1);\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link pairwise}\n * @see {@link windowCount}\n *\n * @param {number} bufferSize The maximum size of the buffer emitted.\n * @param {number} [startBufferEvery] Interval at which to start a new buffer.\n * For example if `startBufferEvery` is `2`, then a new buffer will be started\n * on every other value from the source. A new buffer is started at the\n * beginning of the source by default.\n * @return {Observable<T[]>} An Observable of arrays of buffered values.\n * @method bufferCount\n * @owner Observable\n */\nexport function bufferCount<T>(bufferSize: number, startBufferEvery: number = null): OperatorFunction<T, T[]> {\n  return function bufferCountOperatorFunction(source: Observable<T>) {\n    return source.lift(new BufferCountOperator<T>(bufferSize, startBufferEvery));\n  };\n}\n\nclass BufferCountOperator<T> implements Operator<T, T[]> {\n  private subscriberClass: any;\n\n  constructor(private bufferSize: number, private startBufferEvery: number) {\n    if (!startBufferEvery || bufferSize === startBufferEvery) {\n      this.subscriberClass = BufferCountSubscriber;\n    } else {\n      this.subscriberClass = BufferSkipCountSubscriber;\n    }\n  }\n\n  call(subscriber: Subscriber<T[]>, source: any): TeardownLogic {\n    return source.subscribe(new this.subscriberClass(subscriber, this.bufferSize, this.startBufferEvery));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass BufferCountSubscriber<T> extends Subscriber<T> {\n  private buffer: T[] = [];\n\n  constructor(destination: Subscriber<T[]>, private bufferSize: number) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const buffer = this.buffer;\n\n    buffer.push(value);\n\n    if (buffer.length == this.bufferSize) {\n      this.destination.next(buffer);\n      this.buffer = [];\n    }\n  }\n\n  protected _complete(): void {\n    const buffer = this.buffer;\n    if (buffer.length > 0) {\n      this.destination.next(buffer);\n    }\n    super._complete();\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass BufferSkipCountSubscriber<T> extends Subscriber<T> {\n  private buffers: Array<T[]> = [];\n  private count: number = 0;\n\n  constructor(destination: Subscriber<T[]>, private bufferSize: number, private startBufferEvery: number) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const { bufferSize, startBufferEvery, buffers, count } = this;\n\n    this.count++;\n    if (count % startBufferEvery === 0) {\n      buffers.push([]);\n    }\n\n    for (let i = buffers.length; i--; ) {\n      const buffer = buffers[i];\n      buffer.push(value);\n      if (buffer.length === bufferSize) {\n        buffers.splice(i, 1);\n        this.destination.next(buffer);\n      }\n    }\n  }\n\n  protected _complete(): void {\n    const { buffers, destination } = this;\n\n    while (buffers.length > 0) {\n      let buffer = buffers.shift();\n      if (buffer.length > 0) {\n        destination.next(buffer);\n      }\n    }\n    super._complete();\n  }\n\n}\n","import { IScheduler } from '../Scheduler';\nimport { Action } from '../scheduler/Action';\nimport { Operator } from '../Operator';\nimport { async } from '../scheduler/async';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { isScheduler } from '../util/isScheduler';\nimport { OperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function bufferTime<T>(bufferTimeSpan: number, scheduler?: IScheduler): OperatorFunction<T, T[]>;\nexport function bufferTime<T>(bufferTimeSpan: number, bufferCreationInterval: number, scheduler?: IScheduler): OperatorFunction<T, T[]>;\nexport function bufferTime<T>(bufferTimeSpan: number, bufferCreationInterval: number, maxBufferSize: number, scheduler?: IScheduler): OperatorFunction<T, T[]>;\n/* tslint:enable:max-line-length */\n\n/**\n * Buffers the source Observable values for a specific time period.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * those arrays periodically in time.</span>\n *\n * <img src=\"./img/bufferTime.png\" width=\"100%\">\n *\n * Buffers values from the source for a specific time duration `bufferTimeSpan`.\n * Unless the optional argument `bufferCreationInterval` is given, it emits and\n * resets the buffer every `bufferTimeSpan` milliseconds. If\n * `bufferCreationInterval` is given, this operator opens the buffer every\n * `bufferCreationInterval` milliseconds and closes (emits and resets) the\n * buffer every `bufferTimeSpan` milliseconds. When the optional argument\n * `maxBufferSize` is specified, the buffer will be closed either after\n * `bufferTimeSpan` milliseconds or when it contains `maxBufferSize` elements.\n *\n * @example <caption>Every second, emit an array of the recent click events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferTime(1000);\n * buffered.subscribe(x => console.log(x));\n *\n * @example <caption>Every 5 seconds, emit the click events from the next 2 seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferTime(2000, 5000);\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link windowTime}\n *\n * @param {number} bufferTimeSpan The amount of time to fill each buffer array.\n * @param {number} [bufferCreationInterval] The interval at which to start new\n * buffers.\n * @param {number} [maxBufferSize] The maximum buffer size.\n * @param {Scheduler} [scheduler=async] The scheduler on which to schedule the\n * intervals that determine buffer boundaries.\n * @return {Observable<T[]>} An observable of arrays of buffered values.\n * @method bufferTime\n * @owner Observable\n */\nexport function bufferTime<T>(bufferTimeSpan: number): OperatorFunction<T, T[]> {\n  let length: number = arguments.length;\n\n  let scheduler: IScheduler = async;\n  if (isScheduler(arguments[arguments.length - 1])) {\n    scheduler = arguments[arguments.length - 1];\n    length--;\n  }\n\n  let bufferCreationInterval: number = null;\n  if (length >= 2) {\n    bufferCreationInterval = arguments[1];\n  }\n\n  let maxBufferSize: number = Number.POSITIVE_INFINITY;\n  if (length >= 3) {\n    maxBufferSize = arguments[2];\n  }\n\n  return function bufferTimeOperatorFunction(source: Observable<T>) {\n    return source.lift(new BufferTimeOperator<T>(bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler));\n  };\n}\n\nclass BufferTimeOperator<T> implements Operator<T, T[]> {\n  constructor(private bufferTimeSpan: number,\n              private bufferCreationInterval: number,\n              private maxBufferSize: number,\n              private scheduler: IScheduler) {\n  }\n\n  call(subscriber: Subscriber<T[]>, source: any): any {\n    return source.subscribe(new BufferTimeSubscriber(\n      subscriber, this.bufferTimeSpan, this.bufferCreationInterval, this.maxBufferSize, this.scheduler\n    ));\n  }\n}\n\nclass Context<T> {\n  buffer: T[] = [];\n  closeAction: Subscription;\n}\n\ntype CreationState<T> = {\n  bufferTimeSpan: number;\n  bufferCreationInterval: number,\n  subscriber: BufferTimeSubscriber<T>;\n  scheduler: IScheduler;\n};\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass BufferTimeSubscriber<T> extends Subscriber<T> {\n  private contexts: Array<Context<T>> = [];\n  private timespanOnly: boolean;\n\n  constructor(destination: Subscriber<T[]>,\n              private bufferTimeSpan: number,\n              private bufferCreationInterval: number,\n              private maxBufferSize: number,\n              private scheduler: IScheduler) {\n    super(destination);\n    const context = this.openContext();\n    this.timespanOnly = bufferCreationInterval == null || bufferCreationInterval < 0;\n    if (this.timespanOnly) {\n      const timeSpanOnlyState = { subscriber: this, context, bufferTimeSpan };\n      this.add(context.closeAction = scheduler.schedule(dispatchBufferTimeSpanOnly, bufferTimeSpan, timeSpanOnlyState));\n    } else {\n      const closeState = { subscriber: this, context };\n      const creationState: CreationState<T> = { bufferTimeSpan, bufferCreationInterval, subscriber: this, scheduler };\n      this.add(context.closeAction = scheduler.schedule(dispatchBufferClose, bufferTimeSpan, closeState));\n      this.add(scheduler.schedule(dispatchBufferCreation, bufferCreationInterval, creationState));\n    }\n  }\n\n  protected _next(value: T) {\n    const contexts = this.contexts;\n    const len = contexts.length;\n    let filledBufferContext: Context<T>;\n    for (let i = 0; i < len; i++) {\n      const context = contexts[i];\n      const buffer = context.buffer;\n      buffer.push(value);\n      if (buffer.length == this.maxBufferSize) {\n        filledBufferContext = context;\n      }\n    }\n\n    if (filledBufferContext) {\n      this.onBufferFull(filledBufferContext);\n    }\n  }\n\n  protected _error(err: any) {\n    this.contexts.length = 0;\n    super._error(err);\n  }\n\n  protected _complete() {\n    const { contexts, destination } = this;\n    while (contexts.length > 0) {\n      const context = contexts.shift();\n      destination.next(context.buffer);\n    }\n    super._complete();\n  }\n\n  protected _unsubscribe() {\n    this.contexts = null;\n  }\n\n  protected onBufferFull(context: Context<T>) {\n    this.closeContext(context);\n    const closeAction = context.closeAction;\n    closeAction.unsubscribe();\n    this.remove(closeAction);\n\n    if (!this.closed && this.timespanOnly) {\n      context = this.openContext();\n      const bufferTimeSpan = this.bufferTimeSpan;\n      const timeSpanOnlyState = { subscriber: this, context, bufferTimeSpan };\n      this.add(context.closeAction = this.scheduler.schedule(dispatchBufferTimeSpanOnly, bufferTimeSpan, timeSpanOnlyState));\n    }\n  }\n\n  openContext(): Context<T> {\n    const context: Context<T> = new Context<T>();\n    this.contexts.push(context);\n    return context;\n  }\n\n  closeContext(context: Context<T>) {\n    this.destination.next(context.buffer);\n    const contexts = this.contexts;\n\n    const spliceIndex = contexts ? contexts.indexOf(context) : -1;\n    if (spliceIndex >= 0) {\n      contexts.splice(contexts.indexOf(context), 1);\n    }\n  }\n}\n\nfunction dispatchBufferTimeSpanOnly(this: Action<any>, state: any) {\n  const subscriber: BufferTimeSubscriber<any> = state.subscriber;\n\n  const prevContext = state.context;\n  if (prevContext) {\n    subscriber.closeContext(prevContext);\n  }\n\n  if (!subscriber.closed) {\n    state.context = subscriber.openContext();\n    state.context.closeAction = this.schedule(state, state.bufferTimeSpan);\n  }\n}\n\ninterface DispatchArg<T> {\n  subscriber: BufferTimeSubscriber<T>;\n  context: Context<T>;\n}\n\nfunction dispatchBufferCreation<T>(this: Action<CreationState<T>>, state: CreationState<T>) {\n  const { bufferCreationInterval, bufferTimeSpan, subscriber, scheduler } = state;\n  const context = subscriber.openContext();\n  const action = <Action<CreationState<T>>>this;\n  if (!subscriber.closed) {\n    subscriber.add(context.closeAction = scheduler.schedule<DispatchArg<T>>(dispatchBufferClose, bufferTimeSpan, { subscriber, context }));\n    action.schedule(state, bufferCreationInterval);\n  }\n}\n\nfunction dispatchBufferClose<T>(arg: DispatchArg<T>) {\n  const { subscriber, context } = arg;\n  subscriber.closeContext(context);\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable, SubscribableOrPromise } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Buffers the source Observable values starting from an emission from\n * `openings` and ending when the output of `closingSelector` emits.\n *\n * <span class=\"informal\">Collects values from the past as an array. Starts\n * collecting only when `opening` emits, and calls the `closingSelector`\n * function to get an Observable that tells when to close the buffer.</span>\n *\n * <img src=\"./img/bufferToggle.png\" width=\"100%\">\n *\n * Buffers values from the source by opening the buffer via signals from an\n * Observable provided to `openings`, and closing and sending the buffers when\n * a Subscribable or Promise returned by the `closingSelector` function emits.\n *\n * @example <caption>Every other second, emit the click events from the next 500ms</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var openings = Rx.Observable.interval(1000);\n * var buffered = clicks.bufferToggle(openings, i =>\n *   i % 2 ? Rx.Observable.interval(500) : Rx.Observable.empty()\n * );\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferWhen}\n * @see {@link windowToggle}\n *\n * @param {SubscribableOrPromise<O>} openings A Subscribable or Promise of notifications to start new\n * buffers.\n * @param {function(value: O): SubscribableOrPromise} closingSelector A function that takes\n * the value emitted by the `openings` observable and returns a Subscribable or Promise,\n * which, when it emits, signals that the associated buffer should be emitted\n * and cleared.\n * @return {Observable<T[]>} An observable of arrays of buffered values.\n * @method bufferToggle\n * @owner Observable\n */\nexport function bufferToggle<T, O>(\n  openings: SubscribableOrPromise<O>,\n  closingSelector: (value: O) => SubscribableOrPromise<any>\n): OperatorFunction<T, T[]> {\n  return function bufferToggleOperatorFunction(source: Observable<T>) {\n    return source.lift(new BufferToggleOperator<T, O>(openings, closingSelector));\n  };\n}\n\nclass BufferToggleOperator<T, O> implements Operator<T, T[]> {\n\n  constructor(private openings: SubscribableOrPromise<O>,\n              private closingSelector: (value: O) => SubscribableOrPromise<any>) {\n  }\n\n  call(subscriber: Subscriber<T[]>, source: any): any {\n    return source.subscribe(new BufferToggleSubscriber(subscriber, this.openings, this.closingSelector));\n  }\n}\n\ninterface BufferContext<T> {\n  buffer: T[];\n  subscription: Subscription;\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass BufferToggleSubscriber<T, O> extends OuterSubscriber<T, O> {\n  private contexts: Array<BufferContext<T>> = [];\n\n  constructor(destination: Subscriber<T[]>,\n              private openings: SubscribableOrPromise<O>,\n              private closingSelector: (value: O) => SubscribableOrPromise<any> | void) {\n    super(destination);\n    this.add(subscribeToResult(this, openings));\n  }\n\n  protected _next(value: T): void {\n    const contexts = this.contexts;\n    const len = contexts.length;\n    for (let i = 0; i < len; i++) {\n      contexts[i].buffer.push(value);\n    }\n  }\n\n  protected _error(err: any): void {\n    const contexts = this.contexts;\n    while (contexts.length > 0) {\n      const context = contexts.shift();\n      context.subscription.unsubscribe();\n      context.buffer = null;\n      context.subscription = null;\n    }\n    this.contexts = null;\n    super._error(err);\n  }\n\n  protected _complete(): void {\n    const contexts = this.contexts;\n    while (contexts.length > 0) {\n      const context = contexts.shift();\n      this.destination.next(context.buffer);\n      context.subscription.unsubscribe();\n      context.buffer = null;\n      context.subscription = null;\n    }\n    this.contexts = null;\n    super._complete();\n  }\n\n  notifyNext(outerValue: any, innerValue: O,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, O>): void {\n    outerValue ? this.closeBuffer(outerValue) : this.openBuffer(innerValue);\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, O>): void {\n    this.closeBuffer((<any> innerSub).context);\n  }\n\n  private openBuffer(value: O): void {\n    try {\n      const closingSelector = this.closingSelector;\n      const closingNotifier = closingSelector.call(this, value);\n      if (closingNotifier) {\n        this.trySubscribe(closingNotifier);\n      }\n    } catch (err) {\n      this._error(err);\n    }\n  }\n\n  private closeBuffer(context: BufferContext<T>): void {\n    const contexts = this.contexts;\n\n    if (contexts && context) {\n      const { buffer, subscription } = context;\n      this.destination.next(buffer);\n      contexts.splice(contexts.indexOf(context), 1);\n      this.remove(subscription);\n      subscription.unsubscribe();\n    }\n  }\n\n  private trySubscribe(closingNotifier: any): void {\n    const contexts = this.contexts;\n\n    const buffer: Array<T> = [];\n    const subscription = new Subscription();\n    const context = { buffer, subscription };\n    contexts.push(context);\n\n    const innerSubscription = subscribeToResult(this, closingNotifier, <any>context);\n\n    if (!innerSubscription || innerSubscription.closed) {\n      this.closeBuffer(context);\n    } else {\n      (<any> innerSubscription).context = context;\n\n      this.add(innerSubscription);\n      subscription.add(innerSubscription);\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Buffers the source Observable values, using a factory function of closing\n * Observables to determine when to close, emit, and reset the buffer.\n *\n * <span class=\"informal\">Collects values from the past as an array. When it\n * starts collecting values, it calls a function that returns an Observable that\n * tells when to close the buffer and restart collecting.</span>\n *\n * <img src=\"./img/bufferWhen.png\" width=\"100%\">\n *\n * Opens a buffer immediately, then closes the buffer when the observable\n * returned by calling `closingSelector` function emits a value. When it closes\n * the buffer, it immediately opens a new buffer and repeats the process.\n *\n * @example <caption>Emit an array of the last clicks every [1-5] random seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferWhen(() =>\n *   Rx.Observable.interval(1000 + Math.random() * 4000)\n * );\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link windowWhen}\n *\n * @param {function(): Observable} closingSelector A function that takes no\n * arguments and returns an Observable that signals buffer closure.\n * @return {Observable<T[]>} An observable of arrays of buffered values.\n * @method bufferWhen\n * @owner Observable\n */\nexport function bufferWhen<T>(closingSelector: () => Observable<any>): OperatorFunction<T, T[]> {\n  return function (source: Observable<T>) {\n    return source.lift(new BufferWhenOperator(closingSelector));\n  };\n}\n\nclass BufferWhenOperator<T> implements Operator<T, T[]> {\n\n  constructor(private closingSelector: () => Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T[]>, source: any): any {\n    return source.subscribe(new BufferWhenSubscriber(subscriber, this.closingSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass BufferWhenSubscriber<T> extends OuterSubscriber<T, any> {\n  private buffer: T[];\n  private subscribing: boolean = false;\n  private closingSubscription: Subscription;\n\n  constructor(destination: Subscriber<T[]>, private closingSelector: () => Observable<any>) {\n    super(destination);\n    this.openBuffer();\n  }\n\n  protected _next(value: T) {\n    this.buffer.push(value);\n  }\n\n  protected _complete() {\n    const buffer = this.buffer;\n    if (buffer) {\n      this.destination.next(buffer);\n    }\n    super._complete();\n  }\n\n  protected _unsubscribe() {\n    this.buffer = null;\n    this.subscribing = false;\n  }\n\n  notifyNext(outerValue: T, innerValue: any,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, any>): void {\n    this.openBuffer();\n  }\n\n  notifyComplete(): void {\n    if (this.subscribing) {\n      this.complete();\n    } else {\n      this.openBuffer();\n    }\n  }\n\n  openBuffer() {\n\n    let { closingSubscription } = this;\n\n    if (closingSubscription) {\n      this.remove(closingSubscription);\n      closingSubscription.unsubscribe();\n    }\n\n    const buffer = this.buffer;\n    if (this.buffer) {\n      this.destination.next(buffer);\n    }\n\n    this.buffer = [];\n\n    const closingNotifier = tryCatch(this.closingSelector)();\n\n    if (closingNotifier === errorObject) {\n      this.error(errorObject.e);\n    } else {\n      closingSubscription = new Subscription();\n      this.closingSubscription = closingSubscription;\n      this.add(closingSubscription);\n      this.subscribing = true;\n      closingSubscription.add(subscribeToResult(this, closingNotifier));\n      this.subscribing = false;\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable, ObservableInput } from '../Observable';\n\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Catches errors on the observable to be handled by returning a new observable or throwing an error.\n *\n * <img src=\"./img/catch.png\" width=\"100%\">\n *\n * @example <caption>Continues with a different Observable when there's an error</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n * \t   if (n == 4) {\n * \t     throw 'four!';\n *     }\n *\t   return n;\n *   })\n *   .catch(err => Observable.of('I', 'II', 'III', 'IV', 'V'))\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, I, II, III, IV, V\n *\n * @example <caption>Retries the caught source Observable again in case of error, similar to retry() operator</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n * \t   if (n === 4) {\n * \t     throw 'four!';\n *     }\n * \t   return n;\n *   })\n *   .catch((err, caught) => caught)\n *   .take(30)\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, 1, 2, 3, ...\n *\n * @example <caption>Throws a new error when the source Observable throws an error</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n *     if (n == 4) {\n *       throw 'four!';\n *     }\n *     return n;\n *   })\n *   .catch(err => {\n *     throw 'error in source. Details: ' + err;\n *   })\n *   .subscribe(\n *     x => console.log(x),\n *     err => console.log(err)\n *   );\n *   // 1, 2, 3, error in source. Details: four!\n *\n * @param {function} selector a function that takes as arguments `err`, which is the error, and `caught`, which\n *  is the source observable, in case you'd like to \"retry\" that observable by returning it again. Whatever observable\n *  is returned by the `selector` will be used to continue the observable chain.\n * @return {Observable} An observable that originates from either the source or the observable returned by the\n *  catch `selector` function.\n * @name catchError\n */\nexport function catchError<T, R>(selector: (err: any, caught: Observable<T>) => ObservableInput<R>): OperatorFunction<T, T | R> {\n  return function catchErrorOperatorFunction(source: Observable<T>): Observable<T | R> {\n    const operator = new CatchOperator(selector);\n    const caught = source.lift(operator);\n    return (operator.caught = caught as Observable<T>);\n  };\n}\n\nclass CatchOperator<T, R> implements Operator<T, T | R> {\n  caught: Observable<T>;\n\n  constructor(private selector: (err: any, caught: Observable<T>) => ObservableInput<T | R>) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new CatchSubscriber(subscriber, this.selector, this.caught));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass CatchSubscriber<T, R> extends OuterSubscriber<T, T | R> {\n  constructor(destination: Subscriber<any>,\n              private selector: (err: any, caught: Observable<T>) => ObservableInput<T | R>,\n              private caught: Observable<T>) {\n    super(destination);\n  }\n\n  // NOTE: overriding `error` instead of `_error` because we don't want\n  // to have this flag this subscriber as `isStopped`. We can mimic the\n  // behavior of the RetrySubscriber (from the `retry` operator), where\n  // we unsubscribe from our source chain, reset our Subscriber flags,\n  // then subscribe to the selector result.\n  error(err: any) {\n    if (!this.isStopped) {\n      let result: any;\n      try {\n        result = this.selector(err, this.caught);\n      } catch (err2) {\n        super.error(err2);\n        return;\n      }\n      this._unsubscribeAndRecycle();\n      this.add(subscribeToResult(this, result));\n    }\n  }\n}\n","import { IScheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { TeardownLogic } from '../Subscription';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class ScalarObservable<T> extends Observable<T> {\n  static create<T>(value: T, scheduler?: IScheduler): ScalarObservable<T> {\n    return new ScalarObservable(value, scheduler);\n  }\n\n  static dispatch(state: any): void {\n    const { done, value, subscriber } = state;\n\n    if (done) {\n      subscriber.complete();\n      return;\n    }\n\n    subscriber.next(value);\n    if (subscriber.closed) {\n      return;\n    }\n\n    state.done = true;\n    (<any> this).schedule(state);\n  }\n\n  _isScalar: boolean = true;\n\n  constructor(public value: T, private scheduler?: IScheduler) {\n    super();\n    if (scheduler) {\n      this._isScalar = false;\n    }\n  }\n\n  protected _subscribe(subscriber: Subscriber<T>): TeardownLogic {\n    const value = this.value;\n    const scheduler = this.scheduler;\n\n    if (scheduler) {\n      return scheduler.schedule(ScalarObservable.dispatch, 0, {\n        done: false, value, subscriber\n      });\n    } else {\n      subscriber.next(value);\n      if (!subscriber.closed) {\n        subscriber.complete();\n      }\n    }\n  }\n}\n","import { IScheduler } from '../Scheduler';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\n\nexport interface DispatchArg<T> {\n  subscriber: Subscriber<T>;\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class EmptyObservable<T> extends Observable<T> {\n\n  /**\n   * Creates an Observable that emits no items to the Observer and immediately\n   * emits a complete notification.\n   *\n   * <span class=\"informal\">Just emits 'complete', and nothing else.\n   * </span>\n   *\n   * <img src=\"./img/empty.png\" width=\"100%\">\n   *\n   * This static operator is useful for creating a simple Observable that only\n   * emits the complete notification. It can be used for composing with other\n   * Observables, such as in a {@link mergeMap}.\n   *\n   * @example <caption>Emit the number 7, then complete.</caption>\n   * var result = Rx.Observable.empty().startWith(7);\n   * result.subscribe(x => console.log(x));\n   *\n   * @example <caption>Map and flatten only odd numbers to the sequence 'a', 'b', 'c'</caption>\n   * var interval = Rx.Observable.interval(1000);\n   * var result = interval.mergeMap(x =>\n   *   x % 2 === 1 ? Rx.Observable.of('a', 'b', 'c') : Rx.Observable.empty()\n   * );\n   * result.subscribe(x => console.log(x));\n   *\n   * // Results in the following to the console:\n   * // x is equal to the count on the interval eg(0,1,2,3,...)\n   * // x will occur every 1000ms\n   * // if x % 2 is equal to 1 print abc\n   * // if x % 2 is not equal to 1 nothing will be output\n   *\n   * @see {@link create}\n   * @see {@link never}\n   * @see {@link of}\n   * @see {@link throw}\n   *\n   * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling\n   * the emission of the complete notification.\n   * @return {Observable} An \"empty\" Observable: emits only the complete\n   * notification.\n   * @static true\n   * @name empty\n   * @owner Observable\n   */\n  static create<T>(scheduler?: IScheduler): Observable<T> {\n    return new EmptyObservable<T>(scheduler);\n  }\n\n  static dispatch<T>(arg: DispatchArg<T>) {\n    const { subscriber } = arg;\n    subscriber.complete();\n  }\n\n  constructor(private scheduler?: IScheduler) {\n    super();\n  }\n\n  protected _subscribe(subscriber: Subscriber<T>): TeardownLogic {\n\n    const scheduler = this.scheduler;\n\n    if (scheduler) {\n      return scheduler.schedule(EmptyObservable.dispatch, 0, { subscriber });\n    } else {\n      subscriber.complete();\n    }\n  }\n}\n","import { IScheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { ScalarObservable } from './ScalarObservable';\nimport { EmptyObservable } from './EmptyObservable';\nimport { Subscriber } from '../Subscriber';\nimport { isScheduler } from '../util/isScheduler';\nimport { TeardownLogic } from '../Subscription';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class ArrayObservable<T> extends Observable<T> {\n\n  static create<T>(array: T[], scheduler?: IScheduler): Observable<T> {\n    return new ArrayObservable(array, scheduler);\n  }\n\n  static of<T>(item1: T, scheduler?: IScheduler): Observable<T>;\n  static of<T>(item1: T, item2: T, scheduler?: IScheduler): Observable<T>;\n  static of<T>(item1: T, item2: T, item3: T, scheduler?: IScheduler): Observable<T>;\n  static of<T>(item1: T, item2: T, item3: T, item4: T, scheduler?: IScheduler): Observable<T>;\n  static of<T>(item1: T, item2: T, item3: T, item4: T, item5: T, scheduler?: IScheduler): Observable<T>;\n  static of<T>(item1: T, item2: T, item3: T, item4: T, item5: T, item6: T, scheduler?: IScheduler): Observable<T>;\n  static of<T>(...array: Array<T | IScheduler>): Observable<T>;\n  /**\n   * Creates an Observable that emits some values you specify as arguments,\n   * immediately one after the other, and then emits a complete notification.\n   *\n   * <span class=\"informal\">Emits the arguments you provide, then completes.\n   * </span>\n   *\n   * <img src=\"./img/of.png\" width=\"100%\">\n   *\n   * This static operator is useful for creating a simple Observable that only\n   * emits the arguments given, and the complete notification thereafter. It can\n   * be used for composing with other Observables, such as with {@link concat}.\n   * By default, it uses a `null` IScheduler, which means the `next`\n   * notifications are sent synchronously, although with a different IScheduler\n   * it is possible to determine when those notifications will be delivered.\n   *\n   * @example <caption>Emit 10, 20, 30, then 'a', 'b', 'c', then start ticking every second.</caption>\n   * var numbers = Rx.Observable.of(10, 20, 30);\n   * var letters = Rx.Observable.of('a', 'b', 'c');\n   * var interval = Rx.Observable.interval(1000);\n   * var result = numbers.concat(letters).concat(interval);\n   * result.subscribe(x => console.log(x));\n   *\n   * @see {@link create}\n   * @see {@link empty}\n   * @see {@link never}\n   * @see {@link throw}\n   *\n   * @param {...T} values Arguments that represent `next` values to be emitted.\n   * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling\n   * the emissions of the `next` notifications.\n   * @return {Observable<T>} An Observable that emits each given input value.\n   * @static true\n   * @name of\n   * @owner Observable\n   */\n  static of<T>(...array: Array<T | IScheduler>): Observable<T> {\n    let scheduler = <IScheduler>array[array.length - 1];\n    if (isScheduler(scheduler)) {\n      array.pop();\n    } else {\n      scheduler = null;\n    }\n\n    const len = array.length;\n    if (len > 1) {\n      return new ArrayObservable<T>(<any>array, scheduler);\n    } else if (len === 1) {\n      return new ScalarObservable<T>(<any>array[0], scheduler);\n    } else {\n      return new EmptyObservable<T>(scheduler);\n    }\n  }\n\n  static dispatch(state: any) {\n\n    const { array, index, count, subscriber } = state;\n\n    if (index >= count) {\n      subscriber.complete();\n      return;\n    }\n\n    subscriber.next(array[index]);\n\n    if (subscriber.closed) {\n      return;\n    }\n\n    state.index = index + 1;\n\n    (<any> this).schedule(state);\n  }\n\n  // value used if Array has one value and _isScalar\n  value: any;\n\n  constructor(private array: T[], private scheduler?: IScheduler) {\n    super();\n    if (!scheduler && array.length === 1) {\n      this._isScalar = true;\n      this.value = array[0];\n    }\n  }\n\n  protected _subscribe(subscriber: Subscriber<T>): TeardownLogic {\n    let index = 0;\n    const array = this.array;\n    const count = array.length;\n    const scheduler = this.scheduler;\n\n    if (scheduler) {\n      return scheduler.schedule(ArrayObservable.dispatch, 0, {\n        array, index, count, subscriber\n      });\n    } else {\n      for (let i = 0; i < count && !subscriber.closed; i++) {\n        subscriber.next(array[i]);\n      }\n      subscriber.complete();\n    }\n  }\n}\n","import { Observable, ObservableInput } from '../Observable';\nimport { ArrayObservable } from '../observable/ArrayObservable';\nimport { isArray } from '../util/isArray';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../interfaces';\n\nconst none = {};\n\n/* tslint:disable:max-line-length */\nexport function combineLatest<T, R>(project: (v1: T) => R): OperatorFunction<T, R>;\nexport function combineLatest<T, T2, R>(v2: ObservableInput<T2>, project: (v1: T, v2: T2) => R): OperatorFunction<T, R>;\nexport function combineLatest<T, T2, T3, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, project: (v1: T, v2: T2, v3: T3) => R): OperatorFunction<T, R>;\nexport function combineLatest<T, T2, T3, T4, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, project: (v1: T, v2: T2, v3: T3, v4: T4) => R): OperatorFunction<T, R>;\nexport function combineLatest<T, T2, T3, T4, T5, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5) => R): OperatorFunction<T, R>;\nexport function combineLatest<T, T2, T3, T4, T5, T6, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6) => R): OperatorFunction<T, R> ;\nexport function combineLatest<T, T2>(v2: ObservableInput<T2>): OperatorFunction<T, [T, T2]>;\nexport function combineLatest<T, T2, T3>(v2: ObservableInput<T2>, v3: ObservableInput<T3>): OperatorFunction<T, [T, T2, T3]>;\nexport function combineLatest<T, T2, T3, T4>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): OperatorFunction<T, [T, T2, T3, T4]>;\nexport function combineLatest<T, T2, T3, T4, T5>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): OperatorFunction<T, [T, T2, T3, T4, T5]>;\nexport function combineLatest<T, T2, T3, T4, T5, T6>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): OperatorFunction<T, [T, T2, T3, T4, T5, T6]> ;\nexport function combineLatest<T, R>(...observables: Array<ObservableInput<T> | ((...values: Array<T>) => R)>): OperatorFunction<T, R>;\nexport function combineLatest<T, R>(array: ObservableInput<T>[]): OperatorFunction<T, Array<T>>;\nexport function combineLatest<T, TOther, R>(array: ObservableInput<TOther>[], project: (v1: T, ...values: Array<TOther>) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Combines multiple Observables to create an Observable whose values are\n * calculated from the latest values of each of its input Observables.\n *\n * <span class=\"informal\">Whenever any input Observable emits a value, it\n * computes a formula using the latest values from all the inputs, then emits\n * the output of that formula.</span>\n *\n * <img src=\"./img/combineLatest.png\" width=\"100%\">\n *\n * `combineLatest` combines the values from this Observable with values from\n * Observables passed as arguments. This is done by subscribing to each\n * Observable, in order, and collecting an array of each of the most recent\n * values any time any of the input Observables emits, then either taking that\n * array and passing it as arguments to an optional `project` function and\n * emitting the return value of that, or just emitting the array of recent\n * values directly if there is no `project` function.\n *\n * @example <caption>Dynamically calculate the Body-Mass Index from an Observable of weight and one for height</caption>\n * var weight = Rx.Observable.of(70, 72, 76, 79, 75);\n * var height = Rx.Observable.of(1.76, 1.77, 1.78);\n * var bmi = weight.combineLatest(height, (w, h) => w / (h * h));\n * bmi.subscribe(x => console.log('BMI is ' + x));\n *\n * // With output to console:\n * // BMI is 24.212293388429753\n * // BMI is 23.93948099205209\n * // BMI is 23.671253629592222\n *\n * @see {@link combineAll}\n * @see {@link merge}\n * @see {@link withLatestFrom}\n *\n * @param {ObservableInput} other An input Observable to combine with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {function} [project] An optional function to project the values from\n * the combined latest values into a new value on the output Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n * @method combineLatest\n * @owner Observable\n */\nexport function combineLatest<T, R>(...observables: Array<ObservableInput<any> |\n                                                    Array<ObservableInput<any>> |\n                                                    ((...values: Array<any>) => R)>): OperatorFunction<T, R> {\n  let project: (...values: Array<any>) => R = null;\n  if (typeof observables[observables.length - 1] === 'function') {\n    project = <(...values: Array<any>) => R>observables.pop();\n  }\n\n  // if the first and only other argument besides the resultSelector is an array\n  // assume it's been called with `combineLatest([obs1, obs2, obs3], project)`\n  if (observables.length === 1 && isArray(observables[0])) {\n    observables = (<any>observables[0]).slice();\n  }\n\n  return (source: Observable<T>) => source.lift.call(new ArrayObservable([source, ...observables]), new CombineLatestOperator(project));\n}\n\nexport class CombineLatestOperator<T, R> implements Operator<T, R> {\n  constructor(private project?: (...values: Array<any>) => R) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new CombineLatestSubscriber(subscriber, this.project));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class CombineLatestSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private active: number = 0;\n  private values: any[] = [];\n  private observables: any[] = [];\n  private toRespond: number;\n\n  constructor(destination: Subscriber<R>, private project?: (...values: Array<any>) => R) {\n    super(destination);\n  }\n\n  protected _next(observable: any) {\n    this.values.push(none);\n    this.observables.push(observable);\n  }\n\n  protected _complete() {\n    const observables = this.observables;\n    const len = observables.length;\n    if (len === 0) {\n      this.destination.complete();\n    } else {\n      this.active = len;\n      this.toRespond = len;\n      for (let i = 0; i < len; i++) {\n        const observable = observables[i];\n        this.add(subscribeToResult(this, observable, observable, i));\n      }\n    }\n  }\n\n  notifyComplete(unused: Subscriber<R>): void {\n    if ((this.active -= 1) === 0) {\n      this.destination.complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    const values = this.values;\n    const oldVal = values[outerIndex];\n    const toRespond = !this.toRespond\n      ? 0\n      : oldVal === none ? --this.toRespond : this.toRespond;\n    values[outerIndex] = innerValue;\n\n    if (toRespond === 0) {\n      if (this.project) {\n        this._tryProject(values);\n      } else {\n        this.destination.next(values.slice());\n      }\n    }\n  }\n\n  private _tryProject(values: any[]) {\n    let result: any;\n    try {\n      result = this.project.apply(this, values);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n}\n","import { root } from '../util/root';\nimport { IScheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { TeardownLogic } from '../Subscription';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class PromiseObservable<T> extends Observable<T> {\n\n  public value: T;\n\n  /**\n   * Converts a Promise to an Observable.\n   *\n   * <span class=\"informal\">Returns an Observable that just emits the Promise's\n   * resolved value, then completes.</span>\n   *\n   * Converts an ES2015 Promise or a Promises/A+ spec compliant Promise to an\n   * Observable. If the Promise resolves with a value, the output Observable\n   * emits that resolved value as a `next`, and then completes. If the Promise\n   * is rejected, then the output Observable emits the corresponding Error.\n   *\n   * @example <caption>Convert the Promise returned by Fetch to an Observable</caption>\n   * var result = Rx.Observable.fromPromise(fetch('http://myserver.com/'));\n   * result.subscribe(x => console.log(x), e => console.error(e));\n   *\n   * @see {@link bindCallback}\n   * @see {@link from}\n   *\n   * @param {PromiseLike<T>} promise The promise to be converted.\n   * @param {Scheduler} [scheduler] An optional IScheduler to use for scheduling\n   * the delivery of the resolved value (or the rejection).\n   * @return {Observable<T>} An Observable which wraps the Promise.\n   * @static true\n   * @name fromPromise\n   * @owner Observable\n   */\n  static create<T>(promise: PromiseLike<T>, scheduler?: IScheduler): Observable<T> {\n    return new PromiseObservable(promise, scheduler);\n  }\n\n  constructor(private promise: PromiseLike<T>, private scheduler?: IScheduler) {\n    super();\n  }\n\n  protected _subscribe(subscriber: Subscriber<T>): TeardownLogic {\n    const promise = this.promise;\n    const scheduler = this.scheduler;\n\n    if (scheduler == null) {\n      if (this._isScalar) {\n        if (!subscriber.closed) {\n          subscriber.next(this.value);\n          subscriber.complete();\n        }\n      } else {\n        promise.then(\n          (value) => {\n            this.value = value;\n            this._isScalar = true;\n            if (!subscriber.closed) {\n              subscriber.next(value);\n              subscriber.complete();\n            }\n          },\n          (err) => {\n            if (!subscriber.closed) {\n              subscriber.error(err);\n            }\n          }\n        )\n        .then(null, err => {\n          // escape the promise trap, throw unhandled errors\n          root.setTimeout(() => { throw err; });\n        });\n      }\n    } else {\n      if (this._isScalar) {\n        if (!subscriber.closed) {\n          return scheduler.schedule(dispatchNext, 0, { value: this.value, subscriber });\n        }\n      } else {\n        promise.then(\n          (value) => {\n            this.value = value;\n            this._isScalar = true;\n            if (!subscriber.closed) {\n              subscriber.add(scheduler.schedule(dispatchNext, 0, { value, subscriber }));\n            }\n          },\n          (err) => {\n            if (!subscriber.closed) {\n              subscriber.add(scheduler.schedule(dispatchError, 0, { err, subscriber }));\n            }\n          })\n          .then(null, (err) => {\n            // escape the promise trap, throw unhandled errors\n            root.setTimeout(() => { throw err; });\n          });\n      }\n    }\n  }\n}\n\ninterface DispatchNextArg<T> {\n  subscriber: Subscriber<T>;\n  value: T;\n}\nfunction dispatchNext<T>(arg: DispatchNextArg<T>) {\n  const { value, subscriber } = arg;\n  if (!subscriber.closed) {\n    subscriber.next(value);\n    subscriber.complete();\n  }\n}\n\ninterface DispatchErrorArg<T> {\n  subscriber: Subscriber<T>;\n  err: any;\n}\nfunction dispatchError<T>(arg: DispatchErrorArg<T>) {\n  const { err, subscriber } = arg;\n  if (!subscriber.closed) {\n    subscriber.error(err);\n  }\n}\n","import { root } from '../util/root';\nimport { IScheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { TeardownLogic } from '../Subscription';\nimport { Subscriber } from '../Subscriber';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class IteratorObservable<T> extends Observable<T> {\n  private iterator: any;\n\n  static create<T>(iterator: any, scheduler?: IScheduler): IteratorObservable<T> {\n    return new IteratorObservable(iterator, scheduler);\n  }\n\n  static dispatch(state: any) {\n\n    const { index, hasError, iterator, subscriber } = state;\n\n    if (hasError) {\n      subscriber.error(state.error);\n      return;\n    }\n\n    let result = iterator.next();\n    if (result.done) {\n      subscriber.complete();\n      return;\n    }\n\n    subscriber.next(result.value);\n    state.index = index + 1;\n\n    if (subscriber.closed) {\n      if (typeof iterator.return === 'function') {\n        iterator.return();\n      }\n      return;\n    }\n\n    (<any> this).schedule(state);\n  }\n\n  constructor(iterator: any, private scheduler?: IScheduler) {\n    super();\n\n    if (iterator == null) {\n      throw new Error('iterator cannot be null.');\n    }\n\n    this.iterator = getIterator(iterator);\n  }\n\n  protected _subscribe(subscriber: Subscriber<T>): TeardownLogic {\n\n    let index = 0;\n    const { iterator, scheduler } = this;\n\n    if (scheduler) {\n      return scheduler.schedule(IteratorObservable.dispatch, 0, {\n        index, iterator, subscriber\n      });\n    } else {\n      do {\n        let result = iterator.next();\n        if (result.done) {\n          subscriber.complete();\n          break;\n        } else {\n          subscriber.next(result.value);\n        }\n        if (subscriber.closed) {\n          if (typeof iterator.return === 'function') {\n            iterator.return();\n          }\n          break;\n        }\n      } while (true);\n    }\n  }\n}\n\nclass StringIterator {\n  constructor(private str: string,\n              private idx: number = 0,\n              private len: number = str.length) {\n  }\n  [Symbol_iterator]() { return (this); }\n  next() {\n    return this.idx < this.len ? {\n        done: false,\n        value: this.str.charAt(this.idx++)\n    } : {\n        done: true,\n        value: undefined\n    };\n  }\n}\n\nclass ArrayIterator {\n  constructor(private arr: Array<any>,\n              private idx: number = 0,\n              private len: number = toLength(arr)) {\n  }\n  [Symbol_iterator]() { return this; }\n  next() {\n    return this.idx < this.len ? {\n        done: false,\n        value: this.arr[this.idx++]\n    } : {\n        done: true,\n        value: undefined\n    };\n  }\n}\n\nfunction getIterator(obj: any) {\n  const i = obj[Symbol_iterator];\n  if (!i && typeof obj === 'string') {\n    return new StringIterator(obj);\n  }\n  if (!i && obj.length !== undefined) {\n    return new ArrayIterator(obj);\n  }\n  if (!i) {\n    throw new TypeError('object is not iterable');\n  }\n  return obj[Symbol_iterator]();\n}\n\nconst maxSafeInteger = Math.pow(2, 53) - 1;\n\nfunction toLength(o: any) {\n  let len = +o.length;\n  if (isNaN(len)) {\n      return 0;\n  }\n  if (len === 0 || !numberIsFinite(len)) {\n      return len;\n  }\n  len = sign(len) * Math.floor(Math.abs(len));\n  if (len <= 0) {\n      return 0;\n  }\n  if (len > maxSafeInteger) {\n      return maxSafeInteger;\n  }\n  return len;\n}\n\nfunction numberIsFinite(value: any) {\n  return typeof value === 'number' && root.isFinite(value);\n}\n\nfunction sign(value: any) {\n  let valueAsNumber = +value;\n  if (valueAsNumber === 0) {\n    return valueAsNumber;\n  }\n  if (isNaN(valueAsNumber)) {\n    return valueAsNumber;\n  }\n  return valueAsNumber < 0 ? -1 : 1;\n}\n","import { IScheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { ScalarObservable } from './ScalarObservable';\nimport { EmptyObservable } from './EmptyObservable';\nimport { Subscriber } from '../Subscriber';\nimport { TeardownLogic } from '../Subscription';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class ArrayLikeObservable<T> extends Observable<T> {\n\n  static create<T>(arrayLike: ArrayLike<T>, scheduler?: IScheduler): Observable<T> {\n    const length = arrayLike.length;\n    if (length === 0) {\n      return new EmptyObservable<T>();\n    } else if (length === 1) {\n      return new ScalarObservable<T>(<any>arrayLike[0], scheduler);\n    } else {\n      return new ArrayLikeObservable(arrayLike, scheduler);\n    }\n  }\n\n  static dispatch(state: any) {\n    const { arrayLike, index, length, subscriber } = state;\n\n    if (subscriber.closed) {\n      return;\n    }\n\n    if (index >= length) {\n      subscriber.complete();\n      return;\n    }\n\n    subscriber.next(arrayLike[index]);\n\n    state.index = index + 1;\n\n    (<any> this).schedule(state);\n  }\n\n  // value used if Array has one value and _isScalar\n  private value: any;\n\n  constructor(private arrayLike: ArrayLike<T>, private scheduler?: IScheduler) {\n    super();\n    if (!scheduler && arrayLike.length === 1) {\n      this._isScalar = true;\n      this.value = arrayLike[0];\n    }\n  }\n\n  protected _subscribe(subscriber: Subscriber<T>): TeardownLogic {\n    let index = 0;\n    const { arrayLike, scheduler } = this;\n    const length = arrayLike.length;\n\n    if (scheduler) {\n      return scheduler.schedule(ArrayLikeObservable.dispatch, 0, {\n        arrayLike, index, length, subscriber\n      });\n    } else {\n      for (let i = 0; i < length && !subscriber.closed; i++) {\n        subscriber.next(arrayLike[i]);\n      }\n      subscriber.complete();\n    }\n  }\n}\n","import { Observable } from '../Observable';\nimport { IScheduler } from '../Scheduler';\nimport { Operator } from '../Operator';\nimport { PartialObserver } from '../Observer';\nimport { Subscriber } from '../Subscriber';\nimport { Notification } from '../Notification';\nimport { TeardownLogic } from '../Subscription';\nimport { Action } from '../scheduler/Action';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n *\n * Re-emits all notifications from source Observable with specified scheduler.\n *\n * <span class=\"informal\">Ensure a specific scheduler is used, from outside of an Observable.</span>\n *\n * `observeOn` is an operator that accepts a scheduler as a first parameter, which will be used to reschedule\n * notifications emitted by the source Observable. It might be useful, if you do not have control over\n * internal scheduler of a given Observable, but want to control when its values are emitted nevertheless.\n *\n * Returned Observable emits the same notifications (nexted values, complete and error events) as the source Observable,\n * but rescheduled with provided scheduler. Note that this doesn't mean that source Observables internal\n * scheduler will be replaced in any way. Original scheduler still will be used, but when the source Observable emits\n * notification, it will be immediately scheduled again - this time with scheduler passed to `observeOn`.\n * An anti-pattern would be calling `observeOn` on Observable that emits lots of values synchronously, to split\n * that emissions into asynchronous chunks. For this to happen, scheduler would have to be passed into the source\n * Observable directly (usually into the operator that creates it). `observeOn` simply delays notifications a\n * little bit more, to ensure that they are emitted at expected moments.\n *\n * As a matter of fact, `observeOn` accepts second parameter, which specifies in milliseconds with what delay notifications\n * will be emitted. The main difference between {@link delay} operator and `observeOn` is that `observeOn`\n * will delay all notifications - including error notifications - while `delay` will pass through error\n * from source Observable immediately when it is emitted. In general it is highly recommended to use `delay` operator\n * for any kind of delaying of values in the stream, while using `observeOn` to specify which scheduler should be used\n * for notification emissions in general.\n *\n * @example <caption>Ensure values in subscribe are called just before browser repaint.</caption>\n * const intervals = Rx.Observable.interval(10); // Intervals are scheduled\n *                                               // with async scheduler by default...\n *\n * intervals\n * .observeOn(Rx.Scheduler.animationFrame)       // ...but we will observe on animationFrame\n * .subscribe(val => {                           // scheduler to ensure smooth animation.\n *   someDiv.style.height = val + 'px';\n * });\n *\n * @see {@link delay}\n *\n * @param {IScheduler} scheduler Scheduler that will be used to reschedule notifications from source Observable.\n * @param {number} [delay] Number of milliseconds that states with what delay every notification should be rescheduled.\n * @return {Observable<T>} Observable that emits the same notifications as the source Observable,\n * but with provided scheduler.\n *\n * @method observeOn\n * @owner Observable\n */\nexport function observeOn<T>(scheduler: IScheduler, delay: number = 0): MonoTypeOperatorFunction<T> {\n  return function observeOnOperatorFunction(source: Observable<T>): Observable<T> {\n    return source.lift(new ObserveOnOperator(scheduler, delay));\n  };\n}\n\nexport class ObserveOnOperator<T> implements Operator<T, T> {\n  constructor(private scheduler: IScheduler, private delay: number = 0) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new ObserveOnSubscriber(subscriber, this.scheduler, this.delay));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class ObserveOnSubscriber<T> extends Subscriber<T> {\n  static dispatch(this: Action<ObserveOnMessage>, arg: ObserveOnMessage) {\n    const { notification, destination } = arg;\n    notification.observe(destination);\n    this.unsubscribe();\n  }\n\n  constructor(destination: Subscriber<T>,\n              private scheduler: IScheduler,\n              private delay: number = 0) {\n    super(destination);\n  }\n\n  private scheduleMessage(notification: Notification<any>): void {\n    this.add(this.scheduler.schedule(\n      ObserveOnSubscriber.dispatch,\n      this.delay,\n      new ObserveOnMessage(notification, this.destination)\n    ));\n  }\n\n  protected _next(value: T): void {\n    this.scheduleMessage(Notification.createNext(value));\n  }\n\n  protected _error(err: any): void {\n    this.scheduleMessage(Notification.createError(err));\n  }\n\n  protected _complete(): void {\n    this.scheduleMessage(Notification.createComplete());\n  }\n}\n\nexport class ObserveOnMessage {\n  constructor(public notification: Notification<any>,\n              public destination: PartialObserver<any>) {\n  }\n}\n","import { isArray } from '../util/isArray';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isPromise } from '../util/isPromise';\nimport { PromiseObservable } from './PromiseObservable';\nimport { IteratorObservable } from'./IteratorObservable';\nimport { ArrayObservable } from './ArrayObservable';\nimport { ArrayLikeObservable } from './ArrayLikeObservable';\n\nimport { IScheduler } from '../Scheduler';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { Observable, ObservableInput } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { ObserveOnSubscriber } from '../operators/observeOn';\nimport { observable as Symbol_observable } from '../symbol/observable';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class FromObservable<T> extends Observable<T> {\n  constructor(private ish: ObservableInput<T>, private scheduler?: IScheduler) {\n    super(null);\n  }\n\n  static create<T>(ish: ObservableInput<T>, scheduler?: IScheduler): Observable<T>;\n  static create<T, R>(ish: ArrayLike<T>, scheduler?: IScheduler): Observable<R>;\n\n  /**\n   * Creates an Observable from an Array, an array-like object, a Promise, an\n   * iterable object, or an Observable-like object.\n   *\n   * <span class=\"informal\">Converts almost anything to an Observable.</span>\n   *\n   * <img src=\"./img/from.png\" width=\"100%\">\n   *\n   * Convert various other objects and data types into Observables. `from`\n   * converts a Promise or an array-like or an\n   * [iterable](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#iterable)\n   * object into an Observable that emits the items in that promise or array or\n   * iterable. A String, in this context, is treated as an array of characters.\n   * Observable-like objects (contains a function named with the ES2015 Symbol\n   * for Observable) can also be converted through this operator.\n   *\n   * @example <caption>Converts an array to an Observable</caption>\n   * var array = [10, 20, 30];\n   * var result = Rx.Observable.from(array);\n   * result.subscribe(x => console.log(x));\n   *\n   * // Results in the following:\n   * // 10 20 30\n   *\n   * @example <caption>Convert an infinite iterable (from a generator) to an Observable</caption>\n   * function* generateDoubles(seed) {\n   *   var i = seed;\n   *   while (true) {\n   *     yield i;\n   *     i = 2 * i; // double it\n   *   }\n   * }\n   *\n   * var iterator = generateDoubles(3);\n   * var result = Rx.Observable.from(iterator).take(10);\n   * result.subscribe(x => console.log(x));\n   *\n   * // Results in the following:\n   * // 3 6 12 24 48 96 192 384 768 1536\n   *\n   * @see {@link create}\n   * @see {@link fromEvent}\n   * @see {@link fromEventPattern}\n   * @see {@link fromPromise}\n   *\n   * @param {ObservableInput<T>} ish A subscribable object, a Promise, an\n   * Observable-like, an Array, an iterable or an array-like object to be\n   * converted.\n   * @param {Scheduler} [scheduler] The scheduler on which to schedule the\n   * emissions of values.\n   * @return {Observable<T>} The Observable whose values are originally from the\n   * input object that was converted.\n   * @static true\n   * @name from\n   * @owner Observable\n   */\n  static create<T>(ish: ObservableInput<T>, scheduler?: IScheduler): Observable<T> {\n    if (ish != null) {\n      if (typeof ish[Symbol_observable] === 'function') {\n        if (ish instanceof Observable && !scheduler) {\n          return ish;\n        }\n        return new FromObservable<T>(ish, scheduler);\n      } else if (isArray(ish)) {\n        return new ArrayObservable<T>(ish, scheduler);\n      } else if (isPromise<T>(ish)) {\n        return new PromiseObservable<T>(ish, scheduler);\n      } else if (typeof ish[Symbol_iterator] === 'function' || typeof ish === 'string') {\n        return new IteratorObservable<T>(ish, scheduler);\n      } else if (isArrayLike(ish)) {\n        return new ArrayLikeObservable(ish, scheduler);\n      }\n    }\n\n    throw new TypeError((ish !== null && typeof ish || ish) + ' is not observable');\n  }\n\n  protected _subscribe(subscriber: Subscriber<T>) {\n    const ish = this.ish;\n    const scheduler = this.scheduler;\n    if (scheduler == null) {\n      return ish[Symbol_observable]().subscribe(subscriber);\n    } else {\n      return ish[Symbol_observable]().subscribe(new ObserveOnSubscriber(subscriber, scheduler, 0));\n    }\n  }\n}\n","import { Observable, ObservableInput } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { OperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function mergeMap<T, R>(project: (value: T, index: number) => ObservableInput<R>, concurrent?: number): OperatorFunction<T, R>;\nexport function mergeMap<T, I, R>(project: (value: T, index: number) => ObservableInput<I>, resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R, concurrent?: number): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link mergeAll}.</span>\n *\n * <img src=\"./img/mergeMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger.\n *\n * @example <caption>Map and flatten each letter to an Observable ticking every 1 second</caption>\n * var letters = Rx.Observable.of('a', 'b', 'c');\n * var result = letters.mergeMap(x =>\n *   Rx.Observable.interval(1000).map(i => x+i)\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // a0\n * // b0\n * // c0\n * // a1\n * // b1\n * // c1\n * // continues to list a,b,c with respective ascending integers\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and merging the results of the Observables obtained\n * from this transformation.\n * @method mergeMap\n * @owner Observable\n */\nexport function mergeMap<T, I, R>(project: (value: T, index: number) => ObservableInput<I>,\n                                  resultSelector?: ((outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R) | number,\n                                  concurrent: number = Number.POSITIVE_INFINITY): OperatorFunction<T, I|R> {\n  return function mergeMapOperatorFunction(source: Observable<T>) {\n    if (typeof resultSelector === 'number') {\n      concurrent = <number>resultSelector;\n      resultSelector = null;\n    }\n    return source.lift(new MergeMapOperator(project, <any>resultSelector, concurrent));\n  };\n}\n\nexport class MergeMapOperator<T, I, R> implements Operator<T, I> {\n  constructor(private project: (value: T, index: number) => ObservableInput<I>,\n              private resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R,\n              private concurrent: number = Number.POSITIVE_INFINITY) {\n  }\n\n  call(observer: Subscriber<I>, source: any): any {\n    return source.subscribe(new MergeMapSubscriber(\n      observer, this.project, this.resultSelector, this.concurrent\n    ));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class MergeMapSubscriber<T, I, R> extends OuterSubscriber<T, I> {\n  private hasCompleted: boolean = false;\n  private buffer: T[] = [];\n  private active: number = 0;\n  protected index: number = 0;\n\n  constructor(destination: Subscriber<I>,\n              private project: (value: T, index: number) => ObservableInput<I>,\n              private resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R,\n              private concurrent: number = Number.POSITIVE_INFINITY) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (this.active < this.concurrent) {\n      this._tryNext(value);\n    } else {\n      this.buffer.push(value);\n    }\n  }\n\n  protected _tryNext(value: T) {\n    let result: ObservableInput<I>;\n    const index = this.index++;\n    try {\n      result = this.project(value, index);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.active++;\n    this._innerSub(result, value, index);\n  }\n\n  private _innerSub(ish: ObservableInput<I>, value: T, index: number): void {\n    this.add(subscribeToResult<T, I>(this, ish, value, index));\n  }\n\n  protected _complete(): void {\n    this.hasCompleted = true;\n    if (this.active === 0 && this.buffer.length === 0) {\n      this.destination.complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: I,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, I>): void {\n    if (this.resultSelector) {\n      this._notifyResultSelector(outerValue, innerValue, outerIndex, innerIndex);\n    } else {\n      this.destination.next(innerValue);\n    }\n  }\n\n  private _notifyResultSelector(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) {\n    let result: R;\n    try {\n      result = this.resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n\n  notifyComplete(innerSub: Subscription): void {\n    const buffer = this.buffer;\n    this.remove(innerSub);\n    this.active--;\n    if (buffer.length > 0) {\n      this._next(buffer.shift());\n    } else if (this.active === 0 && this.hasCompleted) {\n      this.destination.complete();\n    }\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Observer } from '../Observer';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Counts the number of emissions on the source and emits that number when the\n * source completes.\n *\n * <span class=\"informal\">Tells how many values were emitted, when the source\n * completes.</span>\n *\n * <img src=\"./img/count.png\" width=\"100%\">\n *\n * `count` transforms an Observable that emits values into an Observable that\n * emits a single value that represents the number of values emitted by the\n * source Observable. If the source Observable terminates with an error, `count`\n * will pass this error notification along without emitting a value first. If\n * the source Observable does not terminate at all, `count` will neither emit\n * a value nor terminate. This operator takes an optional `predicate` function\n * as argument, in which case the output emission will represent the number of\n * source values that matched `true` with the `predicate`.\n *\n * @example <caption>Counts how many seconds have passed before the first click happened</caption>\n * var seconds = Rx.Observable.interval(1000);\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var secondsBeforeClick = seconds.takeUntil(clicks);\n * var result = secondsBeforeClick.count();\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Counts how many odd numbers are there between 1 and 7</caption>\n * var numbers = Rx.Observable.range(1, 7);\n * var result = numbers.count(i => i % 2 === 1);\n * result.subscribe(x => console.log(x));\n *\n * // Results in:\n * // 4\n *\n * @see {@link max}\n * @see {@link min}\n * @see {@link reduce}\n *\n * @param {function(value: T, i: number, source: Observable<T>): boolean} [predicate] A\n * boolean function to select what values are to be counted. It is provided with\n * arguments of:\n * - `value`: the value from the source Observable.\n * - `index`: the (zero-based) \"index\" of the value from the source Observable.\n * - `source`: the source Observable instance itself.\n * @return {Observable} An Observable of one number that represents the count as\n * described above.\n * @method count\n * @owner Observable\n */\nexport function count<T>(predicate?: (value: T, index: number, source: Observable<T>) => boolean): OperatorFunction<T, number> {\n  return (source: Observable<T>) => source.lift(new CountOperator(predicate, source));\n}\n\nclass CountOperator<T> implements Operator<T, number> {\n  constructor(private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private source?: Observable<T>) {\n  }\n\n  call(subscriber: Subscriber<number>, source: any): any {\n    return source.subscribe(new CountSubscriber(subscriber, this.predicate, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass CountSubscriber<T> extends Subscriber<T> {\n  private count: number = 0;\n  private index: number = 0;\n\n  constructor(destination: Observer<number>,\n              private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private source?: Observable<T>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (this.predicate) {\n      this._tryPredicate(value);\n    } else {\n      this.count++;\n    }\n  }\n\n  private _tryPredicate(value: T) {\n    let result: any;\n\n    try {\n      result = this.predicate(value, this.index++, this.source);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n\n    if (result) {\n      this.count++;\n    }\n  }\n\n  protected _complete(): void {\n    this.destination.next(this.count);\n    this.destination.complete();\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable, SubscribableOrPromise } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription, TeardownLogic } from '../Subscription';\n\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Emits a value from the source Observable only after a particular time span\n * determined by another Observable has passed without another source emission.\n *\n * <span class=\"informal\">It's like {@link debounceTime}, but the time span of\n * emission silence is determined by a second Observable.</span>\n *\n * <img src=\"./img/debounce.png\" width=\"100%\">\n *\n * `debounce` delays values emitted by the source Observable, but drops previous\n * pending delayed emissions if a new value arrives on the source Observable.\n * This operator keeps track of the most recent value from the source\n * Observable, and spawns a duration Observable by calling the\n * `durationSelector` function. The value is emitted only when the duration\n * Observable emits a value or completes, and if no other value was emitted on\n * the source Observable since the duration Observable was spawned. If a new\n * value appears before the duration Observable emits, the previous value will\n * be dropped and will not be emitted on the output Observable.\n *\n * Like {@link debounceTime}, this is a rate-limiting operator, and also a\n * delay-like operator since output emissions do not necessarily occur at the\n * same time as they did on the source Observable.\n *\n * @example <caption>Emit the most recent click after a burst of clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.debounce(() => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounceTime}\n * @see {@link delayWhen}\n * @see {@link throttle}\n *\n * @param {function(value: T): SubscribableOrPromise} durationSelector A function\n * that receives a value from the source Observable, for computing the timeout\n * duration for each source value, returned as an Observable or a Promise.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified duration Observable returned by\n * `durationSelector`, and may drop some values if they occur too frequently.\n * @method debounce\n * @owner Observable\n */\nexport function debounce<T>(durationSelector: (value: T) => SubscribableOrPromise<number>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new DebounceOperator(durationSelector));\n}\n\nclass DebounceOperator<T> implements Operator<T, T> {\n  constructor(private durationSelector: (value: T) => SubscribableOrPromise<number>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new DebounceSubscriber(subscriber, this.durationSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DebounceSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private value: T;\n  private hasValue: boolean = false;\n  private durationSubscription: Subscription = null;\n\n  constructor(destination: Subscriber<R>,\n              private durationSelector: (value: T) => SubscribableOrPromise<number>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    try {\n      const result = this.durationSelector.call(this, value);\n\n      if (result) {\n        this._tryNext(value, result);\n      }\n    } catch (err) {\n      this.destination.error(err);\n    }\n  }\n\n  protected _complete(): void {\n    this.emitValue();\n    this.destination.complete();\n  }\n\n  private _tryNext(value: T, duration: SubscribableOrPromise<number>): void {\n    let subscription = this.durationSubscription;\n    this.value = value;\n    this.hasValue = true;\n    if (subscription) {\n      subscription.unsubscribe();\n      this.remove(subscription);\n    }\n\n    subscription = subscribeToResult(this, duration);\n    if (!subscription.closed) {\n      this.add(this.durationSubscription = subscription);\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.emitValue();\n  }\n\n  notifyComplete(): void {\n    this.emitValue();\n  }\n\n  emitValue(): void {\n    if (this.hasValue) {\n      const value = this.value;\n      const subscription = this.durationSubscription;\n      if (subscription) {\n        this.durationSubscription = null;\n        subscription.unsubscribe();\n        this.remove(subscription);\n      }\n      this.value = null;\n      this.hasValue = false;\n      super._next(value);\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction, MonoTypeOperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function defaultIfEmpty<T>(defaultValue?: T): MonoTypeOperatorFunction<T>;\nexport function defaultIfEmpty<T, R>(defaultValue?: R): OperatorFunction<T, T | R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Emits a given value if the source Observable completes without emitting any\n * `next` value, otherwise mirrors the source Observable.\n *\n * <span class=\"informal\">If the source Observable turns out to be empty, then\n * this operator will emit a default value.</span>\n *\n * <img src=\"./img/defaultIfEmpty.png\" width=\"100%\">\n *\n * `defaultIfEmpty` emits the values emitted by the source Observable or a\n * specified default value if the source Observable is empty (completes without\n * having emitted any `next` value).\n *\n * @example <caption>If no clicks happen in 5 seconds, then emit \"no clicks\"</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var clicksBeforeFive = clicks.takeUntil(Rx.Observable.interval(5000));\n * var result = clicksBeforeFive.defaultIfEmpty('no clicks');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link empty}\n * @see {@link last}\n *\n * @param {any} [defaultValue=null] The default value used if the source\n * Observable is empty.\n * @return {Observable} An Observable that emits either the specified\n * `defaultValue` if the source Observable emits no items, or the values emitted\n * by the source Observable.\n * @method defaultIfEmpty\n * @owner Observable\n */\nexport function defaultIfEmpty<T, R>(defaultValue: R = null): OperatorFunction<T, T | R> {\n  return (source: Observable<T>) => source.lift(new DefaultIfEmptyOperator(defaultValue)) as Observable<T | R>;\n}\n\nclass DefaultIfEmptyOperator<T, R> implements Operator<T, T | R> {\n\n  constructor(private defaultValue: R) {\n  }\n\n  call(subscriber: Subscriber<T | R>, source: any): any {\n    return source.subscribe(new DefaultIfEmptySubscriber(subscriber, this.defaultValue));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DefaultIfEmptySubscriber<T, R> extends Subscriber<T> {\n  private isEmpty: boolean = true;\n\n  constructor(destination: Subscriber<T | R>, private defaultValue: R) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    this.isEmpty = false;\n    this.destination.next(value);\n  }\n\n  protected _complete(): void {\n    if (this.isEmpty) {\n      this.destination.next(this.defaultValue);\n    }\n    this.destination.complete();\n  }\n}","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subscription, TeardownLogic } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Delays the emission of items from the source Observable by a given time span\n * determined by the emissions of another Observable.\n *\n * <span class=\"informal\">It's like {@link delay}, but the time span of the\n * delay duration is determined by a second Observable.</span>\n *\n * <img src=\"./img/delayWhen.png\" width=\"100%\">\n *\n * `delayWhen` time shifts each emitted value from the source Observable by a\n * time span determined by another Observable. When the source emits a value,\n * the `delayDurationSelector` function is called with the source value as\n * argument, and should return an Observable, called the \"duration\" Observable.\n * The source value is emitted on the output Observable only when the duration\n * Observable emits a value or completes.\n *\n * Optionally, `delayWhen` takes a second argument, `subscriptionDelay`, which\n * is an Observable. When `subscriptionDelay` emits its first value or\n * completes, the source Observable is subscribed to and starts behaving like\n * described in the previous paragraph. If `subscriptionDelay` is not provided,\n * `delayWhen` will subscribe to the source Observable as soon as the output\n * Observable is subscribed.\n *\n * @example <caption>Delay each click by a random amount of time, between 0 and 5 seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var delayedClicks = clicks.delayWhen(event =>\n *   Rx.Observable.interval(Math.random() * 5000)\n * );\n * delayedClicks.subscribe(x => console.log(x));\n *\n * @see {@link debounce}\n * @see {@link delay}\n *\n * @param {function(value: T): Observable} delayDurationSelector A function that\n * returns an Observable for each value emitted by the source Observable, which\n * is then used to delay the emission of that item on the output Observable\n * until the Observable returned from this function emits a value.\n * @param {Observable} subscriptionDelay An Observable that triggers the\n * subscription to the source Observable once it emits any value.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by an amount of time specified by the Observable returned by\n * `delayDurationSelector`.\n * @method delayWhen\n * @owner Observable\n */\nexport function delayWhen<T>(delayDurationSelector: (value: T) => Observable<any>,\n                             subscriptionDelay?: Observable<any>): MonoTypeOperatorFunction<T> {\n  if (subscriptionDelay) {\n    return (source: Observable<T>) =>\n      new SubscriptionDelayObservable(source, subscriptionDelay)\n        .lift(new DelayWhenOperator(delayDurationSelector));\n  }\n  return (source: Observable<T>) => source.lift(new DelayWhenOperator(delayDurationSelector));\n}\n\nclass DelayWhenOperator<T> implements Operator<T, T> {\n  constructor(private delayDurationSelector: (value: T) => Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new DelayWhenSubscriber(subscriber, this.delayDurationSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DelayWhenSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private completed: boolean = false;\n  private delayNotifierSubscriptions: Array<Subscription> = [];\n  private values: Array<T> = [];\n\n  constructor(destination: Subscriber<T>,\n              private delayDurationSelector: (value: T) => Observable<any>) {\n    super(destination);\n  }\n\n  notifyNext(outerValue: T, innerValue: any,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.destination.next(outerValue);\n    this.removeSubscription(innerSub);\n    this.tryComplete();\n  }\n\n  notifyError(error: any, innerSub: InnerSubscriber<T, R>): void {\n    this._error(error);\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, R>): void {\n    const value = this.removeSubscription(innerSub);\n    if (value) {\n      this.destination.next(value);\n    }\n    this.tryComplete();\n  }\n\n  protected _next(value: T): void {\n    try {\n      const delayNotifier = this.delayDurationSelector(value);\n      if (delayNotifier) {\n        this.tryDelay(delayNotifier, value);\n      }\n    } catch (err) {\n      this.destination.error(err);\n    }\n  }\n\n  protected _complete(): void {\n    this.completed = true;\n    this.tryComplete();\n  }\n\n  private removeSubscription(subscription: InnerSubscriber<T, R>): T {\n    subscription.unsubscribe();\n\n    const subscriptionIdx = this.delayNotifierSubscriptions.indexOf(subscription);\n    let value: T = null;\n\n    if (subscriptionIdx !== -1) {\n      value = this.values[subscriptionIdx];\n      this.delayNotifierSubscriptions.splice(subscriptionIdx, 1);\n      this.values.splice(subscriptionIdx, 1);\n    }\n\n    return value;\n  }\n\n  private tryDelay(delayNotifier: Observable<any>, value: T): void {\n    const notifierSubscription = subscribeToResult(this, delayNotifier, value);\n\n    if (notifierSubscription && !notifierSubscription.closed) {\n      this.add(notifierSubscription);\n      this.delayNotifierSubscriptions.push(notifierSubscription);\n    }\n\n    this.values.push(value);\n  }\n\n  private tryComplete(): void {\n    if (this.completed && this.delayNotifierSubscriptions.length === 0) {\n      this.destination.complete();\n    }\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SubscriptionDelayObservable<T> extends Observable<T> {\n  constructor(protected source: Observable<T>, private subscriptionDelay: Observable<any>) {\n    super();\n  }\n\n  protected _subscribe(subscriber: Subscriber<T>) {\n    this.subscriptionDelay.subscribe(new SubscriptionDelaySubscriber(subscriber, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SubscriptionDelaySubscriber<T> extends Subscriber<T> {\n  private sourceSubscribed: boolean = false;\n\n  constructor(private parent: Subscriber<T>, private source: Observable<T>) {\n    super();\n  }\n\n  protected _next(unused: any) {\n    this.subscribeToSource();\n  }\n\n  protected _error(err: any) {\n    this.unsubscribe();\n    this.parent.error(err);\n  }\n\n  protected _complete() {\n    this.subscribeToSource();\n  }\n\n  private subscribeToSource(): void {\n    if (!this.sourceSubscribed) {\n      this.sourceSubscribed = true;\n      this.unsubscribe();\n      this.source.subscribe(this.parent);\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Notification } from '../Notification';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Converts an Observable of {@link Notification} objects into the emissions\n * that they represent.\n *\n * <span class=\"informal\">Unwraps {@link Notification} objects as actual `next`,\n * `error` and `complete` emissions. The opposite of {@link materialize}.</span>\n *\n * <img src=\"./img/dematerialize.png\" width=\"100%\">\n *\n * `dematerialize` is assumed to operate an Observable that only emits\n * {@link Notification} objects as `next` emissions, and does not emit any\n * `error`. Such Observable is the output of a `materialize` operation. Those\n * notifications are then unwrapped using the metadata they contain, and emitted\n * as `next`, `error`, and `complete` on the output Observable.\n *\n * Use this operator in conjunction with {@link materialize}.\n *\n * @example <caption>Convert an Observable of Notifications to an actual Observable</caption>\n * var notifA = new Rx.Notification('N', 'A');\n * var notifB = new Rx.Notification('N', 'B');\n * var notifE = new Rx.Notification('E', void 0,\n *   new TypeError('x.toUpperCase is not a function')\n * );\n * var materialized = Rx.Observable.of(notifA, notifB, notifE);\n * var upperCase = materialized.dematerialize();\n * upperCase.subscribe(x => console.log(x), e => console.error(e));\n *\n * // Results in:\n * // A\n * // B\n * // TypeError: x.toUpperCase is not a function\n *\n * @see {@link Notification}\n * @see {@link materialize}\n *\n * @return {Observable} An Observable that emits items and notifications\n * embedded in Notification objects emitted by the source Observable.\n * @method dematerialize\n * @owner Observable\n */\nexport function dematerialize<T>(): OperatorFunction<Notification<T>, T> {\n  return function dematerializeOperatorFunction(source: Observable<Notification<T>>) {\n    return source.lift(new DeMaterializeOperator());\n  };\n}\n\nclass DeMaterializeOperator<T extends Notification<any>, R> implements Operator<T, R> {\n  call(subscriber: Subscriber<any>, source: any): any {\n    return source.subscribe(new DeMaterializeSubscriber(subscriber));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DeMaterializeSubscriber<T extends Notification<any>> extends Subscriber<T> {\n  constructor(destination: Subscriber<any>) {\n    super(destination);\n  }\n\n  protected _next(value: T) {\n    value.observe(this.destination);\n  }\n}\n","import { root } from './root';\n\nexport interface ISetCtor {\n  new<T>(): ISet<T>;\n}\n\nexport interface ISet<T> {\n  add(value: T): void;\n  has(value: T): boolean;\n  size: number;\n  clear(): void;\n}\n\nexport function minimalSetImpl<T>(): ISetCtor {\n  // THIS IS NOT a full impl of Set, this is just the minimum\n  // bits of functionality we need for this library.\n  return class MinimalSet<T> implements ISet<T> {\n    private _values: T[] = [];\n\n    add(value: T): void {\n      if (!this.has(value)) {\n        this._values.push(value);\n      }\n    }\n\n    has(value: T): boolean {\n      return this._values.indexOf(value) !== -1;\n    }\n\n    get size(): number {\n      return this._values.length;\n    }\n\n    clear(): void {\n      this._values.length = 0;\n    }\n  };\n}\n\nexport const Set: ISetCtor = root.Set || minimalSetImpl();","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { TeardownLogic } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { ISet, Set } from '../util/Set';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from previous items.\n *\n * If a keySelector function is provided, then it will project each value from the source observable into a new value that it will\n * check for equality with previously projected values. If a keySelector function is not provided, it will use each value from the\n * source observable directly with an equality check against previous values.\n *\n * In JavaScript runtimes that support `Set`, this operator will use a `Set` to improve performance of the distinct value checking.\n *\n * In other runtimes, this operator will use a minimal implementation of `Set` that relies on an `Array` and `indexOf` under the\n * hood, so performance will degrade as more values are checked for distinction. Even in newer browsers, a long-running `distinct`\n * use might result in memory leaks. To help alleviate this in some scenarios, an optional `flushes` parameter is also provided so\n * that the internal `Set` can be \"flushed\", basically clearing it of values.\n *\n * @example <caption>A simple example with numbers</caption>\n * Observable.of(1, 1, 2, 2, 2, 1, 2, 3, 4, 3, 2, 1)\n *   .distinct()\n *   .subscribe(x => console.log(x)); // 1, 2, 3, 4\n *\n * @example <caption>An example using a keySelector function</caption>\n * interface Person {\n *    age: number,\n *    name: string\n * }\n *\n * Observable.of<Person>(\n *     { age: 4, name: 'Foo'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo'})\n *     .distinct((p: Person) => p.name)\n *     .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n *\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n *\n * @param {function} [keySelector] Optional function to select which value you want to check as distinct.\n * @param {Observable} [flushes] Optional Observable for flushing the internal HashSet of the operator.\n * @return {Observable} An Observable that emits items from the source Observable with distinct values.\n * @method distinct\n * @owner Observable\n */\nexport function distinct<T, K>(keySelector?: (value: T) => K,\n                               flushes?: Observable<any>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new DistinctOperator(keySelector, flushes));\n}\n\nclass DistinctOperator<T, K> implements Operator<T, T> {\n  constructor(private keySelector: (value: T) => K, private flushes: Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new DistinctSubscriber(subscriber, this.keySelector, this.flushes));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class DistinctSubscriber<T, K> extends OuterSubscriber<T, T> {\n  private values: ISet<K> = new Set<K>();\n\n  constructor(destination: Subscriber<T>, private keySelector: (value: T) => K, flushes: Observable<any>) {\n    super(destination);\n\n    if (flushes) {\n      this.add(subscribeToResult(this, flushes));\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: T,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, T>): void {\n    this.values.clear();\n  }\n\n  notifyError(error: any, innerSub: InnerSubscriber<T, T>): void {\n    this._error(error);\n  }\n\n  protected _next(value: T): void {\n    if (this.keySelector) {\n      this._useKeySelector(value);\n    } else {\n      this._finalizeNext(value, value);\n    }\n  }\n\n  private _useKeySelector(value: T): void {\n    let key: K;\n    const { destination } = this;\n    try {\n      key = this.keySelector(value);\n    } catch (err) {\n      destination.error(err);\n      return;\n    }\n    this._finalizeNext(key, value);\n  }\n\n  private _finalizeNext(key: K|T, value: T) {\n    const { values } = this;\n    if (!values.has(<K>key)) {\n      values.add(<K>key);\n      this.destination.next(value);\n    }\n  }\n\n}\n","/**\n * An error thrown when an element was queried at a certain index of an\n * Observable, but no such index or position exists in that sequence.\n *\n * @see {@link elementAt}\n * @see {@link take}\n * @see {@link takeLast}\n *\n * @class ArgumentOutOfRangeError\n */\nexport class ArgumentOutOfRangeError extends Error {\n  constructor() {\n    const err: any = super('argument out of range');\n    (<any> this).name = err.name = 'ArgumentOutOfRangeError';\n    (<any> this).stack = err.stack;\n    (<any> this).message = err.message;\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Emits the single value at the specified `index` in a sequence of emissions\n * from the source Observable.\n *\n * <span class=\"informal\">Emits only the i-th value, then completes.</span>\n *\n * <img src=\"./img/elementAt.png\" width=\"100%\">\n *\n * `elementAt` returns an Observable that emits the item at the specified\n * `index` in the source Observable, or a default value if that `index` is out\n * of range and the `default` argument is provided. If the `default` argument is\n * not given and the `index` is out of range, the output Observable will emit an\n * `ArgumentOutOfRangeError` error.\n *\n * @example <caption>Emit only the third click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.elementAt(2);\n * result.subscribe(x => console.log(x));\n *\n * // Results in:\n * // click 1 = nothing\n * // click 2 = nothing\n * // click 3 = MouseEvent object logged to console\n *\n * @see {@link first}\n * @see {@link last}\n * @see {@link skip}\n * @see {@link single}\n * @see {@link take}\n *\n * @throws {ArgumentOutOfRangeError} When using `elementAt(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0` or the\n * Observable has completed before emitting the i-th `next` notification.\n *\n * @param {number} index Is the number `i` for the i-th source emission that has\n * happened since the subscription, starting from the number `0`.\n * @param {T} [defaultValue] The default value returned for missing indices.\n * @return {Observable} An Observable that emits a single item, if it is found.\n * Otherwise, will emit the default value if given. If not, then emits an error.\n * @method elementAt\n * @owner Observable\n */\nexport function elementAt<T>(index: number, defaultValue?: T): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new ElementAtOperator(index, defaultValue));\n}\n\nclass ElementAtOperator<T> implements Operator<T, T> {\n\n  constructor(private index: number, private defaultValue?: T) {\n    if (index < 0) {\n      throw new ArgumentOutOfRangeError;\n    }\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new ElementAtSubscriber(subscriber, this.index, this.defaultValue));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass ElementAtSubscriber<T> extends Subscriber<T> {\n\n  constructor(destination: Subscriber<T>, private index: number, private defaultValue?: T) {\n    super(destination);\n  }\n\n  protected _next(x: T) {\n    if (this.index-- === 0) {\n      this.destination.next(x);\n      this.destination.complete();\n    }\n  }\n\n  protected _complete() {\n    const destination = this.destination;\n    if (this.index >= 0) {\n      if (typeof this.defaultValue !== 'undefined') {\n        destination.next(this.defaultValue);\n      } else {\n        destination.error(new ArgumentOutOfRangeError);\n      }\n    }\n    destination.complete();\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observer } from '../Observer';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Returns an Observable that emits whether or not every item of the source satisfies the condition specified.\n *\n * @example <caption>A simple example emitting true if all elements are less than 5, false otherwise</caption>\n *  Observable.of(1, 2, 3, 4, 5, 6)\n *     .every(x => x < 5)\n *     .subscribe(x => console.log(x)); // -> false\n *\n * @param {function} predicate A function for determining if an item meets a specified condition.\n * @param {any} [thisArg] Optional object to use for `this` in the callback.\n * @return {Observable} An Observable of booleans that determines if all items of the source Observable meet the condition specified.\n * @method every\n * @owner Observable\n */\nexport function every<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean,\n                         thisArg?: any): OperatorFunction<T, boolean> {\n  return (source: Observable<T>) => source.lift(new EveryOperator(predicate, thisArg, source));\n}\n\nclass EveryOperator<T> implements Operator<T, boolean> {\n  constructor(private predicate: (value: T, index: number, source: Observable<T>) => boolean,\n              private thisArg?: any,\n              private source?: Observable<T>) {\n  }\n\n  call(observer: Subscriber<boolean>, source: any): any {\n    return source.subscribe(new EverySubscriber(observer, this.predicate, this.thisArg, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass EverySubscriber<T> extends Subscriber<T> {\n  private index: number = 0;\n\n  constructor(destination: Observer<boolean>,\n              private predicate: (value: T, index: number, source: Observable<T>) => boolean,\n              private thisArg: any,\n              private source?: Observable<T>) {\n    super(destination);\n    this.thisArg = thisArg || this;\n  }\n\n  private notifyComplete(everyValueMatch: boolean): void {\n    this.destination.next(everyValueMatch);\n    this.destination.complete();\n  }\n\n  protected _next(value: T): void {\n    let result = false;\n    try {\n      result = this.predicate.call(this.thisArg, value, this.index++, this.source);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n\n    if (!result) {\n      this.notifyComplete(false);\n    }\n  }\n\n  protected _complete(): void {\n    this.notifyComplete(true);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription, TeardownLogic } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Converts a higher-order Observable into a first-order Observable by dropping\n * inner Observables while the previous inner Observable has not yet completed.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by dropping the\n * next inner Observables while the current inner is still executing.</span>\n *\n * <img src=\"./img/exhaust.png\" width=\"100%\">\n *\n * `exhaust` subscribes to an Observable that emits Observables, also known as a\n * higher-order Observable. Each time it observes one of these emitted inner\n * Observables, the output Observable begins emitting the items emitted by that\n * inner Observable. So far, it behaves like {@link mergeAll}. However,\n * `exhaust` ignores every new inner Observable if the previous Observable has\n * not yet completed. Once that one completes, it will accept and flatten the\n * next inner Observable and repeat this process.\n *\n * @example <caption>Run a finite timer for each click, only if there is no currently active timer</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000).take(5));\n * var result = higherOrder.exhaust();\n * result.subscribe(x => console.log(x));\n *\n * @see {@link combineAll}\n * @see {@link concatAll}\n * @see {@link switch}\n * @see {@link mergeAll}\n * @see {@link exhaustMap}\n * @see {@link zipAll}\n *\n * @return {Observable} An Observable that takes a source of Observables and propagates the first observable\n * exclusively until it completes before subscribing to the next.\n * @method exhaust\n * @owner Observable\n */\nexport function exhaust<T>(): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SwitchFirstOperator<T>());\n}\n\nclass SwitchFirstOperator<T> implements Operator<T, T> {\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new SwitchFirstSubscriber(subscriber));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SwitchFirstSubscriber<T> extends OuterSubscriber<T, T> {\n  private hasCompleted: boolean = false;\n  private hasSubscription: boolean = false;\n\n  constructor(destination: Subscriber<T>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (!this.hasSubscription) {\n      this.hasSubscription = true;\n      this.add(subscribeToResult(this, value));\n    }\n  }\n\n  protected _complete(): void {\n    this.hasCompleted = true;\n    if (!this.hasSubscription) {\n      this.destination.complete();\n    }\n  }\n\n  notifyComplete(innerSub: Subscription): void {\n    this.remove(innerSub);\n    this.hasSubscription = false;\n    if (this.hasCompleted) {\n      this.destination.complete();\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable, ObservableInput } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function exhaustMap<T, R>(project: (value: T, index: number) => ObservableInput<R>): OperatorFunction<T, R>;\nexport function exhaustMap<T, I, R>(project: (value: T, index: number) => ObservableInput<I>, resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable only if the previous projected Observable has completed.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link exhaust}.</span>\n *\n * <img src=\"./img/exhaustMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. When it projects a source value to\n * an Observable, the output Observable begins emitting the items emitted by\n * that projected Observable. However, `exhaustMap` ignores every new projected\n * Observable if the previous projected Observable has not yet completed. Once\n * that one completes, it will accept and flatten the next projected Observable\n * and repeat this process.\n *\n * @example <caption>Run a finite timer for each click, only if there is no currently active timer</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.exhaustMap((ev) => Rx.Observable.interval(1000).take(5));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMap}\n * @see {@link exhaust}\n * @see {@link mergeMap}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An Observable containing projected Observables\n * of each item of the source, ignoring projected Observables that start before\n * their preceding Observable has completed.\n * @method exhaustMap\n * @owner Observable\n */\nexport function exhaustMap<T, I, R>(\n  project: (value: T, index: number) => ObservableInput<I>,\n  resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R\n  ): OperatorFunction<T, R> {\n    return (source: Observable<T>) => source.lift(new SwitchFirstMapOperator(project, resultSelector));\n  }\n\nclass SwitchFirstMapOperator<T, I, R> implements Operator<T, R> {\n  constructor(private project: (value: T, index: number) => ObservableInput<I>,\n              private resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new SwitchFirstMapSubscriber(subscriber, this.project, this.resultSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SwitchFirstMapSubscriber<T, I, R> extends OuterSubscriber<T, I> {\n  private hasSubscription: boolean = false;\n  private hasCompleted: boolean = false;\n  private index: number = 0;\n\n  constructor(destination: Subscriber<R>,\n              private project: (value: T, index: number) => ObservableInput<I>,\n              private resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (!this.hasSubscription) {\n      this.tryNext(value);\n    }\n  }\n\n  private tryNext(value: T): void {\n    const index = this.index++;\n    const destination = this.destination;\n    try {\n      const result = this.project(value, index);\n      this.hasSubscription = true;\n      this.add(subscribeToResult(this, result, value, index));\n    } catch (err) {\n      destination.error(err);\n    }\n  }\n\n  protected _complete(): void {\n    this.hasCompleted = true;\n    if (!this.hasSubscription) {\n      this.destination.complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: I,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, I>): void {\n    const { resultSelector, destination } = this;\n    if (resultSelector) {\n      this.trySelectResult(outerValue, innerValue, outerIndex, innerIndex);\n    } else {\n      destination.next(innerValue);\n    }\n  }\n\n  private trySelectResult(outerValue: T, innerValue: I,\n                          outerIndex: number, innerIndex: number): void {\n    const { resultSelector, destination } = this;\n    try {\n      const result = resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n      destination.next(result);\n    } catch (err) {\n      destination.error(err);\n    }\n  }\n\n  notifyError(err: any): void {\n    this.destination.error(err);\n  }\n\n  notifyComplete(innerSub: Subscription): void {\n    this.remove(innerSub);\n\n    this.hasSubscription = false;\n    if (this.hasCompleted) {\n      this.destination.complete();\n    }\n  }\n}\n","import { Observable } from '../Observable';\nimport { IScheduler } from '../Scheduler';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { Subscription } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { MonoTypeOperatorFunction, OperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function expand<T>(project: (value: T, index: number) => Observable<T>, concurrent?: number, scheduler?: IScheduler): MonoTypeOperatorFunction<T>;\nexport function expand<T, R>(project: (value: T, index: number) => Observable<R>, concurrent?: number, scheduler?: IScheduler): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Recursively projects each source value to an Observable which is merged in\n * the output Observable.\n *\n * <span class=\"informal\">It's similar to {@link mergeMap}, but applies the\n * projection function to every source value as well as every output value.\n * It's recursive.</span>\n *\n * <img src=\"./img/expand.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger. *Expand* will re-emit on the output\n * Observable every source value. Then, each output value is given to the\n * `project` function which returns an inner Observable to be merged on the\n * output Observable. Those output values resulting from the projection are also\n * given to the `project` function to produce new output values. This is how\n * *expand* behaves recursively.\n *\n * @example <caption>Start emitting the powers of two on every click, at most 10 of them</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var powersOfTwo = clicks\n *   .mapTo(1)\n *   .expand(x => Rx.Observable.of(2 * x).delay(1000))\n *   .take(10);\n * powersOfTwo.subscribe(x => console.log(x));\n *\n * @see {@link mergeMap}\n * @see {@link mergeScan}\n *\n * @param {function(value: T, index: number) => Observable} project A function\n * that, when applied to an item emitted by the source or the output Observable,\n * returns an Observable.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {Scheduler} [scheduler=null] The IScheduler to use for subscribing to\n * each projected inner Observable.\n * @return {Observable} An Observable that emits the source values and also\n * result of applying the projection function to each value emitted on the\n * output Observable and and merging the results of the Observables obtained\n * from this transformation.\n * @method expand\n * @owner Observable\n */\nexport function expand<T, R>(project: (value: T, index: number) => Observable<R>,\n                             concurrent: number = Number.POSITIVE_INFINITY,\n                             scheduler: IScheduler = undefined): OperatorFunction<T, R> {\n  concurrent = (concurrent || 0) < 1 ? Number.POSITIVE_INFINITY : concurrent;\n\n  return (source: Observable<T>) => source.lift(new ExpandOperator(project, concurrent, scheduler));\n}\n\nexport class ExpandOperator<T, R> implements Operator<T, R> {\n  constructor(private project: (value: T, index: number) => Observable<R>,\n              private concurrent: number,\n              private scheduler: IScheduler) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new ExpandSubscriber(subscriber, this.project, this.concurrent, this.scheduler));\n  }\n}\n\ninterface DispatchArg<T, R> {\n  subscriber: ExpandSubscriber<T, R>;\n  result: Observable<R>;\n  value: any;\n  index: number;\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class ExpandSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private index: number = 0;\n  private active: number = 0;\n  private hasCompleted: boolean = false;\n  private buffer: any[];\n\n  constructor(destination: Subscriber<R>,\n              private project: (value: T, index: number) => Observable<R>,\n              private concurrent: number,\n              private scheduler: IScheduler) {\n    super(destination);\n    if (concurrent < Number.POSITIVE_INFINITY) {\n      this.buffer = [];\n    }\n  }\n\n  private static dispatch<T, R>(arg: DispatchArg<T, R>): void {\n    const {subscriber, result, value, index} = arg;\n    subscriber.subscribeToProjection(result, value, index);\n  }\n\n  protected _next(value: any): void {\n    const destination = this.destination;\n\n    if (destination.closed) {\n      this._complete();\n      return;\n    }\n\n    const index = this.index++;\n    if (this.active < this.concurrent) {\n      destination.next(value);\n      let result = tryCatch(this.project)(value, index);\n      if (result === errorObject) {\n        destination.error(errorObject.e);\n      } else if (!this.scheduler) {\n        this.subscribeToProjection(result, value, index);\n      } else {\n        const state: DispatchArg<T, R> = { subscriber: this, result, value, index };\n        this.add(this.scheduler.schedule(ExpandSubscriber.dispatch, 0, state));\n      }\n    } else {\n      this.buffer.push(value);\n    }\n  }\n\n  private subscribeToProjection(result: any, value: T, index: number): void {\n    this.active++;\n    this.add(subscribeToResult<T, R>(this, result, value, index));\n  }\n\n  protected _complete(): void {\n    this.hasCompleted = true;\n    if (this.hasCompleted && this.active === 0) {\n      this.destination.complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this._next(innerValue);\n  }\n\n  notifyComplete(innerSub: Subscription): void {\n    const buffer = this.buffer;\n    this.remove(innerSub);\n    this.active--;\n    if (buffer && buffer.length > 0) {\n      this._next(buffer.shift());\n    }\n    if (this.hasCompleted && this.active === 0) {\n      this.destination.complete();\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription, TeardownLogic } from '../Subscription';\nimport { Observable } from '../Observable';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Returns an Observable that mirrors the source Observable, but will call a specified function when\n * the source terminates on complete or error.\n * @param {function} callback Function to be called when source terminates.\n * @return {Observable} An Observable that mirrors the source, but will call the specified function on termination.\n * @method finally\n * @owner Observable\n */\nexport function finalize<T>(callback: () => void): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new FinallyOperator(callback));\n}\n\nclass FinallyOperator<T> implements Operator<T, T> {\n  constructor(private callback: () => void) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new FinallySubscriber(subscriber, this.callback));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass FinallySubscriber<T> extends Subscriber<T> {\n  constructor(destination: Subscriber<T>, callback: () => void) {\n    super(destination);\n    this.add(new Subscription(callback));\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction, MonoTypeOperatorFunction } from '../interfaces';\n\nexport function find<T, S extends T>(predicate: (value: T, index: number, source: Observable<T>) => value is S,\n                                     thisArg?: any): OperatorFunction<T, S>;\nexport function find<T, S extends T>(predicate: (value: T, index: number) => value is S,\n                                     thisArg?: any): OperatorFunction<T, S>;\nexport function find<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean,\n                        thisArg?: any): MonoTypeOperatorFunction<T>;\nexport function find<T>(predicate: (value: T, index: number) => boolean,\n                        thisArg?: any): MonoTypeOperatorFunction<T>;\n/**\n * Emits only the first value emitted by the source Observable that meets some\n * condition.\n *\n * <span class=\"informal\">Finds the first value that passes some test and emits\n * that.</span>\n *\n * <img src=\"./img/find.png\" width=\"100%\">\n *\n * `find` searches for the first item in the source Observable that matches the\n * specified condition embodied by the `predicate`, and returns the first\n * occurrence in the source. Unlike {@link first}, the `predicate` is required\n * in `find`, and does not emit an error if a valid value is not found.\n *\n * @example <caption>Find and emit the first click that happens on a DIV element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.find(ev => ev.target.tagName === 'DIV');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link filter}\n * @see {@link first}\n * @see {@link findIndex}\n * @see {@link take}\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} predicate\n * A function called with each item to test for condition matching.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable<T>} An Observable of the first item that matches the\n * condition.\n * @method find\n * @owner Observable\n */\nexport function find<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean,\n                        thisArg?: any): MonoTypeOperatorFunction<T> {\n  if (typeof predicate !== 'function') {\n    throw new TypeError('predicate is not a function');\n  }\n  return (source: Observable<T>) => source.lift(new FindValueOperator(predicate, source, false, thisArg));\n}\n\nexport class FindValueOperator<T> implements Operator<T, T> {\n  constructor(private predicate: (value: T, index: number, source: Observable<T>) => boolean,\n              private source: Observable<T>,\n              private yieldIndex: boolean,\n              private thisArg?: any) {\n  }\n\n  call(observer: Subscriber<T>, source: any): any {\n    return source.subscribe(new FindValueSubscriber(observer, this.predicate, this.source, this.yieldIndex, this.thisArg));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class FindValueSubscriber<T> extends Subscriber<T> {\n  private index: number = 0;\n\n  constructor(destination: Subscriber<T>,\n              private predicate: (value: T, index: number, source: Observable<T>) => boolean,\n              private source: Observable<T>,\n              private yieldIndex: boolean,\n              private thisArg?: any) {\n    super(destination);\n  }\n\n  private notifyComplete(value: any): void {\n    const destination = this.destination;\n\n    destination.next(value);\n    destination.complete();\n  }\n\n  protected _next(value: T): void {\n    const { predicate, thisArg } = this;\n    const index = this.index++;\n    try {\n      const result = predicate.call(thisArg || this, value, index, this.source);\n      if (result) {\n        this.notifyComplete(this.yieldIndex ? index : value);\n      }\n    } catch (err) {\n      this.destination.error(err);\n    }\n  }\n\n  protected _complete(): void {\n    this.notifyComplete(this.yieldIndex ? -1 : undefined);\n  }\n}\n","/**\n * An error thrown when an Observable or a sequence was queried but has no\n * elements.\n *\n * @see {@link first}\n * @see {@link last}\n * @see {@link single}\n *\n * @class EmptyError\n */\nexport class EmptyError extends Error {\n  constructor() {\n    const err: any = super('no elements in sequence');\n    (<any> this).name = err.name = 'EmptyError';\n    (<any> this).stack = err.stack;\n    (<any> this).message = err.message;\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { EmptyError } from '../util/EmptyError';\nimport { OperatorFunction, MonoTypeOperatorFunction } from '../interfaces';\n/* tslint:disable:max-line-length */\nexport function first<T, S extends T>(predicate: (value: T, index: number, source: Observable<T>) => value is S): OperatorFunction<T, S>;\nexport function first<T, S extends T, R>(predicate: (value: T | S, index: number, source: Observable<T>) => value is S,\n                                         resultSelector: (value: S, index: number) => R, defaultValue?: R): OperatorFunction<T, R>;\nexport function first<T, S extends T>(predicate: (value: T, index: number, source: Observable<T>) => value is S,\n                                      resultSelector: void,\n                                      defaultValue?: S): OperatorFunction<T, S>;\nexport function first<T>(predicate?: (value: T, index: number, source: Observable<T>) => boolean): MonoTypeOperatorFunction<T>;\nexport function first<T, R>(predicate: (value: T, index: number, source: Observable<T>) => boolean,\n                            resultSelector?: (value: T, index: number) => R,\n                            defaultValue?: R): OperatorFunction<T, R>;\nexport function first<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean,\n                         resultSelector: void,\n                         defaultValue?: T): MonoTypeOperatorFunction<T>;\n\n/**\n * Emits only the first value (or the first value that meets some condition)\n * emitted by the source Observable.\n *\n * <span class=\"informal\">Emits only the first value. Or emits only the first\n * value that passes some test.</span>\n *\n * <img src=\"./img/first.png\" width=\"100%\">\n *\n * If called with no arguments, `first` emits the first value of the source\n * Observable, then completes. If called with a `predicate` function, `first`\n * emits the first value of the source that matches the specified condition. It\n * may also take a `resultSelector` function to produce the output value from\n * the input value, and a `defaultValue` to emit in case the source completes\n * before it is able to emit a valid value. Throws an error if `defaultValue`\n * was not provided and a matching element is not found.\n *\n * @example <caption>Emit only the first click that happens on the DOM</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.first();\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Emits the first click that happens on a DIV</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.first(ev => ev.target.tagName === 'DIV');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link filter}\n * @see {@link find}\n * @see {@link take}\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} [predicate]\n * An optional function called with each item to test for condition matching.\n * @param {function(value: T, index: number): R} [resultSelector] A function to\n * produce the value on the output Observable based on the values\n * and the indices of the source Observable. The arguments passed to this\n * function are:\n * - `value`: the value that was emitted on the source.\n * - `index`: the \"index\" of the value from the source.\n * @param {R} [defaultValue] The default value emitted in case no valid value\n * was found on the source.\n * @return {Observable<T|R>} An Observable of the first item that matches the\n * condition.\n * @method first\n * @owner Observable\n */\nexport function first<T, R>(predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n                            resultSelector?: ((value: T, index: number) => R) | void,\n                            defaultValue?: R): OperatorFunction<T, T | R> {\n  return (source: Observable<T>) => source.lift(new FirstOperator(predicate, resultSelector, defaultValue, source));\n}\n\nclass FirstOperator<T, R> implements Operator<T, R> {\n  constructor(private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private resultSelector?: ((value: T, index: number) => R) | void,\n              private defaultValue?: any,\n              private source?: Observable<T>) {\n  }\n\n  call(observer: Subscriber<R>, source: any): any {\n    return source.subscribe(new FirstSubscriber(observer, this.predicate, this.resultSelector, this.defaultValue, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass FirstSubscriber<T, R> extends Subscriber<T> {\n  private index: number = 0;\n  private hasCompleted: boolean = false;\n  private _emitted: boolean = false;\n\n  constructor(destination: Subscriber<R>,\n              private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private resultSelector?: ((value: T, index: number) => R) | void,\n              private defaultValue?: any,\n              private source?: Observable<T>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const index = this.index++;\n    if (this.predicate) {\n      this._tryPredicate(value, index);\n    } else {\n      this._emit(value, index);\n    }\n  }\n\n  private _tryPredicate(value: T, index: number) {\n    let result: any;\n    try {\n      result = this.predicate(value, index, this.source);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    if (result) {\n      this._emit(value, index);\n    }\n  }\n\n  private _emit(value: any, index: number) {\n    if (this.resultSelector) {\n      this._tryResultSelector(value, index);\n      return;\n    }\n    this._emitFinal(value);\n  }\n\n  private _tryResultSelector(value: T, index: number) {\n    let result: any;\n    try {\n      result = (<any>this).resultSelector(value, index);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this._emitFinal(result);\n  }\n\n  private _emitFinal(value: any) {\n    const destination = this.destination;\n    if (!this._emitted) {\n      this._emitted = true;\n      destination.next(value);\n      destination.complete();\n      this.hasCompleted = true;\n    }\n  }\n\n  protected _complete(): void {\n    const destination = this.destination;\n    if (!this.hasCompleted && typeof this.defaultValue !== 'undefined') {\n      destination.next(this.defaultValue);\n      destination.complete();\n    } else if (!this.hasCompleted) {\n      destination.error(new EmptyError);\n    }\n  }\n}\n","/**\n * An error thrown when an action is invalid because the object has been\n * unsubscribed.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n *\n * @class ObjectUnsubscribedError\n */\nexport class ObjectUnsubscribedError extends Error {\n  constructor() {\n    const err: any = super('object unsubscribed');\n    (<any> this).name = err.name = 'ObjectUnsubscribedError';\n    (<any> this).stack = err.stack;\n    (<any> this).message = err.message;\n  }\n}\n","import { Subject } from './Subject';\nimport { Observer } from './Observer';\nimport { Subscription } from './Subscription';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class SubjectSubscription<T> extends Subscription {\n  closed: boolean = false;\n\n  constructor(public subject: Subject<T>, public subscriber: Observer<T>) {\n    super();\n  }\n\n  unsubscribe() {\n    if (this.closed) {\n      return;\n    }\n\n    this.closed = true;\n\n    const subject = this.subject;\n    const observers = subject.observers;\n\n    this.subject = null;\n\n    if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {\n      return;\n    }\n\n    const subscriberIndex = observers.indexOf(this.subscriber);\n\n    if (subscriberIndex !== -1) {\n      observers.splice(subscriberIndex, 1);\n    }\n  }\n}\n","import { Operator } from './Operator';\nimport { Observer } from './Observer';\nimport { Observable } from './Observable';\nimport { Subscriber } from './Subscriber';\nimport { ISubscription, Subscription, TeardownLogic } from './Subscription';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { SubjectSubscription } from './SubjectSubscription';\nimport { rxSubscriber as rxSubscriberSymbol } from './symbol/rxSubscriber';\n\n/**\n * @class SubjectSubscriber<T>\n */\nexport class SubjectSubscriber<T> extends Subscriber<T> {\n  constructor(protected destination: Subject<T>) {\n    super(destination);\n  }\n}\n\n/**\n * @class Subject<T>\n */\nexport class Subject<T> extends Observable<T> implements ISubscription {\n\n  [rxSubscriberSymbol]() {\n    return new SubjectSubscriber(this);\n  }\n\n  observers: Observer<T>[] = [];\n\n  closed = false;\n\n  isStopped = false;\n\n  hasError = false;\n\n  thrownError: any = null;\n\n  constructor() {\n    super();\n  }\n\n  static create: Function = <T>(destination: Observer<T>, source: Observable<T>): AnonymousSubject<T> => {\n    return new AnonymousSubject<T>(destination, source);\n  }\n\n  lift<R>(operator: Operator<T, R>): Observable<R> {\n    const subject = new AnonymousSubject(this, this);\n    subject.operator = <any>operator;\n    return <any>subject;\n  }\n\n  next(value?: T) {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n    if (!this.isStopped) {\n      const { observers } = this;\n      const len = observers.length;\n      const copy = observers.slice();\n      for (let i = 0; i < len; i++) {\n        copy[i].next(value);\n      }\n    }\n  }\n\n  error(err: any) {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n    this.hasError = true;\n    this.thrownError = err;\n    this.isStopped = true;\n    const { observers } = this;\n    const len = observers.length;\n    const copy = observers.slice();\n    for (let i = 0; i < len; i++) {\n      copy[i].error(err);\n    }\n    this.observers.length = 0;\n  }\n\n  complete() {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n    this.isStopped = true;\n    const { observers } = this;\n    const len = observers.length;\n    const copy = observers.slice();\n    for (let i = 0; i < len; i++) {\n      copy[i].complete();\n    }\n    this.observers.length = 0;\n  }\n\n  unsubscribe() {\n    this.isStopped = true;\n    this.closed = true;\n    this.observers = null;\n  }\n\n  protected _trySubscribe(subscriber: Subscriber<T>): TeardownLogic {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else {\n      return super._trySubscribe(subscriber);\n    }\n  }\n\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else if (this.hasError) {\n      subscriber.error(this.thrownError);\n      return Subscription.EMPTY;\n    } else if (this.isStopped) {\n      subscriber.complete();\n      return Subscription.EMPTY;\n    } else {\n      this.observers.push(subscriber);\n      return new SubjectSubscription(this, subscriber);\n    }\n  }\n\n  asObservable(): Observable<T> {\n    const observable = new Observable<T>();\n    (<any>observable).source = this;\n    return observable;\n  }\n}\n\n/**\n * @class AnonymousSubject<T>\n */\nexport class AnonymousSubject<T> extends Subject<T> {\n  constructor(protected destination?: Observer<T>, source?: Observable<T>) {\n    super();\n    this.source = source;\n  }\n\n  next(value: T) {\n    const { destination } = this;\n    if (destination && destination.next) {\n      destination.next(value);\n    }\n  }\n\n  error(err: any) {\n    const { destination } = this;\n    if (destination && destination.error) {\n      this.destination.error(err);\n    }\n  }\n\n  complete() {\n    const { destination } = this;\n    if (destination && destination.complete) {\n      this.destination.complete();\n    }\n  }\n\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\n    const { source } = this;\n    if (source) {\n      return this.source.subscribe(subscriber);\n    } else {\n      return Subscription.EMPTY;\n    }\n  }\n}\n","export class MapPolyfill {\n  public size = 0;\n  private _values: any[] = [];\n  private _keys: any[] = [];\n\n  get(key: any) {\n    const i = this._keys.indexOf(key);\n    return i === -1 ? undefined : this._values[i];\n  }\n\n  set(key: any, value: any) {\n    const i = this._keys.indexOf(key);\n    if (i === -1) {\n      this._keys.push(key);\n      this._values.push(value);\n      this.size++;\n    } else {\n      this._values[i] = value;\n    }\n    return this;\n  }\n\n  delete(key: any): boolean {\n    const i = this._keys.indexOf(key);\n    if (i === -1) { return false; }\n    this._values.splice(i, 1);\n    this._keys.splice(i, 1);\n    this.size--;\n    return true;\n  }\n\n  clear(): void {\n    this._keys.length = 0;\n    this._values.length = 0;\n    this.size = 0;\n  }\n\n  forEach(cb: Function, thisArg: any): void {\n    for (let i = 0; i < this.size; i++) {\n      cb.call(thisArg, this._values[i], this._keys[i]);\n    }\n  }\n}","import { root } from './root';\nimport { MapPolyfill } from './MapPolyfill';\n\nexport const Map = root.Map || (() => MapPolyfill)();","export class FastMap {\n  private values: Object = {};\n\n  delete(key: string): boolean {\n    this.values[key] = null;\n    return true;\n  }\n\n  set(key: string, value: any): FastMap {\n    this.values[key] = value;\n    return this;\n  }\n\n  get(key: string): any {\n    return this.values[key];\n  }\n\n  forEach(cb: (value: any, key: any) => void, thisArg?: any): void {\n    const values = this.values;\n    for (let key in values) {\n      if (values.hasOwnProperty(key) && values[key] !== null) {\n        cb.call(thisArg, values[key], key);\n      }\n    }\n  }\n\n  clear(): void {\n    this.values = {};\n  }\n}","import { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subject } from '../Subject';\nimport { Map } from '../util/Map';\nimport { FastMap } from '../util/FastMap';\nimport { OperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function groupBy<T, K>(keySelector: (value: T) => K): OperatorFunction<T, GroupedObservable<K, T>>;\nexport function groupBy<T, K>(keySelector: (value: T) => K, elementSelector: void, durationSelector: (grouped: GroupedObservable<K, T>) => Observable<any>): OperatorFunction<T, GroupedObservable<K, T>>;\nexport function groupBy<T, K, R>(keySelector: (value: T) => K, elementSelector?: (value: T) => R, durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>): OperatorFunction<T, GroupedObservable<K, R>>;\nexport function groupBy<T, K, R>(keySelector: (value: T) => K, elementSelector?: (value: T) => R, durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>, subjectSelector?: () => Subject<R>): OperatorFunction<T, GroupedObservable<K, R>>;\n/* tslint:enable:max-line-length */\n\n/**\n * Groups the items emitted by an Observable according to a specified criterion,\n * and emits these grouped items as `GroupedObservables`, one\n * {@link GroupedObservable} per group.\n *\n * <img src=\"./img/groupBy.png\" width=\"100%\">\n *\n * @example <caption>Group objects by id and return as array</caption>\n * Observable.of<Obj>({id: 1, name: 'aze1'},\n *                    {id: 2, name: 'sf2'},\n *                    {id: 2, name: 'dg2'},\n *                    {id: 1, name: 'erg1'},\n *                    {id: 1, name: 'df1'},\n *                    {id: 2, name: 'sfqfb2'},\n *                    {id: 3, name: 'qfs3'},\n *                    {id: 2, name: 'qsgqsfg2'}\n *     )\n *     .groupBy(p => p.id)\n *     .flatMap( (group$) => group$.reduce((acc, cur) => [...acc, cur], []))\n *     .subscribe(p => console.log(p));\n *\n * // displays:\n * // [ { id: 1, name: 'aze1' },\n * //   { id: 1, name: 'erg1' },\n * //   { id: 1, name: 'df1' } ]\n * //\n * // [ { id: 2, name: 'sf2' },\n * //   { id: 2, name: 'dg2' },\n * //   { id: 2, name: 'sfqfb2' },\n * //   { id: 2, name: 'qsgqsfg2' } ]\n * //\n * // [ { id: 3, name: 'qfs3' } ]\n *\n * @example <caption>Pivot data on the id field</caption>\n * Observable.of<Obj>({id: 1, name: 'aze1'},\n *                    {id: 2, name: 'sf2'},\n *                    {id: 2, name: 'dg2'},\n *                    {id: 1, name: 'erg1'},\n *                    {id: 1, name: 'df1'},\n *                    {id: 2, name: 'sfqfb2'},\n *                    {id: 3, name: 'qfs1'},\n *                    {id: 2, name: 'qsgqsfg2'}\n *                   )\n *     .groupBy(p => p.id, p => p.name)\n *     .flatMap( (group$) => group$.reduce((acc, cur) => [...acc, cur], [\"\" + group$.key]))\n *     .map(arr => ({'id': parseInt(arr[0]), 'values': arr.slice(1)}))\n *     .subscribe(p => console.log(p));\n *\n * // displays:\n * // { id: 1, values: [ 'aze1', 'erg1', 'df1' ] }\n * // { id: 2, values: [ 'sf2', 'dg2', 'sfqfb2', 'qsgqsfg2' ] }\n * // { id: 3, values: [ 'qfs1' ] }\n *\n * @param {function(value: T): K} keySelector A function that extracts the key\n * for each item.\n * @param {function(value: T): R} [elementSelector] A function that extracts the\n * return element for each item.\n * @param {function(grouped: GroupedObservable<K,R>): Observable<any>} [durationSelector]\n * A function that returns an Observable to determine how long each group should\n * exist.\n * @return {Observable<GroupedObservable<K,R>>} An Observable that emits\n * GroupedObservables, each of which corresponds to a unique key value and each\n * of which emits those items from the source Observable that share that key\n * value.\n * @method groupBy\n * @owner Observable\n */\nexport function groupBy<T, K, R>(keySelector: (value: T) => K,\n                                 elementSelector?: ((value: T) => R) | void,\n                                 durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>,\n                                 subjectSelector?: () => Subject<R>): OperatorFunction<T, GroupedObservable<K, R>> {\n  return (source: Observable<T>) =>\n    source.lift(new GroupByOperator(keySelector, elementSelector, durationSelector, subjectSelector));\n}\n\nexport interface RefCountSubscription {\n  count: number;\n  unsubscribe: () => void;\n  closed: boolean;\n  attemptedToUnsubscribe: boolean;\n}\n\nclass GroupByOperator<T, K, R> implements Operator<T, GroupedObservable<K, R>> {\n  constructor(private keySelector: (value: T) => K,\n              private elementSelector?: ((value: T) => R) | void,\n              private durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>,\n              private subjectSelector?: () => Subject<R>) {\n  }\n\n  call(subscriber: Subscriber<GroupedObservable<K, R>>, source: any): any {\n    return source.subscribe(new GroupBySubscriber(\n      subscriber, this.keySelector, this.elementSelector, this.durationSelector, this.subjectSelector\n    ));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass GroupBySubscriber<T, K, R> extends Subscriber<T> implements RefCountSubscription {\n  private groups: Map<K, Subject<T|R>> = null;\n  public attemptedToUnsubscribe: boolean = false;\n  public count: number = 0;\n\n  constructor(destination: Subscriber<GroupedObservable<K, R>>,\n              private keySelector: (value: T) => K,\n              private elementSelector?: ((value: T) => R) | void,\n              private durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>,\n              private subjectSelector?: () => Subject<R>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    let key: K;\n    try {\n      key = this.keySelector(value);\n    } catch (err) {\n      this.error(err);\n      return;\n    }\n\n    this._group(value, key);\n  }\n\n  private _group(value: T, key: K) {\n    let groups = this.groups;\n\n    if (!groups) {\n      groups = this.groups = typeof key === 'string' ? new FastMap() : new Map();\n    }\n\n    let group = groups.get(key);\n\n    let element: R;\n    if (this.elementSelector) {\n      try {\n        element = this.elementSelector(value);\n      } catch (err) {\n        this.error(err);\n      }\n    } else {\n      element = <any>value;\n    }\n\n    if (!group) {\n      group = this.subjectSelector ? this.subjectSelector() : new Subject<R>();\n      groups.set(key, group);\n      const groupedObservable = new GroupedObservable(key, group, this);\n      this.destination.next(groupedObservable);\n      if (this.durationSelector) {\n        let duration: any;\n        try {\n          duration = this.durationSelector(new GroupedObservable<K, R>(key, <Subject<R>>group));\n        } catch (err) {\n          this.error(err);\n          return;\n        }\n        this.add(duration.subscribe(new GroupDurationSubscriber(key, group, this)));\n      }\n    }\n\n    if (!group.closed) {\n      group.next(element);\n    }\n  }\n\n  protected _error(err: any): void {\n    const groups = this.groups;\n    if (groups) {\n      groups.forEach((group, key) => {\n        group.error(err);\n      });\n\n      groups.clear();\n    }\n    this.destination.error(err);\n  }\n\n  protected _complete(): void {\n    const groups = this.groups;\n    if (groups) {\n      groups.forEach((group, key) => {\n        group.complete();\n      });\n\n      groups.clear();\n    }\n    this.destination.complete();\n  }\n\n  removeGroup(key: K): void {\n    this.groups.delete(key);\n  }\n\n  unsubscribe() {\n    if (!this.closed) {\n      this.attemptedToUnsubscribe = true;\n      if (this.count === 0) {\n        super.unsubscribe();\n      }\n    }\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass GroupDurationSubscriber<K, T> extends Subscriber<T> {\n  constructor(private key: K,\n              private group: Subject<T>,\n              private parent: GroupBySubscriber<any, K, T>) {\n    super(group);\n  }\n\n  protected _next(value: T): void {\n    this.complete();\n  }\n\n  protected _unsubscribe() {\n    const { parent, key } = this;\n    this.key = this.parent = null;\n    if (parent) {\n      parent.removeGroup(key);\n    }\n  }\n}\n\n/**\n * An Observable representing values belonging to the same group represented by\n * a common key. The values emitted by a GroupedObservable come from the source\n * Observable. The common key is available as the field `key` on a\n * GroupedObservable instance.\n *\n * @class GroupedObservable<K, T>\n */\nexport class GroupedObservable<K, T> extends Observable<T> {\n  constructor(public key: K,\n              private groupSubject: Subject<T>,\n              private refCountSubscription?: RefCountSubscription) {\n    super();\n  }\n\n  protected _subscribe(subscriber: Subscriber<T>) {\n    const subscription = new Subscription();\n    const {refCountSubscription, groupSubject} = this;\n    if (refCountSubscription && !refCountSubscription.closed) {\n      subscription.add(new InnerRefCountSubscription(refCountSubscription));\n    }\n    subscription.add(groupSubject.subscribe(subscriber));\n    return subscription;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass InnerRefCountSubscription extends Subscription {\n  constructor(private parent: RefCountSubscription) {\n    super();\n    parent.count++;\n  }\n\n  unsubscribe() {\n    const parent = this.parent;\n    if (!parent.closed && !this.closed) {\n      super.unsubscribe();\n      parent.count -= 1;\n      if (parent.count === 0 && parent.attemptedToUnsubscribe) {\n        parent.unsubscribe();\n      }\n    }\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { noop } from '../util/noop';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Ignores all items emitted by the source Observable and only passes calls of `complete` or `error`.\n *\n * <img src=\"./img/ignoreElements.png\" width=\"100%\">\n *\n * @return {Observable} An empty Observable that only calls `complete`\n * or `error`, based on which one is called by the source Observable.\n * @method ignoreElements\n * @owner Observable\n */\nexport function ignoreElements<T>(): MonoTypeOperatorFunction<T> {\n  return function ignoreElementsOperatorFunction(source: Observable<T>) {\n    return source.lift(new IgnoreElementsOperator());\n  };\n}\n\nclass IgnoreElementsOperator<T, R> implements Operator<T, R> {\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new IgnoreElementsSubscriber(subscriber));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass IgnoreElementsSubscriber<T> extends Subscriber<T> {\n  protected _next(unused: T): void {\n    noop();\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OperatorFunction } from '../interfaces';\n\nexport function isEmpty<T>(): OperatorFunction<T, boolean> {\n  return (source: Observable<T>) => source.lift(new IsEmptyOperator());\n}\n\nclass IsEmptyOperator implements Operator<any, boolean> {\n  call (observer: Subscriber<boolean>, source: any): any {\n    return source.subscribe(new IsEmptySubscriber(observer));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass IsEmptySubscriber extends Subscriber<any> {\n  constructor(destination: Subscriber<boolean>) {\n    super(destination);\n  }\n\n  private notifyComplete(isEmpty: boolean): void {\n    const destination = this.destination;\n\n    destination.next(isEmpty);\n    destination.complete();\n  }\n\n  protected _next(value: boolean) {\n    this.notifyComplete(false);\n  }\n\n  protected _complete() {\n    this.notifyComplete(true);\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { EmptyError } from '../util/EmptyError';\nimport { OperatorFunction, MonoTypeOperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function last<T, S extends T>(predicate: (value: T, index: number, source: Observable<T>) => value is S): OperatorFunction<T, S>;\nexport function last<T, S extends T, R>(predicate: (value: T | S, index: number, source: Observable<T>) => value is S,\n                                        resultSelector: (value: S, index: number) => R, defaultValue?: R): OperatorFunction<T, R>;\nexport function last<T, S extends T>(predicate: (value: T, index: number, source: Observable<T>) => value is S,\n                                     resultSelector: void,\n                                     defaultValue?: S): OperatorFunction<T, S>;\nexport function last<T>(predicate?: (value: T, index: number, source: Observable<T>) => boolean): MonoTypeOperatorFunction<T>;\nexport function last<T, R>(predicate: (value: T, index: number, source: Observable<T>) => boolean,\n                           resultSelector?: (value: T, index: number) => R,\n                           defaultValue?: R): OperatorFunction<T, R>;\nexport function last<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean,\n                        resultSelector: void,\n                        defaultValue?: T): MonoTypeOperatorFunction<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Returns an Observable that emits only the last item emitted by the source Observable.\n * It optionally takes a predicate function as a parameter, in which case, rather than emitting\n * the last item from the source Observable, the resulting Observable will emit the last item\n * from the source Observable that satisfies the predicate.\n *\n * <img src=\"./img/last.png\" width=\"100%\">\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n * @param {function} predicate - The condition any source emitted item has to satisfy.\n * @return {Observable} An Observable that emits only the last item satisfying the given condition\n * from the source, or an NoSuchElementException if no such items are emitted.\n * @throws - Throws if no items that match the predicate are emitted by the source Observable.\n * @method last\n * @owner Observable\n */\nexport function last<T, R>(predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n                           resultSelector?: ((value: T, index: number) => R) | void,\n                           defaultValue?: R): OperatorFunction<T, T | R> {\n  return (source: Observable<T>) => source.lift(new LastOperator(predicate, resultSelector, defaultValue, source));\n}\n\nclass LastOperator<T, R> implements Operator<T, R> {\n  constructor(private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private resultSelector?: ((value: T, index: number) => R) | void,\n              private defaultValue?: any,\n              private source?: Observable<T>) {\n  }\n\n  call(observer: Subscriber<R>, source: any): any {\n    return source.subscribe(new LastSubscriber(observer, this.predicate, this.resultSelector, this.defaultValue, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass LastSubscriber<T, R> extends Subscriber<T> {\n  private lastValue: T | R;\n  private hasValue: boolean = false;\n  private index: number = 0;\n\n  constructor(destination: Subscriber<R>,\n              private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private resultSelector?: ((value: T, index: number) => R) | void,\n              private defaultValue?: any,\n              private source?: Observable<T>) {\n    super(destination);\n    if (typeof defaultValue !== 'undefined') {\n      this.lastValue = defaultValue;\n      this.hasValue = true;\n    }\n  }\n\n  protected _next(value: T): void {\n    const index = this.index++;\n    if (this.predicate) {\n      this._tryPredicate(value, index);\n    } else {\n      if (this.resultSelector) {\n        this._tryResultSelector(value, index);\n        return;\n      }\n      this.lastValue = value;\n      this.hasValue = true;\n    }\n  }\n\n  private _tryPredicate(value: T, index: number) {\n    let result: any;\n    try {\n      result = this.predicate(value, index, this.source);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    if (result) {\n      if (this.resultSelector) {\n        this._tryResultSelector(value, index);\n        return;\n      }\n      this.lastValue = value;\n      this.hasValue = true;\n    }\n  }\n\n  private _tryResultSelector(value: T, index: number) {\n    let result: any;\n    try {\n      result = (<any>this).resultSelector(value, index);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.lastValue = result;\n    this.hasValue = true;\n  }\n\n  protected _complete(): void {\n    const destination = this.destination;\n    if (this.hasValue) {\n      destination.next(this.lastValue);\n      destination.complete();\n    } else {\n      destination.error(new EmptyError);\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Emits the given constant value on the output Observable every time the source\n * Observable emits a value.\n *\n * <span class=\"informal\">Like {@link map}, but it maps every source value to\n * the same output value every time.</span>\n *\n * <img src=\"./img/mapTo.png\" width=\"100%\">\n *\n * Takes a constant `value` as argument, and emits that whenever the source\n * Observable emits a value. In other words, ignores the actual source value,\n * and simply uses the emission moment to know when to emit the given `value`.\n *\n * @example <caption>Map every click to the string 'Hi'</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var greetings = clicks.mapTo('Hi');\n * greetings.subscribe(x => console.log(x));\n *\n * @see {@link map}\n *\n * @param {any} value The value to map each source value to.\n * @return {Observable} An Observable that emits the given `value` every time\n * the source Observable emits something.\n * @method mapTo\n * @owner Observable\n */\nexport function mapTo<T, R>(value: R): OperatorFunction<T, R> {\n  return (source: Observable<T>) => source.lift(new MapToOperator(value));\n}\n\nclass MapToOperator<T, R> implements Operator<T, R> {\n\n  value: R;\n\n  constructor(value: R) {\n    this.value = value;\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new MapToSubscriber(subscriber, this.value));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass MapToSubscriber<T, R> extends Subscriber<T> {\n\n  value: R;\n\n  constructor(destination: Subscriber<R>, value: R) {\n    super(destination);\n    this.value = value;\n  }\n\n  protected _next(x: T) {\n    this.destination.next(this.value);\n  }\n}","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Notification } from '../Notification';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Represents all of the notifications from the source Observable as `next`\n * emissions marked with their original types within {@link Notification}\n * objects.\n *\n * <span class=\"informal\">Wraps `next`, `error` and `complete` emissions in\n * {@link Notification} objects, emitted as `next` on the output Observable.\n * </span>\n *\n * <img src=\"./img/materialize.png\" width=\"100%\">\n *\n * `materialize` returns an Observable that emits a `next` notification for each\n * `next`, `error`, or `complete` emission of the source Observable. When the\n * source Observable emits `complete`, the output Observable will emit `next` as\n * a Notification of type \"complete\", and then it will emit `complete` as well.\n * When the source Observable emits `error`, the output will emit `next` as a\n * Notification of type \"error\", and then `complete`.\n *\n * This operator is useful for producing metadata of the source Observable, to\n * be consumed as `next` emissions. Use it in conjunction with\n * {@link dematerialize}.\n *\n * @example <caption>Convert a faulty Observable to an Observable of Notifications</caption>\n * var letters = Rx.Observable.of('a', 'b', 13, 'd');\n * var upperCase = letters.map(x => x.toUpperCase());\n * var materialized = upperCase.materialize();\n * materialized.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // - Notification {kind: \"N\", value: \"A\", error: undefined, hasValue: true}\n * // - Notification {kind: \"N\", value: \"B\", error: undefined, hasValue: true}\n * // - Notification {kind: \"E\", value: undefined, error: TypeError:\n * //   x.toUpperCase is not a function at MapSubscriber.letters.map.x\n * //   [as project] (http://1…, hasValue: false}\n *\n * @see {@link Notification}\n * @see {@link dematerialize}\n *\n * @return {Observable<Notification<T>>} An Observable that emits\n * {@link Notification} objects that wrap the original emissions from the source\n * Observable with metadata.\n * @method materialize\n * @owner Observable\n */\nexport function materialize<T>(): OperatorFunction<T, Notification<T>> {\n  return function materializeOperatorFunction(source: Observable<T>) {\n    return source.lift(new MaterializeOperator());\n  };\n}\n\nclass MaterializeOperator<T> implements Operator<T, Notification<T>> {\n  call(subscriber: Subscriber<Notification<T>>, source: any): any {\n    return source.subscribe(new MaterializeSubscriber(subscriber));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass MaterializeSubscriber<T> extends Subscriber<T> {\n  constructor(destination: Subscriber<Notification<T>>) {\n    super(destination);\n  }\n\n  protected _next(value: T) {\n    this.destination.next(Notification.createNext(value));\n  }\n\n  protected _error(err: any) {\n    const destination = this.destination;\n    destination.next(Notification.createError(err));\n    destination.complete();\n  }\n\n  protected _complete() {\n    const destination = this.destination;\n    destination.next(Notification.createComplete());\n    destination.complete();\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction, MonoTypeOperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function scan<T>(accumulator: (acc: T, value: T, index: number) => T, seed?: T): MonoTypeOperatorFunction<T>;\nexport function scan<T>(accumulator: (acc: T[], value: T, index: number) => T[], seed?: T[]): OperatorFunction<T, T[]>;\nexport function scan<T, R>(accumulator: (acc: R, value: T, index: number) => R, seed?: R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Applies an accumulator function over the source Observable, and returns each\n * intermediate result, with an optional seed value.\n *\n * <span class=\"informal\">It's like {@link reduce}, but emits the current\n * accumulation whenever the source emits a value.</span>\n *\n * <img src=\"./img/scan.png\" width=\"100%\">\n *\n * Combines together all values emitted on the source, using an accumulator\n * function that knows how to join a new source value into the accumulation from\n * the past. Is similar to {@link reduce}, but emits the intermediate\n * accumulations.\n *\n * Returns an Observable that applies a specified `accumulator` function to each\n * item emitted by the source Observable. If a `seed` value is specified, then\n * that value will be used as the initial value for the accumulator. If no seed\n * value is specified, the first item of the source is used as the seed.\n *\n * @example <caption>Count the number of click events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var ones = clicks.mapTo(1);\n * var seed = 0;\n * var count = ones.scan((acc, one) => acc + one, seed);\n * count.subscribe(x => console.log(x));\n *\n * @see {@link expand}\n * @see {@link mergeScan}\n * @see {@link reduce}\n *\n * @param {function(acc: R, value: T, index: number): R} accumulator\n * The accumulator function called on each source value.\n * @param {T|R} [seed] The initial accumulation value.\n * @return {Observable<R>} An observable of the accumulated values.\n * @method scan\n * @owner Observable\n */\nexport function scan<T, R>(accumulator: (acc: R, value: T, index: number) => R, seed?: T | R): OperatorFunction<T, R> {\n  let hasSeed = false;\n  // providing a seed of `undefined` *should* be valid and trigger\n  // hasSeed! so don't use `seed !== undefined` checks!\n  // For this reason, we have to check it here at the original call site\n  // otherwise inside Operator/Subscriber we won't know if `undefined`\n  // means they didn't provide anything or if they literally provided `undefined`\n  if (arguments.length >= 2) {\n    hasSeed = true;\n  }\n\n  return function scanOperatorFunction(source: Observable<T>): Observable<R> {\n    return source.lift(new ScanOperator(accumulator, seed, hasSeed));\n  };\n}\n\nclass ScanOperator<T, R> implements Operator<T, R> {\n  constructor(private accumulator: (acc: R, value: T, index: number) => R, private seed?: T | R, private hasSeed: boolean = false) {}\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new ScanSubscriber(subscriber, this.accumulator, this.seed, this.hasSeed));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass ScanSubscriber<T, R> extends Subscriber<T> {\n  private index: number = 0;\n\n  get seed(): T | R {\n    return this._seed;\n  }\n\n  set seed(value: T | R) {\n    this.hasSeed = true;\n    this._seed = value;\n  }\n\n  constructor(destination: Subscriber<R>, private accumulator: (acc: R, value: T, index: number) => R, private _seed: T | R,\n              private hasSeed: boolean) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (!this.hasSeed) {\n      this.seed = value;\n      this.destination.next(value);\n    } else {\n      return this._tryNext(value);\n    }\n  }\n\n  private _tryNext(value: T): void {\n    const index = this.index++;\n    let result: any;\n    try {\n      result = this.accumulator(<R>this.seed, value, index);\n    } catch (err) {\n      this.destination.error(err);\n    }\n    this.seed = result;\n    this.destination.next(result);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { EmptyObservable } from '../observable/EmptyObservable';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Emits only the last `count` values emitted by the source Observable.\n *\n * <span class=\"informal\">Remembers the latest `count` values, then emits those\n * only when the source completes.</span>\n *\n * <img src=\"./img/takeLast.png\" width=\"100%\">\n *\n * `takeLast` returns an Observable that emits at most the last `count` values\n * emitted by the source Observable. If the source emits fewer than `count`\n * values then all of its values are emitted. This operator must wait until the\n * `complete` notification emission from the source in order to emit the `next`\n * values on the output Observable, because otherwise it is impossible to know\n * whether or not more values will be emitted on the source. For this reason,\n * all values are emitted synchronously, followed by the complete notification.\n *\n * @example <caption>Take the last 3 values of an Observable with many values</caption>\n * var many = Rx.Observable.range(1, 100);\n * var lastThree = many.takeLast(3);\n * lastThree.subscribe(x => console.log(x));\n *\n * @see {@link take}\n * @see {@link takeUntil}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @throws {ArgumentOutOfRangeError} When using `takeLast(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0`.\n *\n * @param {number} count The maximum number of values to emit from the end of\n * the sequence of values emitted by the source Observable.\n * @return {Observable<T>} An Observable that emits at most the last count\n * values emitted by the source Observable.\n * @method takeLast\n * @owner Observable\n */\nexport function takeLast<T>(count: number): MonoTypeOperatorFunction<T> {\n  return function takeLastOperatorFunction(source: Observable<T>): Observable<T> {\n    if (count === 0) {\n      return new EmptyObservable<T>();\n    } else {\n      return source.lift(new TakeLastOperator(count));\n    }\n  };\n}\n\nclass TakeLastOperator<T> implements Operator<T, T> {\n  constructor(private total: number) {\n    if (this.total < 0) {\n      throw new ArgumentOutOfRangeError;\n    }\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new TakeLastSubscriber(subscriber, this.total));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TakeLastSubscriber<T> extends Subscriber<T> {\n  private ring: Array<T> = new Array();\n  private count: number = 0;\n\n  constructor(destination: Subscriber<T>, private total: number) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const ring = this.ring;\n    const total = this.total;\n    const count = this.count++;\n\n    if (ring.length < total) {\n      ring.push(value);\n    } else {\n      const index = count % total;\n      ring[index] = value;\n    }\n  }\n\n  protected _complete(): void {\n    const destination = this.destination;\n    let count = this.count;\n\n    if (count > 0) {\n      const total = this.count >= this.total ? this.total : this.count;\n      const ring  = this.ring;\n\n      for (let i = 0; i < total; i++) {\n        const idx = (count++) % total;\n        destination.next(ring[idx]);\n      }\n    }\n\n    destination.complete();\n  }\n}\n","import { Observable, ObservableInput } from '../Observable';\nimport { Operator } from '../Operator';\nimport { PartialObserver } from '../Observer';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function mergeMapTo<T, R>(observable: ObservableInput<R>, concurrent?: number): OperatorFunction<T, R>;\nexport function mergeMapTo<T, I, R>(observable: ObservableInput<I>, resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R, concurrent?: number): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to the same Observable which is merged multiple\n * times in the output Observable.\n *\n * <span class=\"informal\">It's like {@link mergeMap}, but maps each value always\n * to the same inner Observable.</span>\n *\n * <img src=\"./img/mergeMapTo.png\" width=\"100%\">\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then merges those resulting Observables into one\n * single Observable, which is the output Observable.\n *\n * @example <caption>For each click event, start an interval Observable ticking every 1 second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.mergeMapTo(Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMapTo}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeScan}\n * @see {@link switchMapTo}\n *\n * @param {ObservableInput} innerObservable An Observable to replace each value from\n * the source Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits items from the given\n * `innerObservable` (and optionally transformed through `resultSelector`) every\n * time a value is emitted on the source Observable.\n * @method mergeMapTo\n * @owner Observable\n */\nexport function mergeMapTo<T, I, R>(innerObservable: Observable<I>,\n                                    resultSelector?: ((outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R) | number,\n                                    concurrent: number = Number.POSITIVE_INFINITY): OperatorFunction<T, R> {\n  if (typeof resultSelector === 'number') {\n    concurrent = <number>resultSelector;\n    resultSelector = null;\n  }\n  return (source: Observable<T>) => source.lift(new MergeMapToOperator(innerObservable, <any>resultSelector, concurrent));\n}\n\n// TODO: Figure out correct signature here: an Operator<Observable<T>, R>\n//       needs to implement call(observer: Subscriber<R>): Subscriber<Observable<T>>\nexport class MergeMapToOperator<T, I, R> implements Operator<Observable<T>, R> {\n  constructor(private ish: ObservableInput<I>,\n              private resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R,\n              private concurrent: number = Number.POSITIVE_INFINITY) {\n  }\n\n  call(observer: Subscriber<R>, source: any): any {\n    return source.subscribe(new MergeMapToSubscriber(observer, this.ish, this.resultSelector, this.concurrent));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class MergeMapToSubscriber<T, I, R> extends OuterSubscriber<T, I> {\n  private hasCompleted: boolean = false;\n  private buffer: T[] = [];\n  private active: number = 0;\n  protected index: number = 0;\n\n  constructor(destination: Subscriber<R>,\n              private ish: ObservableInput<I>,\n              private resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R,\n              private concurrent: number = Number.POSITIVE_INFINITY) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (this.active < this.concurrent) {\n      const resultSelector = this.resultSelector;\n      const index = this.index++;\n      const ish = this.ish;\n      const destination = this.destination;\n\n      this.active++;\n      this._innerSub(ish, destination, resultSelector, value, index);\n    } else {\n      this.buffer.push(value);\n    }\n  }\n\n  private _innerSub(ish: ObservableInput<I>,\n                    destination: PartialObserver<I>,\n                    resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R,\n                    value: T,\n                    index: number): void {\n    this.add(subscribeToResult<T, I>(this, ish, value, index));\n  }\n\n  protected _complete(): void {\n    this.hasCompleted = true;\n    if (this.active === 0 && this.buffer.length === 0) {\n      this.destination.complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: I,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, I>): void {\n    const { resultSelector, destination } = this;\n    if (resultSelector) {\n      this.trySelectResult(outerValue, innerValue, outerIndex, innerIndex);\n    } else {\n      destination.next(innerValue);\n    }\n  }\n\n  private trySelectResult(outerValue: T, innerValue: I,\n                          outerIndex: number, innerIndex: number): void {\n    const { resultSelector, destination } = this;\n    let result: R;\n    try {\n      result = resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n    } catch (err) {\n      destination.error(err);\n      return;\n    }\n\n    destination.next(result);\n  }\n\n  notifyError(err: any): void {\n    this.destination.error(err);\n  }\n\n  notifyComplete(innerSub: Subscription): void {\n    const buffer = this.buffer;\n    this.remove(innerSub);\n    this.active--;\n    if (buffer.length > 0) {\n      this._next(buffer.shift());\n    } else if (this.active === 0 && this.hasCompleted) {\n      this.destination.complete();\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Applies an accumulator function over the source Observable where the\n * accumulator function itself returns an Observable, then each intermediate\n * Observable returned is merged into the output Observable.\n *\n * <span class=\"informal\">It's like {@link scan}, but the Observables returned\n * by the accumulator are merged into the outer Observable.</span>\n *\n * @example <caption>Count the number of click events</caption>\n * const click$ = Rx.Observable.fromEvent(document, 'click');\n * const one$ = click$.mapTo(1);\n * const seed = 0;\n * const count$ = one$.mergeScan((acc, one) => Rx.Observable.of(acc + one), seed);\n * count$.subscribe(x => console.log(x));\n *\n * // Results:\n * 1\n * 2\n * 3\n * 4\n * // ...and so on for each click\n *\n * @param {function(acc: R, value: T): Observable<R>} accumulator\n * The accumulator function called on each source value.\n * @param seed The initial accumulation value.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of\n * input Observables being subscribed to concurrently.\n * @return {Observable<R>} An observable of the accumulated values.\n * @method mergeScan\n * @owner Observable\n */\nexport function mergeScan<T, R>(accumulator: (acc: R, value: T) => Observable<R>,\n                                seed: R,\n                                concurrent: number = Number.POSITIVE_INFINITY): OperatorFunction<T, R> {\n  return (source: Observable<T>) => source.lift(new MergeScanOperator(accumulator, seed, concurrent));\n}\n\nexport class MergeScanOperator<T, R> implements Operator<T, R> {\n  constructor(private accumulator: (acc: R, value: T) => Observable<R>,\n              private seed: R,\n              private concurrent: number) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new MergeScanSubscriber(\n      subscriber, this.accumulator, this.seed, this.concurrent\n    ));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class MergeScanSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private hasValue: boolean = false;\n  private hasCompleted: boolean = false;\n  private buffer: Observable<any>[] = [];\n  private active: number = 0;\n  protected index: number = 0;\n\n  constructor(destination: Subscriber<R>,\n              private accumulator: (acc: R, value: T) => Observable<R>,\n              private acc: R,\n              private concurrent: number) {\n    super(destination);\n  }\n\n  protected _next(value: any): void {\n    if (this.active < this.concurrent) {\n      const index = this.index++;\n      const ish = tryCatch(this.accumulator)(this.acc, value);\n      const destination = this.destination;\n      if (ish === errorObject) {\n        destination.error(errorObject.e);\n      } else {\n        this.active++;\n        this._innerSub(ish, value, index);\n      }\n    } else {\n      this.buffer.push(value);\n    }\n  }\n\n  private _innerSub(ish: any, value: T, index: number): void {\n    this.add(subscribeToResult<T, R>(this, ish, value, index));\n  }\n\n  protected _complete(): void {\n    this.hasCompleted = true;\n    if (this.active === 0 && this.buffer.length === 0) {\n      if (this.hasValue === false) {\n        this.destination.next(this.acc);\n      }\n      this.destination.complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    const { destination } = this;\n    this.acc = innerValue;\n    this.hasValue = true;\n    destination.next(innerValue);\n  }\n\n  notifyComplete(innerSub: Subscription): void {\n    const buffer = this.buffer;\n    this.remove(innerSub);\n    this.active--;\n    if (buffer.length > 0) {\n      this._next(buffer.shift());\n    } else if (this.active === 0 && this.hasCompleted) {\n      if (this.hasValue === false) {\n        this.destination.next(this.acc);\n      }\n      this.destination.complete();\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription, TeardownLogic } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../interfaces';\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { Observable } from '../Observable';\n\nexport function refCount<T>(): MonoTypeOperatorFunction<T> {\n  return function refCountOperatorFunction(source: ConnectableObservable<T>): Observable<T> {\n    return source.lift(new RefCountOperator(source));\n  };\n}\n\nclass RefCountOperator<T> implements Operator<T, T> {\n  constructor(private connectable: ConnectableObservable<T>) {\n  }\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n\n    const { connectable } = this;\n    (<any> connectable)._refCount++;\n\n    const refCounter = new RefCountSubscriber(subscriber, connectable);\n    const subscription = source.subscribe(refCounter);\n\n    if (!refCounter.closed) {\n      (<any> refCounter).connection = connectable.connect();\n    }\n\n    return subscription;\n  }\n}\n\nclass RefCountSubscriber<T> extends Subscriber<T> {\n\n  private connection: Subscription;\n\n  constructor(destination: Subscriber<T>,\n              private connectable: ConnectableObservable<T>) {\n    super(destination);\n  }\n\n  protected _unsubscribe() {\n\n    const { connectable } = this;\n    if (!connectable) {\n      this.connection = null;\n      return;\n    }\n\n    this.connectable = null;\n    const refCount = (<any> connectable)._refCount;\n    if (refCount <= 0) {\n      this.connection = null;\n      return;\n    }\n\n    (<any> connectable)._refCount = refCount - 1;\n    if (refCount > 1) {\n      this.connection = null;\n      return;\n    }\n\n    ///\n    // Compare the local RefCountSubscriber's connection Subscription to the\n    // connection Subscription on the shared ConnectableObservable. In cases\n    // where the ConnectableObservable source synchronously emits values, and\n    // the RefCountSubscriber's downstream Observers synchronously unsubscribe,\n    // execution continues to here before the RefCountOperator has a chance to\n    // supply the RefCountSubscriber with the shared connection Subscription.\n    // For example:\n    // ```\n    // Observable.range(0, 10)\n    //   .publish()\n    //   .refCount()\n    //   .take(5)\n    //   .subscribe();\n    // ```\n    // In order to account for this case, RefCountSubscriber should only dispose\n    // the ConnectableObservable's shared connection Subscription if the\n    // connection Subscription exists, *and* either:\n    //   a. RefCountSubscriber doesn't have a reference to the shared connection\n    //      Subscription yet, or,\n    //   b. RefCountSubscriber's connection Subscription reference is identical\n    //      to the shared connection Subscription\n    ///\n    const { connection } = this;\n    const sharedConnection = (<any> connectable)._connection;\n    this.connection = null;\n\n    if (sharedConnection && (!connection || sharedConnection === connection)) {\n      sharedConnection.unsubscribe();\n    }\n  }\n}\n","import { Subject, SubjectSubscriber } from '../Subject';\nimport { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription, TeardownLogic } from '../Subscription';\nimport { refCount as higherOrderRefCount } from '../operators/refCount';\n\n/**\n * @class ConnectableObservable<T>\n */\nexport class ConnectableObservable<T> extends Observable<T> {\n\n  protected _subject: Subject<T>;\n  protected _refCount: number = 0;\n  protected _connection: Subscription;\n  _isComplete = false;\n\n  constructor(protected source: Observable<T>,\n              protected subjectFactory: () => Subject<T>) {\n    super();\n  }\n\n  protected _subscribe(subscriber: Subscriber<T>) {\n    return this.getSubject().subscribe(subscriber);\n  }\n\n  protected getSubject(): Subject<T> {\n    const subject = this._subject;\n    if (!subject || subject.isStopped) {\n      this._subject = this.subjectFactory();\n    }\n    return this._subject;\n  }\n\n  connect(): Subscription {\n    let connection = this._connection;\n    if (!connection) {\n      this._isComplete = false;\n      connection = this._connection = new Subscription();\n      connection.add(this.source\n        .subscribe(new ConnectableSubscriber(this.getSubject(), this)));\n      if (connection.closed) {\n        this._connection = null;\n        connection = Subscription.EMPTY;\n      } else {\n        this._connection = connection;\n      }\n    }\n    return connection;\n  }\n\n  refCount(): Observable<T> {\n    return higherOrderRefCount()(this) as Observable<T>;\n  }\n}\n\nconst connectableProto = <any>ConnectableObservable.prototype;\n\nexport const connectableObservableDescriptor: PropertyDescriptorMap = {\n  operator: { value: null },\n  _refCount: { value: 0, writable: true },\n  _subject: { value: null, writable: true },\n  _connection: { value: null, writable: true },\n  _subscribe: { value: connectableProto._subscribe },\n  _isComplete: { value: connectableProto._isComplete, writable: true },\n  getSubject: { value: connectableProto.getSubject },\n  connect: { value: connectableProto.connect },\n  refCount: { value: connectableProto.refCount }\n};\n\nclass ConnectableSubscriber<T> extends SubjectSubscriber<T> {\n  constructor(destination: Subject<T>,\n              private connectable: ConnectableObservable<T>) {\n    super(destination);\n  }\n  protected _error(err: any): void {\n    this._unsubscribe();\n    super._error(err);\n  }\n  protected _complete(): void {\n    this.connectable._isComplete = true;\n    this._unsubscribe();\n    super._complete();\n  }\n  protected _unsubscribe() {\n    const connectable = <any>this.connectable;\n    if (connectable) {\n      this.connectable = null;\n      const connection = connectable._connection;\n      connectable._refCount = 0;\n      connectable._subject = null;\n      connectable._connection = null;\n      if (connection) {\n        connection.unsubscribe();\n      }\n    }\n  }\n}\n\nclass RefCountOperator<T> implements Operator<T, T> {\n  constructor(private connectable: ConnectableObservable<T>) {\n  }\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n\n    const { connectable } = this;\n    (<any> connectable)._refCount++;\n\n    const refCounter = new RefCountSubscriber(subscriber, connectable);\n    const subscription = source.subscribe(refCounter);\n\n    if (!refCounter.closed) {\n      (<any> refCounter).connection = connectable.connect();\n    }\n\n    return subscription;\n  }\n}\n\nclass RefCountSubscriber<T> extends Subscriber<T> {\n\n  private connection: Subscription;\n\n  constructor(destination: Subscriber<T>,\n              private connectable: ConnectableObservable<T>) {\n    super(destination);\n  }\n\n  protected _unsubscribe() {\n\n    const { connectable } = this;\n    if (!connectable) {\n      this.connection = null;\n      return;\n    }\n\n    this.connectable = null;\n    const refCount = (<any> connectable)._refCount;\n    if (refCount <= 0) {\n      this.connection = null;\n      return;\n    }\n\n    (<any> connectable)._refCount = refCount - 1;\n    if (refCount > 1) {\n      this.connection = null;\n      return;\n    }\n\n    ///\n    // Compare the local RefCountSubscriber's connection Subscription to the\n    // connection Subscription on the shared ConnectableObservable. In cases\n    // where the ConnectableObservable source synchronously emits values, and\n    // the RefCountSubscriber's downstream Observers synchronously unsubscribe,\n    // execution continues to here before the RefCountOperator has a chance to\n    // supply the RefCountSubscriber with the shared connection Subscription.\n    // For example:\n    // ```\n    // Observable.range(0, 10)\n    //   .publish()\n    //   .refCount()\n    //   .take(5)\n    //   .subscribe();\n    // ```\n    // In order to account for this case, RefCountSubscriber should only dispose\n    // the ConnectableObservable's shared connection Subscription if the\n    // connection Subscription exists, *and* either:\n    //   a. RefCountSubscriber doesn't have a reference to the shared connection\n    //      Subscription yet, or,\n    //   b. RefCountSubscriber's connection Subscription reference is identical\n    //      to the shared connection Subscription\n    ///\n    const { connection } = this;\n    const sharedConnection = (<any> connectable)._connection;\n    this.connection = null;\n\n    if (sharedConnection && (!connection || sharedConnection === connection)) {\n      sharedConnection.unsubscribe();\n    }\n  }\n}\n","import { Observable, ObservableInput } from '../Observable';\nimport { FromObservable } from '../observable/FromObservable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { isArray } from '../util/isArray';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function onErrorResumeNext<T, R>(v: ObservableInput<R>): OperatorFunction<T, R>;\nexport function onErrorResumeNext<T, T2, T3, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>): OperatorFunction<T, R>;\nexport function onErrorResumeNext<T, T2, T3, T4, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): OperatorFunction<T, R>;\nexport function onErrorResumeNext<T, T2, T3, T4, T5, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): OperatorFunction<T, R>;\nexport function onErrorResumeNext<T, T2, T3, T4, T5, T6, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): OperatorFunction<T, R> ;\nexport function onErrorResumeNext<T, R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): OperatorFunction<T, R>;\nexport function onErrorResumeNext<T, R>(array: ObservableInput<any>[]): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * When any of the provided Observable emits an complete or error notification, it immediately subscribes to the next one\n * that was passed.\n *\n * <span class=\"informal\">Execute series of Observables no matter what, even if it means swallowing errors.</span>\n *\n * <img src=\"./img/onErrorResumeNext.png\" width=\"100%\">\n *\n * `onErrorResumeNext` is an operator that accepts a series of Observables, provided either directly as\n * arguments or as an array. If no single Observable is provided, returned Observable will simply behave the same\n * as the source.\n *\n * `onErrorResumeNext` returns an Observable that starts by subscribing and re-emitting values from the source Observable.\n * When its stream of values ends - no matter if Observable completed or emitted an error - `onErrorResumeNext`\n * will subscribe to the first Observable that was passed as an argument to the method. It will start re-emitting\n * its values as well and - again - when that stream ends, `onErrorResumeNext` will proceed to subscribing yet another\n * Observable in provided series, no matter if previous Observable completed or ended with an error. This will\n * be happening until there is no more Observables left in the series, at which point returned Observable will\n * complete - even if the last subscribed stream ended with an error.\n *\n * `onErrorResumeNext` can be therefore thought of as version of {@link concat} operator, which is more permissive\n * when it comes to the errors emitted by its input Observables. While `concat` subscribes to the next Observable\n * in series only if previous one successfully completed, `onErrorResumeNext` subscribes even if it ended with\n * an error.\n *\n * Note that you do not get any access to errors emitted by the Observables. In particular do not\n * expect these errors to appear in error callback passed to {@link subscribe}. If you want to take\n * specific actions based on what error was emitted by an Observable, you should try out {@link catch} instead.\n *\n *\n * @example <caption>Subscribe to the next Observable after map fails</caption>\n * Rx.Observable.of(1, 2, 3, 0)\n *   .map(x => {\n *       if (x === 0) { throw Error(); }\n         return 10 / x;\n *   })\n *   .onErrorResumeNext(Rx.Observable.of(1, 2, 3))\n *   .subscribe(\n *     val => console.log(val),\n *     err => console.log(err),          // Will never be called.\n *     () => console.log('that\\'s it!')\n *   );\n *\n * // Logs:\n * // 10\n * // 5\n * // 3.3333333333333335\n * // 1\n * // 2\n * // 3\n * // \"that's it!\"\n *\n * @see {@link concat}\n * @see {@link catch}\n *\n * @param {...ObservableInput} observables Observables passed either directly or as an array.\n * @return {Observable} An Observable that emits values from source Observable, but - if it errors - subscribes\n * to the next passed Observable and so on, until it completes or runs out of Observables.\n * @method onErrorResumeNext\n * @owner Observable\n */\n\nexport function onErrorResumeNext<T, R>(...nextSources: Array<ObservableInput<any> |\n                                                       Array<ObservableInput<any>> |\n                                                       ((...values: Array<any>) => R)>): OperatorFunction<T, R> {\n  if (nextSources.length === 1 && isArray(nextSources[0])) {\n    nextSources = <Array<Observable<any>>>nextSources[0];\n  }\n\n  return (source: Observable<T>) => source.lift(new OnErrorResumeNextOperator<T, R>(nextSources));\n}\n\n/* tslint:disable:max-line-length */\nexport function onErrorResumeNextStatic<R>(v: ObservableInput<R>): Observable<R>;\nexport function onErrorResumeNextStatic<T2, T3, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>): Observable<R>;\nexport function onErrorResumeNextStatic<T2, T3, T4, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): Observable<R>;\nexport function onErrorResumeNextStatic<T2, T3, T4, T5, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): Observable<R>;\nexport function onErrorResumeNextStatic<T2, T3, T4, T5, T6, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): Observable<R>;\n\nexport function onErrorResumeNextStatic<R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): Observable<R>;\nexport function onErrorResumeNextStatic<R>(array: ObservableInput<any>[]): Observable<R>;\n/* tslint:enable:max-line-length */\n\nexport function onErrorResumeNextStatic<T, R>(...nextSources: Array<ObservableInput<any> |\n                                                              Array<ObservableInput<any>> |\n                                                              ((...values: Array<any>) => R)>): Observable<R> {\n  let source: ObservableInput<any> = null;\n\n  if (nextSources.length === 1 && isArray(nextSources[0])) {\n    nextSources = <Array<ObservableInput<any>>>nextSources[0];\n  }\n  source = nextSources.shift();\n\n  return new FromObservable(source, null).lift(new OnErrorResumeNextOperator<T, R>(nextSources));\n}\n\nclass OnErrorResumeNextOperator<T, R> implements Operator<T, R> {\n  constructor(private nextSources: Array<ObservableInput<any>>) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new OnErrorResumeNextSubscriber(subscriber, this.nextSources));\n  }\n}\n\nclass OnErrorResumeNextSubscriber<T, R> extends OuterSubscriber<T, R> {\n  constructor(protected destination: Subscriber<T>,\n              private nextSources: Array<ObservableInput<any>>) {\n    super(destination);\n  }\n\n  notifyError(error: any, innerSub: InnerSubscriber<T, any>): void {\n    this.subscribeToNextSource();\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, any>): void {\n    this.subscribeToNextSource();\n  }\n\n  protected _error(err: any): void {\n    this.subscribeToNextSource();\n  }\n\n  protected _complete(): void {\n    this.subscribeToNextSource();\n  }\n\n  private subscribeToNextSource(): void {\n    const next = this.nextSources.shift();\n    if (next) {\n      this.add(subscribeToResult(this, next));\n    } else {\n      this.destination.complete();\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Groups pairs of consecutive emissions together and emits them as an array of\n * two values.\n *\n * <span class=\"informal\">Puts the current value and previous value together as\n * an array, and emits that.</span>\n *\n * <img src=\"./img/pairwise.png\" width=\"100%\">\n *\n * The Nth emission from the source Observable will cause the output Observable\n * to emit an array [(N-1)th, Nth] of the previous and the current value, as a\n * pair. For this reason, `pairwise` emits on the second and subsequent\n * emissions from the source Observable, but not on the first emission, because\n * there is no previous value in that case.\n *\n * @example <caption>On every click (starting from the second), emit the relative distance to the previous click</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var pairs = clicks.pairwise();\n * var distance = pairs.map(pair => {\n *   var x0 = pair[0].clientX;\n *   var y0 = pair[0].clientY;\n *   var x1 = pair[1].clientX;\n *   var y1 = pair[1].clientY;\n *   return Math.sqrt(Math.pow(x0 - x1, 2) + Math.pow(y0 - y1, 2));\n * });\n * distance.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n *\n * @return {Observable<Array<T>>} An Observable of pairs (as arrays) of\n * consecutive values from the source Observable.\n * @method pairwise\n * @owner Observable\n */\nexport function pairwise<T>(): OperatorFunction<T, [T, T]> {\n  return (source: Observable<T>) => source.lift(new PairwiseOperator());\n}\n\nclass PairwiseOperator<T> implements Operator<T, [T, T]> {\n  call(subscriber: Subscriber<[T, T]>, source: any): any {\n    return source.subscribe(new PairwiseSubscriber(subscriber));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass PairwiseSubscriber<T> extends Subscriber<T> {\n  private prev: T;\n  private hasPrev: boolean = false;\n\n  constructor(destination: Subscriber<[T, T]>) {\n    super(destination);\n  }\n\n  _next(value: T): void {\n    if (this.hasPrev) {\n      this.destination.next([this.prev, value]);\n    } else {\n      this.hasPrev = true;\n    }\n\n    this.prev = value;\n  }\n}\n","import { Subject } from './Subject';\nimport { Subscriber } from './Subscriber';\nimport { Subscription, ISubscription } from './Subscription';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\n\n/**\n * @class BehaviorSubject<T>\n */\nexport class BehaviorSubject<T> extends Subject<T> {\n\n  constructor(private _value: T) {\n    super();\n  }\n\n  get value(): T {\n    return this.getValue();\n  }\n\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\n    const subscription = super._subscribe(subscriber);\n    if (subscription && !(<ISubscription>subscription).closed) {\n      subscriber.next(this._value);\n    }\n    return subscription;\n  }\n\n  getValue(): T {\n    if (this.hasError) {\n      throw this.thrownError;\n    } else if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else {\n      return this._value;\n    }\n  }\n\n  next(value: T): void {\n    super.next(this._value = value);\n  }\n}\n","import { Subject } from './Subject';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\n\n/**\n * @class AsyncSubject<T>\n */\nexport class AsyncSubject<T> extends Subject<T> {\n  private value: T = null;\n  private hasNext: boolean = false;\n  private hasCompleted: boolean = false;\n\n  protected _subscribe(subscriber: Subscriber<any>): Subscription {\n    if (this.hasError) {\n      subscriber.error(this.thrownError);\n      return Subscription.EMPTY;\n    } else if (this.hasCompleted && this.hasNext) {\n      subscriber.next(this.value);\n      subscriber.complete();\n      return Subscription.EMPTY;\n    }\n    return super._subscribe(subscriber);\n  }\n\n  next(value: T): void {\n    if (!this.hasCompleted) {\n      this.value = value;\n      this.hasNext = true;\n    }\n  }\n\n  error(error: any): void {\n    if (!this.hasCompleted) {\n      super.error(error);\n    }\n  }\n\n  complete(): void {\n    this.hasCompleted = true;\n    if (this.hasNext) {\n      super.next(this.value);\n    }\n    super.complete();\n  }\n}\n","import { Subject } from './Subject';\nimport { IScheduler } from './Scheduler';\nimport { queue } from './scheduler/queue';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { ObserveOnSubscriber } from './operators/observeOn';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { SubjectSubscription } from './SubjectSubscription';\n/**\n * @class ReplaySubject<T>\n */\nexport class ReplaySubject<T> extends Subject<T> {\n  private _events: ReplayEvent<T>[] = [];\n  private _bufferSize: number;\n  private _windowTime: number;\n\n  constructor(bufferSize: number = Number.POSITIVE_INFINITY,\n              windowTime: number = Number.POSITIVE_INFINITY,\n              private scheduler?: IScheduler) {\n    super();\n    this._bufferSize = bufferSize < 1 ? 1 : bufferSize;\n    this._windowTime = windowTime < 1 ? 1 : windowTime;\n  }\n\n  next(value: T): void {\n    const now = this._getNow();\n    this._events.push(new ReplayEvent(now, value));\n    this._trimBufferThenGetEvents();\n    super.next(value);\n  }\n\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\n    const _events = this._trimBufferThenGetEvents();\n    const scheduler = this.scheduler;\n    let subscription: Subscription;\n\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else if (this.hasError) {\n      subscription = Subscription.EMPTY;\n    } else if (this.isStopped) {\n      subscription = Subscription.EMPTY;\n    } else {\n      this.observers.push(subscriber);\n      subscription = new SubjectSubscription(this, subscriber);\n    }\n\n    if (scheduler) {\n      subscriber.add(subscriber = new ObserveOnSubscriber<T>(subscriber, scheduler));\n    }\n\n    const len = _events.length;\n    for (let i = 0; i < len && !subscriber.closed; i++) {\n      subscriber.next(_events[i].value);\n    }\n\n    if (this.hasError) {\n      subscriber.error(this.thrownError);\n    } else if (this.isStopped) {\n      subscriber.complete();\n    }\n\n    return subscription;\n  }\n\n  _getNow(): number {\n    return (this.scheduler || queue).now();\n  }\n\n  private _trimBufferThenGetEvents(): ReplayEvent<T>[] {\n    const now = this._getNow();\n    const _bufferSize = this._bufferSize;\n    const _windowTime = this._windowTime;\n    const _events = this._events;\n\n    let eventsCount = _events.length;\n    let spliceCount = 0;\n\n    // Trim events that fall out of the time window.\n    // Start at the front of the list. Break early once\n    // we encounter an event that falls within the window.\n    while (spliceCount < eventsCount) {\n      if ((now - _events[spliceCount].time) < _windowTime) {\n        break;\n      }\n      spliceCount++;\n    }\n\n    if (eventsCount > _bufferSize) {\n      spliceCount = Math.max(spliceCount, eventsCount - _bufferSize);\n    }\n\n    if (spliceCount > 0) {\n      _events.splice(0, spliceCount);\n    }\n\n    return _events;\n  }\n}\n\nclass ReplayEvent<T> {\n  constructor(public time: number, public value: T) {\n  }\n}\n","import { Observable } from '../Observable';\nimport { isArray } from '../util/isArray';\nimport { ArrayObservable } from '../observable/ArrayObservable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription, TeardownLogic } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\n/**\n * Returns an Observable that mirrors the first source Observable to emit an item.\n * @param {...Observables} ...observables sources used to race for which Observable emits first.\n * @return {Observable} an Observable that mirrors the output of the first Observable to emit an item.\n * @static true\n * @name race\n * @owner Observable\n */\nexport function race<T>(observables: Array<Observable<T>>): Observable<T>;\nexport function race<T>(observables: Array<Observable<any>>): Observable<T>;\nexport function race<T>(...observables: Array<Observable<T> | Array<Observable<T>>>): Observable<T>;\nexport function race<T>(...observables: Array<Observable<any> | Array<Observable<any>>>): Observable<T> {\n  // if the only argument is an array, it was most likely called with\n  // `race([obs1, obs2, ...])`\n  if (observables.length === 1) {\n    if (isArray(observables[0])) {\n      observables = <Array<Observable<any>>>observables[0];\n    } else {\n      return <Observable<any>>observables[0];\n    }\n  }\n\n  return new ArrayObservable<T>(<any>observables).lift(new RaceOperator<T>());\n}\n\nexport class RaceOperator<T> implements Operator<T, T> {\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new RaceSubscriber(subscriber));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class RaceSubscriber<T> extends OuterSubscriber<T, T> {\n  private hasFirst: boolean = false;\n  private observables: Observable<any>[] = [];\n  private subscriptions: Subscription[] = [];\n\n  constructor(destination: Subscriber<T>) {\n    super(destination);\n  }\n\n  protected _next(observable: any): void {\n    this.observables.push(observable);\n  }\n\n  protected _complete() {\n    const observables = this.observables;\n    const len = observables.length;\n\n    if (len === 0) {\n      this.destination.complete();\n    } else {\n      for (let i = 0; i < len && !this.hasFirst; i++) {\n        let observable = observables[i];\n        let subscription = subscribeToResult(this, observable, observable, i);\n\n        if (this.subscriptions) {\n          this.subscriptions.push(subscription);\n        }\n        this.add(subscription);\n      }\n      this.observables = null;\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: T,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, T>): void {\n    if (!this.hasFirst) {\n      this.hasFirst = true;\n\n      for (let i = 0; i < this.subscriptions.length; i++) {\n        if (i !== outerIndex) {\n          let subscription = this.subscriptions[i];\n\n          subscription.unsubscribe();\n          this.remove(subscription);\n        }\n      }\n\n      this.subscriptions = null;\n    }\n\n    this.destination.next(innerValue);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { EmptyObservable } from '../observable/EmptyObservable';\nimport { TeardownLogic } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Returns an Observable that repeats the stream of items emitted by the source Observable at most count times.\n *\n * <img src=\"./img/repeat.png\" width=\"100%\">\n *\n * @param {number} [count] The number of times the source Observable items are repeated, a count of 0 will yield\n * an empty Observable.\n * @return {Observable} An Observable that repeats the stream of items emitted by the source Observable at most\n * count times.\n * @method repeat\n * @owner Observable\n */\nexport function repeat<T>(count: number = -1): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => {\n    if (count === 0) {\n      return new EmptyObservable<T>();\n    } else if (count < 0) {\n      return source.lift(new RepeatOperator(-1, source));\n    } else {\n      return source.lift(new RepeatOperator(count - 1, source));\n    }\n  };\n}\n\nclass RepeatOperator<T> implements Operator<T, T> {\n  constructor(private count: number,\n              private source: Observable<T>) {\n  }\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new RepeatSubscriber(subscriber, this.count, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass RepeatSubscriber<T> extends Subscriber<T> {\n  constructor(destination: Subscriber<any>,\n              private count: number,\n              private source: Observable<T>) {\n    super(destination);\n  }\n  complete() {\n    if (!this.isStopped) {\n      const { source, count } = this;\n      if (count === 0) {\n        return super.complete();\n      } else if (count > -1) {\n        this.count = count - 1;\n      }\n      source.subscribe(this._unsubscribeAndRecycle());\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { Subscription, TeardownLogic } from '../Subscription';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\n\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Returns an Observable that mirrors the source Observable with the exception of a `complete`. If the source\n * Observable calls `complete`, this method will emit to the Observable returned from `notifier`. If that Observable\n * calls `complete` or `error`, then this method will call `complete` or `error` on the child subscription. Otherwise\n * this method will resubscribe to the source Observable.\n *\n * <img src=\"./img/repeatWhen.png\" width=\"100%\">\n *\n * @param {function(notifications: Observable): Observable} notifier - Receives an Observable of notifications with\n * which a user can `complete` or `error`, aborting the repetition.\n * @return {Observable} The source Observable modified with repeat logic.\n * @method repeatWhen\n * @owner Observable\n */\nexport function repeatWhen<T>(notifier: (notifications: Observable<any>) => Observable<any>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new RepeatWhenOperator(notifier));\n}\n\nclass RepeatWhenOperator<T> implements Operator<T, T> {\n  constructor(protected notifier: (notifications: Observable<any>) => Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new RepeatWhenSubscriber(subscriber, this.notifier, source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass RepeatWhenSubscriber<T, R> extends OuterSubscriber<T, R> {\n\n  private notifications: Subject<any>;\n  private retries: Observable<any>;\n  private retriesSubscription: Subscription;\n  private sourceIsBeingSubscribedTo: boolean = true;\n\n  constructor(destination: Subscriber<R>,\n              private notifier: (notifications: Observable<any>) => Observable<any>,\n              private source: Observable<T>) {\n    super(destination);\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.sourceIsBeingSubscribedTo = true;\n    this.source.subscribe(this);\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, R>): void {\n    if (this.sourceIsBeingSubscribedTo === false) {\n      return super.complete();\n    }\n  }\n\n  complete() {\n    this.sourceIsBeingSubscribedTo = false;\n\n    if (!this.isStopped) {\n      if (!this.retries) {\n        this.subscribeToRetries();\n      } else if (this.retriesSubscription.closed) {\n        return super.complete();\n      }\n\n      this._unsubscribeAndRecycle();\n      this.notifications.next();\n    }\n  }\n\n  protected _unsubscribe() {\n    const { notifications, retriesSubscription } = this;\n    if (notifications) {\n      notifications.unsubscribe();\n      this.notifications = null;\n    }\n    if (retriesSubscription) {\n      retriesSubscription.unsubscribe();\n      this.retriesSubscription = null;\n    }\n    this.retries = null;\n  }\n\n  protected _unsubscribeAndRecycle(): Subscriber<T> {\n    const { notifications, retries, retriesSubscription } = this;\n    this.notifications = null;\n    this.retries = null;\n    this.retriesSubscription = null;\n    super._unsubscribeAndRecycle();\n    this.notifications = notifications;\n    this.retries = retries;\n    this.retriesSubscription = retriesSubscription;\n    return this;\n  }\n\n  private subscribeToRetries() {\n    this.notifications = new Subject();\n    const retries = tryCatch(this.notifier)(this.notifications);\n    if (retries === errorObject) {\n      return super.complete();\n    }\n    this.retries = retries;\n    this.retriesSubscription = subscribeToResult(this, retries);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\n\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Returns an Observable that mirrors the source Observable with the exception of an `error`. If the source Observable\n * calls `error`, this method will resubscribe to the source Observable for a maximum of `count` resubscriptions (given\n * as a number parameter) rather than propagating the `error` call.\n *\n * <img src=\"./img/retry.png\" width=\"100%\">\n *\n * Any and all items emitted by the source Observable will be emitted by the resulting Observable, even those emitted\n * during failed subscriptions. For example, if an Observable fails at first but emits [1, 2] then succeeds the second\n * time and emits: [1, 2, 3, 4, 5] then the complete stream of emissions and notifications\n * would be: [1, 2, 1, 2, 3, 4, 5, `complete`].\n * @param {number} count - Number of retry attempts before failing.\n * @return {Observable} The source Observable modified with the retry logic.\n * @method retry\n * @owner Observable\n */\nexport function retry<T>(count: number = -1): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new RetryOperator(count, source));\n}\n\nclass RetryOperator<T> implements Operator<T, T> {\n  constructor(private count: number,\n              private source: Observable<T>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new RetrySubscriber(subscriber, this.count, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass RetrySubscriber<T> extends Subscriber<T> {\n  constructor(destination: Subscriber<any>,\n              private count: number,\n              private source: Observable<T>) {\n    super(destination);\n  }\n  error(err: any) {\n    if (!this.isStopped) {\n      const { source, count } = this;\n      if (count === 0) {\n        return super.error(err);\n      } else if (count > -1) {\n        this.count = count - 1;\n      }\n      source.subscribe(this._unsubscribeAndRecycle());\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { Subscription, TeardownLogic } from '../Subscription';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\n\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Returns an Observable that mirrors the source Observable with the exception of an `error`. If the source Observable\n * calls `error`, this method will emit the Throwable that caused the error to the Observable returned from `notifier`.\n * If that Observable calls `complete` or `error` then this method will call `complete` or `error` on the child\n * subscription. Otherwise this method will resubscribe to the source Observable.\n *\n * <img src=\"./img/retryWhen.png\" width=\"100%\">\n *\n * @param {function(errors: Observable): Observable} notifier - Receives an Observable of notifications with which a\n * user can `complete` or `error`, aborting the retry.\n * @return {Observable} The source Observable modified with retry logic.\n * @method retryWhen\n * @owner Observable\n */\nexport function retryWhen<T>(notifier: (errors: Observable<any>) => Observable<any>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new RetryWhenOperator(notifier, source));\n}\n\nclass RetryWhenOperator<T> implements Operator<T, T> {\n  constructor(protected notifier: (errors: Observable<any>) => Observable<any>,\n              protected source: Observable<T>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new RetryWhenSubscriber(subscriber, this.notifier, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass RetryWhenSubscriber<T, R> extends OuterSubscriber<T, R> {\n\n  private errors: Subject<any>;\n  private retries: Observable<any>;\n  private retriesSubscription: Subscription;\n\n  constructor(destination: Subscriber<R>,\n              private notifier: (errors: Observable<any>) => Observable<any>,\n              private source: Observable<T>) {\n    super(destination);\n  }\n\n  error(err: any) {\n    if (!this.isStopped) {\n\n      let errors = this.errors;\n      let retries: any = this.retries;\n      let retriesSubscription = this.retriesSubscription;\n\n      if (!retries) {\n        errors = new Subject();\n        retries = tryCatch(this.notifier)(errors);\n        if (retries === errorObject) {\n          return super.error(errorObject.e);\n        }\n        retriesSubscription = subscribeToResult(this, retries);\n      } else {\n        this.errors = null;\n        this.retriesSubscription = null;\n      }\n\n      this._unsubscribeAndRecycle();\n\n      this.errors = errors;\n      this.retries = retries;\n      this.retriesSubscription = retriesSubscription;\n\n      errors.next(err);\n    }\n  }\n\n  protected _unsubscribe() {\n    const { errors, retriesSubscription } = this;\n    if (errors) {\n      errors.unsubscribe();\n      this.errors = null;\n    }\n    if (retriesSubscription) {\n      retriesSubscription.unsubscribe();\n      this.retriesSubscription = null;\n    }\n    this.retries = null;\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    const { errors, retries, retriesSubscription } = this;\n    this.errors = null;\n    this.retries = null;\n    this.retriesSubscription = null;\n\n    this._unsubscribeAndRecycle();\n\n    this.errors = errors;\n    this.retries = retries;\n    this.retriesSubscription = retriesSubscription;\n\n    this.source.subscribe(this);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { TeardownLogic } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Emits the most recently emitted value from the source Observable whenever\n * another Observable, the `notifier`, emits.\n *\n * <span class=\"informal\">It's like {@link sampleTime}, but samples whenever\n * the `notifier` Observable emits something.</span>\n *\n * <img src=\"./img/sample.png\" width=\"100%\">\n *\n * Whenever the `notifier` Observable emits a value or completes, `sample`\n * looks at the source Observable and emits whichever value it has most recently\n * emitted since the previous sampling, unless the source has not emitted\n * anything since the previous sampling. The `notifier` is subscribed to as soon\n * as the output Observable is subscribed.\n *\n * @example <caption>On every click, sample the most recent \"seconds\" timer</caption>\n * var seconds = Rx.Observable.interval(1000);\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = seconds.sample(clicks);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounce}\n * @see {@link sampleTime}\n * @see {@link throttle}\n *\n * @param {Observable<any>} notifier The Observable to use for sampling the\n * source Observable.\n * @return {Observable<T>} An Observable that emits the results of sampling the\n * values emitted by the source Observable whenever the notifier Observable\n * emits value or completes.\n * @method sample\n * @owner Observable\n */\nexport function sample<T>(notifier: Observable<any>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SampleOperator(notifier));\n}\n\nclass SampleOperator<T> implements Operator<T, T> {\n  constructor(private notifier: Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    const sampleSubscriber = new SampleSubscriber(subscriber);\n    const subscription = source.subscribe(sampleSubscriber);\n    subscription.add(subscribeToResult(sampleSubscriber, this.notifier));\n    return subscription;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SampleSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private value: T;\n  private hasValue: boolean = false;\n\n  protected _next(value: T) {\n    this.value = value;\n    this.hasValue = true;\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.emitValue();\n  }\n\n  notifyComplete(): void {\n    this.emitValue();\n  }\n\n  emitValue() {\n    if (this.hasValue) {\n      this.hasValue = false;\n      this.destination.next(this.value);\n    }\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { IScheduler } from '../Scheduler';\nimport { Action } from '../scheduler/Action';\nimport { async } from '../scheduler/async';\nimport { TeardownLogic } from '../Subscription';\n\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Emits the most recently emitted value from the source Observable within\n * periodic time intervals.\n *\n * <span class=\"informal\">Samples the source Observable at periodic time\n * intervals, emitting what it samples.</span>\n *\n * <img src=\"./img/sampleTime.png\" width=\"100%\">\n *\n * `sampleTime` periodically looks at the source Observable and emits whichever\n * value it has most recently emitted since the previous sampling, unless the\n * source has not emitted anything since the previous sampling. The sampling\n * happens periodically in time every `period` milliseconds (or the time unit\n * defined by the optional `scheduler` argument). The sampling starts as soon as\n * the output Observable is subscribed.\n *\n * @example <caption>Every second, emit the most recent click at most once</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.sampleTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sample}\n * @see {@link throttleTime}\n *\n * @param {number} period The sampling period expressed in milliseconds or the\n * time unit determined internally by the optional `scheduler`.\n * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for\n * managing the timers that handle the sampling.\n * @return {Observable<T>} An Observable that emits the results of sampling the\n * values emitted by the source Observable at the specified time interval.\n * @method sampleTime\n * @owner Observable\n */\nexport function sampleTime<T>(period: number, scheduler: IScheduler = async): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SampleTimeOperator(period, scheduler));\n}\n\nclass SampleTimeOperator<T> implements Operator<T, T> {\n  constructor(private period: number,\n              private scheduler: IScheduler) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new SampleTimeSubscriber(subscriber, this.period, this.scheduler));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SampleTimeSubscriber<T> extends Subscriber<T> {\n  lastValue: T;\n  hasValue: boolean = false;\n\n  constructor(destination: Subscriber<T>,\n              private period: number,\n              private scheduler: IScheduler) {\n    super(destination);\n    this.add(scheduler.schedule(dispatchNotification, period, { subscriber: this, period }));\n  }\n\n  protected _next(value: T) {\n    this.lastValue = value;\n    this.hasValue = true;\n  }\n\n  notifyNext() {\n    if (this.hasValue) {\n      this.hasValue = false;\n      this.destination.next(this.lastValue);\n    }\n  }\n}\n\nfunction dispatchNotification<T>(this: Action<any>, state: any) {\n  let { subscriber, period } = state;\n  subscriber.notifyNext();\n  this.schedule(state, period);\n}\n","import { Operator } from '../Operator';\nimport { Observer } from '../Observer';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\n\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Compares all values of two observables in sequence using an optional comparor function\n * and returns an observable of a single boolean value representing whether or not the two sequences\n * are equal.\n *\n * <span class=\"informal\">Checks to see of all values emitted by both observables are equal, in order.</span>\n *\n * <img src=\"./img/sequenceEqual.png\" width=\"100%\">\n *\n * `sequenceEqual` subscribes to two observables and buffers incoming values from each observable. Whenever either\n * observable emits a value, the value is buffered and the buffers are shifted and compared from the bottom\n * up; If any value pair doesn't match, the returned observable will emit `false` and complete. If one of the\n * observables completes, the operator will wait for the other observable to complete; If the other\n * observable emits before completing, the returned observable will emit `false` and complete. If one observable never\n * completes or emits after the other complets, the returned observable will never complete.\n *\n * @example <caption>figure out if the Konami code matches</caption>\n * var code = Rx.Observable.from([\n *  \"ArrowUp\",\n *  \"ArrowUp\",\n *  \"ArrowDown\",\n *  \"ArrowDown\",\n *  \"ArrowLeft\",\n *  \"ArrowRight\",\n *  \"ArrowLeft\",\n *  \"ArrowRight\",\n *  \"KeyB\",\n *  \"KeyA\",\n *  \"Enter\" // no start key, clearly.\n * ]);\n *\n * var keys = Rx.Observable.fromEvent(document, 'keyup')\n *  .map(e => e.code);\n * var matches = keys.bufferCount(11, 1)\n *  .mergeMap(\n *    last11 =>\n *      Rx.Observable.from(last11)\n *        .sequenceEqual(code)\n *   );\n * matches.subscribe(matched => console.log('Successful cheat at Contra? ', matched));\n *\n * @see {@link combineLatest}\n * @see {@link zip}\n * @see {@link withLatestFrom}\n *\n * @param {Observable} compareTo The observable sequence to compare the source sequence to.\n * @param {function} [comparor] An optional function to compare each value pair\n * @return {Observable} An Observable of a single boolean value representing whether or not\n * the values emitted by both observables were equal in sequence.\n * @method sequenceEqual\n * @owner Observable\n */\nexport function sequenceEqual<T>(compareTo: Observable<T>,\n                                 comparor?: (a: T, b: T) => boolean): OperatorFunction<T, boolean> {\n  return (source: Observable<T>) => source.lift(new SequenceEqualOperator(compareTo, comparor));\n}\n\nexport class SequenceEqualOperator<T> implements Operator<T, boolean> {\n  constructor(private compareTo: Observable<T>,\n              private comparor: (a: T, b: T) => boolean) {\n  }\n\n  call(subscriber: Subscriber<boolean>, source: any): any {\n    return source.subscribe(new SequenceEqualSubscriber(subscriber, this.compareTo, this.comparor));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class SequenceEqualSubscriber<T, R> extends Subscriber<T> {\n  private _a: T[] = [];\n  private _b: T[] = [];\n  private _oneComplete = false;\n\n  constructor(destination: Observer<R>,\n              private compareTo: Observable<T>,\n              private comparor: (a: T, b: T) => boolean) {\n    super(destination);\n    this.add(compareTo.subscribe(new SequenceEqualCompareToSubscriber(destination, this)));\n  }\n\n  protected _next(value: T): void {\n    if (this._oneComplete && this._b.length === 0) {\n      this.emit(false);\n    } else {\n      this._a.push(value);\n      this.checkValues();\n    }\n  }\n\n  public _complete(): void {\n    if (this._oneComplete) {\n      this.emit(this._a.length === 0 && this._b.length === 0);\n    } else {\n      this._oneComplete = true;\n    }\n  }\n\n  checkValues() {\n    const { _a, _b, comparor } = this;\n    while (_a.length > 0 && _b.length > 0) {\n      let a = _a.shift();\n      let b = _b.shift();\n      let areEqual = false;\n      if (comparor) {\n        areEqual = tryCatch(comparor)(a, b);\n        if (areEqual === errorObject) {\n          this.destination.error(errorObject.e);\n        }\n      } else {\n        areEqual = a === b;\n      }\n      if (!areEqual) {\n        this.emit(false);\n      }\n    }\n  }\n\n  emit(value: boolean) {\n    const { destination } = this;\n    destination.next(value);\n    destination.complete();\n  }\n\n  nextB(value: T) {\n    if (this._oneComplete && this._a.length === 0) {\n      this.emit(false);\n    } else {\n      this._b.push(value);\n      this.checkValues();\n    }\n  }\n}\n\nclass SequenceEqualCompareToSubscriber<T, R> extends Subscriber<T> {\n  constructor(destination: Observer<R>, private parent: SequenceEqualSubscriber<T, R>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    this.parent.nextB(value);\n  }\n\n  protected _error(err: any): void {\n    this.parent.error(err);\n  }\n\n  protected _complete(): void {\n    this.parent._complete();\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observer } from '../Observer';\nimport { EmptyError } from '../util/EmptyError';\nimport { TeardownLogic } from '../Subscription';\n\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Returns an Observable that emits the single item emitted by the source Observable that matches a specified\n * predicate, if that Observable emits one such item. If the source Observable emits more than one such item or no\n * such items, notify of an IllegalArgumentException or NoSuchElementException respectively.\n *\n * <img src=\"./img/single.png\" width=\"100%\">\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n * @param {Function} predicate - A predicate function to evaluate items emitted by the source Observable.\n * @return {Observable<T>} An Observable that emits the single item emitted by the source Observable that matches\n * the predicate.\n .\n * @method single\n * @owner Observable\n */\nexport function single<T>(predicate?: (value: T, index: number, source: Observable<T>) => boolean): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SingleOperator(predicate, source));\n}\n\nclass SingleOperator<T> implements Operator<T, T> {\n  constructor(private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private source?: Observable<T>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new SingleSubscriber(subscriber, this.predicate, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SingleSubscriber<T> extends Subscriber<T> {\n  private seenValue: boolean = false;\n  private singleValue: T;\n  private index: number = 0;\n\n  constructor(destination: Observer<T>,\n              private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private source?: Observable<T>) {\n    super(destination);\n  }\n\n  private applySingleValue(value: T): void {\n    if (this.seenValue) {\n      this.destination.error('Sequence contains more than one element');\n    } else {\n      this.seenValue = true;\n      this.singleValue = value;\n    }\n  }\n\n  protected _next(value: T): void {\n    const index = this.index++;\n\n    if (this.predicate) {\n      this.tryNext(value, index);\n    } else {\n      this.applySingleValue(value);\n    }\n  }\n\n  private tryNext(value: T, index: number): void {\n    try {\n      if (this.predicate(value, index, this.source)) {\n        this.applySingleValue(value);\n      }\n    } catch (err) {\n      this.destination.error(err);\n    }\n  }\n\n  protected _complete(): void {\n    const destination = this.destination;\n\n    if (this.index > 0) {\n      destination.next(this.seenValue ? this.singleValue : undefined);\n      destination.complete();\n    } else {\n      destination.error(new EmptyError);\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Returns an Observable that skips the first `count` items emitted by the source Observable.\n *\n * <img src=\"./img/skip.png\" width=\"100%\">\n *\n * @param {Number} count - The number of times, items emitted by source Observable should be skipped.\n * @return {Observable} An Observable that skips values emitted by the source Observable.\n *\n * @method skip\n * @owner Observable\n */\nexport function skip<T>(count: number): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SkipOperator(count));\n}\n\nclass SkipOperator<T> implements Operator<T, T> {\n  constructor(private total: number) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new SkipSubscriber(subscriber, this.total));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SkipSubscriber<T> extends Subscriber<T> {\n  count: number = 0;\n\n  constructor(destination: Subscriber<T>, private total: number) {\n    super(destination);\n  }\n\n  protected _next(x: T) {\n    if (++this.count > this.total) {\n      this.destination.next(x);\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Skip the last `count` values emitted by the source Observable.\n *\n * <img src=\"./img/skipLast.png\" width=\"100%\">\n *\n * `skipLast` returns an Observable that accumulates a queue with a length\n * enough to store the first `count` values. As more values are received,\n * values are taken from the front of the queue and produced on the result\n * sequence. This causes values to be delayed.\n *\n * @example <caption>Skip the last 2 values of an Observable with many values</caption>\n * var many = Rx.Observable.range(1, 5);\n * var skipLastTwo = many.skipLast(2);\n * skipLastTwo.subscribe(x => console.log(x));\n *\n * // Results in:\n * // 1 2 3\n *\n * @see {@link skip}\n * @see {@link skipUntil}\n * @see {@link skipWhile}\n * @see {@link take}\n *\n * @throws {ArgumentOutOfRangeError} When using `skipLast(i)`, it throws\n * ArgumentOutOrRangeError if `i < 0`.\n *\n * @param {number} count Number of elements to skip from the end of the source Observable.\n * @returns {Observable<T>} An Observable that skips the last count values\n * emitted by the source Observable.\n * @method skipLast\n * @owner Observable\n */\nexport function skipLast<T>(count: number): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SkipLastOperator(count));\n}\n\nclass SkipLastOperator<T> implements Operator<T, T> {\n  constructor(private _skipCount: number) {\n    if (this._skipCount < 0) {\n      throw new ArgumentOutOfRangeError;\n    }\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    if (this._skipCount === 0) {\n      // If we don't want to skip any values then just subscribe\n      // to Subscriber without any further logic.\n      return source.subscribe(new Subscriber(subscriber));\n    } else {\n      return source.subscribe(new SkipLastSubscriber(subscriber, this._skipCount));\n    }\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SkipLastSubscriber<T> extends Subscriber<T> {\n  private _ring: T[];\n  private _count: number = 0;\n\n  constructor(destination: Subscriber<T>, private _skipCount: number) {\n    super(destination);\n    this._ring = new Array<T>(_skipCount);\n  }\n\n  protected _next(value: T): void {\n    const skipCount = this._skipCount;\n    const count = this._count++;\n\n    if (count < skipCount) {\n      this._ring[count] = value;\n    } else {\n      const currentIndex = count % skipCount;\n      const ring = this._ring;\n      const oldValue = ring[currentIndex];\n\n      ring[currentIndex] = value;\n      this.destination.next(oldValue);\n    }\n  }\n}","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Returns an Observable that skips items emitted by the source Observable until a second Observable emits an item.\n *\n * <img src=\"./img/skipUntil.png\" width=\"100%\">\n *\n * @param {Observable} notifier - The second Observable that has to emit an item before the source Observable's elements begin to\n * be mirrored by the resulting Observable.\n * @return {Observable<T>} An Observable that skips items from the source Observable until the second Observable emits\n * an item, then emits the remaining items.\n * @method skipUntil\n * @owner Observable\n */\nexport function skipUntil<T>(notifier: Observable<any>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SkipUntilOperator(notifier));\n}\n\nclass SkipUntilOperator<T> implements Operator<T, T> {\n  constructor(private notifier: Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new SkipUntilSubscriber(subscriber, this.notifier));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SkipUntilSubscriber<T, R> extends OuterSubscriber<T, R> {\n\n  private hasValue: boolean = false;\n  private isInnerStopped: boolean = false;\n\n  constructor(destination: Subscriber<any>,\n              notifier: Observable<any>) {\n    super(destination);\n    this.add(subscribeToResult(this, notifier));\n  }\n\n  protected _next(value: T) {\n    if (this.hasValue) {\n      super._next(value);\n    }\n  }\n\n  protected _complete() {\n    if (this.isInnerStopped) {\n      super._complete();\n    } else {\n      this.unsubscribe();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.hasValue = true;\n  }\n\n  notifyComplete(): void {\n    this.isInnerStopped = true;\n    if (this.isStopped) {\n      super._complete();\n    }\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { TeardownLogic } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Returns an Observable that skips all items emitted by the source Observable as long as a specified condition holds\n * true, but emits all further source items as soon as the condition becomes false.\n *\n * <img src=\"./img/skipWhile.png\" width=\"100%\">\n *\n * @param {Function} predicate - A function to test each item emitted from the source Observable.\n * @return {Observable<T>} An Observable that begins emitting items emitted by the source Observable when the\n * specified predicate becomes false.\n * @method skipWhile\n * @owner Observable\n */\nexport function skipWhile<T>(predicate: (value: T, index: number) => boolean): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SkipWhileOperator(predicate));\n}\n\nclass SkipWhileOperator<T> implements Operator<T, T> {\n  constructor(private predicate: (value: T, index: number) => boolean) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new SkipWhileSubscriber(subscriber, this.predicate));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SkipWhileSubscriber<T> extends Subscriber<T> {\n  private skipping: boolean = true;\n  private index: number = 0;\n\n  constructor(destination: Subscriber<T>,\n              private predicate: (value: T, index: number) => boolean) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const destination = this.destination;\n    if (this.skipping) {\n      this.tryCallPredicate(value);\n    }\n\n    if (!this.skipping) {\n      destination.next(value);\n    }\n  }\n\n  private tryCallPredicate(value: T): void {\n    try {\n      const result = this.predicate(value, this.index++);\n      this.skipping = Boolean(result);\n    } catch (err) {\n      this.destination.error(err);\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable, ObservableInput } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function switchMap<T, R>(project: (value: T, index: number) => ObservableInput<R>): OperatorFunction<T, R>;\nexport function switchMap<T, I, R>(project: (value: T, index: number) => ObservableInput<I>, resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, emitting values only from the most recently projected Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link switch}.</span>\n *\n * <img src=\"./img/switchMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each time it observes one of these\n * inner Observables, the output Observable begins emitting the items emitted by\n * that inner Observable. When a new inner Observable is emitted, `switchMap`\n * stops emitting items from the earlier-emitted inner Observable and begins\n * emitting items from the new one. It continues to behave like this for\n * subsequent inner Observables.\n *\n * @example <caption>Rerun an interval Observable on every click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.switchMap((ev) => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switch}\n * @see {@link switchMapTo}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and taking only the values from the most recently\n * projected inner Observable.\n * @method switchMap\n * @owner Observable\n */\nexport function switchMap<T, I, R>(\n  project: (value: T, index: number) => ObservableInput<I>,\n  resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, I | R> {\n  return function switchMapOperatorFunction(source: Observable<T>): Observable<I | R> {\n    return source.lift(new SwitchMapOperator(project, resultSelector));\n  };\n}\n\nclass SwitchMapOperator<T, I, R> implements Operator<T, I> {\n  constructor(private project: (value: T, index: number) => ObservableInput<I>,\n              private resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R) {\n  }\n\n  call(subscriber: Subscriber<I>, source: any): any {\n    return source.subscribe(new SwitchMapSubscriber(subscriber, this.project, this.resultSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SwitchMapSubscriber<T, I, R> extends OuterSubscriber<T, I> {\n  private index: number = 0;\n  private innerSubscription: Subscription;\n\n  constructor(destination: Subscriber<I>,\n              private project: (value: T, index: number) => ObservableInput<I>,\n              private resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R) {\n    super(destination);\n  }\n\n  protected _next(value: T) {\n    let result: ObservableInput<I>;\n    const index = this.index++;\n    try {\n      result = this.project(value, index);\n    } catch (error) {\n      this.destination.error(error);\n      return;\n    }\n    this._innerSub(result, value, index);\n  }\n\n  private _innerSub(result: ObservableInput<I>, value: T, index: number) {\n    const innerSubscription = this.innerSubscription;\n    if (innerSubscription) {\n      innerSubscription.unsubscribe();\n    }\n    this.add(this.innerSubscription = subscribeToResult(this, result, value, index));\n  }\n\n  protected _complete(): void {\n    const {innerSubscription} = this;\n    if (!innerSubscription || innerSubscription.closed) {\n      super._complete();\n    }\n  }\n\n  protected _unsubscribe() {\n    this.innerSubscription = null;\n  }\n\n  notifyComplete(innerSub: Subscription): void {\n    this.remove(innerSub);\n    this.innerSubscription = null;\n    if (this.isStopped) {\n      super._complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: I,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, I>): void {\n    if (this.resultSelector) {\n      this._tryNotifyNext(outerValue, innerValue, outerIndex, innerIndex);\n    } else {\n      this.destination.next(innerValue);\n    }\n  }\n\n  private _tryNotifyNext(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): void {\n    let result: R;\n    try {\n      result = this.resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable, ObservableInput } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function switchMapTo<T, R>(observable: ObservableInput<R>): OperatorFunction<T, R>;\nexport function switchMapTo<T, I, R>(observable: ObservableInput<I>, resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to the same Observable which is flattened multiple\n * times with {@link switch} in the output Observable.\n *\n * <span class=\"informal\">It's like {@link switchMap}, but maps each value\n * always to the same inner Observable.</span>\n *\n * <img src=\"./img/switchMapTo.png\" width=\"100%\">\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then flattens those resulting Observables into one\n * single Observable, which is the output Observable. The output Observables\n * emits values only from the most recently emitted instance of\n * `innerObservable`.\n *\n * @example <caption>Rerun an interval Observable on every click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.switchMapTo(Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMapTo}\n * @see {@link switch}\n * @see {@link switchMap}\n * @see {@link mergeMapTo}\n *\n * @param {ObservableInput} innerObservable An Observable to replace each value from\n * the source Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An Observable that emits items from the given\n * `innerObservable` (and optionally transformed through `resultSelector`) every\n * time a value is emitted on the source Observable, and taking only the values\n * from the most recently projected inner Observable.\n * @method switchMapTo\n * @owner Observable\n */\nexport function switchMapTo<T, I, R>(innerObservable: Observable<I>,\n                                     resultSelector?: (outerValue: T,\n                                                       innerValue: I,\n                                                       outerIndex: number,\n                                                       innerIndex: number) => R): OperatorFunction<T, I | R> {\n  return (source: Observable<T>) => source.lift(new SwitchMapToOperator(innerObservable, resultSelector));\n}\n\nclass SwitchMapToOperator<T, I, R> implements Operator<T, I> {\n  constructor(private observable: Observable<I>,\n              private resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R) {\n  }\n\n  call(subscriber: Subscriber<I>, source: any): any {\n    return source.subscribe(new SwitchMapToSubscriber(subscriber, this.observable, this.resultSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SwitchMapToSubscriber<T, I, R> extends OuterSubscriber<T, I> {\n  private index: number = 0;\n  private innerSubscription: Subscription;\n\n  constructor(destination: Subscriber<I>,\n              private inner: Observable<I>,\n              private resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R) {\n    super(destination);\n  }\n\n  protected _next(value: any) {\n    const innerSubscription = this.innerSubscription;\n    if (innerSubscription) {\n      innerSubscription.unsubscribe();\n    }\n    this.add(this.innerSubscription = subscribeToResult(this, this.inner, value, this.index++));\n  }\n\n  protected _complete() {\n    const {innerSubscription} = this;\n    if (!innerSubscription || innerSubscription.closed) {\n      super._complete();\n    }\n  }\n\n  protected _unsubscribe() {\n    this.innerSubscription = null;\n  }\n\n  notifyComplete(innerSub: Subscription) {\n    this.remove(innerSub);\n    this.innerSubscription = null;\n    if (this.isStopped) {\n      super._complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: I,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, I>): void {\n    const { resultSelector, destination } = this;\n    if (resultSelector) {\n      this.tryResultSelector(outerValue, innerValue, outerIndex, innerIndex);\n    } else {\n      destination.next(innerValue);\n    }\n  }\n\n  private tryResultSelector(outerValue: T, innerValue: I,\n                            outerIndex: number, innerIndex: number): void {\n    const { resultSelector, destination } = this;\n    let result: R;\n    try {\n      result = resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n    } catch (err) {\n      destination.error(err);\n      return;\n    }\n\n    destination.next(result);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { EmptyObservable } from '../observable/EmptyObservable';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Emits only the first `count` values emitted by the source Observable.\n *\n * <span class=\"informal\">Takes the first `count` values from the source, then\n * completes.</span>\n *\n * <img src=\"./img/take.png\" width=\"100%\">\n *\n * `take` returns an Observable that emits only the first `count` values emitted\n * by the source Observable. If the source emits fewer than `count` values then\n * all of its values are emitted. After that, it completes, regardless if the\n * source completes.\n *\n * @example <caption>Take the first 5 seconds of an infinite 1-second interval Observable</caption>\n * var interval = Rx.Observable.interval(1000);\n * var five = interval.take(5);\n * five.subscribe(x => console.log(x));\n *\n * @see {@link takeLast}\n * @see {@link takeUntil}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @throws {ArgumentOutOfRangeError} When using `take(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0`.\n *\n * @param {number} count The maximum number of `next` values to emit.\n * @return {Observable<T>} An Observable that emits only the first `count`\n * values emitted by the source Observable, or all of the values from the source\n * if the source emits fewer than `count` values.\n * @method take\n * @owner Observable\n */\nexport function take<T>(count: number): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => {\n    if (count === 0) {\n      return new EmptyObservable<T>();\n    } else {\n      return source.lift(new TakeOperator(count));\n    }\n  };\n}\n\nclass TakeOperator<T> implements Operator<T, T> {\n  constructor(private total: number) {\n    if (this.total < 0) {\n      throw new ArgumentOutOfRangeError;\n    }\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new TakeSubscriber(subscriber, this.total));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TakeSubscriber<T> extends Subscriber<T> {\n  private count: number = 0;\n\n  constructor(destination: Subscriber<T>, private total: number) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const total = this.total;\n    const count = ++this.count;\n    if (count <= total) {\n      this.destination.next(value);\n      if (count === total) {\n        this.destination.complete();\n        this.unsubscribe();\n      }\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { TeardownLogic } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Emits values emitted by the source Observable so long as each value satisfies\n * the given `predicate`, and then completes as soon as this `predicate` is not\n * satisfied.\n *\n * <span class=\"informal\">Takes values from the source only while they pass the\n * condition given. When the first value does not satisfy, it completes.</span>\n *\n * <img src=\"./img/takeWhile.png\" width=\"100%\">\n *\n * `takeWhile` subscribes and begins mirroring the source Observable. Each value\n * emitted on the source is given to the `predicate` function which returns a\n * boolean, representing a condition to be satisfied by the source values. The\n * output Observable emits the source values until such time as the `predicate`\n * returns false, at which point `takeWhile` stops mirroring the source\n * Observable and completes the output Observable.\n *\n * @example <caption>Emit click events only while the clientX property is greater than 200</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.takeWhile(ev => ev.clientX > 200);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link take}\n * @see {@link takeLast}\n * @see {@link takeUntil}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates a value emitted by the source Observable and returns a boolean.\n * Also takes the (zero-based) index as the second argument.\n * @return {Observable<T>} An Observable that emits the values from the source\n * Observable so long as each value satisfies the condition defined by the\n * `predicate`, then completes.\n * @method takeWhile\n * @owner Observable\n */\nexport function takeWhile<T>(predicate: (value: T, index: number) => boolean): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new TakeWhileOperator(predicate));\n}\n\nclass TakeWhileOperator<T> implements Operator<T, T> {\n  constructor(private predicate: (value: T, index: number) => boolean) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new TakeWhileSubscriber(subscriber, this.predicate));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TakeWhileSubscriber<T> extends Subscriber<T> {\n  private index: number = 0;\n\n  constructor(destination: Subscriber<T>,\n              private predicate: (value: T, index: number) => boolean) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const destination = this.destination;\n    let result: boolean;\n    try {\n      result = this.predicate(value, this.index++);\n    } catch (err) {\n      destination.error(err);\n      return;\n    }\n    this.nextOrComplete(value, result);\n  }\n\n  private nextOrComplete(value: T, predicateResult: boolean): void {\n    const destination = this.destination;\n    if (Boolean(predicateResult)) {\n      destination.next(value);\n    } else {\n      destination.complete();\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { PartialObserver } from '../Observer';\nimport { TeardownLogic } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function tap<T>(next: (x: T) => void, error?: (e: any) => void, complete?: () => void): MonoTypeOperatorFunction<T>;\nexport function tap<T>(observer: PartialObserver<T>): MonoTypeOperatorFunction<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Perform a side effect for every emission on the source Observable, but return\n * an Observable that is identical to the source.\n *\n * <span class=\"informal\">Intercepts each emission on the source and runs a\n * function, but returns an output which is identical to the source as long as errors don't occur.</span>\n *\n * <img src=\"./img/do.png\" width=\"100%\">\n *\n * Returns a mirrored Observable of the source Observable, but modified so that\n * the provided Observer is called to perform a side effect for every value,\n * error, and completion emitted by the source. Any errors that are thrown in\n * the aforementioned Observer or handlers are safely sent down the error path\n * of the output Observable.\n *\n * This operator is useful for debugging your Observables for the correct values\n * or performing other side effects.\n *\n * Note: this is different to a `subscribe` on the Observable. If the Observable\n * returned by `do` is not subscribed, the side effects specified by the\n * Observer will never happen. `do` therefore simply spies on existing\n * execution, it does not trigger an execution to happen like `subscribe` does.\n *\n * @example <caption>Map every click to the clientX position of that click, while also logging the click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var positions = clicks\n *   .do(ev => console.log(ev))\n *   .map(ev => ev.clientX);\n * positions.subscribe(x => console.log(x));\n *\n * @see {@link map}\n * @see {@link subscribe}\n *\n * @param {Observer|function} [nextOrObserver] A normal Observer object or a\n * callback for `next`.\n * @param {function} [error] Callback for errors in the source.\n * @param {function} [complete] Callback for the completion of the source.\n * @return {Observable} An Observable identical to the source, but runs the\n * specified Observer or callback(s) for each item.\n * @name tap\n */\nexport function tap<T>(nextOrObserver?: PartialObserver<T> | ((x: T) => void),\n                       error?: (e: any) => void,\n                       complete?: () => void): MonoTypeOperatorFunction<T> {\n  return function tapOperatorFunction(source: Observable<T>): Observable<T> {\n    return source.lift(new DoOperator(nextOrObserver, error, complete));\n  };\n}\n\nclass DoOperator<T> implements Operator<T, T> {\n  constructor(private nextOrObserver?: PartialObserver<T> | ((x: T) => void),\n              private error?: (e: any) => void,\n              private complete?: () => void) {\n  }\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new DoSubscriber(subscriber, this.nextOrObserver, this.error, this.complete));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DoSubscriber<T> extends Subscriber<T> {\n\n  private safeSubscriber: Subscriber<T>;\n\n  constructor(destination: Subscriber<T>,\n              nextOrObserver?: PartialObserver<T> | ((x: T) => void),\n              error?: (e: any) => void,\n              complete?: () => void) {\n    super(destination);\n\n    const safeSubscriber = new Subscriber<T>(nextOrObserver, error, complete);\n    safeSubscriber.syncErrorThrowable = true;\n    this.add(safeSubscriber);\n    this.safeSubscriber = safeSubscriber;\n  }\n\n  protected _next(value: T): void {\n    const { safeSubscriber } = this;\n    safeSubscriber.next(value);\n    if (safeSubscriber.syncErrorThrown) {\n      this.destination.error(safeSubscriber.syncErrorValue);\n    } else {\n      this.destination.next(value);\n    }\n  }\n\n  protected _error(err: any): void {\n    const { safeSubscriber } = this;\n    safeSubscriber.error(err);\n    if (safeSubscriber.syncErrorThrown) {\n      this.destination.error(safeSubscriber.syncErrorValue);\n    } else {\n      this.destination.error(err);\n    }\n  }\n\n  protected _complete(): void {\n    const { safeSubscriber } = this;\n    safeSubscriber.complete();\n    if (safeSubscriber.syncErrorThrown) {\n      this.destination.error(safeSubscriber.syncErrorValue);\n    } else {\n      this.destination.complete();\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable, SubscribableOrPromise } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription, TeardownLogic } from '../Subscription';\n\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\nexport interface ThrottleConfig {\n  leading?: boolean;\n  trailing?: boolean;\n}\n\nexport const defaultThrottleConfig: ThrottleConfig = {\n  leading: true,\n  trailing: false\n};\n\n/**\n * Emits a value from the source Observable, then ignores subsequent source\n * values for a duration determined by another Observable, then repeats this\n * process.\n *\n * <span class=\"informal\">It's like {@link throttleTime}, but the silencing\n * duration is determined by a second Observable.</span>\n *\n * <img src=\"./img/throttle.png\" width=\"100%\">\n *\n * `throttle` emits the source Observable values on the output Observable\n * when its internal timer is disabled, and ignores source values when the timer\n * is enabled. Initially, the timer is disabled. As soon as the first source\n * value arrives, it is forwarded to the output Observable, and then the timer\n * is enabled by calling the `durationSelector` function with the source value,\n * which returns the \"duration\" Observable. When the duration Observable emits a\n * value or completes, the timer is disabled, and this process repeats for the\n * next source value.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.throttle(ev => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounce}\n * @see {@link delayWhen}\n * @see {@link sample}\n * @see {@link throttleTime}\n *\n * @param {function(value: T): SubscribableOrPromise} durationSelector A function\n * that receives a value from the source Observable, for computing the silencing\n * duration for each source value, returned as an Observable or a Promise.\n * @param {Object} config a configuration object to define `leading` and `trailing` behavior. Defaults\n * to `{ leading: true, trailing: false }`.\n * @return {Observable<T>} An Observable that performs the throttle operation to\n * limit the rate of emissions from the source.\n * @method throttle\n * @owner Observable\n */\nexport function throttle<T>(durationSelector: (value: T) => SubscribableOrPromise<number>,\n                            config: ThrottleConfig = defaultThrottleConfig): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new ThrottleOperator(durationSelector, config.leading, config.trailing));\n}\n\nclass ThrottleOperator<T> implements Operator<T, T> {\n  constructor(private durationSelector: (value: T) => SubscribableOrPromise<number>,\n              private leading: boolean,\n              private trailing: boolean) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(\n      new ThrottleSubscriber(subscriber, this.durationSelector, this.leading, this.trailing)\n    );\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc\n * @ignore\n * @extends {Ignored}\n */\nclass ThrottleSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private throttled: Subscription;\n  private _trailingValue: T;\n  private _hasTrailingValue = false;\n\n  constructor(protected destination: Subscriber<T>,\n              private durationSelector: (value: T) => SubscribableOrPromise<number>,\n              private _leading: boolean,\n              private _trailing: boolean) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (this.throttled) {\n      if (this._trailing) {\n        this._hasTrailingValue = true;\n        this._trailingValue = value;\n      }\n    } else {\n      const duration = this.tryDurationSelector(value);\n      if (duration) {\n        this.add(this.throttled = subscribeToResult(this, duration));\n      }\n      if (this._leading) {\n        this.destination.next(value);\n        if (this._trailing) {\n          this._hasTrailingValue = true;\n          this._trailingValue = value;\n        }\n      }\n    }\n  }\n\n  private tryDurationSelector(value: T): SubscribableOrPromise<any> {\n    try {\n      return this.durationSelector(value);\n    } catch (err) {\n      this.destination.error(err);\n      return null;\n    }\n  }\n\n  protected _unsubscribe() {\n    const { throttled, _trailingValue, _hasTrailingValue, _trailing } = this;\n\n    this._trailingValue = null;\n    this._hasTrailingValue = false;\n\n    if (throttled) {\n      this.remove(throttled);\n      this.throttled = null;\n      throttled.unsubscribe();\n    }\n  }\n\n  private _sendTrailing() {\n    const { destination, throttled, _trailing, _trailingValue, _hasTrailingValue } = this;\n    if (throttled && _trailing && _hasTrailingValue) {\n      destination.next(_trailingValue);\n      this._trailingValue = null;\n      this._hasTrailingValue = false;\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this._sendTrailing();\n    this._unsubscribe();\n  }\n\n  notifyComplete(): void {\n    this._sendTrailing();\n    this._unsubscribe();\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { IScheduler } from '../Scheduler';\nimport { Subscription, TeardownLogic } from '../Subscription';\nimport { async } from '../scheduler/async';\nimport { Observable } from '../Observable';\nimport { ThrottleConfig, defaultThrottleConfig } from './throttle';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Emits a value from the source Observable, then ignores subsequent source\n * values for `duration` milliseconds, then repeats this process.\n *\n * <span class=\"informal\">Lets a value pass, then ignores source values for the\n * next `duration` milliseconds.</span>\n *\n * <img src=\"./img/throttleTime.png\" width=\"100%\">\n *\n * `throttleTime` emits the source Observable values on the output Observable\n * when its internal timer is disabled, and ignores source values when the timer\n * is enabled. Initially, the timer is disabled. As soon as the first source\n * value arrives, it is forwarded to the output Observable, and then the timer\n * is enabled. After `duration` milliseconds (or the time unit determined\n * internally by the optional `scheduler`) has passed, the timer is disabled,\n * and this process repeats for the next source value. Optionally takes a\n * {@link IScheduler} for managing timers.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.throttleTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttle}\n *\n * @param {number} duration Time to wait before emitting another value after\n * emitting the last value, measured in milliseconds or the time unit determined\n * internally by the optional `scheduler`.\n * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for\n * managing the timers that handle the throttling.\n * @return {Observable<T>} An Observable that performs the throttle operation to\n * limit the rate of emissions from the source.\n * @method throttleTime\n * @owner Observable\n */\nexport function throttleTime<T>(duration: number,\n                                scheduler: IScheduler = async,\n                                config: ThrottleConfig = defaultThrottleConfig): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new ThrottleTimeOperator(duration, scheduler, config.leading, config.trailing));\n}\n\nclass ThrottleTimeOperator<T> implements Operator<T, T> {\n  constructor(private duration: number,\n              private scheduler: IScheduler,\n              private leading: boolean,\n              private trailing: boolean) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(\n      new ThrottleTimeSubscriber(subscriber, this.duration, this.scheduler, this.leading, this.trailing)\n    );\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass ThrottleTimeSubscriber<T> extends Subscriber<T> {\n  private throttled: Subscription;\n  private _hasTrailingValue: boolean = false;\n  private _trailingValue: T = null;\n\n  constructor(destination: Subscriber<T>,\n              private duration: number,\n              private scheduler: IScheduler,\n              private leading: boolean,\n              private trailing: boolean) {\n    super(destination);\n  }\n\n  protected _next(value: T) {\n    if (this.throttled) {\n      if (this.trailing) {\n        this._trailingValue = value;\n        this._hasTrailingValue = true;\n      }\n    } else {\n      this.add(this.throttled = this.scheduler.schedule(dispatchNext, this.duration, { subscriber: this }));\n      if (this.leading) {\n        this.destination.next(value);\n      }\n    }\n  }\n\n  clearThrottle() {\n    const throttled = this.throttled;\n    if (throttled) {\n      if (this.trailing && this._hasTrailingValue) {\n        this.destination.next(this._trailingValue);\n        this._trailingValue = null;\n        this._hasTrailingValue = false;\n      }\n      throttled.unsubscribe();\n      this.remove(throttled);\n      this.throttled = null;\n    }\n  }\n}\n\ninterface DispatchArg<T> {\n  subscriber: ThrottleTimeSubscriber<T>;\n}\n\nfunction dispatchNext<T>(arg: DispatchArg<T>) {\n  const { subscriber } = arg;\n  subscriber.clearThrottle();\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { IScheduler } from '../Scheduler';\nimport { async } from '../scheduler/async';\nimport { OperatorFunction } from '../interfaces';\n\nexport function timeInterval<T>(scheduler: IScheduler = async): OperatorFunction<T, TimeInterval<T>> {\n  return (source: Observable<T>) => source.lift(new TimeIntervalOperator(scheduler));\n}\n\nexport class TimeInterval<T> {\n  constructor(public value: T, public interval: number) {\n\n  }\n};\n\nclass TimeIntervalOperator<T> implements Operator<T, TimeInterval<T>> {\n  constructor(private scheduler: IScheduler) {\n\n  }\n\n  call(observer: Subscriber<TimeInterval<T>>, source: any): any {\n    return source.subscribe(new TimeIntervalSubscriber(observer, this.scheduler));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TimeIntervalSubscriber<T> extends Subscriber<T> {\n  private lastTime: number = 0;\n\n  constructor(destination: Subscriber<TimeInterval<T>>, private scheduler: IScheduler) {\n    super(destination);\n\n    this.lastTime = scheduler.now();\n  }\n\n  protected _next(value: T) {\n    let now = this.scheduler.now();\n    let span = now - this.lastTime;\n    this.lastTime = now;\n\n    this.destination.next(new TimeInterval(value, span));\n  }\n}\n","/**\r\n * An error thrown when duetime elapses.\r\n *\r\n * @see {@link timeout}\r\n *\r\n * @class TimeoutError\r\n */\r\nexport class TimeoutError extends Error {\r\n  constructor() {\r\n    const err: any = super('Timeout has occurred');\r\n    (<any> this).name = err.name = 'TimeoutError';\r\n    (<any> this).stack = err.stack;\r\n    (<any> this).message = err.message;\r\n  }\r\n}\r\n","import { Action } from '../scheduler/Action';\nimport { async } from '../scheduler/async';\nimport { isDate } from '../util/isDate';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { IScheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\nimport { TimeoutError } from '../util/TimeoutError';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n *\n * Errors if Observable does not emit a value in given time span.\n *\n * <span class=\"informal\">Timeouts on Observable that doesn't emit values fast enough.</span>\n *\n * <img src=\"./img/timeout.png\" width=\"100%\">\n *\n * `timeout` operator accepts as an argument either a number or a Date.\n *\n * If number was provided, it returns an Observable that behaves like a source\n * Observable, unless there is a period of time where there is no value emitted.\n * So if you provide `100` as argument and first value comes after 50ms from\n * the moment of subscription, this value will be simply re-emitted by the resulting\n * Observable. If however after that 100ms passes without a second value being emitted,\n * stream will end with an error and source Observable will be unsubscribed.\n * These checks are performed throughout whole lifecycle of Observable - from the moment\n * it was subscribed to, until it completes or errors itself. Thus every value must be\n * emitted within specified period since previous value.\n *\n * If provided argument was Date, returned Observable behaves differently. It throws\n * if Observable did not complete before provided Date. This means that periods between\n * emission of particular values do not matter in this case. If Observable did not complete\n * before provided Date, source Observable will be unsubscribed. Other than that, resulting\n * stream behaves just as source Observable.\n *\n * `timeout` accepts also a Scheduler as a second parameter. It is used to schedule moment (or moments)\n * when returned Observable will check if source stream emitted value or completed.\n *\n * @example <caption>Check if ticks are emitted within certain timespan</caption>\n * const seconds = Rx.Observable.interval(1000);\n *\n * seconds.timeout(1100) // Let's use bigger timespan to be safe,\n *                       // since `interval` might fire a bit later then scheduled.\n * .subscribe(\n *     value => console.log(value), // Will emit numbers just as regular `interval` would.\n *     err => console.log(err) // Will never be called.\n * );\n *\n * seconds.timeout(900).subscribe(\n *     value => console.log(value), // Will never be called.\n *     err => console.log(err) // Will emit error before even first value is emitted,\n *                             // since it did not arrive within 900ms period.\n * );\n *\n * @example <caption>Use Date to check if Observable completed</caption>\n * const seconds = Rx.Observable.interval(1000);\n *\n * seconds.timeout(new Date(\"December 17, 2020 03:24:00\"))\n * .subscribe(\n *     value => console.log(value), // Will emit values as regular `interval` would\n *                                  // until December 17, 2020 at 03:24:00.\n *     err => console.log(err) // On December 17, 2020 at 03:24:00 it will emit an error,\n *                             // since Observable did not complete by then.\n * );\n *\n * @see {@link timeoutWith}\n *\n * @param {number|Date} due Number specifying period within which Observable must emit values\n *                          or Date specifying before when Observable should complete\n * @param {Scheduler} [scheduler] Scheduler controlling when timeout checks occur.\n * @return {Observable<T>} Observable that mirrors behaviour of source, unless timeout checks fail.\n * @method timeout\n * @owner Observable\n */\nexport function timeout<T>(due: number | Date,\n                           scheduler: IScheduler = async): MonoTypeOperatorFunction<T> {\n  const absoluteTimeout = isDate(due);\n  const waitFor = absoluteTimeout ? (+due - scheduler.now()) : Math.abs(<number>due);\n  return (source: Observable<T>) => source.lift(new TimeoutOperator(waitFor, absoluteTimeout, scheduler, new TimeoutError()));\n}\n\nclass TimeoutOperator<T> implements Operator<T, T> {\n  constructor(private waitFor: number,\n              private absoluteTimeout: boolean,\n              private scheduler: IScheduler,\n              private errorInstance: TimeoutError) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new TimeoutSubscriber<T>(\n      subscriber, this.absoluteTimeout, this.waitFor, this.scheduler, this.errorInstance\n    ));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TimeoutSubscriber<T> extends Subscriber<T> {\n\n  private action: Action<TimeoutSubscriber<T>> = null;\n\n  constructor(destination: Subscriber<T>,\n              private absoluteTimeout: boolean,\n              private waitFor: number,\n              private scheduler: IScheduler,\n              private errorInstance: TimeoutError) {\n    super(destination);\n    this.scheduleTimeout();\n  }\n\n  private static dispatchTimeout<T>(subscriber: TimeoutSubscriber<T>): void {\n    subscriber.error(subscriber.errorInstance);\n  }\n\n  private scheduleTimeout(): void {\n    const { action } = this;\n    if (action) {\n      // Recycle the action if we've already scheduled one. All the production\n      // Scheduler Actions mutate their state/delay time and return themeselves.\n      // VirtualActions are immutable, so they create and return a clone. In this\n      // case, we need to set the action reference to the most recent VirtualAction,\n      // to ensure that's the one we clone from next time.\n      this.action = (<Action<TimeoutSubscriber<T>>> action.schedule(this, this.waitFor));\n    } else {\n      this.add(this.action = (<Action<TimeoutSubscriber<T>>> this.scheduler.schedule(\n        TimeoutSubscriber.dispatchTimeout, this.waitFor, this\n      )));\n    }\n  }\n\n  protected _next(value: T): void {\n    if (!this.absoluteTimeout) {\n      this.scheduleTimeout();\n    }\n    super._next(value);\n  }\n\n  protected _unsubscribe() {\n    this.action = null;\n    this.scheduler = null;\n    this.errorInstance = null;\n  }\n}\n","import { Action } from '../scheduler/Action';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { IScheduler } from '../Scheduler';\nimport { async } from '../scheduler/async';\nimport { TeardownLogic } from '../Subscription';\nimport { Observable, ObservableInput } from '../Observable';\nimport { isDate } from '../util/isDate';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction, MonoTypeOperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function timeoutWith<T>(due: number | Date, withObservable: ObservableInput<T>, scheduler?: IScheduler): MonoTypeOperatorFunction<T>;\nexport function timeoutWith<T, R>(due: number | Date, withObservable: ObservableInput<R>, scheduler?: IScheduler): OperatorFunction<T, T | R>;\n/* tslint:enable:max-line-length */\n\n/**\n *\n * Errors if Observable does not emit a value in given time span, in case of which\n * subscribes to the second Observable.\n *\n * <span class=\"informal\">It's a version of `timeout` operator that let's you specify fallback Observable.</span>\n *\n * <img src=\"./img/timeoutWith.png\" width=\"100%\">\n *\n * `timeoutWith` is a variation of `timeout` operator. It behaves exactly the same,\n * still accepting as a first argument either a number or a Date, which control - respectively -\n * when values of source Observable should be emitted or when it should complete.\n *\n * The only difference is that it accepts a second, required parameter. This parameter\n * should be an Observable which will be subscribed when source Observable fails any timeout check.\n * So whenever regular `timeout` would emit an error, `timeoutWith` will instead start re-emitting\n * values from second Observable. Note that this fallback Observable is not checked for timeouts\n * itself, so it can emit values and complete at arbitrary points in time. From the moment of a second\n * subscription, Observable returned from `timeoutWith` simply mirrors fallback stream. When that\n * stream completes, it completes as well.\n *\n * Scheduler, which in case of `timeout` is provided as as second argument, can be still provided\n * here - as a third, optional parameter. It still is used to schedule timeout checks and -\n * as a consequence - when second Observable will be subscribed, since subscription happens\n * immediately after failing check.\n *\n * @example <caption>Add fallback observable</caption>\n * const seconds = Rx.Observable.interval(1000);\n * const minutes = Rx.Observable.interval(60 * 1000);\n *\n * seconds.timeoutWith(900, minutes)\n *     .subscribe(\n *         value => console.log(value), // After 900ms, will start emitting `minutes`,\n *                                      // since first value of `seconds` will not arrive fast enough.\n *         err => console.log(err) // Would be called after 900ms in case of `timeout`,\n *                                 // but here will never be called.\n *     );\n *\n * @param {number|Date} due Number specifying period within which Observable must emit values\n *                          or Date specifying before when Observable should complete\n * @param {Observable<T>} withObservable Observable which will be subscribed if source fails timeout check.\n * @param {Scheduler} [scheduler] Scheduler controlling when timeout checks occur.\n * @return {Observable<T>} Observable that mirrors behaviour of source or, when timeout check fails, of an Observable\n *                          passed as a second parameter.\n * @method timeoutWith\n * @owner Observable\n */\nexport function timeoutWith<T, R>(due: number | Date,\n                                  withObservable: ObservableInput<R>,\n                                  scheduler: IScheduler = async): OperatorFunction<T, T | R> {\n  return (source: Observable<T>) => {\n    let absoluteTimeout = isDate(due);\n    let waitFor = absoluteTimeout ? (+due - scheduler.now()) : Math.abs(<number>due);\n    return source.lift(new TimeoutWithOperator(waitFor, absoluteTimeout, withObservable, scheduler));\n  };\n}\n\nclass TimeoutWithOperator<T> implements Operator<T, T> {\n  constructor(private waitFor: number,\n              private absoluteTimeout: boolean,\n              private withObservable: ObservableInput<any>,\n              private scheduler: IScheduler) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new TimeoutWithSubscriber(\n      subscriber, this.absoluteTimeout, this.waitFor, this.withObservable, this.scheduler\n    ));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TimeoutWithSubscriber<T, R> extends OuterSubscriber<T, R> {\n\n  private action: Action<TimeoutWithSubscriber<T, R>> = null;\n\n  constructor(destination: Subscriber<T>,\n              private absoluteTimeout: boolean,\n              private waitFor: number,\n              private withObservable: ObservableInput<any>,\n              private scheduler: IScheduler) {\n    super(destination);\n    this.scheduleTimeout();\n  }\n\n  private static dispatchTimeout<T, R>(subscriber: TimeoutWithSubscriber<T, R>): void {\n    const { withObservable } = subscriber;\n    (<any> subscriber)._unsubscribeAndRecycle();\n    subscriber.add(subscribeToResult(subscriber, withObservable));\n  }\n\n  private scheduleTimeout(): void {\n    const { action } = this;\n    if (action) {\n      // Recycle the action if we've already scheduled one. All the production\n      // Scheduler Actions mutate their state/delay time and return themeselves.\n      // VirtualActions are immutable, so they create and return a clone. In this\n      // case, we need to set the action reference to the most recent VirtualAction,\n      // to ensure that's the one we clone from next time.\n      this.action = (<Action<TimeoutWithSubscriber<T, R>>> action.schedule(this, this.waitFor));\n    } else {\n      this.add(this.action = (<Action<TimeoutWithSubscriber<T, R>>> this.scheduler.schedule(\n        TimeoutWithSubscriber.dispatchTimeout, this.waitFor, this\n      )));\n    }\n  }\n\n  protected _next(value: T): void {\n    if (!this.absoluteTimeout) {\n      this.scheduleTimeout();\n    }\n    super._next(value);\n  }\n\n  protected _unsubscribe() {\n    this.action = null;\n    this.scheduler = null;\n    this.withObservable = null;\n  }\n}\n","import { Observable } from '../Observable';\nimport { OperatorFunction } from '../interfaces';\nimport { Subject } from '../Subject';\nimport { Subscriber } from '../Subscriber';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { Operator } from '../Operator';\n\n/**\n * Branch out the source Observable values as a nested Observable whenever\n * `windowBoundaries` emits.\n *\n * <span class=\"informal\">It's like {@link buffer}, but emits a nested Observable\n * instead of an array.</span>\n *\n * <img src=\"./img/window.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits connected, non-overlapping\n * windows. It emits the current window and opens a new one whenever the\n * Observable `windowBoundaries` emits an item. Because each window is an\n * Observable, the output is a higher-order Observable.\n *\n * @example <caption>In every window of 1 second each, emit at most 2 click events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var interval = Rx.Observable.interval(1000);\n * var result = clicks.window(interval)\n *   .map(win => win.take(2)) // each window has at most 2 emissions\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link windowWhen}\n * @see {@link buffer}\n *\n * @param {Observable<any>} windowBoundaries An Observable that completes the\n * previous window and starts a new window.\n * @return {Observable<Observable<T>>} An Observable of windows, which are\n * Observables emitting values of the source Observable.\n * @method window\n * @owner Observable\n */\nexport function window<T>(windowBoundaries: Observable<any>): OperatorFunction<T, Observable<T>> {\n  return function windowOperatorFunction(source: Observable<T>) {\n    return source.lift(new WindowOperator(windowBoundaries));\n  };\n}\n\nclass WindowOperator<T> implements Operator<T, Observable<T>> {\n\n  constructor(private windowBoundaries: Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<Observable<T>>, source: any): any {\n    const windowSubscriber = new WindowSubscriber(subscriber);\n    const sourceSubscription = source.subscribe(windowSubscriber);\n    if (!sourceSubscription.closed) {\n      windowSubscriber.add(subscribeToResult(windowSubscriber, this.windowBoundaries));\n    }\n    return sourceSubscription;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass WindowSubscriber<T> extends OuterSubscriber<T, any> {\n\n  private window: Subject<T> = new Subject<T>();\n\n  constructor(destination: Subscriber<Observable<T>>) {\n    super(destination);\n    destination.next(this.window);\n  }\n\n  notifyNext(outerValue: T, innerValue: any,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, any>): void {\n    this.openWindow();\n  }\n\n  notifyError(error: any, innerSub: InnerSubscriber<T, any>): void {\n    this._error(error);\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, any>): void {\n    this._complete();\n  }\n\n  protected _next(value: T): void {\n    this.window.next(value);\n  }\n\n  protected _error(err: any): void {\n    this.window.error(err);\n    this.destination.error(err);\n  }\n\n  protected _complete(): void {\n    this.window.complete();\n    this.destination.complete();\n  }\n\n  protected _unsubscribe() {\n    this.window = null;\n  }\n\n  private openWindow(): void  {\n    const prevWindow = this.window;\n    if (prevWindow) {\n      prevWindow.complete();\n    }\n    const destination = this.destination;\n    const newWindow = this.window = new Subject<T>();\n    destination.next(newWindow);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Branch out the source Observable values as a nested Observable with each\n * nested Observable emitting at most `windowSize` values.\n *\n * <span class=\"informal\">It's like {@link bufferCount}, but emits a nested\n * Observable instead of an array.</span>\n *\n * <img src=\"./img/windowCount.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits windows every `startWindowEvery`\n * items, each containing no more than `windowSize` items. When the source\n * Observable completes or encounters an error, the output Observable emits\n * the current window and propagates the notification from the source\n * Observable. If `startWindowEvery` is not provided, then new windows are\n * started immediately at the start of the source and when each window completes\n * with size `windowSize`.\n *\n * @example <caption>Ignore every 3rd click event, starting from the first one</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.windowCount(3)\n *   .map(win => win.skip(1)) // skip first of every 3 clicks\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Ignore every 3rd click event, starting from the third one</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.windowCount(2, 3)\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @see {@link window}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link windowWhen}\n * @see {@link bufferCount}\n *\n * @param {number} windowSize The maximum number of values emitted by each\n * window.\n * @param {number} [startWindowEvery] Interval at which to start a new window.\n * For example if `startWindowEvery` is `2`, then a new window will be started\n * on every other value from the source. A new window is started at the\n * beginning of the source by default.\n * @return {Observable<Observable<T>>} An Observable of windows, which in turn\n * are Observable of values.\n * @method windowCount\n * @owner Observable\n */\nexport function windowCount<T>(windowSize: number,\n                               startWindowEvery: number = 0): OperatorFunction<T, Observable<T>> {\n  return function windowCountOperatorFunction(source: Observable<T>) {\n    return source.lift(new WindowCountOperator<T>(windowSize, startWindowEvery));\n  };\n}\n\nclass WindowCountOperator<T> implements Operator<T, Observable<T>> {\n\n  constructor(private windowSize: number,\n              private startWindowEvery: number) {\n  }\n\n  call(subscriber: Subscriber<Observable<T>>, source: any): any {\n    return source.subscribe(new WindowCountSubscriber(subscriber, this.windowSize, this.startWindowEvery));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass WindowCountSubscriber<T> extends Subscriber<T> {\n  private windows: Subject<T>[] = [ new Subject<T>() ];\n  private count: number = 0;\n\n  constructor(protected destination: Subscriber<Observable<T>>,\n              private windowSize: number,\n              private startWindowEvery: number) {\n    super(destination);\n    destination.next(this.windows[0]);\n  }\n\n  protected _next(value: T) {\n    const startWindowEvery = (this.startWindowEvery > 0) ? this.startWindowEvery : this.windowSize;\n    const destination = this.destination;\n    const windowSize = this.windowSize;\n    const windows = this.windows;\n    const len = windows.length;\n\n    for (let i = 0; i < len && !this.closed; i++) {\n      windows[i].next(value);\n    }\n    const c = this.count - windowSize + 1;\n    if (c >= 0 && c % startWindowEvery === 0 && !this.closed) {\n      windows.shift().complete();\n    }\n    if (++this.count % startWindowEvery === 0 && !this.closed) {\n      const window = new Subject<T>();\n      windows.push(window);\n      destination.next(window);\n    }\n  }\n\n  protected _error(err: any) {\n    const windows = this.windows;\n    if (windows) {\n      while (windows.length > 0 && !this.closed) {\n        windows.shift().error(err);\n      }\n    }\n    this.destination.error(err);\n  }\n\n  protected _complete() {\n    const windows = this.windows;\n    if (windows) {\n      while (windows.length > 0 && !this.closed) {\n        windows.shift().complete();\n      }\n    }\n    this.destination.complete();\n  }\n\n  protected _unsubscribe() {\n    this.count = 0;\n    this.windows = null;\n  }\n}\n","import { IScheduler } from '../Scheduler';\nimport { Action } from '../scheduler/Action';\nimport { Subject } from '../Subject';\nimport { Operator } from '../Operator';\nimport { async } from '../scheduler/async';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { isNumeric } from '../util/isNumeric';\nimport { isScheduler } from '../util/isScheduler';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Branch out the source Observable values as a nested Observable periodically\n * in time.\n *\n * <span class=\"informal\">It's like {@link bufferTime}, but emits a nested\n * Observable instead of an array.</span>\n *\n * <img src=\"./img/windowTime.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable starts a new window periodically, as\n * determined by the `windowCreationInterval` argument. It emits each window\n * after a fixed timespan, specified by the `windowTimeSpan` argument. When the\n * source Observable completes or encounters an error, the output Observable\n * emits the current window and propagates the notification from the source\n * Observable. If `windowCreationInterval` is not provided, the output\n * Observable starts a new window when the previous window of duration\n * `windowTimeSpan` completes. If `maxWindowCount` is provided, each window\n * will emit at most fixed number of values. Window will complete immediately\n * after emitting last value and next one still will open as specified by\n * `windowTimeSpan` and `windowCreationInterval` arguments.\n *\n * @example <caption>In every window of 1 second each, emit at most 2 click events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.windowTime(1000)\n *   .map(win => win.take(2)) // each window has at most 2 emissions\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Every 5 seconds start a window 1 second long, and emit at most 2 click events per window</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.windowTime(1000, 5000)\n *   .map(win => win.take(2)) // each window has at most 2 emissions\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Same as example above but with maxWindowCount instead of take</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.windowTime(1000, 5000, 2) // each window has still at most 2 emissions\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowToggle}\n * @see {@link windowWhen}\n * @see {@link bufferTime}\n *\n * @param {number} windowTimeSpan The amount of time to fill each window.\n * @param {number} [windowCreationInterval] The interval at which to start new\n * windows.\n * @param {number} [maxWindowSize=Number.POSITIVE_INFINITY] Max number of\n * values each window can emit before completion.\n * @param {Scheduler} [scheduler=async] The scheduler on which to schedule the\n * intervals that determine window boundaries.\n * @return {Observable<Observable<T>>} An observable of windows, which in turn\n * are Observables.\n * @method windowTime\n * @owner Observable\n */\nexport function windowTime<T>(windowTimeSpan: number,\n                              scheduler?: IScheduler): OperatorFunction<T, Observable<T>>;\nexport function windowTime<T>(windowTimeSpan: number,\n                              windowCreationInterval: number,\n                              scheduler?: IScheduler): OperatorFunction<T, Observable<T>>;\nexport function windowTime<T>(windowTimeSpan: number,\n                              windowCreationInterval: number,\n                              maxWindowSize: number,\n                              scheduler?: IScheduler): OperatorFunction<T, Observable<T>>;\n\nexport function windowTime<T>(windowTimeSpan: number): OperatorFunction<T, Observable<T>> {\n  let scheduler: IScheduler = async;\n  let windowCreationInterval: number = null;\n  let maxWindowSize: number = Number.POSITIVE_INFINITY;\n\n  if (isScheduler(arguments[3])) {\n    scheduler = arguments[3];\n  }\n\n  if (isScheduler(arguments[2])) {\n    scheduler = arguments[2];\n  } else if (isNumeric(arguments[2])) {\n    maxWindowSize = arguments[2];\n  }\n\n  if (isScheduler(arguments[1])) {\n    scheduler = arguments[1];\n  } else if (isNumeric(arguments[1])) {\n    windowCreationInterval = arguments[1];\n  }\n\n  return function windowTimeOperatorFunction(source: Observable<T>) {\n    return source.lift(new WindowTimeOperator<T>(windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler));\n  };\n}\n\nclass WindowTimeOperator<T> implements Operator<T, Observable<T>> {\n\n  constructor(private windowTimeSpan: number,\n              private windowCreationInterval: number | null,\n              private maxWindowSize: number,\n              private scheduler: IScheduler) {\n  }\n\n  call(subscriber: Subscriber<Observable<T>>, source: any): any {\n    return source.subscribe(new WindowTimeSubscriber(\n      subscriber, this.windowTimeSpan, this.windowCreationInterval, this.maxWindowSize, this.scheduler\n    ));\n  }\n}\n\ninterface CreationState<T> {\n  windowTimeSpan: number;\n  windowCreationInterval: number;\n  subscriber: WindowTimeSubscriber<T>;\n  scheduler: IScheduler;\n}\n\ninterface TimeSpanOnlyState<T> {\n    window: CountedSubject<T>;\n    windowTimeSpan: number;\n    subscriber: WindowTimeSubscriber<T>;\n  }\n\ninterface CloseWindowContext<T> {\n  action: Action<CreationState<T>>;\n  subscription: Subscription;\n}\n\ninterface CloseState<T> {\n  subscriber: WindowTimeSubscriber<T>;\n  window: CountedSubject<T>;\n  context: CloseWindowContext<T>;\n}\n\nclass CountedSubject<T> extends Subject<T> {\n  private _numberOfNextedValues: number = 0;\n\n  next(value?: T): void {\n    this._numberOfNextedValues++;\n    super.next(value);\n  }\n\n  get numberOfNextedValues(): number {\n    return this._numberOfNextedValues;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass WindowTimeSubscriber<T> extends Subscriber<T> {\n  private windows: CountedSubject<T>[] = [];\n\n  constructor(protected destination: Subscriber<Observable<T>>,\n              private windowTimeSpan: number,\n              private windowCreationInterval: number | null,\n              private maxWindowSize: number,\n              private scheduler: IScheduler) {\n    super(destination);\n\n    const window = this.openWindow();\n    if (windowCreationInterval !== null && windowCreationInterval >= 0) {\n      const closeState: CloseState<T> = { subscriber: this, window, context: <any>null };\n      const creationState: CreationState<T> = { windowTimeSpan, windowCreationInterval, subscriber: this, scheduler };\n      this.add(scheduler.schedule(dispatchWindowClose, windowTimeSpan, closeState));\n      this.add(scheduler.schedule(dispatchWindowCreation, windowCreationInterval, creationState));\n    } else {\n      const timeSpanOnlyState: TimeSpanOnlyState<T> = { subscriber: this, window, windowTimeSpan };\n      this.add(scheduler.schedule(dispatchWindowTimeSpanOnly, windowTimeSpan, timeSpanOnlyState));\n    }\n  }\n\n  protected _next(value: T): void {\n    const windows = this.windows;\n    const len = windows.length;\n    for (let i = 0; i < len; i++) {\n      const window = windows[i];\n      if (!window.closed) {\n        window.next(value);\n        if (window.numberOfNextedValues >= this.maxWindowSize) {\n          this.closeWindow(window);\n        }\n      }\n    }\n  }\n\n  protected _error(err: any): void {\n    const windows = this.windows;\n    while (windows.length > 0) {\n      windows.shift().error(err);\n    }\n    this.destination.error(err);\n  }\n\n  protected _complete(): void {\n    const windows = this.windows;\n    while (windows.length > 0) {\n      const window = windows.shift();\n      if (!window.closed) {\n        window.complete();\n      }\n    }\n    this.destination.complete();\n  }\n\n  public openWindow(): CountedSubject<T> {\n    const window = new CountedSubject<T>();\n    this.windows.push(window);\n    const destination = this.destination;\n    destination.next(window);\n    return window;\n  }\n\n  public closeWindow(window: CountedSubject<T>): void {\n    window.complete();\n    const windows = this.windows;\n    windows.splice(windows.indexOf(window), 1);\n  }\n}\n\nfunction dispatchWindowTimeSpanOnly<T>(this: Action<TimeSpanOnlyState<T>>, state: TimeSpanOnlyState<T>): void {\n  const { subscriber, windowTimeSpan, window } = state;\n  if (window) {\n    subscriber.closeWindow(window);\n  }\n  state.window = subscriber.openWindow();\n  this.schedule(state, windowTimeSpan);\n}\n\nfunction dispatchWindowCreation<T>(this: Action<CreationState<T>>, state: CreationState<T>): void {\n  const { windowTimeSpan, subscriber, scheduler, windowCreationInterval } = state;\n  const window = subscriber.openWindow();\n  const action = this;\n  let context: CloseWindowContext<T> = { action, subscription: <any>null };\n  const timeSpanState: CloseState<T> = { subscriber, window, context };\n  context.subscription = scheduler.schedule(dispatchWindowClose, windowTimeSpan, timeSpanState);\n  action.add(context.subscription);\n  action.schedule(state, windowCreationInterval);\n}\n\nfunction dispatchWindowClose<T>(state: CloseState<T>): void {\n  const { subscriber, window, context } = state;\n  if (context && context.action && context.subscription) {\n    context.action.remove(context.subscription);\n  }\n  subscriber.closeWindow(window);\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { Subscription } from '../Subscription';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Branch out the source Observable values as a nested Observable starting from\n * an emission from `openings` and ending when the output of `closingSelector`\n * emits.\n *\n * <span class=\"informal\">It's like {@link bufferToggle}, but emits a nested\n * Observable instead of an array.</span>\n *\n * <img src=\"./img/windowToggle.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits windows that contain those items\n * emitted by the source Observable between the time when the `openings`\n * Observable emits an item and when the Observable returned by\n * `closingSelector` emits an item.\n *\n * @example <caption>Every other second, emit the click events from the next 500ms</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var openings = Rx.Observable.interval(1000);\n * var result = clicks.windowToggle(openings, i =>\n *   i % 2 ? Rx.Observable.interval(500) : Rx.Observable.empty()\n * ).mergeAll();\n * result.subscribe(x => console.log(x));\n *\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowWhen}\n * @see {@link bufferToggle}\n *\n * @param {Observable<O>} openings An observable of notifications to start new\n * windows.\n * @param {function(value: O): Observable} closingSelector A function that takes\n * the value emitted by the `openings` observable and returns an Observable,\n * which, when it emits (either `next` or `complete`), signals that the\n * associated window should complete.\n * @return {Observable<Observable<T>>} An observable of windows, which in turn\n * are Observables.\n * @method windowToggle\n * @owner Observable\n */\nexport function windowToggle<T, O>(openings: Observable<O>,\n                                   closingSelector: (openValue: O) => Observable<any>): OperatorFunction<T, Observable<T>> {\n  return (source: Observable<T>) => source.lift(new WindowToggleOperator<T, O>(openings, closingSelector));\n}\n\nclass WindowToggleOperator<T, O> implements Operator<T, Observable<T>> {\n\n  constructor(private openings: Observable<O>,\n              private closingSelector: (openValue: O) => Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<Observable<T>>, source: any): any {\n    return source.subscribe(new WindowToggleSubscriber(\n      subscriber, this.openings, this.closingSelector\n    ));\n  }\n}\n\ninterface WindowContext<T> {\n  window: Subject<T>;\n  subscription: Subscription;\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass WindowToggleSubscriber<T, O> extends OuterSubscriber<T, any> {\n  private contexts: WindowContext<T>[] = [];\n  private openSubscription: Subscription;\n\n  constructor(destination: Subscriber<Observable<T>>,\n              private openings: Observable<O>,\n              private closingSelector: (openValue: O) => Observable<any>) {\n    super(destination);\n    this.add(this.openSubscription = subscribeToResult(this, openings, openings));\n  }\n\n  protected _next(value: T) {\n    const { contexts } = this;\n    if (contexts) {\n      const len = contexts.length;\n      for (let i = 0; i < len; i++) {\n        contexts[i].window.next(value);\n      }\n    }\n  }\n\n  protected _error(err: any) {\n\n    const { contexts } = this;\n    this.contexts = null;\n\n    if (contexts) {\n      const len = contexts.length;\n      let index = -1;\n\n      while (++index < len) {\n        const context = contexts[index];\n        context.window.error(err);\n        context.subscription.unsubscribe();\n      }\n    }\n\n    super._error(err);\n  }\n\n  protected _complete() {\n    const { contexts } = this;\n    this.contexts = null;\n    if (contexts) {\n      const len = contexts.length;\n      let index = -1;\n      while (++index < len) {\n        const context = contexts[index];\n        context.window.complete();\n        context.subscription.unsubscribe();\n      }\n    }\n    super._complete();\n  }\n\n  protected _unsubscribe() {\n    const { contexts } = this;\n    this.contexts = null;\n    if (contexts) {\n      const len = contexts.length;\n      let index = -1;\n      while (++index < len) {\n        const context = contexts[index];\n        context.window.unsubscribe();\n        context.subscription.unsubscribe();\n      }\n    }\n  }\n\n  notifyNext(outerValue: any, innerValue: any,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, any>): void {\n\n    if (outerValue === this.openings) {\n\n      const { closingSelector } = this;\n      const closingNotifier = tryCatch(closingSelector)(innerValue);\n\n      if (closingNotifier === errorObject) {\n        return this.error(errorObject.e);\n      } else {\n        const window = new Subject<T>();\n        const subscription = new Subscription();\n        const context = { window, subscription };\n        this.contexts.push(context);\n        const innerSubscription = subscribeToResult(this, closingNotifier, context);\n\n        if (innerSubscription.closed) {\n          this.closeWindow(this.contexts.length - 1);\n        } else {\n          (<any> innerSubscription).context = context;\n          subscription.add(innerSubscription);\n        }\n\n        this.destination.next(window);\n\n      }\n    } else {\n      this.closeWindow(this.contexts.indexOf(outerValue));\n    }\n  }\n\n  notifyError(err: any): void {\n    this.error(err);\n  }\n\n  notifyComplete(inner: Subscription): void {\n    if (inner !== this.openSubscription) {\n      this.closeWindow(this.contexts.indexOf((<any> inner).context));\n    }\n  }\n\n  private closeWindow(index: number): void {\n    if (index === -1) {\n      return;\n    }\n\n    const { contexts } = this;\n    const context = contexts[index];\n    const { window, subscription } = context;\n    contexts.splice(index, 1);\n    window.complete();\n    subscription.unsubscribe();\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { Subscription } from '../Subscription';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Branch out the source Observable values as a nested Observable using a\n * factory function of closing Observables to determine when to start a new\n * window.\n *\n * <span class=\"informal\">It's like {@link bufferWhen}, but emits a nested\n * Observable instead of an array.</span>\n *\n * <img src=\"./img/windowWhen.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits connected, non-overlapping windows.\n * It emits the current window and opens a new one whenever the Observable\n * produced by the specified `closingSelector` function emits an item. The first\n * window is opened immediately when subscribing to the output Observable.\n *\n * @example <caption>Emit only the first two clicks events in every window of [1-5] random seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks\n *   .windowWhen(() => Rx.Observable.interval(1000 + Math.random() * 4000))\n *   .map(win => win.take(2)) // each window has at most 2 emissions\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link bufferWhen}\n *\n * @param {function(): Observable} closingSelector A function that takes no\n * arguments and returns an Observable that signals (on either `next` or\n * `complete`) when to close the previous window and start a new one.\n * @return {Observable<Observable<T>>} An observable of windows, which in turn\n * are Observables.\n * @method windowWhen\n * @owner Observable\n */\nexport function windowWhen<T>(closingSelector: () => Observable<any>): OperatorFunction<T, Observable<T>> {\n  return function windowWhenOperatorFunction(source: Observable<T>) {\n    return source.lift(new WindowOperator<T>(closingSelector));\n  };\n}\n\nclass WindowOperator<T> implements Operator<T, Observable<T>> {\n  constructor(private closingSelector: () => Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<Observable<T>>, source: any): any {\n    return source.subscribe(new WindowSubscriber(subscriber, this.closingSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass WindowSubscriber<T> extends OuterSubscriber<T, any> {\n  private window: Subject<T>;\n  private closingNotification: Subscription;\n\n  constructor(protected destination: Subscriber<Observable<T>>,\n              private closingSelector: () => Observable<any>) {\n    super(destination);\n    this.openWindow();\n  }\n\n  notifyNext(outerValue: T, innerValue: any,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, any>): void {\n    this.openWindow(innerSub);\n  }\n\n  notifyError(error: any, innerSub: InnerSubscriber<T, any>): void {\n    this._error(error);\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, any>): void {\n    this.openWindow(innerSub);\n  }\n\n  protected _next(value: T): void {\n    this.window.next(value);\n  }\n\n  protected _error(err: any): void {\n    this.window.error(err);\n    this.destination.error(err);\n    this.unsubscribeClosingNotification();\n  }\n\n  protected _complete(): void {\n    this.window.complete();\n    this.destination.complete();\n    this.unsubscribeClosingNotification();\n  }\n\n  private unsubscribeClosingNotification(): void {\n    if (this.closingNotification) {\n      this.closingNotification.unsubscribe();\n    }\n  }\n\n  private openWindow(innerSub: InnerSubscriber<T, any> = null): void {\n    if (innerSub) {\n      this.remove(innerSub);\n      innerSub.unsubscribe();\n    }\n\n    const prevWindow = this.window;\n    if (prevWindow) {\n      prevWindow.complete();\n    }\n\n    const window = this.window = new Subject<T>();\n    this.destination.next(window);\n\n    const closingNotifier = tryCatch(this.closingSelector)();\n    if (closingNotifier === errorObject) {\n      const err = errorObject.e;\n      this.destination.error(err);\n      this.window.error(err);\n    } else {\n      this.add(this.closingNotification = subscribeToResult(this, closingNotifier));\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable, ObservableInput } from '../Observable';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function withLatestFrom<T, R>(project: (v1: T) => R): OperatorFunction<T, R>;\nexport function withLatestFrom<T, T2, R>(v2: ObservableInput<T2>, project: (v1: T, v2: T2) => R): OperatorFunction<T, R>;\nexport function withLatestFrom<T, T2, T3, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, project: (v1: T, v2: T2, v3: T3) => R): OperatorFunction<T, R>;\nexport function withLatestFrom<T, T2, T3, T4, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, project: (v1: T, v2: T2, v3: T3, v4: T4) => R): OperatorFunction<T, R>;\nexport function withLatestFrom<T, T2, T3, T4, T5, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5) => R): OperatorFunction<T, R>;\nexport function withLatestFrom<T, T2, T3, T4, T5, T6, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6) => R): OperatorFunction<T, R> ;\nexport function withLatestFrom<T, T2>(v2: ObservableInput<T2>): OperatorFunction<T, [T, T2]>;\nexport function withLatestFrom<T, T2, T3>(v2: ObservableInput<T2>, v3: ObservableInput<T3>): OperatorFunction<T, [T, T2, T3]>;\nexport function withLatestFrom<T, T2, T3, T4>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): OperatorFunction<T, [T, T2, T3, T4]>;\nexport function withLatestFrom<T, T2, T3, T4, T5>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): OperatorFunction<T, [T, T2, T3, T4, T5]>;\nexport function withLatestFrom<T, T2, T3, T4, T5, T6>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): OperatorFunction<T, [T, T2, T3, T4, T5, T6]> ;\nexport function withLatestFrom<T, R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): OperatorFunction<T, R>;\nexport function withLatestFrom<T, R>(array: ObservableInput<any>[]): OperatorFunction<T, R>;\nexport function withLatestFrom<T, R>(array: ObservableInput<any>[], project: (...values: Array<any>) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Combines the source Observable with other Observables to create an Observable\n * whose values are calculated from the latest values of each, only when the\n * source emits.\n *\n * <span class=\"informal\">Whenever the source Observable emits a value, it\n * computes a formula using that value plus the latest values from other input\n * Observables, then emits the output of that formula.</span>\n *\n * <img src=\"./img/withLatestFrom.png\" width=\"100%\">\n *\n * `withLatestFrom` combines each value from the source Observable (the\n * instance) with the latest values from the other input Observables only when\n * the source emits a value, optionally using a `project` function to determine\n * the value to be emitted on the output Observable. All input Observables must\n * emit at least one value before the output Observable will emit a value.\n *\n * @example <caption>On every click event, emit an array with the latest timer event plus the click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var timer = Rx.Observable.interval(1000);\n * var result = clicks.withLatestFrom(timer);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link combineLatest}\n *\n * @param {ObservableInput} other An input Observable to combine with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {Function} [project] Projection function for combining values\n * together. Receives all values in order of the Observables passed, where the\n * first parameter is a value from the source Observable. (e.g.\n * `a.withLatestFrom(b, c, (a1, b1, c1) => a1 + b1 + c1)`). If this is not\n * passed, arrays will be emitted on the output Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n * @method withLatestFrom\n * @owner Observable\n */\nexport function withLatestFrom<T, R>(...args: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): OperatorFunction<T, R> {\n  return (source: Observable<T>) => {\n    let project: any;\n    if (typeof args[args.length - 1] === 'function') {\n      project = args.pop();\n    }\n    const observables = <Observable<any>[]>args;\n    return source.lift(new WithLatestFromOperator(observables, project));\n  };\n}\n\nclass WithLatestFromOperator<T, R> implements Operator<T, R> {\n  constructor(private observables: Observable<any>[],\n              private project?: (...values: any[]) => Observable<R>) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new WithLatestFromSubscriber(subscriber, this.observables, this.project));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass WithLatestFromSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private values: any[];\n  private toRespond: number[] = [];\n\n  constructor(destination: Subscriber<R>,\n              private observables: Observable<any>[],\n              private project?: (...values: any[]) => Observable<R>) {\n    super(destination);\n    const len = observables.length;\n    this.values = new Array(len);\n\n    for (let i = 0; i < len; i++) {\n      this.toRespond.push(i);\n    }\n\n    for (let i = 0; i < len; i++) {\n      let observable = observables[i];\n      this.add(subscribeToResult<T, R>(this, observable, <any>observable, i));\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.values[outerIndex] = innerValue;\n    const toRespond = this.toRespond;\n    if (toRespond.length > 0) {\n      const found = toRespond.indexOf(outerIndex);\n      if (found !== -1) {\n        toRespond.splice(found, 1);\n      }\n    }\n  }\n\n  notifyComplete() {\n    // noop\n  }\n\n  protected _next(value: T) {\n    if (this.toRespond.length === 0) {\n      const args = [value, ...this.values];\n      if (this.project) {\n        this._tryProject(args);\n      } else {\n        this.destination.next(args);\n      }\n    }\n  }\n\n  private _tryProject(args: any[]) {\n    let result: any;\n    try {\n      result = this.project.apply(this, args);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n}\n","import { Observable, ObservableInput } from '../Observable';\nimport { ArrayObservable } from '../observable/ArrayObservable';\nimport { isArray } from '../util/isArray';\nimport { Operator } from '../Operator';\nimport { PartialObserver } from '../Observer';\nimport { Subscriber } from '../Subscriber';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { OperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function zip<T, R>(project: (v1: T) => R): OperatorFunction<T, R>;\nexport function zip<T, T2, R>(v2: ObservableInput<T2>, project: (v1: T, v2: T2) => R): OperatorFunction<T, R>;\nexport function zip<T, T2, T3, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, project: (v1: T, v2: T2, v3: T3) => R): OperatorFunction<T, R>;\nexport function zip<T, T2, T3, T4, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, project: (v1: T, v2: T2, v3: T3, v4: T4) => R): OperatorFunction<T, R>;\nexport function zip<T, T2, T3, T4, T5, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5) => R): OperatorFunction<T, R>;\nexport function zip<T, T2, T3, T4, T5, T6, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6) => R): OperatorFunction<T, R> ;\nexport function zip<T, T2>(v2: ObservableInput<T2>): OperatorFunction<T, [T, T2]>;\nexport function zip<T, T2, T3>(v2: ObservableInput<T2>, v3: ObservableInput<T3>): OperatorFunction<T, [T, T2, T3]>;\nexport function zip<T, T2, T3, T4>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): OperatorFunction<T, [T, T2, T3, T4]>;\nexport function zip<T, T2, T3, T4, T5>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): OperatorFunction<T, [T, T2, T3, T4, T5]>;\nexport function zip<T, T2, T3, T4, T5, T6>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): OperatorFunction<T, [T, T2, T3, T4, T5, T6]> ;\nexport function zip<T, R>(...observables: Array<ObservableInput<T> | ((...values: Array<T>) => R)>): OperatorFunction<T, R>;\nexport function zip<T, R>(array: Array<ObservableInput<T>>): OperatorFunction<T, R>;\nexport function zip<T, TOther, R>(array: Array<ObservableInput<TOther>>, project: (v1: T, ...values: Array<TOther>) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * @param observables\n * @return {Observable<R>}\n * @method zip\n * @owner Observable\n */\nexport function zip<T, R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): OperatorFunction<T, R> {\n  return function zipOperatorFunction(source: Observable<T>) {\n    return source.lift.call(zipStatic<R>(source, ...observables));\n  };\n}\n\n/* tslint:disable:max-line-length */\nexport function zipStatic<T, R>(v1: ObservableInput<T>, project: (v1: T) => R): Observable<R>;\nexport function zipStatic<T, T2, R>(v1: ObservableInput<T>, v2: ObservableInput<T2>, project: (v1: T, v2: T2) => R): Observable<R>;\nexport function zipStatic<T, T2, T3, R>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, project: (v1: T, v2: T2, v3: T3) => R): Observable<R>;\nexport function zipStatic<T, T2, T3, T4, R>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, project: (v1: T, v2: T2, v3: T3, v4: T4) => R): Observable<R>;\nexport function zipStatic<T, T2, T3, T4, T5, R>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5) => R): Observable<R>;\nexport function zipStatic<T, T2, T3, T4, T5, T6, R>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6) => R): Observable<R>;\n\nexport function zipStatic<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>): Observable<[T, T2]>;\nexport function zipStatic<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>): Observable<[T, T2, T3]>;\nexport function zipStatic<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): Observable<[T, T2, T3, T4]>;\nexport function zipStatic<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): Observable<[T, T2, T3, T4, T5]>;\nexport function zipStatic<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): Observable<[T, T2, T3, T4, T5, T6]>;\n\nexport function zipStatic<T>(array: ObservableInput<T>[]): Observable<T[]>;\nexport function zipStatic<R>(array: ObservableInput<any>[]): Observable<R>;\nexport function zipStatic<T, R>(array: ObservableInput<T>[], project: (...values: Array<T>) => R): Observable<R>;\nexport function zipStatic<R>(array: ObservableInput<any>[], project: (...values: Array<any>) => R): Observable<R>;\n\nexport function zipStatic<T>(...observables: Array<ObservableInput<T>>): Observable<T[]>;\nexport function zipStatic<T, R>(...observables: Array<ObservableInput<T> | ((...values: Array<T>) => R)>): Observable<R>;\nexport function zipStatic<R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): Observable<R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Combines multiple Observables to create an Observable whose values are calculated from the values, in order, of each\n * of its input Observables.\n *\n * If the latest parameter is a function, this function is used to compute the created value from the input values.\n * Otherwise, an array of the input values is returned.\n *\n * @example <caption>Combine age and name from different sources</caption>\n *\n * let age$ = Observable.of<number>(27, 25, 29);\n * let name$ = Observable.of<string>('Foo', 'Bar', 'Beer');\n * let isDev$ = Observable.of<boolean>(true, true, false);\n *\n * Observable\n *     .zip(age$,\n *          name$,\n *          isDev$,\n *          (age: number, name: string, isDev: boolean) => ({ age, name, isDev }))\n *     .subscribe(x => console.log(x));\n *\n * // outputs\n * // { age: 27, name: 'Foo', isDev: true }\n * // { age: 25, name: 'Bar', isDev: true }\n * // { age: 29, name: 'Beer', isDev: false }\n *\n * @param observables\n * @return {Observable<R>}\n * @static true\n * @name zip\n * @owner Observable\n */\nexport function zipStatic<T, R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): Observable<R> {\n  const project = <((...ys: Array<any>) => R)> observables[observables.length - 1];\n  if (typeof project === 'function') {\n    observables.pop();\n  }\n  return new ArrayObservable(observables).lift(new ZipOperator(project));\n}\n\nexport class ZipOperator<T, R> implements Operator<T, R> {\n\n  project: (...values: Array<any>) => R;\n\n  constructor(project?: (...values: Array<any>) => R) {\n    this.project = project;\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new ZipSubscriber(subscriber, this.project));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class ZipSubscriber<T, R> extends Subscriber<T> {\n  private values: any;\n  private project: (...values: Array<any>) => R;\n  private iterators: LookAheadIterator<any>[] = [];\n  private active = 0;\n\n  constructor(destination: Subscriber<R>,\n              project?: (...values: Array<any>) => R,\n              values: any = Object.create(null)) {\n    super(destination);\n    this.project = (typeof project === 'function') ? project : null;\n    this.values = values;\n  }\n\n  protected _next(value: any) {\n    const iterators = this.iterators;\n    if (isArray(value)) {\n      iterators.push(new StaticArrayIterator(value));\n    } else if (typeof value[Symbol_iterator] === 'function') {\n      iterators.push(new StaticIterator(value[Symbol_iterator]()));\n    } else {\n      iterators.push(new ZipBufferIterator(this.destination, this, value));\n    }\n  }\n\n  protected _complete() {\n    const iterators = this.iterators;\n    const len = iterators.length;\n\n    if (len === 0) {\n      this.destination.complete();\n      return;\n    }\n\n    this.active = len;\n    for (let i = 0; i < len; i++) {\n      let iterator: ZipBufferIterator<any, any> = <any>iterators[i];\n      if (iterator.stillUnsubscribed) {\n        this.add(iterator.subscribe(iterator, i));\n      } else {\n        this.active--; // not an observable\n      }\n    }\n  }\n\n  notifyInactive() {\n    this.active--;\n    if (this.active === 0) {\n      this.destination.complete();\n    }\n  }\n\n  checkIterators() {\n    const iterators = this.iterators;\n    const len = iterators.length;\n    const destination = this.destination;\n\n    // abort if not all of them have values\n    for (let i = 0; i < len; i++) {\n      let iterator = iterators[i];\n      if (typeof iterator.hasValue === 'function' && !iterator.hasValue()) {\n        return;\n      }\n    }\n\n    let shouldComplete = false;\n    const args: any[] = [];\n    for (let i = 0; i < len; i++) {\n      let iterator = iterators[i];\n      let result = iterator.next();\n\n      // check to see if it's completed now that you've gotten\n      // the next value.\n      if (iterator.hasCompleted()) {\n        shouldComplete = true;\n      }\n\n      if (result.done) {\n        destination.complete();\n        return;\n      }\n\n      args.push(result.value);\n    }\n\n    if (this.project) {\n      this._tryProject(args);\n    } else {\n      destination.next(args);\n    }\n\n    if (shouldComplete) {\n      destination.complete();\n    }\n  }\n\n  protected _tryProject(args: any[]) {\n    let result: any;\n    try {\n      result = this.project.apply(this, args);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n}\n\ninterface LookAheadIterator<T> extends Iterator<T> {\n  hasValue(): boolean;\n  hasCompleted(): boolean;\n}\n\nclass StaticIterator<T> implements LookAheadIterator<T> {\n  private nextResult: IteratorResult<T>;\n\n  constructor(private iterator: Iterator<T>) {\n    this.nextResult = iterator.next();\n  }\n\n  hasValue() {\n    return true;\n  }\n\n  next(): IteratorResult<T> {\n    const result = this.nextResult;\n    this.nextResult = this.iterator.next();\n    return result;\n  }\n\n  hasCompleted() {\n    const nextResult = this.nextResult;\n    return nextResult && nextResult.done;\n  }\n}\n\nclass StaticArrayIterator<T> implements LookAheadIterator<T> {\n  private index = 0;\n  private length = 0;\n\n  constructor(private array: T[]) {\n    this.length = array.length;\n  }\n\n  [Symbol_iterator]() {\n    return this;\n  }\n\n  next(value?: any): IteratorResult<T> {\n    const i = this.index++;\n    const array = this.array;\n    return i < this.length ? { value: array[i], done: false } : { value: null, done: true };\n  }\n\n  hasValue() {\n    return this.array.length > this.index;\n  }\n\n  hasCompleted() {\n    return this.array.length === this.index;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass ZipBufferIterator<T, R> extends OuterSubscriber<T, R> implements LookAheadIterator<T> {\n  stillUnsubscribed = true;\n  buffer: T[] = [];\n  isComplete = false;\n\n  constructor(destination: PartialObserver<T>,\n              private parent: ZipSubscriber<T, R>,\n              private observable: Observable<T>) {\n    super(destination);\n  }\n\n  [Symbol_iterator]() {\n    return this;\n  }\n\n  // NOTE: there is actually a name collision here with Subscriber.next and Iterator.next\n  //    this is legit because `next()` will never be called by a subscription in this case.\n  next(): IteratorResult<T> {\n    const buffer = this.buffer;\n    if (buffer.length === 0 && this.isComplete) {\n      return { value: null, done: true };\n    } else {\n      return { value: buffer.shift(), done: false };\n    }\n  }\n\n  hasValue() {\n    return this.buffer.length > 0;\n  }\n\n  hasCompleted() {\n    return this.buffer.length === 0 && this.isComplete;\n  }\n\n  notifyComplete() {\n    if (this.buffer.length > 0) {\n      this.isComplete = true;\n      this.parent.notifyInactive();\n    } else {\n      this.destination.complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: any,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.buffer.push(innerValue);\n    this.parent.checkIterators();\n  }\n\n  subscribe(value: any, index: number) {\n    return subscribeToResult<any, any>(this, this.observable, this, index);\n  }\n}\n","export { audit } from './operators/audit';\nexport { auditTime } from './operators/auditTime';\nexport { buffer } from './operators/buffer';\nexport { bufferCount } from './operators/bufferCount';\nexport { bufferTime } from './operators/bufferTime';\nexport { bufferToggle } from './operators/bufferToggle';\nexport { bufferWhen } from './operators/bufferWhen';\nexport { catchError } from './operators/catchError';\nexport { combineAll } from './operators/combineAll';\nexport { combineLatest } from './operators/combineLatest';\nexport { concat } from './operators/concat';\nexport { concatAll } from './operators/concatAll';\nexport { concatMap } from './operators/concatMap';\nexport { concatMapTo } from './operators/concatMapTo';\nexport { count } from './operators/count';\nexport { debounce } from './operators/debounce';\nexport { debounceTime } from './operators/debounceTime';\nexport { defaultIfEmpty } from './operators/defaultIfEmpty';\nexport { delay } from './operators/delay';\nexport { delayWhen } from './operators/delayWhen';\nexport { dematerialize } from './operators/dematerialize';\nexport { distinct } from './operators/distinct';\nexport { distinctUntilChanged } from './operators/distinctUntilChanged';\nexport { distinctUntilKeyChanged } from './operators/distinctUntilKeyChanged';\nexport { elementAt } from './operators/elementAt';\nexport { every } from './operators/every';\nexport { exhaust } from './operators/exhaust';\nexport { exhaustMap } from './operators/exhaustMap';\nexport { expand } from './operators/expand';\nexport { filter } from './operators/filter';\nexport { finalize } from './operators/finalize';\nexport { find } from './operators/find';\nexport { findIndex } from './operators/findIndex';\nexport { first } from './operators/first';\nexport { groupBy } from './operators/groupBy';\nexport { ignoreElements } from './operators/ignoreElements';\nexport { isEmpty } from './operators/isEmpty';\nexport { last } from './operators/last';\nexport { map } from './operators/map';\nexport { mapTo } from './operators/mapTo';\nexport { materialize } from './operators/materialize';\nexport { max } from './operators/max';\nexport { merge } from './operators/merge';\nexport { mergeAll } from './operators/mergeAll';\nexport { mergeMap } from './operators/mergeMap';\nexport { mergeMap as flatMap } from './operators/mergeMap';\nexport { mergeMapTo } from './operators/mergeMapTo';\nexport { mergeScan } from './operators/mergeScan';\nexport { min } from './operators/min';\nexport { multicast } from './operators/multicast';\nexport { observeOn } from './operators/observeOn';\nexport { onErrorResumeNext } from './operators/onErrorResumeNext';\nexport { pairwise } from './operators/pairwise';\nexport { partition } from './operators/partition';\nexport { pluck } from './operators/pluck';\nexport { publish } from './operators/publish';\nexport { publishBehavior } from './operators/publishBehavior';\nexport { publishLast } from './operators/publishLast';\nexport { publishReplay } from './operators/publishReplay';\nexport { race } from './operators/race';\nexport { reduce } from './operators/reduce';\nexport { repeat } from './operators/repeat';\nexport { repeatWhen } from './operators/repeatWhen';\nexport { retry } from './operators/retry';\nexport { retryWhen } from './operators/retryWhen';\nexport { refCount } from './operators/refCount';\nexport { sample } from './operators/sample';\nexport { sampleTime } from './operators/sampleTime';\nexport { scan } from './operators/scan';\nexport { sequenceEqual } from './operators/sequenceEqual';\nexport { share } from './operators/share';\nexport { shareReplay } from './operators/shareReplay';\nexport { single } from './operators/single';\nexport { skip } from './operators/skip';\nexport { skipLast } from './operators/skipLast';\nexport { skipUntil } from './operators/skipUntil';\nexport { skipWhile } from './operators/skipWhile';\nexport { startWith } from './operators/startWith';\n/**\n * TODO(https://github.com/ReactiveX/rxjs/issues/2900): Add back subscribeOn once it can be\n * treeshaken. Currently if this export is added back, it\n * forces apps to bring in asap scheduler along with\n * Immediate, root, and other supporting code.\n */\n// export { subscribeOn } from './operators/subscribeOn';\nexport { switchAll } from './operators/switchAll';\nexport { switchMap } from './operators/switchMap';\nexport { switchMapTo } from './operators/switchMapTo';\nexport { take } from './operators/take';\nexport { takeLast } from './operators/takeLast';\nexport { takeUntil } from './operators/takeUntil';\nexport { takeWhile } from './operators/takeWhile';\nexport { tap } from './operators/tap';\nexport { throttle } from './operators/throttle';\nexport { throttleTime } from './operators/throttleTime';\nexport { timeInterval } from './operators/timeInterval';\nexport { timeout } from './operators/timeout';\nexport { timeoutWith } from './operators/timeoutWith';\nexport { timestamp } from './operators/timestamp';\nexport { toArray } from './operators/toArray';\nexport { window } from './operators/window';\nexport { windowCount } from './operators/windowCount';\nexport { windowTime } from './operators/windowTime';\nexport { windowToggle } from './operators/windowToggle';\nexport { windowWhen } from './operators/windowWhen';\nexport { withLatestFrom } from './operators/withLatestFrom';\nexport { zip } from './operators/zip';\nexport { zipAll } from './operators/zipAll';\n","import { Directive } from '@angular/core';\nexport class PageHeaderCustomMenuDirective { static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{ \n    selector: '[uxPageHeaderCustomMenu]' \n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction PageHeaderCustomMenuDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nPageHeaderCustomMenuDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPageHeaderCustomMenuDirective.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Subscription } from 'rxjs/Subscription';\nimport { filter, map } from 'rxjs/operators';\nimport { PageHeaderNavigationDropdownItem, PageHeaderNavigationItem } from './navigation/navigation.component';\nexport class PageHeaderService implements OnDestroy {\n\n    items$ = new BehaviorSubject<PageHeaderNavigationItem[]>([]);\n    selected$ = new BehaviorSubject<PageHeaderNavigationItem>(null);\n    selectedRoot$ = new BehaviorSubject<PageHeaderNavigationItem>(null);\n    secondary$ = new BehaviorSubject<boolean>(false);\nprivate _subscription: Subscription;\nconstructor() {\n        this._subscription = this.selected$.pipe(map(selected => this.getRoot(selected))).subscribe(root => this.selectedRoot$.next(root));\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        this._subscription.unsubscribe();\n    }\n/**\n * @param {?} item\n * @return {?}\n */\nselect(item: PageHeaderNavigationItem): void {\n\n        // do nothing if this item is already selected\n        if (item === this.selected$.getValue()) {\n            return;\n        }\n\n        // if we are in secondary navigation mode and we click a parent - dont deselect the child\n        if (this.secondary$.getValue() === true && this.isParentOf(this.selected$.getValue(), item)) {\n            return;\n        }\n\n        // deselect all current items\n        this.deselectAll();\n\n        // call the select function if present\n        if (item.select) {\n            item.select.call(item, item);\n        }\n\n        // store the selected state\n        item.selected = true;\n\n        // select all parent items too\n        this.selectParents(item);\n\n        // emit the new selected item\n        this.selected$.next(item);\n    }\n/**\n * @param {?} item\n * @return {?}\n */\ndeselect(item: PageHeaderNavigationItem | PageHeaderNavigationDropdownItem): void {\n\n        // deselect the current item\n        item.selected = false;\n\n        // iterate any children and deselect them\n        if (item.children) {\n            item.children.forEach(_item => this.deselect(_item));\n        }\n    }\n/**\n * @return {?}\n */\ndeselectAll(): void {\n        this.items$.getValue().forEach(item => this.deselect(item));\n    }\n/**\n * @param {?=} items\n * @return {?}\n */\nsetItems(items: PageHeaderNavigationItem[] = []): void {\n        // identify all parent elements\n        items.forEach(item => this.setParent(item));\n\n        this.items$.next(items);\n    }\n/**\n * @param {?} enabled\n * @return {?}\n */\nsetSecondaryNavigation(enabled: boolean): void {\n        this.secondary$.next(enabled);\n    }\n/**\n * @param {?} item\n * @return {?}\n */\nprivate getRoot(item: PageHeaderNavigation): PageHeaderNavigation {\n        return item && item.parent ? this.getRoot(item.parent) : item;\n    }\n/**\n * @param {?} item\n * @param {?=} parent\n * @return {?}\n */\nprivate setParent(item: PageHeaderNavigation, parent?: PageHeaderNavigation | null): void {\n        // set the parent field\n        item.parent = parent;\n\n        // call this function recursively on all children\n        if (item.children) {\n            item.children.forEach(child => this.setParent(child, item));\n        }\n    }\n/**\n * @param {?} item\n * @return {?}\n */\nprivate selectParents(item: PageHeaderNavigation): void {\n        // if there is a parent then we want to set it to selected\n        if (item.parent) {\n            item.parent.selected = true;\n\n            // check if it has any parents\n            this.selectParents(item.parent);\n        }\n    }\n/**\n * @param {?} node\n * @param {?} parent\n * @return {?}\n */\nprivate isParentOf(node: PageHeaderNavigation, parent: PageHeaderNavigation): boolean {\n        \n        // if there are no parents return false\n        if (!node || !node.parent) {\n            return false;\n        }\n\n        // if the parent is the match we are looking for return true\n        if (node.parent === parent) {\n            return true;\n        }\n\n        // if there are potentially grandparents then check them too\n        return this.isParentOf(node.parent, parent);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction PageHeaderService_tsickle_Closure_declarations() {\n/** @type {?} */\nPageHeaderService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPageHeaderService.ctorParameters;\n/** @type {?} */\nPageHeaderService.prototype.items$;\n/** @type {?} */\nPageHeaderService.prototype.selected$;\n/** @type {?} */\nPageHeaderService.prototype.selectedRoot$;\n/** @type {?} */\nPageHeaderService.prototype.secondary$;\n/** @type {?} */\nPageHeaderService.prototype._subscription;\n}\n\n\nexport type PageHeaderNavigation = PageHeaderNavigationItem | PageHeaderNavigationDropdownItem;\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, ContentChildren, EventEmitter, Input, OnDestroy, OnInit, Output, QueryList, TemplateRef } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Observable } from 'rxjs/Observable';\nimport { Subscription } from 'rxjs/Subscription';\nimport { filter, map, distinctUntilChanged } from 'rxjs/operators';\nimport { ColorService } from '../../services/color/index';\nimport { Breadcrumb } from '../breadcrumbs/index';\nimport { PageHeaderCustomMenuDirective } from './custom-menu/custom-menu.directive';\nimport { PageHeaderNavigationItem } from './navigation/navigation.component';\nimport { PageHeaderNavigation, PageHeaderService } from './page-header.service';\nexport class PageHeaderComponent implements OnInit, OnDestroy {\n\n     logo: string;\n     header: string;\n     alignment: 'left' | 'right' | 'center' = 'center';\n     condensed: boolean = false;\n     iconMenus: PageHeaderIconMenu[];\n     backVisible: boolean = true;\n     secondaryNavigationAlignment: string = 'center';\n     secondaryNavigationAutoselect: boolean = false;\n/**\n * @param {?} items\n * @return {?}\n */\nset items(items: PageHeaderNavigationItem[]) {\n        this._pageHeaderService.setItems(items);\n    }\n/**\n * @param {?} enabled\n * @return {?}\n */\nset secondaryNavigation(enabled: boolean) {\n        this._pageHeaderService.setSecondaryNavigation(enabled);\n    }\n/**\n * @return {?}\n */\nget secondaryNavigation(): boolean {\n        return this._pageHeaderService.secondary$.getValue();\n    }\n/**\n * @param {?} crumbs\n * @return {?}\n */\nset crumbs(crumbs: Breadcrumb[]) {\n        this._crumbs = crumbs;\n    }\n/**\n * @return {?}\n */\nget crumbs(): Breadcrumb[] {\n        return this.condensed ? [...this._crumbs, { title: this.header }] : this._crumbs;\n    }\n/**\n * @param {?} color\n * @return {?}\n */\nset familyBackground(color: string) {\n        this._familyBackground = this._colorService.resolve(color);\n    }\n/**\n * @return {?}\n */\nget familyBackground(): string {\n        return this._familyBackground;\n    }\n/**\n * @param {?} color\n * @return {?}\n */\nset familyForeground(color: string) {\n        this._familyForeground = this._colorService.resolve(color);\n    }\n/**\n * @return {?}\n */\nget familyForeground(): string {\n        return this._familyForeground;\n    }\n\n     backClick = new EventEmitter();\n\n     customMenus: QueryList<TemplateRef<any>>;\n\n    selected$: BehaviorSubject<PageHeaderNavigationItem> = this._pageHeaderService.selected$;\n    selectedRoot$: BehaviorSubject<PageHeaderNavigationItem> = this._pageHeaderService.selectedRoot$;\nprivate _crumbs: Breadcrumb[] = [];\nprivate _familyBackground: string;\nprivate _familyForeground: string;\nprivate _subscription: Subscription;\n/**\n * @param {?} _colorService\n * @param {?} _pageHeaderService\n */\nconstructor(private _colorService: ColorService,\nprivate _pageHeaderService: PageHeaderService) { }\n/**\n * @return {?}\n */\nngOnInit(): void {\n        this._subscription = this.selectedRoot$.pipe(\n            distinctUntilChanged(),\n            filter(() => this.secondaryNavigation && this.secondaryNavigationAutoselect), \n            filter((item: PageHeaderNavigation) => item && item.children && item.children.length > 0),\n            map(item => item.children[0])\n        ).subscribe(item => this.select(item));\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        this._subscription.unsubscribe();\n    }\n/**\n * @return {?}\n */\ngoBack(): void {\n        this.backClick.emit();\n    }\n/**\n * @param {?} item\n * @return {?}\n */\nselect(item: PageHeaderNavigation): void {\n        this._pageHeaderService.select(item);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-page-header',\n    exportAs: 'ux-page-header',\n    template: `\n      <div class=\"ux-page-header\" [class.page-header-condensed]=\"condensed\">\n\n          <!-- Display Upper Section when not condensed -->\n          <div class=\"page-header-actions\" *ngIf=\"!condensed\">\n\n              <div class=\"page-header-logo-container\" [hidden]=\"!logo\">\n                  <img [attr.src]=\"logo\" class=\"page-header-logo\">\n              </div>\n\n              <div class=\"page-header-navigation\" [ngClass]=\"alignment\">\n\n                  <!-- The Top Navigation Options -->\n                  <ux-page-header-horizontal-navigation></ux-page-header-horizontal-navigation>\n              </div>\n\n              <div class=\"page-header-icon-menus\">\n                  <ng-container *ngFor=\"let menu of customMenus\" [ngTemplateOutlet]=\"menu\"></ng-container>\n\n                  <ux-page-header-icon-menu *ngFor=\"let menu of iconMenus\" [menu]=\"menu\"></ux-page-header-icon-menu>\n              </div>\n          </div>\n\n          <!-- Display Lower Section When Not Condensed -->\n          <div class=\"page-header-details\" *ngIf=\"!condensed\">\n\n              <div class=\"page-header-state-container\">\n\n                  <div *ngIf=\"backVisible == true\" class=\"page-header-back-button\" (click)=\"goBack()\">\n                      <span class=\"hpe-icon hpe-previous text-primary\"></span>\n                  </div>\n\n                  <div class=\"page-header-title-container\">\n\n                      <ux-breadcrumbs [crumbs]=\"crumbs\"></ux-breadcrumbs>\n\n                      <h1 class=\"page-header-title\" [style.backgroundColor]=\"familyBackground\" [style.color]=\"familyForeground\">{{ header }}</h1>\n                  </div>\n\n              </div>\n\n          </div>\n\n          <!-- Display This Section Optimized for Condensed Mode -->\n          <div class=\"page-header-condensed-content\" *ngIf=\"condensed\">\n\n              <div class=\"page-header-breadcrumbs\">\n                  <ux-breadcrumbs [crumbs]=\"crumbs\"></ux-breadcrumbs>\n              </div>\n\n              <div class=\"page-header-navigation\" [ngClass]=\"alignment\">\n\n                  <!-- The Top Navigation Options -->\n                  <ux-page-header-horizontal-navigation></ux-page-header-horizontal-navigation>\n              </div>\n\n              <div class=\"page-header-icon-menus\">\n                  <ng-container *ngFor=\"let menu of customMenus\" [ngTemplateOutlet]=\"menu\"></ng-container>\n                  <ux-page-header-icon-menu *ngFor=\"let menu of iconMenus\" [menu]=\"menu\"></ux-page-header-icon-menu>\n              </div>\n\n          </div>\n\n      </div>\n\n      <div class=\"page-header-secondary\" [ngClass]=\"secondaryNavigationAlignment\" *ngIf=\"secondaryNavigation && (selectedRoot$ | async)\">\n          <ul class=\"nav nav-tabs\" role=\"tablist\" *ngIf=\"(selectedRoot$ | async)?.children; let children\">\n              <li role=\"presentation\" *ngFor=\"let child of children\" [class.active]=\"child === (selected$ | async)\">\n                  <a role=\"tab\" (click)=\"select(child)\">{{ child.title }}</a>\n              </li>\n          </ul>\n      </div>\n    `,\n    providers: [ PageHeaderService ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ColorService, },\n{type: PageHeaderService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'logo': [{ type: Input },],\n'header': [{ type: Input },],\n'alignment': [{ type: Input },],\n'condensed': [{ type: Input },],\n'iconMenus': [{ type: Input },],\n'backVisible': [{ type: Input },],\n'secondaryNavigationAlignment': [{ type: Input },],\n'secondaryNavigationAutoselect': [{ type: Input },],\n'items': [{ type: Input },],\n'secondaryNavigation': [{ type: Input },],\n'crumbs': [{ type: Input },],\n'familyBackground': [{ type: Input },],\n'familyForeground': [{ type: Input },],\n'backClick': [{ type: Output },],\n'customMenus': [{ type: ContentChildren, args: [PageHeaderCustomMenuDirective, { read: TemplateRef }, ] },],\n};\n}\n\nfunction PageHeaderComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nPageHeaderComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPageHeaderComponent.ctorParameters;\n/** @type {?} */\nPageHeaderComponent.propDecorators;\n/** @type {?} */\nPageHeaderComponent.prototype.logo;\n/** @type {?} */\nPageHeaderComponent.prototype.header;\n/** @type {?} */\nPageHeaderComponent.prototype.alignment;\n/** @type {?} */\nPageHeaderComponent.prototype.condensed;\n/** @type {?} */\nPageHeaderComponent.prototype.iconMenus;\n/** @type {?} */\nPageHeaderComponent.prototype.backVisible;\n/** @type {?} */\nPageHeaderComponent.prototype.secondaryNavigationAlignment;\n/** @type {?} */\nPageHeaderComponent.prototype.secondaryNavigationAutoselect;\n/** @type {?} */\nPageHeaderComponent.prototype.backClick;\n/** @type {?} */\nPageHeaderComponent.prototype.customMenus;\n/** @type {?} */\nPageHeaderComponent.prototype.selected$;\n/** @type {?} */\nPageHeaderComponent.prototype.selectedRoot$;\n/** @type {?} */\nPageHeaderComponent.prototype._crumbs;\n/** @type {?} */\nPageHeaderComponent.prototype._familyBackground;\n/** @type {?} */\nPageHeaderComponent.prototype._familyForeground;\n/** @type {?} */\nPageHeaderComponent.prototype._subscription;\n/** @type {?} */\nPageHeaderComponent.prototype._colorService;\n/** @type {?} */\nPageHeaderComponent.prototype._pageHeaderService;\n}\n\n\nexport interface PageHeaderIconMenu {\n    icon: string;\n    badge?: number | string;\n    select?: (menu: PageHeaderIconMenu) => void;\n    dropdown?: PageHeaderIconMenuDropdownItem[];\n}\n\nexport interface PageHeaderIconMenuDropdownItem {\n    icon?: string;\n    title: string;\n    subtitle?: string;\n    header?: boolean;\n    divider?: boolean;\n    select?: () => void;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input } from '@angular/core';\nimport { PageHeaderIconMenu, PageHeaderIconMenuDropdownItem } from '../page-header.component';\nexport class PageHeaderIconMenuComponent {\n\n     menu: PageHeaderIconMenu;\n/**\n * @param {?} item\n * @return {?}\n */\nselect(item: PageHeaderIconMenu | PageHeaderIconMenuDropdownItem) {\n        if (item.select) {\n            item.select.call(item, item);\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-page-header-icon-menu',\n    template: `\n      <div class=\"page-header-icon-menu\" dropdown dropdownToggle placement=\"bottom right\">\n\n          <a class=\"page-header-icon-menu-button\" (click)=\"select(menu)\">\n              <i class=\"hpe-icon\" [ngClass]=\"menu.icon\"></i>\n              <span class=\"label label-primary\" *ngIf=\"menu?.badge\">{{ menu.badge }}</span>\n          </a>\n\n          <ul *dropdownMenu class=\"dropdown-menu\" role=\"menu\">\n\n              <li role=\"menuitem\" *ngFor=\"let dropdown of menu?.dropdown\" [class.dropdown-header]=\"dropdown.header\" [class.dropdown-divider]=\"dropdown.divider\">\n\n                  <span class=\"font-bold\" *ngIf=\"dropdown.header\">{{ dropdown.title }}</span>\n\n                  <a class=\"dropdown-item\" *ngIf=\"!dropdown.header\" (click)=\"select(dropdown)\">\n                      <i class=\"hpe-icon hp-fw text-muted\" [ngClass]=\"dropdown.icon\"></i>\n                      {{ dropdown.title }}\n                      <span class=\"pull-right text-muted small\" *ngIf=\"dropdown.subtitle\">{{ dropdown.subtitle }}</span>\n                  </a>\n              </li>\n\n          </ul>\n      </div>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'menu': [{ type: Input },],\n};\n}\n\nfunction PageHeaderIconMenuComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nPageHeaderIconMenuComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPageHeaderIconMenuComponent.ctorParameters;\n/** @type {?} */\nPageHeaderIconMenuComponent.propDecorators;\n/** @type {?} */\nPageHeaderIconMenuComponent.prototype.menu;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, EventEmitter, Input, OnDestroy, Output } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { Subscription } from 'rxjs/Subscription';\nimport { debounceTime } from 'rxjs/operators';\nimport { PageHeaderNavigationDropdownItem } from '../navigation.component';\nimport { PageHeaderService } from '../../page-header.service';\nexport class PageHeaderNavigationDropdownItemComponent implements OnDestroy {\n\n     item: PageHeaderNavigationDropdownItem;\n    \n    dropdownOpen: boolean = false;\nprivate _subscription: Subscription;\nprivate _hover$: Subject<boolean> = new Subject<boolean>();\n/**\n * @param {?} _pageHeaderService\n */\nconstructor(private _pageHeaderService: PageHeaderService) {\n\n        // subscribe to stream with a debounce (a small debounce is all that is required)\n        this._subscription = this._hover$.pipe(debounceTime(1)).subscribe(visible => this.dropdownOpen = visible);\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        this._subscription.unsubscribe();\n    }\n/**\n * @param {?} item\n * @return {?}\n */\nselect(item: PageHeaderNavigationDropdownItem) {\n\n        // clicking on an item with children then return\n        if (item.children) {\n            return;\n        }\n\n        // emit the selected item in an event\n        this._pageHeaderService.select(item);\n    }\n/**\n * @return {?}\n */\nhoverStart() {\n        this._hover$.next(true);\n    }\n/**\n * @return {?}\n */\nhoverLeave() {\n        this._hover$.next(false);\n    }\n/**\n * @return {?}\n */\nclose() {\n        this.dropdownOpen = false;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-page-header-horizontal-navigation-dropdown-item',\n    template: `\n      <div role=\"menu-item\" dropdown [isOpen]=\"dropdownOpen\" container=\"body\" placement=\"right\" [isDisabled]=\"!item.children\" (mouseenter)=\"hoverStart()\"\n          (mouseleave)=\"hoverLeave()\" #subMenu=\"bs-dropdown\">\n\n          <!-- Show the menu item and the arrow if there are children -->\n          <a class=\"dropdown-item\" tabindex=\"0\" [class.selected]=\"item.selected\" (keyup.enter)=\"select(item); subMenu.toggle()\" (click)=\"select(item)\">\n              <span class=\"dropdown-item-title\">{{ item.title }}</span>\n              <span class=\"dropdown-item-icon hpe-icon hpe-next\" *ngIf=\"item.children\"></span>\n          </a>\n\n          <!-- Allow another level of menu items -->\n          <ul *dropdownMenu class=\"dropdown-menu horizontal-navigation-dropdown-submenu\" role=\"menu\" (mouseenter)=\"hoverStart()\" (mouseleave)=\"hoverLeave()\">\n\n              <li role=\"menuitem\" *ngFor=\"let subItem of item.children\" (click)=\"select(subItem, item)\" (keyup.enter)=\"select(subItem)\">\n                  <a class=\"dropdown-item\" tabindex=\"0\" [class.selected]=\"subItem.selected\">\n                      <span class=\"dropdown-item-title\">{{ subItem.title }}</span>\n                  </a>\n              </li>\n          </ul>\n      </div>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: PageHeaderService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'item': [{ type: Input },],\n};\n}\n\nfunction PageHeaderNavigationDropdownItemComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nPageHeaderNavigationDropdownItemComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPageHeaderNavigationDropdownItemComponent.ctorParameters;\n/** @type {?} */\nPageHeaderNavigationDropdownItemComponent.propDecorators;\n/** @type {?} */\nPageHeaderNavigationDropdownItemComponent.prototype.item;\n/** @type {?} */\nPageHeaderNavigationDropdownItemComponent.prototype.dropdownOpen;\n/** @type {?} */\nPageHeaderNavigationDropdownItemComponent.prototype._subscription;\n/** @type {?} */\nPageHeaderNavigationDropdownItemComponent.prototype._hover$;\n/** @type {?} */\nPageHeaderNavigationDropdownItemComponent.prototype._pageHeaderService;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, ElementRef, Input, OnDestroy, OnInit, QueryList, ViewChild, ViewChildren } from '@angular/core';\nimport { BsDropdownDirective } from 'ngx-bootstrap/dropdown';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Subscription } from 'rxjs/Subscription';\nimport { PageHeaderService } from '../../page-header.service';\nimport { PageHeaderNavigationDropdownItemComponent } from '../navigation-dropdown-item/navigation-dropdown-item.component';\nimport { PageHeaderNavigationItem } from '../navigation.component';\nexport class PageHeaderNavigationItemComponent implements OnInit, OnDestroy {\n\n     menu: BsDropdownDirective;\n     dropdowns: QueryList<PageHeaderNavigationDropdownItemComponent>;\n    \n     item: PageHeaderNavigationItem;\n    \n    secondary$: BehaviorSubject<boolean> = this._pageHeaderService.secondary$;\nprivate _subscription: Subscription;\n/**\n * @param {?} elementRef\n * @param {?} _pageHeaderService\n */\nconstructor(public elementRef: ElementRef,\nprivate _pageHeaderService: PageHeaderService) { }\n/**\n * @return {?}\n */\nngOnInit() {\n        this._subscription = this.menu.onHidden.subscribe(() => this.dropdowns.forEach(dropdown => dropdown.close()));\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        this._subscription.unsubscribe();\n    }\n/**\n * @return {?}\n */\nselect() {\n\n        // if the item has children then do nothing at this stage \n        if (this.item.children && this._pageHeaderService.secondary$.getValue() === false) {\n            return;\n        }\n\n        // otherwise select the current item\n        this._pageHeaderService.select(this.item);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-page-header-horizontal-navigation-item',\n    template: `\n      <div class=\"horizontal-navigation-button\"\n          dropdown\n          dropdownToggle\n          placement=\"bottom left\"\n          [isDisabled]=\"!item?.children || (secondary$ | async)\"\n          tabindex=\"0\"\n          container=\"body\"\n          #menu=\"bs-dropdown\"\n          (keyup.enter)=\"menu.toggle()\"\n          [class.selected]=\"item?.selected\"\n          (click)=\"select()\">\n\n          <span class=\"hpe-icon navigation-item-icon\" *ngIf=\"item.icon\" [ngClass]=\"item?.icon\"></span>\n          <span class=\"navigation-item-label\">{{ item?.title }}</span>\n          <span class=\"hpe-icon hpe-down\" *ngIf=\"item?.children && !(secondary$ | async)\"></span>\n\n          <div *dropdownMenu class=\"dropdown-menu horizontal-navigation-dropdown-menu\" role=\"menu\">\n              <ux-page-header-horizontal-navigation-dropdown-item\n                  *ngFor=\"let item of item?.children\"\n                  [item]=\"item\">\n              </ux-page-header-horizontal-navigation-dropdown-item>\n          </div>\n\n      </div>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: PageHeaderService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'menu': [{ type: ViewChild, args: ['menu', ] },],\n'dropdowns': [{ type: ViewChildren, args: [PageHeaderNavigationDropdownItemComponent, ] },],\n'item': [{ type: Input },],\n};\n}\n\nfunction PageHeaderNavigationItemComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nPageHeaderNavigationItemComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPageHeaderNavigationItemComponent.ctorParameters;\n/** @type {?} */\nPageHeaderNavigationItemComponent.propDecorators;\n/** @type {?} */\nPageHeaderNavigationItemComponent.prototype.menu;\n/** @type {?} */\nPageHeaderNavigationItemComponent.prototype.dropdowns;\n/** @type {?} */\nPageHeaderNavigationItemComponent.prototype.item;\n/** @type {?} */\nPageHeaderNavigationItemComponent.prototype.secondary$;\n/** @type {?} */\nPageHeaderNavigationItemComponent.prototype._subscription;\n/** @type {?} */\nPageHeaderNavigationItemComponent.prototype.elementRef;\n/** @type {?} */\nPageHeaderNavigationItemComponent.prototype._pageHeaderService;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { AfterViewInit, Component, ElementRef, OnDestroy, QueryList, ViewChildren } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Subscription } from 'rxjs/Subscription';\nimport { distinctUntilChanged } from 'rxjs/operators';\nimport { ResizeService } from '../../../directives/resize/index';\nimport { PageHeaderNavigation, PageHeaderService } from '../page-header.service';\nimport { PageHeaderNavigationItemComponent } from './navigation-item/navigation-item.component';\nexport class PageHeaderNavigationComponent implements AfterViewInit, OnDestroy {\n    \n     menuItems: QueryList<PageHeaderNavigationItemComponent>;\n    \n    items$: BehaviorSubject<PageHeaderNavigationItem[]> = this._pageHeaderService.items$;\n    indicatorVisible: boolean = false;\n    indicatorX: number = 0;\n    indicatorWidth: number = 0;\nprivate _subscription = new Subscription();\n/**\n * @param {?} elementRef\n * @param {?} resizeService\n * @param {?} _pageHeaderService\n */\nconstructor(elementRef: ElementRef, resizeService: ResizeService,\nprivate _pageHeaderService: PageHeaderService) {\n        this._subscription.add(resizeService.addResizeListener(elementRef.nativeElement).subscribe(this.updateSelectedIndicator.bind(this)));\n        this._subscription.add(_pageHeaderService.selected$.pipe(distinctUntilChanged()).subscribe(this.updateSelectedIndicator.bind(this)));\n        this._subscription.add(_pageHeaderService.secondary$.pipe(distinctUntilChanged()).subscribe(this.updateSelectedIndicator.bind(this)));\n    }\n/**\n * @return {?}\n */\nngAfterViewInit(): void {\n        this.updateSelectedIndicator();\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        this._subscription.unsubscribe();\n    }\n/**\n * @return {?}\n */\nupdateSelectedIndicator(): void {\n        setTimeout(() => {\n            // find the selected item\n            const /** @type {?} */ selected = this.menuItems.find(item => item.item.selected);\n    \n            // determine whether or not to show the indicator\n            this.indicatorVisible = !!selected;\n    \n            // set the width of the indicator to match the width of the navigation item\n            if (selected) {\n                const /** @type {?} */ styles = getComputedStyle(selected.elementRef.nativeElement);\n    \n                this.indicatorX = selected.elementRef.nativeElement.offsetLeft;\n                this.indicatorWidth = parseInt(styles.getPropertyValue('width'));\n            }\n        });\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-page-header-horizontal-navigation',\n    template: `\n      <ux-page-header-horizontal-navigation-item\n          *ngFor=\"let item of items$ | async\"\n          [item]=\"item\">\n      </ux-page-header-horizontal-navigation-item>\n\n      <div class=\"selected-indicator\"\n          [style.opacity]=\"indicatorVisible ? 1 : 0\"\n          [style.margin-left.px]=\"indicatorX\"\n          [style.width.px]=\"indicatorWidth\">\n      </div>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: ResizeService, },\n{type: PageHeaderService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'menuItems': [{ type: ViewChildren, args: [PageHeaderNavigationItemComponent, ] },],\n};\n}\n\nfunction PageHeaderNavigationComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nPageHeaderNavigationComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPageHeaderNavigationComponent.ctorParameters;\n/** @type {?} */\nPageHeaderNavigationComponent.propDecorators;\n/** @type {?} */\nPageHeaderNavigationComponent.prototype.menuItems;\n/** @type {?} */\nPageHeaderNavigationComponent.prototype.items$;\n/** @type {?} */\nPageHeaderNavigationComponent.prototype.indicatorVisible;\n/** @type {?} */\nPageHeaderNavigationComponent.prototype.indicatorX;\n/** @type {?} */\nPageHeaderNavigationComponent.prototype.indicatorWidth;\n/** @type {?} */\nPageHeaderNavigationComponent.prototype._subscription;\n/** @type {?} */\nPageHeaderNavigationComponent.prototype._pageHeaderService;\n}\n\n\nexport interface PageHeaderNavigationItem {\n    icon?: string;\n    title: string;\n    selected?: boolean;\n    select?: (item: PageHeaderNavigationItem) => void;\n    children?: PageHeaderNavigationDropdownItem[];\n    parent?: PageHeaderNavigation;\n}\n\nexport interface PageHeaderNavigationDropdownItem {\n    title: string;\n    selected?: boolean;    \n    select?: (item: PageHeaderNavigationDropdownItem) => void;\n    children?: PageHeaderNavigationDropdownItem[];\n    parent?: PageHeaderNavigation;\n}\n\n// This is an alias for MF use as \"DropdownItem\" doesn't make sense in context with how it is used\nexport interface PageHeaderSecondaryNavigationItem extends PageHeaderNavigationDropdownItem { }\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\n\nimport { PageHeaderComponent } from './page-header.component';\nimport { BreadcrumbsModule } from '../breadcrumbs/index';\nimport { PageHeaderIconMenuComponent } from './icon-menu/icon-menu.component';\nimport { PageHeaderNavigationComponent } from './navigation/navigation.component';\nimport { PageHeaderNavigationItemComponent } from './navigation/navigation-item/navigation-item.component';\nimport { PageHeaderNavigationDropdownItemComponent } from './navigation/navigation-dropdown-item/navigation-dropdown-item.component';\nimport { PageHeaderCustomMenuDirective } from './custom-menu/custom-menu.directive';\nimport { ResizeModule } from '../../directives/resize/index';\nimport { ColorServiceModule } from '../../services/color/index';\nexport class PageHeaderModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        BreadcrumbsModule,\n        ColorServiceModule,\n        ResizeModule,\n        BsDropdownModule.forRoot()\n    ],\n    exports: [ \n        PageHeaderComponent,\n        PageHeaderCustomMenuDirective \n    ],\n    declarations: [ \n        PageHeaderComponent,\n        PageHeaderIconMenuComponent,\n        PageHeaderCustomMenuDirective,\n        PageHeaderNavigationComponent,\n        PageHeaderNavigationItemComponent,\n        PageHeaderNavigationDropdownItemComponent\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction PageHeaderModule_tsickle_Closure_declarations() {\n/** @type {?} */\nPageHeaderModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPageHeaderModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, ChangeDetectionStrategy } from '@angular/core';\nexport class ProgressBarComponent {\n     value: number = 0;\n     max: number = 100;\n     indeterminate: boolean = false;\n     trackColor: string;\n     barColor: string;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-progress-bar',\n    template: `\n      <div *ngIf=\"!indeterminate\" class=\"progressbar-track\" [style.width.%]=\"(value / max) * 100\" [style.backgroundColor]=\"barColor\">\n          <ng-content></ng-content>\n      </div>\n      <div *ngIf=\"indeterminate\" class=\"progressbar-track indeterminate\" [style.backgroundColor]=\"barColor\">\n          <ng-content></ng-content>\n      </div>\n    `,\n    changeDetection: ChangeDetectionStrategy.OnPush\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'value': [{ type: Input },],\n'max': [{ type: Input },],\n'indeterminate': [{ type: Input },],\n'trackColor': [{ type: Input },],\n'barColor': [{ type: Input },],\n};\n}\n\nfunction ProgressBarComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nProgressBarComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nProgressBarComponent.ctorParameters;\n/** @type {?} */\nProgressBarComponent.propDecorators;\n/** @type {?} */\nProgressBarComponent.prototype.value;\n/** @type {?} */\nProgressBarComponent.prototype.max;\n/** @type {?} */\nProgressBarComponent.prototype.indeterminate;\n/** @type {?} */\nProgressBarComponent.prototype.trackColor;\n/** @type {?} */\nProgressBarComponent.prototype.barColor;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ProgressBarComponent } from './progress-bar.component';\nexport class ProgressBarModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule\n    ],\n    exports: [ProgressBarComponent],\n    declarations: [ProgressBarComponent]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ProgressBarModule_tsickle_Closure_declarations() {\n/** @type {?} */\nProgressBarModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nProgressBarModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, forwardRef, HostListener, Output, EventEmitter } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\nexport const /** @type {?} */ RADIOBUTTON_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => RadioButtonComponent),\n    multi: true\n};\nexport class RadioButtonComponent implements ControlValueAccessor {\n\n     id: string;\n     simplified: boolean = false;\n     disabled: boolean = false;\n     name: string = '';\n     clickable: boolean = true;\n     option: any;\n     valueChange: EventEmitter<any> = new EventEmitter<any>();\n/**\n * @return {?}\n */\nget value() {\n        return this._value;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset value(value: boolean) {\n        this._value = value;\n\n        // invoke change event\n        this.valueChange.emit(this._value);\n\n        // call callback\n        this.onChangeCallback(this._value);\n    }\nprivate _value: any = false;\n\n    onTouchedCallback: () => void = () => { };\n    onChangeCallback: (_: any) => void = () => { };\n/**\n * @return {?}\n */\ncheckItem() {\n\n        if (this.disabled === true || this.clickable === false) {\n            return;\n        }\n\n        // toggle the checked state\n        this.value = this.option;\n\n        // call callback\n        this.onChangeCallback(this.value);\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nkeyDown(event: KeyboardEvent) {\n\n        // then toggle the checkbox\n        this.checkItem();\n\n        // prevent default browser behavior\n        event.stopPropagation();\n        event.preventDefault();\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nwriteValue(value: boolean) {\n        if (value !== this._value) {\n            this._value = value;\n        }\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnChange(fn: any) {\n        this.onChangeCallback = fn;\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnTouched(fn: any) {\n        this.onTouchedCallback = fn;\n    }\n/**\n * @param {?} isDisabled\n * @return {?}\n */\nsetDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-radio-button',\n    template: `\n      <div class=\"ux-radio-button\" tabindex=\"0\"\n          [class.ux-checked]=\"value === option\"\n          [class.ux-simplified]=\"simplified === true\"\n          [class.ux-disabled]=\"disabled === true\"\n          (keydown.space)=\"keyDown($event)\">\n\n          <input type=\"radio\" role=\"radio\" tabindex=\"-1\"\n              [name]=\"name\" \n              [checked]=\"value === option\" \n              [disabled]=\"disabled\"\n              [value]=\"option\"\n              [id]=\"id\" />\n        \n      </div>\n\n      <div class=\"ux-radio-button-content\">\n          <ng-content></ng-content>\n      </div>\n    `,\n    providers: [RADIOBUTTON_VALUE_ACCESSOR]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'id': [{ type: Input },],\n'simplified': [{ type: Input },],\n'disabled': [{ type: Input },],\n'name': [{ type: Input },],\n'clickable': [{ type: Input },],\n'option': [{ type: Input },],\n'valueChange': [{ type: Output },],\n'value': [{ type: Input },],\n'checkItem': [{ type: HostListener, args: ['click', ] },],\n};\n}\n\nfunction RadioButtonComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nRadioButtonComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nRadioButtonComponent.ctorParameters;\n/** @type {?} */\nRadioButtonComponent.propDecorators;\n/** @type {?} */\nRadioButtonComponent.prototype.id;\n/** @type {?} */\nRadioButtonComponent.prototype.simplified;\n/** @type {?} */\nRadioButtonComponent.prototype.disabled;\n/** @type {?} */\nRadioButtonComponent.prototype.name;\n/** @type {?} */\nRadioButtonComponent.prototype.clickable;\n/** @type {?} */\nRadioButtonComponent.prototype.option;\n/** @type {?} */\nRadioButtonComponent.prototype.valueChange;\n/** @type {?} */\nRadioButtonComponent.prototype._value;\n/** @type {?} */\nRadioButtonComponent.prototype.onTouchedCallback;\n/** @type {?} */\nRadioButtonComponent.prototype.onChangeCallback;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport {FormsModule} from '@angular/forms';\n\nimport { RadioButtonComponent } from './radiobutton.component';\nexport class RadioButtonModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [FormsModule],\n    exports: [RadioButtonComponent],\n    declarations: [RadioButtonComponent]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction RadioButtonModule_tsickle_Closure_declarations() {\n/** @type {?} */\nRadioButtonModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nRadioButtonModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { SearchBuilderQuery } from './interfaces/query.interface';\nimport { SearchBuilderGroupQuery } from './interfaces/group-query.interface';\nimport { SearchBuilderComponentDefinition } from './interfaces/component-definition.interface';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nexport class SearchBuilderService {\n\n  query: SearchBuilderQuery = {};\n  queryChange: Subject<SearchBuilderQuery> = new Subject<SearchBuilderQuery>();\n  validationChange: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(true);\nprivate _componentId: number = 0;\nprivate _components: SearchBuilderComponentDefinition[] = [];\nprivate _validation: { [key: number]: boolean } = {};\n/**\n * Add a component to the internal list of components\n * @param {?} component\n * @return {?}\n */\nregisterComponent(component: SearchBuilderComponentDefinition): void {\n\n    // ensure there are no components with a matching name\n    if (this._components.find(cmp => cmp.name === component.name)) {\n      throw new Error(`Search builder components must have a unique name. The name ${component.name} has already been used.`);\n    }\n\n    // if unique then add the component to the list\n    this._components.push(component);\n  }\n/**\n * Bulk registration of components\n * (Just a helper method)\n * @param {?} components\n * @return {?}\n */\nregisterComponents(components: SearchBuilderComponentDefinition[]): void {\n    components.forEach(component => this.registerComponent(component));\n  }\n/**\n * Get a registered component class\n * @param {?} name\n * @return {?}\n */\ngetComponent(name: string): any {\n\n    // find the component\n    const /** @type {?} */ component = this._components.find(cmp => cmp.name === name);\n\n    // if there is no match throw an exception\n    if (!component) {\n      throw new Error(`No search build component with the name ${name} exists`);\n    }\n\n    // ensure config is defined - at least to an empty object\n    component.config = component.config || {};\n\n    return component;\n  }\n/**\n * Update the internal search query state\n * note that the query will be immutable\n * @param {?} query\n * @return {?}\n */\nsetQuery(query: SearchBuilderQuery): void {\n    this.query = Object.assign({}, query);\n  }\n/**\n * Return the current query state\n * @return {?}\n */\ngetQuery(): SearchBuilderQuery {\n    return this.query;\n  }\n/**\n * Trigger the observable to indicate the query has been updated\n * @return {?}\n */\nqueryHasChanged(): void {\n    this.queryChange.next(this.query);\n  }\n/**\n * Store the validation state of the query\n * @param {?} id\n * @param {?} valid\n * @return {?}\n */\nsetValid(id: number, valid: boolean): void {\n\n    // store the state for this specific component\n    this._validation[id] = valid;\n\n    // evaluate the entire validation state\n    this.validationChange.next(!Object.keys(this._validation).some(key => !this._validation[key]));\n  }\n/**\n * Generate a unique id for each component\n * @return {?}\n */\ngenerateComponentId(): number {\n    return this._componentId++;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SearchBuilderService_tsickle_Closure_declarations() {\n/** @type {?} */\nSearchBuilderService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSearchBuilderService.ctorParameters;\n/** @type {?} */\nSearchBuilderService.prototype.query;\n/** @type {?} */\nSearchBuilderService.prototype.queryChange;\n/** @type {?} */\nSearchBuilderService.prototype.validationChange;\n/** @type {?} */\nSearchBuilderService.prototype._componentId;\n/** @type {?} */\nSearchBuilderService.prototype._components;\n/** @type {?} */\nSearchBuilderService.prototype._validation;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport { SearchBuilderService } from '../search-builder.service';\nimport { SearchBuilderGroupQuery } from '../interfaces/group-query.interface';\nimport { SearchBuilderQuery } from '../interfaces/query.interface';\nexport class SearchBuilderGroupService {\nprivate _id: string;\n/**\n * @param {?} _searchBuilderService\n */\nconstructor(private _searchBuilderService: SearchBuilderService) { }\n/**\n * Initialise the group by defining an id\n * @param {?} id\n * @return {?}\n */\ninit(id: string): void {\n    // store the name of the group\n    this._id = id;\n\n    // create the entry in the query object if it doesn't exist\n    if (!this._searchBuilderService.query[this._id]) {\n\n      // create the section\n      this._searchBuilderService.query[this._id] = [];\n\n      // emit the changes after the initial setup\n      setTimeout(() => this._searchBuilderService.queryHasChanged());\n    }\n  }\n/**\n * Remove a field from the search builder query\n * @param {?} field\n * @return {?}\n */\nremove(field: SearchBuilderGroupQuery): void {\n    // get the query for this group\n    const /** @type {?} */ query = this.getQuery();\n\n    // remove the field from the array\n    query.splice(query.indexOf(field), 1);\n  }\n/**\n * Get the query for this specific search group\n * @return {?}\n */\ngetQuery(): SearchBuilderGroupQuery[] {\n    return this._searchBuilderService.query[this._id] ? this._searchBuilderService.query[this._id] : [];\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: SearchBuilderService, },\n];\n}\n\nfunction SearchBuilderGroupService_tsickle_Closure_declarations() {\n/** @type {?} */\nSearchBuilderGroupService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSearchBuilderGroupService.ctorParameters;\n/** @type {?} */\nSearchBuilderGroupService.prototype._id;\n/** @type {?} */\nSearchBuilderGroupService.prototype._searchBuilderService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, OnInit, Input, Output, EventEmitter, TemplateRef } from '@angular/core';\nimport { SearchBuilderGroupService } from './search-builder-group.service';\nimport { SearchBuilderService } from '../search-builder.service';\nimport { SearchBuilderGroupQuery } from '../interfaces/group-query.interface';\nexport class SearchBuilderGroupComponent implements OnInit {\n\n   id: string;\n   header: string;\n   operator: SearchBuilderGroupOperator = 'and';\n   addText: string = 'Add a field';\n   placeholder: TemplateRef<any>;\n   showPlaceholder: boolean = false;\n\n   add: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\n   remove: EventEmitter<SearchBuilderGroupQuery> = new EventEmitter<SearchBuilderGroupQuery>();\n/**\n * @param {?} searchBuilderGroupService\n * @param {?} _searchBuilderService\n */\nconstructor(public searchBuilderGroupService: SearchBuilderGroupService,\nprivate _searchBuilderService: SearchBuilderService) { }\n/**\n * @return {?}\n */\nngOnInit(): void {\n\n    // ensure we have a name otherwise throw an error\n    if (!this.id) {\n      throw new Error('Search builder group must have a name attribute.');\n    }\n\n    // otherwise register the group\n    this.searchBuilderGroupService.init(this.id);\n  }\n/**\n * @param {?} field\n * @return {?}\n */\nremoveField(field: SearchBuilderGroupQuery): void {\n    this.searchBuilderGroupService.remove(field);\n    this.remove.emit(field);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ux-search-builder-group',\n  template: `\n    <h4 class=\"search-group-title\">{{ header }}</h4>\n\n    <main class=\"search-group-content\">\n\n      <section class=\"search-group-operator search-group-operator-{{ operator }}\" [class.hidden-operator]=\"searchBuilderGroupService.getQuery().length < 2\">{{ operator }}</section>\n\n      <section class=\"search-group-items\">\n\n        <div class=\"search-group-item-container\" *ngFor=\"let field of searchBuilderGroupService.getQuery()\">\n\n          <div class=\"search-group-item\">\n            <ng-container *uxSearchBuilderOutlet=\"field.type; context: field\"></ng-container>\n          </div>\n\n          <div class=\"search-group-item-remove\" (click)=\"removeField(field)\">\n            <span class=\"hpe-icon hpe-close\"></span>\n          </div>\n        </div>\n\n        <!-- Placeholder Item -->\n        <ng-container *ngIf=\"showPlaceholder\">\n\n          <!-- The Default Placeholder -->\n          <div class=\"search-group-item-container placeholder-item\" *ngIf=\"!placeholder\">\n        \n            <div class=\"search-group-item\">\n              <label class=\"form-label\">New field</label>\n              <div class=\"form-control\"></div>\n            </div>\n  \n          </div>\n\n          <!-- Allow a custom placeholder -->\n        <ng-container *ngTemplateOutlet=\"placeholder\"></ng-container>\n\n        </ng-container>\n\n      </section>\n\n      <section class=\"search-builder-group-add-field\" (click)=\"add.emit($event)\">\n\n        <button type=\"button\" class=\"btn btn-icon btn-circular button-accent\" aria-label=\"Add Field\">\n          <span class=\"hpe-icon hpe-add\" aria-hidden=\"true\"></span>\n        </button>\n\n        <span class=\"search-builder-group-add-field-label\">{{ addText }}</span>\n\n      </section>\n\n    </main>\n\n    <hr class=\"search-builder-group-divider\">\n  `,\n  providers: [SearchBuilderGroupService]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: SearchBuilderGroupService, },\n{type: SearchBuilderService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'id': [{ type: Input },],\n'header': [{ type: Input },],\n'operator': [{ type: Input },],\n'addText': [{ type: Input },],\n'placeholder': [{ type: Input },],\n'showPlaceholder': [{ type: Input },],\n'add': [{ type: Output },],\n'remove': [{ type: Output },],\n};\n}\n\nfunction SearchBuilderGroupComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nSearchBuilderGroupComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSearchBuilderGroupComponent.ctorParameters;\n/** @type {?} */\nSearchBuilderGroupComponent.propDecorators;\n/** @type {?} */\nSearchBuilderGroupComponent.prototype.id;\n/** @type {?} */\nSearchBuilderGroupComponent.prototype.header;\n/** @type {?} */\nSearchBuilderGroupComponent.prototype.operator;\n/** @type {?} */\nSearchBuilderGroupComponent.prototype.addText;\n/** @type {?} */\nSearchBuilderGroupComponent.prototype.placeholder;\n/** @type {?} */\nSearchBuilderGroupComponent.prototype.showPlaceholder;\n/** @type {?} */\nSearchBuilderGroupComponent.prototype.add;\n/** @type {?} */\nSearchBuilderGroupComponent.prototype.remove;\n/** @type {?} */\nSearchBuilderGroupComponent.prototype.searchBuilderGroupService;\n/** @type {?} */\nSearchBuilderGroupComponent.prototype._searchBuilderService;\n}\n\n\nexport type SearchBuilderGroupOperator = 'and' | 'or' | 'not';\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, OnInit, Type, Input, ComponentRef, ComponentFactoryResolver, ViewContainerRef } from '@angular/core';\nimport { SearchBuilderService } from '../search-builder.service';\nexport class SearchBuilderOutletDirective implements OnInit {\n\n     uxSearchBuilderOutlet: string;\n     uxSearchBuilderOutletContext: any;\nprivate _componentRef: ComponentRef<any>;\n/**\n * @param {?} _viewContainerRef\n * @param {?} _componentFactoryResolver\n * @param {?} _searchBuilderService\n */\nconstructor(\nprivate _viewContainerRef: ViewContainerRef,\nprivate _componentFactoryResolver: ComponentFactoryResolver,\nprivate _searchBuilderService: SearchBuilderService\n    ) { }\n/**\n * @return {?}\n */\nngOnInit(): void {\n\n        // get the class from the type\n        const /** @type {?} */ componentDefinition = this._searchBuilderService.getComponent(this.uxSearchBuilderOutlet);\n\n        // create the component factory\n        const /** @type {?} */ componentFactory = this._componentFactoryResolver.resolveComponentFactory(componentDefinition.component);\n\n        // create the component instance\n        this._componentRef = this._viewContainerRef.createComponent(componentFactory);\n\n        // combine the predefined config with any dynmaic config\n        const /** @type {?} */ config = Object.assign({}, componentDefinition.config, this.uxSearchBuilderOutletContext.config || {});\n\n        // set the context and config property on the component instance\n        this._componentRef.instance.context = this.uxSearchBuilderOutletContext;\n        this._componentRef.instance.config = config;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxSearchBuilderOutlet]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n{type: ComponentFactoryResolver, },\n{type: SearchBuilderService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'uxSearchBuilderOutlet': [{ type: Input },],\n'uxSearchBuilderOutletContext': [{ type: Input },],\n};\n}\n\nfunction SearchBuilderOutletDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nSearchBuilderOutletDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSearchBuilderOutletDirective.ctorParameters;\n/** @type {?} */\nSearchBuilderOutletDirective.propDecorators;\n/** @type {?} */\nSearchBuilderOutletDirective.prototype.uxSearchBuilderOutlet;\n/** @type {?} */\nSearchBuilderOutletDirective.prototype.uxSearchBuilderOutletContext;\n/** @type {?} */\nSearchBuilderOutletDirective.prototype._componentRef;\n/** @type {?} */\nSearchBuilderOutletDirective.prototype._viewContainerRef;\n/** @type {?} */\nSearchBuilderOutletDirective.prototype._componentFactoryResolver;\n/** @type {?} */\nSearchBuilderOutletDirective.prototype._searchBuilderService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, OnDestroy } from '@angular/core';\nimport { SearchBuilderService } from '../search-builder.service';\nimport { SearchBuilderGroupQuery } from '../interfaces/group-query.interface';\nimport { SearchBuilderGroupService } from '../search-builder-group/search-builder-group.service';\nimport { SearchBuilderComponentContext } from '../interfaces/component-context.interface';\nexport class BaseSearchComponent implements OnDestroy {\n\n    type: string;\n    config: any;\n    context: SearchBuilderComponentContext;\nprivate _id: number = this._searchBuilderService.generateComponentId();\nprivate _valid: boolean = true;\n/**\n * Get the current value of the component\n * @return {?}\n */\nget value() {\n        return this.context.value;\n    }\n/**\n * Set the current value of the component\n * @param {?} value\n * @return {?}\n */\nset value(value: any) {\n        this.context.value = value;\n        this._searchBuilderService.queryHasChanged();\n\n        // if value has been set perform validation\n        this.validate();\n    }\n/**\n * @return {?}\n */\nget valid(): boolean {\n        return this._valid;\n    }\n/**\n * @param {?} valid\n * @return {?}\n */\nset valid(valid: boolean) {\n        this._valid = valid;\n        this._searchBuilderService.setValid(this._id, valid);\n    }\n/**\n * @param {?} _searchBuilderService\n * @param {?} _searchBuilderGroupService\n */\nconstructor(\nprivate _searchBuilderService: SearchBuilderService,\nprivate _searchBuilderGroupService: SearchBuilderGroupService\n    ) { }\n/**\n * Make sure we clean up after ourselves\n * @return {?}\n */\nngOnDestroy(): void {\n        this.valid = true;\n    }\n/**\n * Perform any required validation on the value\n * @return {?}\n */\nvalidate(): void {\n        // if a custom validation function has been provided then use it\n        this.valid = this.config.validation ? this.config.validation(this, this.value) : true;\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-base-search',\n    template: ''\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: SearchBuilderService, },\n{type: SearchBuilderGroupService, },\n];\n}\n\nfunction BaseSearchComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nBaseSearchComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nBaseSearchComponent.ctorParameters;\n/** @type {?} */\nBaseSearchComponent.prototype.type;\n/** @type {?} */\nBaseSearchComponent.prototype.config;\n/** @type {?} */\nBaseSearchComponent.prototype.context;\n/** @type {?} */\nBaseSearchComponent.prototype._id;\n/** @type {?} */\nBaseSearchComponent.prototype._valid;\n/** @type {?} */\nBaseSearchComponent.prototype._searchBuilderService;\n/** @type {?} */\nBaseSearchComponent.prototype._searchBuilderGroupService;\n}\n\n\nexport interface BaseSearchComponentConfig {\n    label?: string;\n    placeholder?: string;\n    validation?: (value: any) => boolean;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, OnInit } from '@angular/core';\nimport { BaseSearchComponent, BaseSearchComponentConfig } from '../base-search.component';\nexport class SearchTextComponent extends BaseSearchComponent {\n\n  type: string = 'text';\n/**\n * @return {?}\n */\nget label(): string {\n    return this.config.label;\n  }\n/**\n * @return {?}\n */\nget placeholder(): string {\n    return this.config.placeholder || 'Enter text';\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ux-search-text',\n  template: `\n    <label class=\"form-label\" *ngIf=\"label\">{{ label }}</label>\n    <input [placeholder]=\"placeholder\" [(ngModel)]=\"value\" class=\"form-control\">\n  `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SearchTextComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nSearchTextComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSearchTextComponent.ctorParameters;\n/** @type {?} */\nSearchTextComponent.prototype.type;\n}\n\n\nexport interface SearchTextConfig extends BaseSearchComponentConfig { }\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, OnInit } from '@angular/core';\nimport { BaseSearchComponent, BaseSearchComponentConfig } from '../base-search.component';\nimport { DateTimePickerTimezone } from '../../../date-time-picker/index';\nexport class SearchDateComponent extends BaseSearchComponent implements OnInit {\n\n  type: string = 'date';\n/**\n * @return {?}\n */\nget label(): string {\n    return this.config.label;\n  }\n/**\n * @return {?}\n */\nget placeholder(): string {\n    return this.config.placeholder || 'Enter date';\n  }\n/**\n * @return {?}\n */\nngOnInit(): void {\n\n    // by default set to the current date if not specified\n    if (!this.value) {\n      this.value = new Date();\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ux-search-date',\n  template: `\n    <label class=\"form-label\" *ngIf=\"label\">{{ label }}</label>\n\n    <div class=\"input-group date m-nil\">\n        <span class=\"input-group-addon\" tabindex=\"1\" (click)=\"popover.show()\">\n            <i class=\"hpe-icon hpe-calendar\" aria-hidden=\"true\"></i>\n        </span>\n        <input type=\"text\" #popover=\"bs-popover\" [ngModel]=\"value | date:'dd MMMM yyyy'\" [popover]=\"popoverTemplate\"\n            placement=\"bottom\" [outsideClick]=\"true\" containerClass=\"date-time-picker-popover\" class=\"form-control\" aria-label=\"Selected date\" [placeholder]=\"placeholder\">\n    </div>\n\n    <ng-template #popoverTemplate>\n        <ux-date-time-picker [(date)]=\"value\" [showTime]=\"false\"></ux-date-time-picker>\n    </ng-template>\n  `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SearchDateComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nSearchDateComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSearchDateComponent.ctorParameters;\n/** @type {?} */\nSearchDateComponent.prototype.type;\n}\n\n\nexport interface SearchDateConfig extends BaseSearchComponentConfig { }\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component } from '@angular/core';\nimport { BaseSearchComponent } from '../base-search.component';\nimport { DateTimePickerTimezone } from '../../../date-time-picker/index';\nexport class SearchDateRangeComponent extends BaseSearchComponent {\n\n    type: string = 'date-range';\n/**\n * @return {?}\n */\nget label(): string {\n        return this.config.label;\n    }\n/**\n * @return {?}\n */\nget from() {\n\n        // if value does not exist the set it\n        if (!this.value || !this.value.from) {\n            this.from = new Date();\n        }\n\n        // ensure that the from value is a date object\n        if (this.value.from instanceof Date === false) {\n            this.value.from = new Date(this.value.from);\n        }\n\n        return this.value.from;\n    }\n/**\n * @param {?} fromValue\n * @return {?}\n */\nset from(fromValue: any) {\n\n        // create new object based on the current value\n        const /** @type {?} */ value = Object.assign({}, this.value);\n\n        // ensure that the from value is a date\n        if (fromValue instanceof Date === false) {\n            fromValue = new Date(fromValue);\n        }\n\n        // set the latest value\n        value.from = fromValue;\n\n        // update the value object while ensuring immutability\n        this.value = value;\n    }\n/**\n * @return {?}\n */\nget to() {\n\n        // if value does not exist the set it\n        if (!this.value || !this.value.to) {\n            this.to = new Date();\n        }\n\n        // ensure that the to value is a date object\n        if (this.value.to instanceof Date === false) {\n            this.value.to = new Date(this.value.to);\n        }\n\n        return this.value.to;\n    }\n/**\n * @param {?} toValue\n * @return {?}\n */\nset to(toValue: any) {\n\n        // create new object based on the current value\n        const /** @type {?} */ value = Object.assign({}, this.value);\n\n        // ensure that the to value is a date\n        if (toValue instanceof Date === false) {\n            toValue = new Date(toValue);\n        }\n\n        // set the latest value\n        value.to = toValue;\n\n        // update the value object while ensuring immutability\n        this.value = value;\n    }\n/**\n * @return {?}\n */\nget fromLabel(): string {\n        return this.config.fromLabel || 'From';\n    }\n/**\n * @return {?}\n */\nget toLabel(): string {\n        return this.config.toLabel || 'To';\n    }\n/**\n * @return {?}\n */\nget fromPlaceholder(): string {\n        return this.config.fromPlaceholder;\n    }\n/**\n * @return {?}\n */\nget toPlaceholder(): string {\n        return this.config.toPlaceholder;\n    }\n/**\n * Override the default validation\n * @return {?}\n */\nvalidate(): void {\n\n        // check if there is a config validation function\n        if (this.config.validation) {\n            return super.validate();\n        }\n\n        // create copies of the dates so we can modify time value (to ignore it)\n        const /** @type {?} */ from = new Date(this.value.from);\n        const /** @type {?} */ to = new Date(this.value.to);\n\n        // set the time to the same so we dont compare it\n        from.setHours(0, 0, 0, 0);\n        to.setHours(0, 0, 0, 0);\n\n        // valid if the from date is less than or equal to the to date\n        this.valid = from <= to;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-search-date-range',\n    template: `\n      <label class=\"form-label\" *ngIf=\"label\">{{ label }}</label>\n\n      <div class=\"row\">\n          <div class=\"col-sm-12\">\n              <div class=\"form-inline\" [class.has-error]=\"!valid\">\n\n                  <div class=\"form-group p-r-md\">\n                      <label class=\"form-label m-r-xs\">{{ fromLabel }}</label>\n\n                      <div class=\"input-group date m-nil\">\n                          <span class=\"input-group-addon p-r-xs\" tabindex=\"1\" (click)=\"fromPopover.show()\">\n                              <i class=\"hpe-icon hpe-calendar\" aria-hidden=\"true\"></i>\n                          </span>\n                          <input type=\"text\" #fromPopover=\"bs-popover\" [ngModel]=\"from | date:'dd MMMM yyyy'\" [popover]=\"fromPopoverTemplate\" placement=\"bottom\"\n                              [outsideClick]=\"true\" containerClass=\"date-time-picker-popover\" class=\"form-control\" aria-label=\"Selected date\" [placeholder]=\"fromPlaceholder\">\n                      </div>\n                  </div>\n\n                  <div class=\"form-group p-r-xs\">\n                      <label class=\"form-label m-r-xs\">{{ toLabel }}</label>\n\n                      <div class=\"input-group date m-nil\">\n                          <span class=\"input-group-addon\" tabindex=\"1\" (click)=\"toPopover.show()\">\n                              <i class=\"hpe-icon hpe-calendar\" aria-hidden=\"true\"></i>\n                          </span>\n                          <input type=\"text\" #toPopover=\"bs-popover\" [ngModel]=\"to | date:'dd MMMM yyyy'\" [popover]=\"toPopoverTemplate\" placement=\"bottom\"\n                              [outsideClick]=\"true\" containerClass=\"date-time-picker-popover\" class=\"form-control\" aria-label=\"Selected date\" [placeholder]=\"toPlaceholder\">\n                      </div>\n                  </div>\n\n              </div>\n          </div>\n      </div>\n\n      <ng-template #fromPopoverTemplate>\n          <ux-date-time-picker [(date)]=\"from\" [showTime]=\"false\"></ux-date-time-picker>\n      </ng-template>\n\n      <ng-template #toPopoverTemplate>\n          <ux-date-time-picker [(date)]=\"to\" [showTime]=\"false\"></ux-date-time-picker>\n      </ng-template>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SearchDateRangeComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nSearchDateRangeComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSearchDateRangeComponent.ctorParameters;\n/** @type {?} */\nSearchDateRangeComponent.prototype.type;\n}\n\n\nexport interface SearchDateRangeConfig {\n    label?: string;\n    fromLabel?: string;\n    toLabel?: string;\n    fromPlaceholder?: string;\n    toPlaceholder?: string;\n    validation: (value: any) => boolean;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component } from '@angular/core';\nimport { BaseSearchComponent, BaseSearchComponentConfig } from '../base-search.component';\nimport { InfiniteScrollLoadFunction } from '../../../../index';\nexport class SearchSelectComponent extends BaseSearchComponent {\n\n  type: string = 'select';\n/**\n * Provide defaults for undefined properties\n * @return {?}\n */\nget label(): string {\n    return this.config.label;\n  }\n/**\n * @return {?}\n */\nget options() {\n    return this.config.options || [];\n  }\n/**\n * @return {?}\n */\nget multiple(): boolean {\n    return this.config.multiple || false;\n  }\n/**\n * @return {?}\n */\nget placeholder(): string {\n    return this.config.placeholder || 'Select item';\n  }\n/**\n * @return {?}\n */\nget dropDirection(): string {\n    return this.config.dropDirection || 'down';\n  }\n/**\n * @return {?}\n */\nget allowNull(): boolean {\n    return this.config.allowNull || false;\n  }\n/**\n * @return {?}\n */\nget disabled(): boolean {\n    return this.config.disabled || false;\n  }\n/**\n * @return {?}\n */\nget maxHeight(): string {\n    return this.config.maxHeight || '250px';\n  }\n/**\n * @return {?}\n */\nget pageSize(): number {\n    return this.config.pageSize || 20;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ux-search-select',\n  template: `\n    <label class=\"form-label\" *ngIf=\"label\">{{ label }}</label>\n\n    <ux-select [(value)]=\"value\" \n               [options]=\"options\" \n               [multiple]=\"multiple\" \n               [placeholder]=\"placeholder\" \n               [dropDirection]=\"dropDirection\"\n               [pageSize]=\"pageSize\"\n               [allowNull]=\"allowNull\"\n               [disabled]=\"disabled\"\n               [maxHeight]=\"maxHeight\"\n               [key]=\"config.key\"\n               [display]=\"config.display\"\n               [loadingTemplate]=\"config.loadingTemplate\"\n               [optionTemplate]=\"config.optionTemplate\"\n               [noOptionsTemplate]=\"config.noOptionsTemplate\">\n    </ux-select>\n  `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SearchSelectComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nSearchSelectComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSearchSelectComponent.ctorParameters;\n/** @type {?} */\nSearchSelectComponent.prototype.type;\n}\n\n\nexport interface SearchSelectConfig extends BaseSearchComponentConfig {\n  options?: any[] | InfiniteScrollLoadFunction;\n  multiple?: boolean;\n  dropDirection?: 'up' | 'down';\n  allowNull?: boolean;\n  disabled?: boolean;\n  maxHeight?: string;\n  pageSize?: number;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, EventEmitter, Output, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\nimport { SearchBuilderService } from './search-builder.service';\nimport { SearchBuilderQuery } from './interfaces/query.interface';\nimport { SearchBuilderComponentDefinition } from './interfaces/component-definition.interface';\nimport { SearchTextComponent } from './search-components/text/text.component';\nimport { SearchDateComponent } from './search-components/date/date.component';\nimport { SearchDateRangeComponent } from './search-components/date-range/date-range.component';\nimport { SearchSelectComponent } from './search-components/select/select.component';\nimport'rxjs/add/operator/distinctUntilChanged';\nexport class SearchBuilderComponent implements OnDestroy {\n/**\n * @param {?} components\n * @return {?}\n */\nset components(components: SearchBuilderComponentDefinition[]) {\n    this._searchBuilderService.registerComponents(components);\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nset query(value: SearchBuilderQuery) {\n    this._searchBuilderService.setQuery(value);\n  }\n/**\n * @return {?}\n */\nget query() {\n    return this._searchBuilderService.getQuery();\n  }\n\n   queryChange: EventEmitter<SearchBuilderQuery> = new EventEmitter<SearchBuilderQuery>();\n   valid: EventEmitter<boolean> = new EventEmitter<boolean>(true);\nprivate _querySubscription: Subscription;\nprivate _validSubscription: Subscription;\n/**\n * Register the default search builder components\n * @param {?} _searchBuilderService\n */\nconstructor(private _searchBuilderService: SearchBuilderService) {\n\n    // watch for any query changes\n    this._querySubscription = _searchBuilderService.queryChange.subscribe(query => this.queryChange.emit(query));\n\n    // watch for any changes to the validation\n    this._validSubscription = _searchBuilderService.validationChange.distinctUntilChanged().subscribe(valid => this.valid.emit(valid));\n  }\n/**\n * Remove any subscriptions and cleanup\n * @return {?}\n */\nngOnDestroy(): void {\n    this._querySubscription.unsubscribe();\n    this._validSubscription.unsubscribe();\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ux-search-builder',\n  template: `\n    <ng-content></ng-content>\n  `,\n  providers: [SearchBuilderService]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: SearchBuilderService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'components': [{ type: Input },],\n'query': [{ type: Input },],\n'queryChange': [{ type: Output },],\n'valid': [{ type: Output },],\n};\n}\n\nfunction SearchBuilderComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nSearchBuilderComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSearchBuilderComponent.ctorParameters;\n/** @type {?} */\nSearchBuilderComponent.propDecorators;\n/** @type {?} */\nSearchBuilderComponent.prototype.queryChange;\n/** @type {?} */\nSearchBuilderComponent.prototype.valid;\n/** @type {?} */\nSearchBuilderComponent.prototype._querySubscription;\n/** @type {?} */\nSearchBuilderComponent.prototype._validSubscription;\n/** @type {?} */\nSearchBuilderComponent.prototype._searchBuilderService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\n\n/**\n * Configuration service for the Popover directive.\n * You can inject this service, typically in your root component, and customize\n * the values of its properties in order to provide default values for all the\n * popovers used in the application.\n */\n\nexport class PopoverConfig {\n  /**\n   * Placement of a popover. Accepts: \"top\", \"bottom\", \"left\", \"right\", \"auto\"\n   */\n  placement = 'top';\n  /**\n   * Specifies events that should trigger. Supports a space separated list of\n   * event names.\n   */\n  triggers = 'click';\n\n  outsideClick = false;\n  /**\n   * A selector specifying the element the popover should be appended to.\n   * Currently only supports \"body\".\n   */\n  container: string;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { ChangeDetectionStrategy, Input, Component } from '@angular/core';\nimport { PopoverConfig } from './popover.config';\nimport { isBs3 } from '../utils/theme-provider';\n\n\nexport class PopoverContainerComponent {\n   placement: string;\n   title: string;\n  containerClass: string;\n\n  get isBs3(): boolean {\n    return isBs3();\n  }\n\n  constructor(config: PopoverConfig) {\n    Object.assign(this, config);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'popover-container',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  // tslint:disable-next-line\n  host: {\n    '[class]':\n      '\"popover in popover-\" + placement + \" \" + \"bs-popover-\" + placement + \" \" + placement + \" \" + containerClass',\n    '[class.show]': '!isBs3',\n    role: 'tooltip',\n    style: 'display:block;'\n  },\n  styles: [\n    `\n    :host.bs-popover-top .arrow, :host.bs-popover-bottom .arrow {\n      left: 50%;\n    }\n    :host.bs-popover-left .arrow, :host.bs-popover-right .arrow {\n      top: 50%;\n    }\n  `\n  ],\n  template: \"<div class=\\\"popover-arrow arrow\\\"></div> <h3 class=\\\"popover-title popover-header\\\" *ngIf=\\\"title\\\">{{ title }}</h3> <div class=\\\"popover-content popover-body\\\"> <ng-content></ng-content> </div> \"\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: PopoverConfig, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'placement': [{ type: Input },],\n'title': [{ type: Input },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {\n  Directive, ElementRef, EventEmitter, Input, OnDestroy, OnInit, Output,\n  Renderer2, TemplateRef, ViewContainerRef\n} from '@angular/core';\nimport { PopoverConfig } from './popover.config';\nimport { ComponentLoader, ComponentLoaderFactory } from '../component-loader/index';\nimport { PopoverContainerComponent } from './popover-container.component';\n\n/**\n * A lightweight, extensible directive for fancy popover creation.\n */\n\nexport class PopoverDirective implements OnInit, OnDestroy {\n  /**\n   * Content to be displayed as popover.\n   */\n   popover: string | TemplateRef<any>;\n  /**\n   * Context to be used if popover is a template.\n   */\n   popoverContext: any;\n  /**\n   * Title of a popover.\n   */\n   popoverTitle: string;\n  /**\n   * Placement of a popover. Accepts: \"top\", \"bottom\", \"left\", \"right\"\n   */\n   placement: 'top' | 'bottom' | 'left' | 'right' | 'auto';\n  /**\n   * Close popover on outside click\n   */\n   outsideClick = false;\n  /**\n   * Specifies events that should trigger. Supports a space separated list of\n   * event names.\n   */\n   triggers: string;\n  /**\n   * A selector specifying the element the popover should be appended to.\n   * Currently only supports \"body\".\n   */\n   container: string;\n\n  /**\n   * Css class for popover container\n   */\n   containerClass = '';\n\n  /**\n   * Returns whether or not the popover is currently being shown\n   */\n  \n  get isOpen(): boolean {\n    return this._popover.isShown;\n  }\n\n  set isOpen(value: boolean) {\n    if (value) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n\n  /**\n   * Emits an event when the popover is shown\n   */\n   onShown: EventEmitter<any>;\n  /**\n   * Emits an event when the popover is hidden\n   */\n   onHidden: EventEmitter<any>;\n\n  private _popover: ComponentLoader<PopoverContainerComponent>;\n  private _isInited = false;\n\n  constructor(_elementRef: ElementRef,\n              _renderer: Renderer2,\n              _viewContainerRef: ViewContainerRef,\n              _config: PopoverConfig,\n              cis: ComponentLoaderFactory) {\n    this._popover = cis\n      .createLoader<PopoverContainerComponent>(\n        _elementRef,\n        _viewContainerRef,\n        _renderer\n      )\n      .provide({provide: PopoverConfig, useValue: _config});\n    Object.assign(this, _config);\n    this.onShown = this._popover.onShown;\n    this.onHidden = this._popover.onHidden;\n\n    // fix: no focus on button on Mac OS #1795\n    if (typeof window !== 'undefined') {\n      _elementRef.nativeElement.addEventListener('click', function () {\n        try {\n          _elementRef.nativeElement.focus();\n        } catch (err) {\n          return;\n        }\n      });\n    }\n  }\n\n  /**\n   * Opens an element’s popover. This is considered a “manual” triggering of\n   * the popover.\n   */\n  show(): void {\n    if (this._popover.isShown || !this.popover) {\n      return;\n    }\n\n    this._popover\n      .attach(PopoverContainerComponent)\n      .to(this.container)\n      .position({attachment: this.placement})\n      .show({\n        content: this.popover,\n        context: this.popoverContext,\n        placement: this.placement,\n        title: this.popoverTitle,\n        containerClass: this.containerClass\n      });\n    this.isOpen = true;\n  }\n\n  /**\n   * Closes an element’s popover. This is considered a “manual” triggering of\n   * the popover.\n   */\n  hide(): void {\n    if (this.isOpen) {\n      this._popover.hide();\n      this.isOpen = false;\n    }\n  }\n\n  /**\n   * Toggles an element’s popover. This is considered a “manual” triggering of\n   * the popover.\n   */\n  toggle(): void {\n    if (this.isOpen) {\n      return this.hide();\n    }\n\n    this.show();\n  }\n\n  ngOnInit(): any {\n    // fix: seems there are an issue with `routerLinkActive`\n    // which result in duplicated call ngOnInit without call to ngOnDestroy\n    // read more: https://github.com/valor-software/ngx-bootstrap/issues/1885\n    if (this._isInited) {\n      return;\n    }\n    this._isInited = true;\n\n    this._popover.listen({\n      triggers: this.triggers,\n      outsideClick: this.outsideClick,\n      show: () => this.show()\n    });\n  }\n\n  ngOnDestroy(): any {\n    this._popover.dispose();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: '[popover]', exportAs: 'bs-popover'}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer2, },\n{type: ViewContainerRef, },\n{type: PopoverConfig, },\n{type: ComponentLoaderFactory, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'popover': [{ type: Input },],\n'popoverContext': [{ type: Input },],\n'popoverTitle': [{ type: Input },],\n'placement': [{ type: Input },],\n'outsideClick': [{ type: Input },],\n'triggers': [{ type: Input },],\n'container': [{ type: Input },],\n'containerClass': [{ type: Input },],\n'isOpen': [{ type: Input },],\n'onShown': [{ type: Output },],\n'onHidden': [{ type: Output },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ComponentLoaderFactory } from '../component-loader/index';\nimport { PositioningService } from '../positioning/index';\nimport { PopoverConfig } from './popover.config';\nimport { PopoverDirective } from './popover.directive';\nimport { PopoverContainerComponent } from './popover-container.component';\n\n\nexport class PopoverModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: PopoverModule,\n      providers: [PopoverConfig, ComponentLoaderFactory, PositioningService]\n    };\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [CommonModule],\n  declarations: [PopoverDirective, PopoverContainerComponent],\n  exports: [PopoverDirective],\n  entryComponents: [PopoverContainerComponent]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\nexport class TypeaheadOptionEvent {\n/**\n * @param {?} option\n */\nconstructor(public option: any) {}\n}\n\nfunction TypeaheadOptionEvent_tsickle_Closure_declarations() {\n/** @type {?} */\nTypeaheadOptionEvent.prototype.option;\n}\n","import { TypeaheadComponent } from './index';\nimport { Injectable } from '@angular/core';\nexport class TypeaheadKeyService {\nconstructor() { }\n/**\n * @param {?} event\n * @param {?} typeahead\n * @return {?}\n */\nhandleKey(event: KeyboardEvent, typeahead: TypeaheadComponent) {\n        if (typeahead) {\n            switch (event.key) {\n                case 'ArrowUp':\n                case 'Up':\n                    if (!typeahead.open) {\n                        typeahead.open = true;\n                    } else {\n                        typeahead.moveHighlight(-1);\n                    }\n                    event.preventDefault();\n                    break;\n                case 'ArrowDown':\n                case 'Down':\n                    if (!typeahead.open) {\n                        typeahead.open = true;\n                    } else {\n                        typeahead.moveHighlight(1);\n                    }\n                    event.preventDefault();\n                    break;\n                case 'Escape':\n                case 'Esc':\n                    typeahead.open = false;\n                    break;\n            }\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction TypeaheadKeyService_tsickle_Closure_declarations() {\n/** @type {?} */\nTypeaheadKeyService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTypeaheadKeyService.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { InfiniteScrollLoadFunction } from '../../directives/infinite-scroll/index';\nimport { TypeaheadOptionEvent } from './typeahead-event';\nimport {\n    Component,\n    ElementRef,\n    EventEmitter,\n    Input,\n    OnChanges,\n    OnInit,\n    Output,\n    SimpleChanges,\n    TemplateRef,\n    ViewChild,\n    AfterViewInit,\n    ChangeDetectorRef\n} from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Observable } from 'rxjs/Observable';\nexport class TypeaheadComponent implements AfterViewInit, OnChanges {\n\n     options: any[] | InfiniteScrollLoadFunction;\n     filter: string;\nprivate _open: boolean = false;\n/**\n * @return {?}\n */\nget open() {\n        return this._open;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset open(value: boolean) {\n        const /** @type {?} */ originalValue = this._open;\n        this._open = value;\n        if (value !== originalValue) {\n            this.openChange.emit(value);\n            if (value) {\n                this.initOptions();\n            }\n        }\n    }\n\n     openChange = new EventEmitter<boolean>();\n\n     display: (option: any) => string | string;\n     key: (option: any) => string | string;\n     disabledOptions: any[];\n     dropDirection: 'up' | 'down' = 'down';\n     maxHeight: string = '250px';\n     openOnFilterChange: boolean = true;\n     pageSize: number = 20;\n     selectFirst: boolean = true;\n\n     loadingTemplate: TemplateRef<any>;\n     optionTemplate: TemplateRef<any>;\n     noOptionsTemplate: TemplateRef<any>;\n\n     optionSelected = new EventEmitter<TypeaheadOptionEvent>();\nprivate _highlighted = new BehaviorSubject<any>(null);\n/**\n * @return {?}\n */\nget highlighted(): any {\n        return this._highlighted.getValue();\n    }\nprivate _defaultLoadingTemplate: TemplateRef<any>;\nprivate _defaultOptionTemplate: TemplateRef<any>;\nprivate _defaultNoOptionsTemplate: TemplateRef<any>;\n\n    loadOptionsCallback: InfiniteScrollLoadFunction;\n    visibleOptions: any[] = [];\n    loading = false;\n\n    optionApi: TypeaheadOptionApi = {\n        getKey: this.getKey.bind(this),\n        getDisplay: this.getDisplay.bind(this),\n        getDisplayHtml: this.getDisplayHtml.bind(this)\n    };\n/**\n * @param {?} typeaheadElement\n * @param {?} cdRef\n */\nconstructor(public typeaheadElement: ElementRef,\nprivate cdRef: ChangeDetectorRef) {\n\n        this.loadOptionsCallback = (pageNum: number, pageSize: number, filter: any) => {\n            if (typeof this.options === 'function') {\n                return this.options(pageNum, pageSize, filter);\n            }\n            return null;\n        };\n    }\n/**\n * @return {?}\n */\nngAfterViewInit() {\n        // Attach default loading template\n        if (!this.loadingTemplate) {\n            this.loadingTemplate = this._defaultLoadingTemplate;\n        }\n\n        // Attach default option template\n        if (!this.optionTemplate) {\n            this.optionTemplate = this._defaultOptionTemplate;\n        }\n\n        // Attach default \"no results\" template\n        if (!this.noOptionsTemplate) {\n            this.noOptionsTemplate = this._defaultNoOptionsTemplate;\n        }\n\n        this.cdRef.detectChanges();\n    }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n        // Open the dropdown if the filter value updates\n        if (changes.filter) {\n            if (this.openOnFilterChange && changes.filter.currentValue && changes.filter.currentValue.length > 0) {\n                this.open = true;\n            }\n        }\n\n        // Re-filter visibleOptions\n        this.updateOptions();\n    }\n/**\n * @param {?} event\n * @return {?}\n */\noptionMousedownHandler(event: MouseEvent) {\n        // Workaround to prevent focus changing when an option is clicked\n        event.preventDefault();\n    }\n/**\n * @param {?} event\n * @param {?} option\n * @return {?}\n */\noptionClickHandler(event: MouseEvent, option: any) {\n        this.select(option);\n    }\n/**\n * Returns the unique key value of the given option.\n * @param {?} option\n * @return {?}\n */\ngetKey(option: any): string {\n        if (typeof this.key === 'function') {\n            return this.key(option);\n        }\n        if (typeof this.key === 'string' && option && option.hasOwnProperty(this.key)) {\n            return option[ /** @type {?} */((<string>this.key))];\n        }\n        return this.getDisplay(option);\n    }\n/**\n * Returns the display value of the given option.\n * @param {?} option\n * @return {?}\n */\ngetDisplay(option: any): string {\n        if (typeof this.display === 'function') {\n            return this.display(option);\n        }\n        if (typeof this.display === 'string' && option && option.hasOwnProperty(this.display)) {\n            return option[ /** @type {?} */((<string>this.display))];\n        }\n        return option;\n    }\n/**\n * Returns the display value of the given option with HTML markup added to highlight the part which matches the current filter value.\n * @param {?} option\n * @return {?}\n */\ngetDisplayHtml(option: any) {\n        let /** @type {?} */ displayText;\n        if (typeof option === 'string') {\n            displayText = this.getDisplay(option).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n        } else {\n            displayText = this.getDisplay(option.name).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n        }\n        let /** @type {?} */ displayHtml = displayText;\n        if (this.filter) {\n            const /** @type {?} */ length = this.filter.length;\n            const /** @type {?} */ matchIndex = displayText.toLowerCase().indexOf(this.filter.toLowerCase());\n            if (matchIndex >= 0) {\n                var /** @type {?} */ highlight = `<span class=\"ux-filter-match\">${displayText.substr(matchIndex, length)}</span>`;\n                displayHtml = displayText.substr(0, matchIndex) + highlight + displayText.substr(matchIndex + length);\n            }\n        }\n        return displayHtml;\n    }\n/**\n * Returns true if the infinite scroll component should load\n * @return {?}\n */\nisInfiniteScroll() {\n        return typeof this.options === 'function';\n    }\n/**\n * Selects the given option, emitting the optionSelected event and closing the dropdown.\n * @param {?} option\n * @return {?}\n */\nselect(option: any) {\n        if (!this.isDisabled(option)) {\n            this.optionSelected.emit(new TypeaheadOptionEvent(option));\n            this._highlighted.next(null);\n            this.open = false;\n        }\n    }\n/**\n * Returns true if the given option is part of the disabledOptions array.\n * @param {?} option\n * @return {?}\n */\nisDisabled(option: any): boolean {\n        if (this.disabledOptions) {\n            const /** @type {?} */ optionKey = this.getKey(option);\n            const /** @type {?} */ result = this.disabledOptions.find((selectedOption) => {\n                return this.getKey(selectedOption) === optionKey;\n            });\n            return result !== undefined;\n        }\n        return false;\n    }\n/**\n * Set the given option as the current highlighted option, available in the highlightedOption parameter.\n * @param {?} option\n * @return {?}\n */\nhighlight(option: any) {\n        if (!this.isDisabled(option)) {\n            this._highlighted.next(option);\n        }\n    }\n/**\n * Increment or decrement the highlighted option in the list. Disabled options are skipped.\n * @param {?} d Value to be added to the index of the highlighted option, i.e. -1 to move backwards, +1 to move forwards.\n * @return {?}\n */\nmoveHighlight(d: number): any {\n        const /** @type {?} */ highlightIndex = this.indexOfVisibleOption(this.highlighted);\n        let /** @type {?} */ newIndex = highlightIndex;\n        let /** @type {?} */ disabled = true;\n        let /** @type {?} */ inBounds = true;\n        do {\n            newIndex = newIndex + d;\n            inBounds = (newIndex >= 0 && newIndex < this.visibleOptions.length);\n            disabled = inBounds && this.isDisabled(this.visibleOptions[newIndex]);\n        }\n        while (inBounds && disabled);\n\n        if (!disabled && inBounds) {\n            this._highlighted.next(this.visibleOptions[newIndex]);\n        }\n\n        return this.highlighted;\n    }\n/**\n * Returns true if the given option is the highlighted option.\n * @param {?} option\n * @return {?}\n */\nisHighlighted(option: any): boolean {\n        return this.getKey(option) === this.getKey(this.highlighted);\n    }\n/**\n * Set up the options before the dropdown is displayed.\n * @return {?}\n */\ninitOptions() {\n        // Clear previous highlight\n        this._highlighted.next(null);\n        if (this.selectFirst) {\n            // This will highlight the first non-disabled option.\n            this.moveHighlight(1);\n        }\n    }\n/**\n * Update the visibleOptions array with the current filter.\n * @return {?}\n */\nupdateOptions() {\n        if (typeof this.options === 'object') {\n            const /** @type {?} */ normalisedInput = (this.filter || '').toLowerCase();\n            this.visibleOptions = this.options.filter((option) => {\n                return this.getDisplay(option).toLowerCase().indexOf(normalisedInput) >= 0;\n            });\n        }\n\n        this.initOptions();\n    }\n/**\n * Return the index of the given option in the visibleOptions array. Returns -1 if the option is not currently visible.\n * @param {?} option\n * @return {?}\n */\nprivate indexOfVisibleOption(option: any): number {\n        if (option) {\n            const /** @type {?} */ optionKey = this.getKey(option);\n            return this.visibleOptions.findIndex((el) => {\n                return this.getKey(el) === optionKey;\n            });\n        }\n\n        return -1;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-typeahead',\n    template: `\n      <div class=\"ux-typeahead-options\"\n          [uxInfiniteScroll]=\"loadOptionsCallback\"\n          [(collection)]=\"visibleOptions\"\n          [enabled]=\"isInfiniteScroll()\"\n          [filter]=\"filter\"\n          [loadOnScroll]=\"true\"\n          [pageSize]=\"pageSize\"\n          [scrollElement]=\"typeaheadElement\"\n          (loading)=\"loading = true\"\n          (loaded)=\"loading = false\">\n\n          <ol *ngIf=\"visibleOptions.length > 0\">\n              <li *ngFor=\"let option of visibleOptions; let i = index\"\n                  [class.disabled]=\"isDisabled(option)\"\n                  [class.highlighted]=\"isHighlighted(option)\"\n                  [uxScrollIntoViewIf]=\"isHighlighted(option)\"\n                  [scrollParent]=\"typeaheadElement.nativeElement\"\n                  (mousedown)=\"optionMousedownHandler($event)\"\n                  (click)=\"optionClickHandler($event, option)\"\n                  (mouseover)=\"highlight(option)\">\n\n                  <ng-container [ngTemplateOutlet]=\"optionTemplate\"\n                      [ngTemplateOutletContext]=\"{option: option, api: optionApi}\">\n                  </ng-container>\n\n              </li>\n          </ol>\n\n          <div *uxInfiniteScrollLoading>\n              <ng-container [ngTemplateOutlet]=\"loadingTemplate\">\n              </ng-container>\n          </div>\n\n      </div>\n      <div *ngIf=\"visibleOptions.length === 0 && !loading\">\n          <ng-container [ngTemplateOutlet]=\"noOptionsTemplate\">\n          </ng-container>\n      </div>\n\n      <ng-template #defaultLoadingTemplate>\n          <div class=\"ux-typeahead-loading\">\n              <div class=\"spinner spinner-accent spinner-bounce-middle\"></div>\n              <div>Loading...</div>\n          </div>\n      </ng-template>\n\n      <ng-template #defaultOptionTemplate let-option=\"option\" let-api=\"api\">\n          <span class=\"ux-typeahead-option\" [innerHtml]=\"api.getDisplayHtml(option)\"></span>\n      </ng-template>\n\n      <ng-template #defaultNoOptionsTemplate>\n          <span class=\"ux-typeahead-no-options\">No results</span>\n      </ng-template>\n    `,\n    host: {\n        '[class.open]': 'open',\n        '[class.drop-up]': 'dropDirection === \"up\"',\n        '[style.maxHeight]': 'maxHeight'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: ChangeDetectorRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'options': [{ type: Input },],\n'filter': [{ type: Input },],\n'open': [{ type: Input, args: ['open', ] },],\n'openChange': [{ type: Output },],\n'display': [{ type: Input },],\n'key': [{ type: Input },],\n'disabledOptions': [{ type: Input },],\n'dropDirection': [{ type: Input },],\n'maxHeight': [{ type: Input },],\n'openOnFilterChange': [{ type: Input },],\n'pageSize': [{ type: Input },],\n'selectFirst': [{ type: Input },],\n'loadingTemplate': [{ type: Input },],\n'optionTemplate': [{ type: Input },],\n'noOptionsTemplate': [{ type: Input },],\n'optionSelected': [{ type: Output },],\n'highlighted': [{ type: Output },],\n'_defaultLoadingTemplate': [{ type: ViewChild, args: ['defaultLoadingTemplate', ] },],\n'_defaultOptionTemplate': [{ type: ViewChild, args: ['defaultOptionTemplate', ] },],\n'_defaultNoOptionsTemplate': [{ type: ViewChild, args: ['defaultNoOptionsTemplate', ] },],\n};\n}\n\nfunction TypeaheadComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nTypeaheadComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTypeaheadComponent.ctorParameters;\n/** @type {?} */\nTypeaheadComponent.propDecorators;\n/** @type {?} */\nTypeaheadComponent.prototype.options;\n/** @type {?} */\nTypeaheadComponent.prototype.filter;\n/** @type {?} */\nTypeaheadComponent.prototype._open;\n/** @type {?} */\nTypeaheadComponent.prototype.openChange;\n/** @type {?} */\nTypeaheadComponent.prototype.display;\n/** @type {?} */\nTypeaheadComponent.prototype.key;\n/** @type {?} */\nTypeaheadComponent.prototype.disabledOptions;\n/** @type {?} */\nTypeaheadComponent.prototype.dropDirection;\n/** @type {?} */\nTypeaheadComponent.prototype.maxHeight;\n/** @type {?} */\nTypeaheadComponent.prototype.openOnFilterChange;\n/** @type {?} */\nTypeaheadComponent.prototype.pageSize;\n/** @type {?} */\nTypeaheadComponent.prototype.selectFirst;\n/** @type {?} */\nTypeaheadComponent.prototype.loadingTemplate;\n/** @type {?} */\nTypeaheadComponent.prototype.optionTemplate;\n/** @type {?} */\nTypeaheadComponent.prototype.noOptionsTemplate;\n/** @type {?} */\nTypeaheadComponent.prototype.optionSelected;\n/** @type {?} */\nTypeaheadComponent.prototype._highlighted;\n/** @type {?} */\nTypeaheadComponent.prototype._defaultLoadingTemplate;\n/** @type {?} */\nTypeaheadComponent.prototype._defaultOptionTemplate;\n/** @type {?} */\nTypeaheadComponent.prototype._defaultNoOptionsTemplate;\n/** @type {?} */\nTypeaheadComponent.prototype.loadOptionsCallback;\n/** @type {?} */\nTypeaheadComponent.prototype.visibleOptions;\n/** @type {?} */\nTypeaheadComponent.prototype.loading;\n/** @type {?} */\nTypeaheadComponent.prototype.optionApi;\n/** @type {?} */\nTypeaheadComponent.prototype.typeaheadElement;\n/** @type {?} */\nTypeaheadComponent.prototype.cdRef;\n}\n\n\n/**\n * The API available to option templates.\n */\nexport interface TypeaheadOptionApi {\n\n    /**\n     * Returns the unique key value of the given option.\n     */\n    getKey(option: any): string;\n\n    /**\n     * Returns the display value of the given option.\n     */\n    getDisplay(option: any): string;\n\n    /**\n     * Returns the display value of the given option with HTML markup added to highlight the part which matches the current filter value. Override the ux-filter-match class in CSS to modify the default appearance.\n     */\n    getDisplayHtml(option: any): string;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Input, Output, Renderer2, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\nexport class InfiniteScrollLoadButtonDirective {\n/**\n * @return {?}\n */\nget visible() {\n        return this._visible;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset visible(value: boolean) {\n        if (value !== this._visible) {\n            if (value) {\n                this._viewContainer.createEmbeddedView(this._template);\n\n                // Template content follows the elementRef, which is a comment.\n                const /** @type {?} */ clickTarget = this.getNextElementSibling(this._template.elementRef.nativeElement);\n                this._renderer.listen(clickTarget, 'click', this.onClick.bind(this));\n            } else {\n                this._viewContainer.clear();\n            }\n        }\n\n        this._visible = value;\n    }\n\n     load: Observable<Event>;\nprivate _visible: boolean = false;\nprivate _load = new Subject();\n/**\n * @param {?} _element\n * @param {?} _template\n * @param {?} _viewContainer\n * @param {?} _renderer\n */\nconstructor(\nprivate _element: ElementRef,\nprivate _template: TemplateRef<any>,\nprivate _viewContainer: ViewContainerRef,\nprivate _renderer: Renderer2) {\n\n        this.load = this._load.asObservable() as Observable<Event>;\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nprivate onClick(event: MouseEvent) {\n        this._load.next(event);\n    }\n/**\n * @param {?} element\n * @return {?}\n */\nprivate getNextElementSibling(element: any): Element {\n        var /** @type {?} */ next = element;\n        while (next = next.nextSibling) {\n            if (next.nodeType === 1) {\n                return next;\n            }\n        }\n        return null;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxInfiniteScrollLoadButton]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: TemplateRef, },\n{type: ViewContainerRef, },\n{type: Renderer2, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'visible': [{ type: Input, args: ['uxInfiniteScrollLoadButton', ] },],\n'load': [{ type: Output },],\n};\n}\n\nfunction InfiniteScrollLoadButtonDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nInfiniteScrollLoadButtonDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nInfiniteScrollLoadButtonDirective.ctorParameters;\n/** @type {?} */\nInfiniteScrollLoadButtonDirective.propDecorators;\n/** @type {?} */\nInfiniteScrollLoadButtonDirective.prototype.load;\n/** @type {?} */\nInfiniteScrollLoadButtonDirective.prototype._visible;\n/** @type {?} */\nInfiniteScrollLoadButtonDirective.prototype._load;\n/** @type {?} */\nInfiniteScrollLoadButtonDirective.prototype._element;\n/** @type {?} */\nInfiniteScrollLoadButtonDirective.prototype._template;\n/** @type {?} */\nInfiniteScrollLoadButtonDirective.prototype._viewContainer;\n/** @type {?} */\nInfiniteScrollLoadButtonDirective.prototype._renderer;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, Input, TemplateRef, ViewContainerRef } from '@angular/core';\nexport class InfiniteScrollLoadingDirective {\n/**\n * @return {?}\n */\nget visible() {\n        return this._visible;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset visible(value: boolean) {\n        if (value !== this._visible) {\n            if (value) {\n                this._viewContainer.createEmbeddedView(this._templateRef);\n            } else {\n                this._viewContainer.clear();\n            }\n        }\n        \n        this._visible = value;\n    }\nprivate _visible: boolean = false;\n/**\n * @param {?} _templateRef\n * @param {?} _viewContainer\n */\nconstructor(\nprivate _templateRef: TemplateRef<any>,\nprivate _viewContainer: ViewContainerRef) { }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxInfiniteScrollLoading]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: TemplateRef, },\n{type: ViewContainerRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'visible': [{ type: Input, args: ['uxInfiniteScrollLoading', ] },],\n};\n}\n\nfunction InfiniteScrollLoadingDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nInfiniteScrollLoadingDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nInfiniteScrollLoadingDirective.ctorParameters;\n/** @type {?} */\nInfiniteScrollLoadingDirective.propDecorators;\n/** @type {?} */\nInfiniteScrollLoadingDirective.prototype._visible;\n/** @type {?} */\nInfiniteScrollLoadingDirective.prototype._templateRef;\n/** @type {?} */\nInfiniteScrollLoadingDirective.prototype._viewContainer;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { InfiniteScrollLoadButtonDirective } from './infinite-scroll-load-button.directive';\nimport { InfiniteScrollLoadingDirective } from './infinite-scroll-loading.directive';\nimport {\n    AfterContentInit,\n    ContentChildren,\n    Directive,\n    ElementRef,\n    EventEmitter,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Output,\n    QueryList,\n    SimpleChanges\n} from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\nimport { Subscription } from 'rxjs/Subscription';\nimport { of } from 'rxjs/observable/of';\nimport { from } from 'rxjs/observable/from';\nimport'rxjs/add/operator/auditTime';\nimport'rxjs/add/operator/combineLatest';\nimport'rxjs/add/operator/first';\nimport'rxjs/add/operator/partition';\nexport class InfiniteScrollDirective implements OnInit, AfterContentInit, OnChanges, OnDestroy {\n\n     load: InfiniteScrollLoadFunction;\n\n     _collection: any[] = [];\n/**\n * @return {?}\n */\nget collection() {\n        return this._collection;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset collection(value: any[]) {\n        this.collectionChange.emit(value);\n        this._collection = value;\n    }\n\n     enabled: boolean = true;\n     filter: any;\n     loadOnInit: boolean = true;\n     loadOnScroll: boolean = true;\n     pageSize: number = 20;\n     scrollElement: ElementRef;\n\n     collectionChange = new EventEmitter<any[]>();\n\n    \n    loadingEvent = new EventEmitter<InfiniteScrollLoadingEvent>();\n\n    \n    loadedEvent = new EventEmitter<InfiniteScrollLoadedEvent>();\n\n    \n    loadErrorEvent = new EventEmitter<InfiniteScrollLoadErrorEvent>();\nprivate _loadButtonQuery: QueryList<InfiniteScrollLoadButtonDirective>;\nprivate _loadingIndicatorQuery: QueryList<InfiniteScrollLoadingDirective>;\nprivate _pages: any[][];\nprivate _nextPageNum = 0;\nprivate _domObserver: MutationObserver;\nprivate _scrollEventSub: Subscription;\nprivate _updateRequests = new Subject<InfiniteScrollRequest>();\nprivate _isLoading = new BehaviorSubject<boolean>(false);\nprivate _isExhausted = new BehaviorSubject<boolean>(false);\nprivate _loadButtonEnabled = new BehaviorSubject<boolean>(false);\nprivate _canLoadManually: Observable<boolean>;\nprivate _subscriptions: Subscription[] = [];\nprivate _loadButtonSubscriptions: Subscription[] = [];\n/**\n * @param {?} _element\n */\nconstructor(private _element: ElementRef) {\n        this._canLoadManually = this._isLoading.combineLatest(\n            this._isExhausted,\n            this._loadButtonEnabled,\n            (isLoading, isExhausted, loadButtonEnabled) => {\n                return !isLoading && !isExhausted && loadButtonEnabled;\n            }\n        );\n    }\n/**\n * @return {?}\n */\nngOnInit() {\n        if (!this.scrollElement) {\n            this.scrollElement = this._element;\n        }\n\n        this._loadButtonEnabled.next(!this.loadOnScroll);\n    }\n/**\n * @return {?}\n */\nngAfterContentInit() {\n\n        // There are two kinds of update requests: check and load.\n        // Check requests are throttled and will only cause an update if more data is required\n        // to fill the scrolling view, and it isn't already loading some.\n        // Load requests are not throttled and always request a page of data.\n        const /** @type {?} */ requests = this._updateRequests.partition(r => r.check);\n        requests[0].auditTime(200).subscribe(this.doRequest.bind(this));\n        requests[1].subscribe(this.doRequest.bind(this));\n\n        if (this.enabled) {\n            // Subscribe to scroll events and DOM changes.\n            this.attachEventHandlers();\n        }\n\n        // Connect the Load More button visible state.\n        this._canLoadManually.subscribe(canLoad => {\n            this._loadButtonQuery.forEach(loadButton => {\n                loadButton.visible = canLoad;\n            });\n        });\n\n        // Connect the loading indicator visible state.\n        this._isLoading.subscribe(isLoading => {\n            this._loadingIndicatorQuery.forEach(loading => {\n                loading.visible = isLoading;\n            });\n        });\n\n        // Link the Load More button click event to trigger an update.\n        this.attachLoadButtonEvents();\n        this._loadButtonQuery.changes.subscribe(query => {\n            this.attachLoadButtonEvents();\n        });\n\n        // Initial update.\n        if (this.loadOnInit) {\n            this.loadNextPage();\n        }\n    }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n        let /** @type {?} */ check = true;\n\n        if (changes.enabled && changes.enabled.currentValue !== changes.enabled.previousValue) {\n            if (changes.enabled.currentValue) {\n                this.attachEventHandlers();\n                this.reset();\n                check = false;\n            } else {\n                this.detachEventHandlers();\n            }\n        }\n\n        if (this.enabled) {\n            if (changes.filter && changes.filter.currentValue !== changes.filter.previousValue) {\n                this.reset();\n                check = false;\n            }\n\n            if (changes.loadOnScroll) {\n                this._loadButtonEnabled.next(\n                    !changes.loadOnScroll.currentValue\n                );\n            }\n\n            if (changes.pageSize && changes.pageSize.currentValue !== changes.pageSize.previousValue) {\n                this.reset();\n                check = false;\n            }\n\n            this._updateRequests.next({\n                check: check,\n                pageNumber: this._nextPageNum,\n                pageSize: this.pageSize,\n                filter: this.filter\n            });\n        }\n    }\n/**\n * @return {?}\n */\nngOnDestroy() {\n        this.detachEventHandlers();\n    }\n/**\n * Request an additional page of data.\n * @return {?}\n */\nloadNextPage() {\n        if (!this.enabled) {\n            return;\n        }\n\n        this._updateRequests.next({\n            check: false,\n            pageNumber: this._nextPageNum,\n            pageSize: this.pageSize,\n            filter: this.filter\n        });\n    }\n/**\n * Request a check for whether an additional page of data is required. This is throttled.\n * @return {?}\n */\ncheck() {\n        if (!this.enabled) {\n            return;\n        }\n\n        this._updateRequests.next({\n            check: true,\n            pageNumber: this._nextPageNum,\n            pageSize: this.pageSize,\n            filter: this.filter\n        });\n    }\n/**\n * Clear the collection. Future requests will load from page 0.\n * @return {?}\n */\nreset() {\n        if (!this.enabled) {\n            return;\n        }\n\n        // Reset the page counter.\n        this._nextPageNum = 0;\n\n        this._pages = [];\n\n        // Clear the collection (without changing the reference).\n        if (this.collection) {\n            this.collection.length = 0;\n        }\n\n        // Reset the exhausted flag, allowing the Load More button to appear.\n        this._isExhausted.next(false);\n\n        // Cancel any pending requests\n        if (this._subscriptions) {\n            this._subscriptions.forEach(request => request.unsubscribe());\n        }\n    }\n/**\n * Reload the data without clearing the view.\n * @return {?}\n */\nreload() {\n        this._pages.forEach((page, i) => this.reloadPage(i));\n    }\n/**\n * Reload the data in a specific page without clearing the view.\n * @param {?} pageNum Page number\n * @return {?}\n */\nreloadPage(pageNum: number) {\n        if (!this.enabled) {\n            return;\n        }\n\n        this._updateRequests.next({\n            check: false,\n            pageNumber: pageNum,\n            pageSize: this.pageSize,\n            filter: this.filter,\n            reload: true\n        });\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nprivate onScroll(event: Event) {\n        this.check();\n    }\n/**\n * @return {?}\n */\nprivate onDomChange() {\n        this.check();\n    }\n/**\n * Attach scroll event handler and DOM observer.\n * @return {?}\n */\nprivate attachEventHandlers() {\n        // Subscribe to the scroll event on the target element.\n        this._scrollEventSub = Observable.fromEvent(\n            this.scrollElement.nativeElement,\n            'scroll'\n        ).subscribe(this.onScroll.bind(this));\n\n        // Subscribe to child DOM changes. The main effect of this is to check whether even more data is\n        // required after the initial load.\n        this._domObserver = new MutationObserver(this.onDomChange.bind(this));\n        this._domObserver.observe(this.scrollElement.nativeElement, {\n            childList: true,\n            subtree: true\n        });\n    }\n/**\n * Detach scroll event handler and DOM observer.\n * @return {?}\n */\nprivate detachEventHandlers() {\n        if (this._scrollEventSub) {\n            this._scrollEventSub.unsubscribe();\n            this._scrollEventSub = null;\n        }\n\n        if (this._domObserver) {\n            this._domObserver.disconnect();\n            this._domObserver = null;\n        }\n    }\n/**\n * Remove any existing event subscriptions for the load button `load` event, then attach subscriptions\n * for any in the query.\n * @return {?}\n */\nprivate attachLoadButtonEvents() {\n        this._loadButtonSubscriptions.forEach(s => s.unsubscribe());\n        this._loadButtonSubscriptions = this._loadButtonQuery.map(\n            loadButton => {\n                return loadButton.load.subscribe(this.loadNextPage.bind(this));\n            }\n        );\n    }\n/**\n * Conditionally loads a page into the collection based on directive state and request parameters.\n * @param {?} request\n * @return {?}\n */\nprivate doRequest(request: InfiniteScrollRequest) {\n\n        // Load a new page if the scroll position is beyond the threshhold and if the client code did not\n        // cancel.\n        if (this.needsData(request) && this.beginLoading(request)) {\n\n            // Invoke the callback load function, which returns a promose or plain data.\n            const /** @type {?} */ loadResult = this.load(request.pageNumber, request.pageSize, request.filter);\n\n            const /** @type {?} */ observable = Array.isArray(loadResult)\n                ? of(loadResult)\n                : from<any[]>(loadResult);\n\n            const /** @type {?} */ subscription = observable.first().subscribe(\n                items => {\n                    // Make sure that the parameters have not changed since the load started;\n                    // otherwise discard the results.\n                    if (request.filter === this.filter && request.pageSize === this.pageSize) {\n                        if (items && items.length) {\n                            this.setPageItems(request.pageNumber, items);\n                        }\n\n                        // Emit the loaded event\n                        this.endLoading(request, items);\n                    }\n                },\n                reason => {\n                    // Emit the loadError event\n                    this.endLoadingWithError(request, reason);\n                },\n                () => {\n                    // remove this request from the list\n                    this._subscriptions = this._subscriptions.filter(s => s !== subscription);\n                }\n            );\n\n            // add the subscription to the list of requests\n            this._subscriptions.push(subscription);\n        }\n    }\n/**\n * Returns true if the request should be fulfilled.\n * @param {?} request\n * @return {?}\n */\nprivate needsData(request: InfiniteScrollRequest): boolean {\n        if (!this.enabled) {\n            return false;\n        }\n\n        // Always load for a load request\n        if (!request.check) {\n            return true;\n        }\n\n        // Ignore a check request when the end of data has been detected, or if data is currently loading.\n        if (this._isExhausted.getValue() || this._isLoading.getValue()) {\n            return false;\n        }\n\n        // Load if the remaining scroll area is <= the element height.\n        if (this.scrollElement && this.loadOnScroll) {\n            const /** @type {?} */ element = /** @type {?} */(( <HTMLElement>this.scrollElement.nativeElement));\n            const /** @type {?} */ remainingScroll =\n                element.scrollHeight -\n                (element.scrollTop + element.clientHeight);\n            return remainingScroll <= element.clientHeight;\n        }\n\n        return false;\n    }\n/**\n * Updates state for the beginning of a load. Returns false if the `loading` event was cancelled.\n * @param {?} request\n * @return {?}\n */\nprivate beginLoading(request: InfiniteScrollRequest): boolean {\n\n        const /** @type {?} */ event = new InfiniteScrollLoadingEvent(\n            request.pageNumber,\n            request.pageSize,\n            request.filter\n        );\n        this.loadingEvent.emit(event);\n\n        this._isLoading.next(!event.defaultPrevented());\n\n        return !event.defaultPrevented();\n    }\n/**\n * @param {?} pageNum\n * @param {?} items\n * @return {?}\n */\nprivate setPageItems(pageNum: number, items: any[]) {\n        this._pages[pageNum] = items;\n        this.collection = this._pages.reduce((previous, current) => previous.concat(current), []);\n    }\n/**\n * Updates state from a successful load. Raises the `loaded` event.\n * @param {?} request\n * @param {?=} data\n * @return {?}\n */\nprivate endLoading(request: InfiniteScrollRequest, data?: any) {\n        this._isLoading.next(false);\n\n        const /** @type {?} */ isExhausted = !!(data && data.length < this.pageSize);\n        this._isExhausted.next(isExhausted);\n\n        this.loadedEvent.emit(\n            new InfiniteScrollLoadedEvent(\n                request.pageNumber,\n                request.pageSize,\n                request.filter,\n                data,\n                isExhausted\n            )\n        );\n\n        if (!request.reload) {\n            this._nextPageNum += 1;\n        }\n    }\n/**\n * Updates state from a failed load. Raises the `loadError` event.\n * @param {?} request\n * @param {?} error\n * @return {?}\n */\nprivate endLoadingWithError(request: InfiniteScrollRequest, error: any) {\n        this._isLoading.next(false);\n\n        this.loadErrorEvent.emit(\n            new InfiniteScrollLoadErrorEvent(\n                request.pageNumber,\n                request.pageSize,\n                request.filter,\n                error\n            )\n        );\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxInfiniteScroll]',\n    exportAs: 'uxInfiniteScroll'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'load': [{ type: Input, args: ['uxInfiniteScroll', ] },],\n'_collection': [{ type: Input, args: ['collection', ] },],\n'enabled': [{ type: Input },],\n'filter': [{ type: Input },],\n'loadOnInit': [{ type: Input },],\n'loadOnScroll': [{ type: Input },],\n'pageSize': [{ type: Input },],\n'scrollElement': [{ type: Input },],\n'collectionChange': [{ type: Output },],\n'loadingEvent': [{ type: Output, args: ['loading', ] },],\n'loadedEvent': [{ type: Output, args: ['loaded', ] },],\n'loadErrorEvent': [{ type: Output, args: ['loadError', ] },],\n'_loadButtonQuery': [{ type: ContentChildren, args: [InfiniteScrollLoadButtonDirective, ] },],\n'_loadingIndicatorQuery': [{ type: ContentChildren, args: [InfiniteScrollLoadingDirective, ] },],\n};\n}\n\nfunction InfiniteScrollDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nInfiniteScrollDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nInfiniteScrollDirective.ctorParameters;\n/** @type {?} */\nInfiniteScrollDirective.propDecorators;\n/** @type {?} */\nInfiniteScrollDirective.prototype.load;\n/** @type {?} */\nInfiniteScrollDirective.prototype._collection;\n/** @type {?} */\nInfiniteScrollDirective.prototype.enabled;\n/** @type {?} */\nInfiniteScrollDirective.prototype.filter;\n/** @type {?} */\nInfiniteScrollDirective.prototype.loadOnInit;\n/** @type {?} */\nInfiniteScrollDirective.prototype.loadOnScroll;\n/** @type {?} */\nInfiniteScrollDirective.prototype.pageSize;\n/** @type {?} */\nInfiniteScrollDirective.prototype.scrollElement;\n/** @type {?} */\nInfiniteScrollDirective.prototype.collectionChange;\n/** @type {?} */\nInfiniteScrollDirective.prototype.loadingEvent;\n/** @type {?} */\nInfiniteScrollDirective.prototype.loadedEvent;\n/** @type {?} */\nInfiniteScrollDirective.prototype.loadErrorEvent;\n/** @type {?} */\nInfiniteScrollDirective.prototype._loadButtonQuery;\n/** @type {?} */\nInfiniteScrollDirective.prototype._loadingIndicatorQuery;\n/** @type {?} */\nInfiniteScrollDirective.prototype._pages;\n/** @type {?} */\nInfiniteScrollDirective.prototype._nextPageNum;\n/** @type {?} */\nInfiniteScrollDirective.prototype._domObserver;\n/** @type {?} */\nInfiniteScrollDirective.prototype._scrollEventSub;\n/** @type {?} */\nInfiniteScrollDirective.prototype._updateRequests;\n/** @type {?} */\nInfiniteScrollDirective.prototype._isLoading;\n/** @type {?} */\nInfiniteScrollDirective.prototype._isExhausted;\n/** @type {?} */\nInfiniteScrollDirective.prototype._loadButtonEnabled;\n/** @type {?} */\nInfiniteScrollDirective.prototype._canLoadManually;\n/** @type {?} */\nInfiniteScrollDirective.prototype._subscriptions;\n/** @type {?} */\nInfiniteScrollDirective.prototype._loadButtonSubscriptions;\n/** @type {?} */\nInfiniteScrollDirective.prototype._element;\n}\n\n/**\n * The internal data associated with a load/check request.\n */\nclass InfiniteScrollRequest {\n    check: boolean;\n    pageNumber: number;\n    pageSize: number;\n    filter: any;\n    reload?: boolean;\n}\n\nfunction InfiniteScrollRequest_tsickle_Closure_declarations() {\n/** @type {?} */\nInfiniteScrollRequest.prototype.check;\n/** @type {?} */\nInfiniteScrollRequest.prototype.pageNumber;\n/** @type {?} */\nInfiniteScrollRequest.prototype.pageSize;\n/** @type {?} */\nInfiniteScrollRequest.prototype.filter;\n/** @type {?} */\nInfiniteScrollRequest.prototype.reload;\n}\n\n\nexport type InfiniteScrollLoadFunction = (\n    pageNum: number,\n    pageSize: number,\n    filter: any\n) => any | Promise<any>;\n/**\n * Event raised before the `loading` function is called.\n */\nexport class InfiniteScrollLoadingEvent {\nprivate _defaultPrevented = false;\n/**\n * @param {?} pageNumber\n * @param {?} pageSize\n * @param {?} filter\n */\nconstructor(\npublic pageNumber: number,\npublic pageSize: number,\npublic filter: any\n    ) {}\n/**\n * Prevents the default behaviour of the `loading` event (loading function will not be called).\n * @return {?}\n */\npreventDefault() {\n        this._defaultPrevented = true;\n    }\n/**\n * @return {?}\n */\ndefaultPrevented(): boolean {\n        return this._defaultPrevented;\n    }\n}\n\nfunction InfiniteScrollLoadingEvent_tsickle_Closure_declarations() {\n/** @type {?} */\nInfiniteScrollLoadingEvent.prototype._defaultPrevented;\n/**\n * The index of the requested page, starting from 0.\n * @type {?}\n */\nInfiniteScrollLoadingEvent.prototype.pageNumber;\n/**\n * The number of items requested.\n * @type {?}\n */\nInfiniteScrollLoadingEvent.prototype.pageSize;\n/**\n * The filter details as provided via the `filter` binding.\n * @type {?}\n */\nInfiniteScrollLoadingEvent.prototype.filter;\n}\n\n/**\n * Event raised when the loading function result has been resolved and added to the collection.\n */\nexport class InfiniteScrollLoadedEvent {\n/**\n * @param {?} pageNumber\n * @param {?} pageSize\n * @param {?} filter\n * @param {?} data\n * @param {?} exhausted\n */\nconstructor(\npublic pageNumber: number,\npublic pageSize: number,\npublic filter: any,\npublic data: any,\npublic exhausted: boolean\n    ) {}\n}\n\nfunction InfiniteScrollLoadedEvent_tsickle_Closure_declarations() {\n/**\n * The index of the requested page, starting from 0.\n * @type {?}\n */\nInfiniteScrollLoadedEvent.prototype.pageNumber;\n/**\n * The number of items requested.\n * @type {?}\n */\nInfiniteScrollLoadedEvent.prototype.pageSize;\n/**\n * The filter details as provided via the `filter` binding.\n * @type {?}\n */\nInfiniteScrollLoadedEvent.prototype.filter;\n/**\n * The result of the promise returned from the loading function.\n * @type {?}\n */\nInfiniteScrollLoadedEvent.prototype.data;\n/**\n * True if the data is considered exhausted (number of items returned less than `pageSize`).\n * @type {?}\n */\nInfiniteScrollLoadedEvent.prototype.exhausted;\n}\n\n/**\n * Event raised if the loading function returns a rejected promise.\n */\nexport class InfiniteScrollLoadErrorEvent {\n/**\n * @param {?} pageNumber\n * @param {?} pageSize\n * @param {?} filter\n * @param {?} error\n */\nconstructor(\npublic pageNumber: number,\npublic pageSize: number,\npublic filter: any,\npublic error: any\n    ) {}\n}\n\nfunction InfiniteScrollLoadErrorEvent_tsickle_Closure_declarations() {\n/**\n * The index of the requested page, starting from 0.\n * @type {?}\n */\nInfiniteScrollLoadErrorEvent.prototype.pageNumber;\n/**\n * The number of items requested.\n * @type {?}\n */\nInfiniteScrollLoadErrorEvent.prototype.pageSize;\n/**\n * The filter details as provided via the `filter` binding.\n * @type {?}\n */\nInfiniteScrollLoadErrorEvent.prototype.filter;\n/**\n * The object provided when rejecting the promise.\n * @type {?}\n */\nInfiniteScrollLoadErrorEvent.prototype.error;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { InfiniteScrollLoadButtonDirective } from './infinite-scroll-load-button.directive';\nimport { InfiniteScrollLoadingDirective } from './infinite-scroll-loading.directive';\nimport { InfiniteScrollDirective } from './infinite-scroll.directive';\nimport { NgModule } from '@angular/core';\nexport class InfiniteScrollModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [],\n    exports: [\n        InfiniteScrollDirective,\n        InfiniteScrollLoadButtonDirective,\n        InfiniteScrollLoadingDirective\n    ],\n    declarations: [\n        InfiniteScrollDirective,\n        InfiniteScrollLoadButtonDirective,\n        InfiniteScrollLoadingDirective\n    ],\n    providers: [],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction InfiniteScrollModule_tsickle_Closure_declarations() {\n/** @type {?} */\nInfiniteScrollModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nInfiniteScrollModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable, Inject } from '@angular/core';\nexport class ScrollIntoViewService {\n/**\n * @param {?} elem\n * @param {?} scrollParent\n * @return {?}\n */\nscrollIntoView(elem: HTMLElement, scrollParent: HTMLElement) {\n        const /** @type {?} */ offsetTop = (elem.getBoundingClientRect().top + scrollParent.scrollTop) - scrollParent.getBoundingClientRect().top;\n        if (offsetTop < scrollParent.scrollTop) {\n            scrollParent.scrollTop = offsetTop;\n        } else {\n            const /** @type {?} */ offsetBottom = offsetTop + elem.offsetHeight;\n            if (offsetBottom > (scrollParent.scrollTop + scrollParent.clientHeight)) {\n                scrollParent.scrollTop = offsetBottom - scrollParent.clientHeight;\n            }\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ScrollIntoViewService_tsickle_Closure_declarations() {\n/** @type {?} */\nScrollIntoViewService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nScrollIntoViewService.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { ScrollIntoViewService } from './scroll-into-view.service';\nimport { Directive, ElementRef, Input, OnChanges, SimpleChanges } from '@angular/core';\nexport class ScrollIntoViewIfDirective implements OnChanges {\n\n     condition = false;\n     scrollParent: HTMLElement;\n/**\n * @param {?} element\n * @param {?} scrollIntoViewService\n */\nconstructor(private element: ElementRef,\nprivate scrollIntoViewService: ScrollIntoViewService) {}\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n        if (this.condition) {\n            setTimeout(() => {\n                this.scrollIntoViewService.scrollIntoView(this.element.nativeElement, this.scrollParent);\n            });\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{ selector: '[uxScrollIntoViewIf]' }, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: ScrollIntoViewService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'condition': [{ type: Input, args: ['uxScrollIntoViewIf', ] },],\n'scrollParent': [{ type: Input },],\n};\n}\n\nfunction ScrollIntoViewIfDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nScrollIntoViewIfDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nScrollIntoViewIfDirective.ctorParameters;\n/** @type {?} */\nScrollIntoViewIfDirective.propDecorators;\n/** @type {?} */\nScrollIntoViewIfDirective.prototype.condition;\n/** @type {?} */\nScrollIntoViewIfDirective.prototype.scrollParent;\n/** @type {?} */\nScrollIntoViewIfDirective.prototype.element;\n/** @type {?} */\nScrollIntoViewIfDirective.prototype.scrollIntoViewService;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\n\nimport { ScrollIntoViewIfDirective } from './scroll-into-view-if.directive';\nimport { ScrollIntoViewService } from './scroll-into-view.service';\nexport class ScrollIntoViewIfModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [],\n    exports: [ScrollIntoViewIfDirective],\n    declarations: [ScrollIntoViewIfDirective],\n    providers: [ScrollIntoViewService],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ScrollIntoViewIfModule_tsickle_Closure_declarations() {\n/** @type {?} */\nScrollIntoViewIfModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nScrollIntoViewIfModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { InfiniteScrollModule } from '../../directives/infinite-scroll/index';\nimport { ScrollIntoViewIfModule } from '../../directives/scroll-into-view-if/index';\nimport { TypeaheadKeyService } from './typeahead-key.service';\nimport { TypeaheadComponent } from './typeahead.component';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nexport class TypeaheadModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        InfiniteScrollModule,\n        ScrollIntoViewIfModule\n    ],\n    exports: [TypeaheadComponent],\n    declarations: [TypeaheadComponent],\n    providers: [TypeaheadKeyService],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction TypeaheadModule_tsickle_Closure_declarations() {\n/** @type {?} */\nTypeaheadModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTypeaheadModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { InfiniteScrollLoadFunction } from '../../directives/infinite-scroll/index';\nimport { TypeaheadComponent, TypeaheadKeyService, TypeaheadOptionEvent } from '../typeahead/index';\nimport { Component, ElementRef, EventEmitter, forwardRef, Inject, Input, OnChanges, OnInit, Output, SimpleChanges, TemplateRef, ViewChild } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { DOCUMENT } from '@angular/platform-browser';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Observable } from 'rxjs/Observable';\n\nexport const /** @type {?} */ SELECT_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => SelectComponent),\n    multi: true\n};\nexport class SelectComponent implements OnInit, OnChanges, ControlValueAccessor {\nprivate _value: any;\n/**\n * @return {?}\n */\nget value() {\n        return this._value;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset value(value: any) {\n        this._value = value;\n        this.valueChange.emit(value);\n        this.propagateChange(value);\n    }\n\n     valueChange = new EventEmitter<any>();\nprivate _input = new BehaviorSubject<string>('');\n/**\n * @return {?}\n */\nget input() {\n        return this._input.getValue();\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset input(value: string) {\n        this._input.next(value);\n        this.inputChange.emit(value);\n    }\n\n     inputChange = new EventEmitter<string>();\nprivate _dropdownOpen: boolean = false;\n/**\n * @return {?}\n */\nget dropdownOpen() {\n        return this._dropdownOpen;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset dropdownOpen(value: boolean) {\n        this._dropdownOpen = value;\n        this.dropdownOpenChange.emit(value);\n    }\n\n     dropdownOpenChange = new EventEmitter<boolean>();\n\n     options: any[] | InfiniteScrollLoadFunction;\n     display: (option: any) => string | string;\n     key: (option: any) => string | string;\n     allowNull: boolean = false;\n     disabled: boolean = false;\n     dropDirection: 'up' | 'down' = 'down';\n     maxHeight: string = '250px';\n     multiple: boolean = false;\n     pageSize: number = 20;\n     placeholder: string;\n\n     loadingTemplate: TemplateRef<any>;\n     noOptionsTemplate: TemplateRef<any>;\n     optionTemplate: TemplateRef<any>;\n\n     singleInput: ElementRef;\n     multipleTypeahead: TypeaheadComponent;\n     singleTypeahead: TypeaheadComponent;\n\n    filter: Observable<string>;\n\n    propagateChange = (_: any) => { };\n/**\n * @param {?} _element\n * @param {?} _document\n * @param {?} _typeaheadKeyService\n */\nconstructor(\nprivate _element: ElementRef,\nprivate _document: Document,\nprivate _typeaheadKeyService: TypeaheadKeyService) { }\n/**\n * @return {?}\n */\nngOnInit() {\n\n        // Changes to the input field\n        this._input.subscribe((next) => {\n            if (!this.multiple && next !== this.getDisplay(this.value)) {\n                if (this.allowNull) {\n                    this.value = null;\n                }\n            }\n        });\n\n        // Set up filter from input\n        this.filter = this._input\n            .map((input) => {\n                if (!this.multiple && input === this.getDisplay(this.value)) {\n                    return '';\n                }\n                return input;\n            })\n            .debounceTime(200);\n\n        // Changes to filter value\n        this.filter.subscribe((next) => {\n\n            // Open the dropdown when filter is nonempty.\n            if (next && next.length > 0) {\n                this.dropdownOpen = true;\n            }\n        });\n    }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n        if (changes.value) {\n            if (!this.multiple && changes.value.currentValue !== null) {\n                this.input = this.getDisplay(changes.value.currentValue);\n            }\n        }\n        if (changes.multiple && !changes.multiple.firstChange && changes.multiple.currentValue !== changes.multiple.previousValue) {\n            this.input = '';\n        }\n    }\n/**\n * @param {?} obj\n * @return {?}\n */\nwriteValue(obj: any): void {\n        if (obj !== undefined) {\n            this._value = obj;\n        }\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnChange(fn: any): void {\n        this.propagateChange = fn;\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnTouched(fn: any): void { }\n/**\n * @param {?} isDisabled\n * @return {?}\n */\nsetDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n    }\n/**\n * @param {?} event\n * @return {?}\n */\ninputClickHandler(event: MouseEvent) {\n        this.selectInputText();\n        this.dropdownOpen = true;\n    }\n/**\n * @param {?} event\n * @return {?}\n */\ninputBlurHandler(event: Event) {\n        // Close dropdown and reset text input if focus is lost\n        setTimeout(() => {\n            if (!this._element.nativeElement.contains(this._document.activeElement)) {\n                this.dropdownOpen = false;\n                if (!this.multiple) {\n                    this.input = this.getDisplay(this.value);\n                }\n            }\n        }, 200);\n    }\n/**\n * Key handler for single select only. Multiple select key handling is in TagInputComponent.\n * @param {?} event\n * @return {?}\n */\ninputKeyHandler(event: KeyboardEvent) {\n\n        // Standard keys for typeahead (up/down/esc)\n        this._typeaheadKeyService.handleKey(event, this.singleTypeahead);\n\n        switch (event.key) {\n            case 'Enter':\n                if (this.dropdownOpen) {\n                    // Set the highlighted option as the value and close\n                    this.value = this.singleTypeahead.highlighted;\n                    this.dropdownOpen = false;\n                }\n\n                // Update the input field. If dropdown isn't open then reset it to the previous value.\n                this.input = this.getDisplay(this.value);\n                event.preventDefault();\n                break;\n        }\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nsingleOptionSelected(event: TypeaheadOptionEvent) {\n        if (event.option) {\n            this.value = event.option;\n            this.dropdownOpen = false;\n        }\n    }\n/**\n * Returns the display value of the given option.\n * @param {?} option\n * @return {?}\n */\ngetDisplay(option: any): string {\n        if (option === null || option === undefined) {\n            return '';\n        }\n        if (typeof this.display === 'function') {\n            return this.display(option);\n        }\n        if (typeof this.display === 'string' && option.hasOwnProperty(this.display)) {\n            return option[ /** @type {?} */((<string>this.display))];\n        }\n        return option;\n    }\n/**\n * @return {?}\n */\nprivate selectInputText() {\n        this.singleInput.nativeElement.select();\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-select',\n    template: `\n      <ux-tag-input *ngIf=\"multiple\"\n          [(tags)]=\"value\"\n          [(input)]=\"input\"\n          [addOnPaste]=\"false\"\n          [disabled]=\"disabled\"\n          [display]=\"display\"\n          [freeInput]=\"false\"\n          [placeholder]=\"placeholder\"\n          [showTypeaheadOnClick]=\"true\">\n\n          <ux-typeahead #multipleTypeahead\n              [options]=\"options\"\n              [filter]=\"filter | async\"\n              [(open)]=\"dropdownOpen\"\n              [display]=\"display\"\n              [key]=\"key\"\n              [disabledOptions]=\"value\"\n              [dropDirection]=\"dropDirection\"\n              [maxHeight]=\"maxHeight\"\n              [pageSize]=\"pageSize\"\n              [selectFirst]=\"true\"\n              [loadingTemplate]=\"loadingTemplate\"\n              [optionTemplate]=\"optionTemplate\"\n              [noOptionsTemplate]=\"noOptionsTemplate\">\n          </ux-typeahead>\n\n      </ux-tag-input>\n\n      <div *ngIf=\"!multiple\" class=\"inner-addon right-addon\" [class.disabled]=\"disabled\">\n\n          <i class=\"hpe-icon\"\n              [class.hpe-down]=\"dropDirection === 'down'\"\n              [class.hpe-up]=\"dropDirection === 'up'\"></i>\n\n          <input #singleInput type=\"text\" class=\"form-control\"\n              [(ngModel)]=\"input\"\n              [placeholder]=\"placeholder\"\n              [disabled]=\"disabled\"\n              (click)=\"inputClickHandler($event)\"\n              (blur)=\"inputBlurHandler($event)\"\n              (keydown)=\"inputKeyHandler($event)\">\n\n          <ux-typeahead #singleTypeahead\n              [options]=\"options\"\n              [filter]=\"filter | async\"\n              [(open)]=\"dropdownOpen\"\n              [display]=\"display\"\n              [key]=\"key\"\n              [dropDirection]=\"dropDirection\"\n              [maxHeight]=\"maxHeight\"\n              [openOnFilterChange]=\"false\"\n              [pageSize]=\"pageSize\"\n              [selectFirst]=\"true\"\n              [loadingTemplate]=\"loadingTemplate\"\n              [optionTemplate]=\"optionTemplate\"\n              [noOptionsTemplate]=\"noOptionsTemplate\"\n              (optionSelected)=\"singleOptionSelected($event)\" >\n          </ux-typeahead>\n\n      </div>\n    `,\n    providers: [SELECT_VALUE_ACCESSOR]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Document, decorators: [{ type: Inject, args: [DOCUMENT, ] }, ]},\n{type: TypeaheadKeyService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'value': [{ type: Input },],\n'valueChange': [{ type: Output },],\n'input': [{ type: Input },],\n'inputChange': [{ type: Output },],\n'dropdownOpen': [{ type: Input },],\n'dropdownOpenChange': [{ type: Output },],\n'options': [{ type: Input },],\n'display': [{ type: Input },],\n'key': [{ type: Input },],\n'allowNull': [{ type: Input },],\n'disabled': [{ type: Input },],\n'dropDirection': [{ type: Input },],\n'maxHeight': [{ type: Input },],\n'multiple': [{ type: Input },],\n'pageSize': [{ type: Input },],\n'placeholder': [{ type: Input },],\n'loadingTemplate': [{ type: Input },],\n'noOptionsTemplate': [{ type: Input },],\n'optionTemplate': [{ type: Input },],\n'singleInput': [{ type: ViewChild, args: ['singleInput', ] },],\n'multipleTypeahead': [{ type: ViewChild, args: ['multipleTypeahead', ] },],\n'singleTypeahead': [{ type: ViewChild, args: ['singleTypeahead', ] },],\n};\n}\n\nfunction SelectComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nSelectComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSelectComponent.ctorParameters;\n/** @type {?} */\nSelectComponent.propDecorators;\n/** @type {?} */\nSelectComponent.prototype._value;\n/** @type {?} */\nSelectComponent.prototype.valueChange;\n/** @type {?} */\nSelectComponent.prototype._input;\n/** @type {?} */\nSelectComponent.prototype.inputChange;\n/** @type {?} */\nSelectComponent.prototype._dropdownOpen;\n/** @type {?} */\nSelectComponent.prototype.dropdownOpenChange;\n/** @type {?} */\nSelectComponent.prototype.options;\n/** @type {?} */\nSelectComponent.prototype.display;\n/** @type {?} */\nSelectComponent.prototype.key;\n/** @type {?} */\nSelectComponent.prototype.allowNull;\n/** @type {?} */\nSelectComponent.prototype.disabled;\n/** @type {?} */\nSelectComponent.prototype.dropDirection;\n/** @type {?} */\nSelectComponent.prototype.maxHeight;\n/** @type {?} */\nSelectComponent.prototype.multiple;\n/** @type {?} */\nSelectComponent.prototype.pageSize;\n/** @type {?} */\nSelectComponent.prototype.placeholder;\n/** @type {?} */\nSelectComponent.prototype.loadingTemplate;\n/** @type {?} */\nSelectComponent.prototype.noOptionsTemplate;\n/** @type {?} */\nSelectComponent.prototype.optionTemplate;\n/** @type {?} */\nSelectComponent.prototype.singleInput;\n/** @type {?} */\nSelectComponent.prototype.multipleTypeahead;\n/** @type {?} */\nSelectComponent.prototype.singleTypeahead;\n/** @type {?} */\nSelectComponent.prototype.filter;\n/** @type {?} */\nSelectComponent.prototype.propagateChange;\n/** @type {?} */\nSelectComponent.prototype._element;\n/** @type {?} */\nSelectComponent.prototype._document;\n/** @type {?} */\nSelectComponent.prototype._typeaheadKeyService;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\nexport class TagInputEvent {\nprivate _defaultPrevented = false;\n/**\n * @param {?} tag\n */\nconstructor(public tag: any) {}\n/**\n * @return {?}\n */\npreventDefault() {\n        this._defaultPrevented = true;\n    }\n/**\n * @return {?}\n */\ndefaultPrevented(): boolean {\n        return this._defaultPrevented;\n    }\n}\n\nfunction TagInputEvent_tsickle_Closure_declarations() {\n/** @type {?} */\nTagInputEvent.prototype._defaultPrevented;\n/** @type {?} */\nTagInputEvent.prototype.tag;\n}\n","import { TypeaheadComponent, TypeaheadKeyService } from '../typeahead/index';\nimport { TypeaheadOptionEvent } from '../typeahead/typeahead-event';\nimport { TagInputEvent } from './tag-input-event';\nimport {\n    AfterContentInit,\n    Component,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    HostListener,\n    Inject,\n    Input,\n    OnChanges,\n    OnInit,\n    Output,\n    QueryList,\n    SimpleChanges,\n    TemplateRef,\n    ViewChild\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALIDATORS, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { DOCUMENT } from '@angular/platform-browser';\n\n\nconst /** @type {?} */ TAGINPUT_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => TagInputComponent),\n    multi: true\n};\nconst /** @type {?} */ TAGINPUT_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => TagInputComponent),\n    multi: true\n};\nexport class TagInputComponent implements OnInit, AfterContentInit, OnChanges, ControlValueAccessor {\nprivate _tags: any[] = [];\n/**\n * @return {?}\n */\nget tags() {\n        if (!this._tags) {\n            this._tags = [];\n        }\n        return this._tags;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset tags(value: any[]) {\n        this._tags = value;\n        this.onChangeHandler(this._tags);\n        this.tagsChange.emit(this._tags);\n    }\n\n     tagsChange = new EventEmitter<any[]>();\nprivate _input: string = '';\n/**\n * @return {?}\n */\nget input() {\n        return this._input;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset input(value: string) {\n        this._input = value;\n        this.inputChange.emit(value);\n    }\n\n     inputChange = new EventEmitter<string>();\n\n     display: (option: any) => string | string;\n     addOnPaste: boolean = true;\n     disabled: boolean = false;\n     enforceTagLimits: boolean = false;\n     freeInput: boolean = true;\n     maxTags: number = Number.MAX_VALUE;\n     minTags: number = 0;\n     placeholder: string = '';\n     showTypeaheadOnClick: boolean = false;\n     tagDelimiters: string = '';\n     tagPattern: RegExp;\n     tagTemplate: TemplateRef<any>;\n     tagClass: TagClassFunction = () => undefined;\n     validationErrors: any = {};\n     createTagHandler: (value: string) => any;\n\n     tagAdding = new EventEmitter<TagInputEvent>();\n     tagAdded = new EventEmitter<TagInputEvent>();\n     tagInvalidated = new EventEmitter<TagInputEvent>();\n     tagRemoving = new EventEmitter<TagInputEvent>();\n     tagRemoved = new EventEmitter<TagInputEvent>();\n     tagClick = new EventEmitter<TagInputEvent>();\n\n     typeaheadQuery: QueryList<TypeaheadComponent>;\n\n     tagInput: ElementRef;\nprivate _defaultTagTemplate: TemplateRef<any>;\n\n    selectedIndex: number = -1;\n\n    tagApi: TagApi = {\n        getTagDisplay: this.getTagDisplay.bind(this),\n        removeTagAt: this.removeTagAt.bind(this),\n        canRemoveTagAt: this.canRemoveTagAt.bind(this)\n    };\n\n    valid: boolean = true;\n    inputValid: boolean = true;\n\n    typeahead: TypeaheadComponent;\nprivate onChangeHandler: (_: any) => void = () => { };\nprivate onTouchedHandler: () => void = () => { };\n/**\n * @param {?} _element\n * @param {?} _document\n * @param {?} _typeaheadKeyService\n */\nconstructor(\nprivate _element: ElementRef,\nprivate _document: Document,\nprivate _typeaheadKeyService: TypeaheadKeyService) { }\n/**\n * @return {?}\n */\nngOnInit() {\n        if (!this.tagTemplate) {\n            this.tagTemplate = this._defaultTagTemplate;\n        }\n    }\n/**\n * @return {?}\n */\nngAfterContentInit() {\n        // Watch for optional child typeahead control\n        this.connectTypeahead(this.typeaheadQuery.first);\n        this.typeaheadQuery.changes.subscribe((query) => {\n            this.connectTypeahead(query.first);\n        });\n    }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n        if (changes.disabled) {\n            if (changes.disabled.currentValue) {\n                // Clear selection and close dropdown\n                this.selectedIndex = -1;\n                if (this.typeahead) {\n                    this.typeahead.open = false;\n                }\n            }\n        }\n\n        // Update validation status\n        this.validate();\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nwriteValue(value: any[]) {\n        if (value) {\n            this.tags = value;\n        }\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnChange(fn: any) {\n        this.onChangeHandler = fn;\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnTouched(fn: any) {\n        this.onTouchedHandler = fn;\n    }\n/**\n * @param {?} isDisabled\n * @return {?}\n */\nsetDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n    }\n/**\n * Validate the value of the control (tags property).\n * @return {?}\n */\nvalidate() {\n        this.valid = true;\n        let /** @type {?} */ tagRangeError = null;\n        if (this.tags && (this.tags.length < this.minTags || this.tags.length > this.maxTags)) {\n            tagRangeError = {\n                given: this.tags.length,\n                min: this.minTags,\n                max: this.maxTags\n            };\n            this.valid = false;\n        }\n        this.validationErrors['tagRangeError'] = tagRangeError;\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nkeyHandler(event: KeyboardEvent) {\n\n        if (this.disabled) { return; }\n\n        // Get the input field cursor location\n        const /** @type {?} */ inputCursorPos = this.tagInput.nativeElement.selectionStart;\n\n        // Determine if the input field has any text selected\n        const /** @type {?} */ hasSelection = this.tagInput.nativeElement.selectionStart !== this.tagInput.nativeElement.selectionEnd;\n\n        // Determine if a tag has focus\n        const /** @type {?} */ tagSelected = this.isValidTagIndex(this.selectedIndex);\n        \n        const /** @type {?} */ inputLength = this.input ? this.input.length : 0;\n\n        // Check whether the arrow keys can move the selection. Otherwise the input field takes the event.\n        const /** @type {?} */ canNavigateLeft = tagSelected || (inputCursorPos <= 0 && !hasSelection);\n        const /** @type {?} */ canNavigateRight = tagSelected || (inputCursorPos >= inputLength && !hasSelection);\n\n        // Forward key events to the typeahead component.\n        this._typeaheadKeyService.handleKey(event, this.typeahead);\n\n        switch (event.key) {\n            case 'Enter':\n                // Check if a typeahead option is highlighted\n                if (this.typeahead && this.typeahead.open && this.typeahead.highlighted) {\n                    // Add the typeahead option as a tag, clear the input, and close the dropdown\n                    this.commitTypeahead(this.typeahead.highlighted);\n                    this.typeahead.open = false;\n                } else {\n                    // Validate and add the input text as a tag, if possible\n                    this.commitInput();\n                }\n                event.preventDefault();\n                break;\n            case 'Backspace':\n                if (canNavigateLeft) {\n                    this.backspace();\n                    event.stopPropagation();\n                    event.preventDefault();\n                }\n                break;\n            case 'Delete':\n            case 'Del':\n                if (tagSelected) {\n                    this.removeTagAt(this.selectedIndex);\n                }\n                break;\n            case 'ArrowLeft':\n            case 'Left':\n                if (canNavigateLeft) {\n                    this.moveSelection(-1);\n                    event.preventDefault();\n                }\n                break;\n            case 'ArrowRight':\n            case 'Right':\n                if (canNavigateRight) {\n                    this.moveSelection(1);\n                    event.preventDefault();\n                }\n                break;\n        }\n\n        // Check for keys in the tagDelimiters\n        if (this.tagDelimiters && this.tagDelimiters.indexOf(this.getKeyChar(event)) >= 0) {\n            // Commit previous text\n            this.commitInput();\n            event.stopPropagation();\n            event.preventDefault();\n        }\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nfocusOutHandler(event: FocusEvent) {\n        // Close the dropdown on blur\n        setTimeout(() => {\n            if (!this._element.nativeElement.contains(this._document.activeElement)) {\n                this.selectedIndex = -1;\n                if (this.typeahead) {\n                    this.typeahead.open = false;\n                }\n            }\n        }, 200);\n    }\n/**\n * @param {?} event\n * @param {?} tag\n * @param {?} index\n * @return {?}\n */\ntagClickHandler(event: MouseEvent, tag: any, index: number) {\n\n        if (this.disabled) { return; }\n\n        // Send tagClick event\n        const /** @type {?} */ tagClickEvent = new TagInputEvent(tag);\n        this.tagClick.emit(tagClickEvent);\n\n        // Prevent focus if preventDefault() was called\n        if (tagClickEvent.defaultPrevented()) {\n            event.preventDefault();\n            return;\n        }\n\n        // Select the tag (for IE that doesn't propagate focus)\n        this.selectTagAt(index);\n    }\n/**\n * @return {?}\n */\ninputClickHandler() {\n\n        if (this.disabled) { return; }\n\n        if (this.typeahead && this.showTypeaheadOnClick) {\n            this.typeahead.open = true;\n        }\n    }\n/**\n * @return {?}\n */\ninputFocusHandler() {\n\n        if (this.disabled) { return; }\n\n        this.selectInput();\n    }\n/**\n * @param {?} event\n * @return {?}\n */\ninputPasteHandler(event: ClipboardEvent) {\n\n        if (this.disabled) { return; }\n\n        if (this.addOnPaste) {\n            // Get text from the clipboard\n            let /** @type {?} */ input: string = null;\n            if (event.clipboardData) {\n                input = event.clipboardData.getData('text/plain');\n            } else if (( /** @type {?} */((<any>window))).clipboardData) {\n                // Internet Explorer only\n                input = ( /** @type {?} */((<any>window))).clipboardData.getData('Text');\n            }\n\n            // Commit the clipboard text directly\n            if (this.commit(input)) {\n                this.selectInput();\n                event.stopPropagation();\n                event.preventDefault();\n            }\n        }\n    }\n/**\n * @param {?} event\n * @return {?}\n */\ntypeaheadOptionSelectedHandler(event: TypeaheadOptionEvent) {\n\n        if (this.disabled) { return; }\n\n        // When the typeahead sends the optionSelected event, commit the object directly\n        this.commitTypeahead(event.option);\n    }\n/**\n * Commit the current input value and clear the input field if successful.\n * @return {?}\n */\ncommitInput() {\n        if (this.commit(this.input)) {\n            this.selectInput();\n            this.input = '';\n        }\n    }\n/**\n * Commit the given tag object and clear the input if successful.\n * @param {?} tag\n * @return {?}\n */\ncommitTypeahead(tag: any) {\n        if (this.addTag(tag)) {\n            this.selectInput();\n            this.input = '';\n        }\n    }\n/**\n * Commit the given string value as one or more tags, if validation passes. Returns true if the tag(s) were created.\n * @param {?} input\n * @return {?}\n */\ncommit(input: string): boolean {\n        if (input && this.freeInput) {\n\n            // Split the tags by the tagDelimiters if configured\n            const /** @type {?} */ newTags = this.splitTagInput(input);\n\n            // Check tag validation for all of the individual values\n            let /** @type {?} */ allValid = true;\n            for (let /** @type {?} */ newTag of newTags) {\n                const /** @type {?} */ valid = this.validateTag(newTag);\n                if (!valid) {\n                    allValid = false;\n                }\n            }\n\n            // Add the tags if all are valid\n            if (allValid) {\n                for (let /** @type {?} */ newTag of newTags) {\n                    this.addTag(this.createTag(newTag));\n                }\n\n                return true;\n            }\n        }\n\n        return false;\n    }\n/**\n * If no tag is selected, select the rightmost tag. If a tag is selected, remove it.\n * @return {?}\n */\nbackspace() {\n\n        if (this.disabled) { return; }\n\n        if (!this.isValidTagIndex(this.selectedIndex)) {\n            this.selectTagAt(this.tags.length - 1);\n        } else {\n            this.removeTagAt(this.selectedIndex);\n        }\n    }\n/**\n * Move the highlighted option forwards or backwards in the list. Wraps at the limits.\n * @param {?} d Value to be added to the selected index, i.e. -1 to move backwards, +1 to move forwards.\n * @return {?}\n */\nmoveSelection(d: number) {\n\n        if (this.disabled) { return; }\n\n        if (this.isValidSelectIndex(this.selectedIndex)) {\n            this.selectedIndex += d;\n\n            // Do wrapping of selection when out of bounds\n            if (this.selectedIndex < 0) {\n                this.selectedIndex = this.tags.length;\n            } else if (this.selectedIndex > this.tags.length) {\n                this.selectedIndex = 0;\n            }\n        }\n    }\n/**\n * Returns a value to display for the given tag. Uses display function/property name if set, otherwise assumes that the tag is a simple string.\n * @param {?} tag\n * @return {?}\n */\ngetTagDisplay(tag: any): string {\n        if (typeof this.display === 'function') {\n            return this.display(tag);\n        }\n        if (typeof this.display === 'string') {\n            return tag[ /** @type {?} */((<string>this.display))];\n        }\n        return tag;\n    }\n/**\n * Returns true if the given index is selected (tag index or input field).\n * @param {?} index\n * @return {?}\n */\nisSelected(index: number): boolean {\n        return index === this.selectedIndex;\n    }\n/**\n * Select the tag at the given index. Does nothing if disabled is true.\n * @param {?} tagIndex\n * @return {?}\n */\nselectTagAt(tagIndex: number) {\n\n        if (this.disabled) { return; }\n\n        if (this.isValidTagIndex(tagIndex)) {\n            this.selectedIndex = tagIndex;\n        }\n    }\n/**\n * Select the input field, giving it focus. Does nothing if disabled is true.\n * @return {?}\n */\nselectInput() {\n\n        if (this.disabled) { return; }\n\n        this.selectedIndex = this.tags.length;\n    }\n/**\n * Remove the tag at the given index. Does nothing if disabled is true or the minTags property prevents removal.\n * @param {?} tagIndex\n * @return {?}\n */\nremoveTagAt(tagIndex: number) {\n\n        if (this.disabled || !this.canRemoveTagAt(tagIndex)) { return; }\n\n        // Check that the tagIndex is in range\n        if (this.isValidTagIndex(tagIndex)) {\n            const /** @type {?} */ tag = this.tags[tagIndex];\n            const /** @type {?} */ tagRemovingEvent = new TagInputEvent(tag);\n            this.tagRemoving.emit(tagRemovingEvent);\n            if (!tagRemovingEvent.defaultPrevented()) {\n                // Select input first to avoid issues with dropping focus\n                this.selectInput();\n                // Remove the tag\n                this.tags.splice(tagIndex, 1);\n                // Set focus again since indices have changed\n                this.selectInput();\n                this.tagRemoved.emit(new TagInputEvent(tag));\n                this.validate();\n            }\n        }\n    }\n/**\n * Returns true if the tag at the given index can be removed.\n * @param {?} tagIndex\n * @return {?}\n */\ncanRemoveTagAt(tagIndex: number): boolean {\n        return this.tags.length > this.minTags || !this.enforceTagLimits;\n    }\n/**\n * Returns true if the input field should be available.\n * @return {?}\n */\nisInputVisible() {\n        return this.tags.length < this.maxTags || !this.enforceTagLimits;\n    }\n/**\n * Returns true if any part of the control has focus.\n * @return {?}\n */\nhasFocus(): boolean {\n        return this.isValidSelectIndex(this.selectedIndex);\n    }\n/**\n * @param {?} typeahead\n * @return {?}\n */\nprivate connectTypeahead(typeahead: TypeaheadComponent) {\n        this.typeahead = typeahead;\n        if (this.typeahead) {\n            // Set up event handler for selected options\n            this.typeahead.optionSelected.subscribe(this.typeaheadOptionSelectedHandler.bind(this));\n        }\n    }\n/**\n * Validate the given tagValue with the tagPattern, if set. Update validationErrors on validation failure.\n * @param {?} tagValue\n * @return {?}\n */\nprivate validateTag(tagValue: string): boolean {\n        let /** @type {?} */ inputPattern = null;\n        this.inputValid = true;\n        if (this.tagPattern && !this.tagPattern.test(tagValue)) {\n            inputPattern = {\n                given: tagValue,\n                pattern: this.tagPattern\n            };\n            this.inputValid = false;\n        }\n        this.validationErrors['inputPattern'] = inputPattern;\n        return this.inputValid;\n    }\n/**\n * Create a tag object for the given tagValue. If createTagHandler is specified, use it; otherwise if displayProperty is specified, create an object with the tagValue as the single named property; otherwise return the tagValue itself.\n * @param {?} tagValue\n * @return {?}\n */\nprivate createTag(tagValue: string): any {\n        let /** @type {?} */ tag = null;\n        if (this.createTagHandler && typeof this.createTagHandler === 'function') {\n            tag = this.createTagHandler(tagValue);\n        } else if (typeof this.display === 'string') {\n            tag = {};\n            tag[ /** @type {?} */((<string>this.display))] = tagValue;\n        } else {\n            tag = tagValue;\n        }\n        return tag;\n    }\n/**\n * Add a tag object, calling the tagAdding and tagAdded events. Returns true if the tag was added to the tags array.\n * @param {?} tag\n * @return {?}\n */\nprivate addTag(tag: any): boolean {\n        if (tag) {\n            // Verify that the new tag can be displayed\n            const /** @type {?} */ displayValue = this.getTagDisplay(tag);\n            if (displayValue && typeof displayValue === 'string' && displayValue.length > 0) {\n                const /** @type {?} */ tagAddingEvent = new TagInputEvent(tag);\n                this.tagAdding.emit(tagAddingEvent);\n                if (!tagAddingEvent.defaultPrevented()) {\n                    this.tags = this.tags || [];\n                    this.tags.push(tag);\n                    this.tagAdded.emit(new TagInputEvent(tag));\n                    this.validate();\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    }\n/**\n * Returns true if the given tagIndex is a valid tag index.\n * @param {?} tagIndex\n * @return {?}\n */\nprivate isValidTagIndex(tagIndex: number): boolean {\n        return tagIndex >= 0 && tagIndex < this.tags.length;\n    }\n/**\n * Returns true if the given index is a valid selection index (tags or input field).\n * @param {?} index\n * @return {?}\n */\nprivate isValidSelectIndex(index: number): boolean {\n        return index >= 0 && index <= this.tags.length;\n    }\n/**\n * Returns the character corresponding to the given key event, mainly for IE compatibility.\n * @param {?} event\n * @return {?}\n */\nprivate getKeyChar(event: KeyboardEvent): string {\n        switch (event.key) {\n            case 'Spacebar':\n                return ' ';\n        }\n        return event.key;\n    }\n/**\n * Returns an array of strings corresponding to the input string split by the tagDelimiters characters.\n * @param {?} input\n * @return {?}\n */\nprivate splitTagInput(input: string): string[] {\n        let /** @type {?} */ tagValues = [input];\n        if (this.tagDelimiters && typeof this.tagDelimiters === 'string') {\n            const /** @type {?} */ escapedDelimiters = this.tagDelimiters.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n            const /** @type {?} */ delimiterRegex = new RegExp(`[${escapedDelimiters}]`, 'g');\n            tagValues = input.split(delimiterRegex).filter((s) => s.length > 0);\n        }\n        return tagValues;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-tag-input',\n    template: `\n      <ol>\n          <li *ngFor=\"let tag of tags; let i = index\" class=\"ux-tag\"\n              [class.disabled]=\"disabled\"\n              [ngClass]=\"tagClass(tag, i, isSelected(i))\"\n              [attr.tabindex]=\"disabled ? null : i\"\n              [focusIf]=\"isSelected(i)\"\n              (click)=\"tagClickHandler($event, tag, i)\"\n              (focus)=\"selectTagAt(i)\">\n        \n              <ng-container [ngTemplateOutlet]=\"tagTemplate\"\n                  [ngTemplateOutletContext]=\"{tag: tag, index: i, disabled: disabled, api: tagApi}\">\n              </ng-container>\n\n          </li>\n          <li *ngIf=\"isInputVisible()\" class=\"ux-tag-input\">\n              <input #tagInput type=\"text\" class=\"ux-tag-input\"\n                  [(ngModel)]=\"input\"\n                  [class.invalid]=\"!inputValid\"\n                  [placeholder]=\"disabled ? '' : (placeholder || '')\"\n                  [disabled]=\"disabled\"\n                  [focusIf]=\"isSelected(tags.length)\"\n                  (click)=\"inputClickHandler()\"\n                  (focus)=\"inputFocusHandler()\"\n                  (paste)=\"inputPasteHandler($event)\">\n          </li>\n      </ol>\n\n      <ng-content #typeahead></ng-content>\n\n      <ng-template #defaultTagTemplate let-tag=\"tag\" let-index=\"index\" let-disabled=\"disabled\" let-api=\"api\">\n          <span class=\"ux-tag-text\">{{api.getTagDisplay(tag)}}</span>\n          <button *ngIf=\"api.canRemoveTagAt(index)\" type=\"button\" class=\"ux-tag-remove\" [disabled]=\"disabled\" (click)=\"api.removeTagAt(index); $event.stopPropagation();\"><i class=\"hpe-icon hpe-close\"></i></button>\n      </ng-template>\n    `,\n    providers: [TAGINPUT_VALUE_ACCESSOR, TAGINPUT_VALIDATOR],\n    host: {\n        '[class.disabled]': 'disabled',\n        '[class.focus]': 'hasFocus()',\n        '[class.invalid]': '!valid || !inputValid'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Document, decorators: [{ type: Inject, args: [DOCUMENT, ] }, ]},\n{type: TypeaheadKeyService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'tags': [{ type: Input, args: ['tags', ] },],\n'tagsChange': [{ type: Output },],\n'input': [{ type: Input, args: ['input', ] },],\n'inputChange': [{ type: Output },],\n'display': [{ type: Input },],\n'addOnPaste': [{ type: Input },],\n'disabled': [{ type: Input },],\n'enforceTagLimits': [{ type: Input },],\n'freeInput': [{ type: Input },],\n'maxTags': [{ type: Input },],\n'minTags': [{ type: Input },],\n'placeholder': [{ type: Input },],\n'showTypeaheadOnClick': [{ type: Input },],\n'tagDelimiters': [{ type: Input },],\n'tagPattern': [{ type: Input },],\n'tagTemplate': [{ type: Input },],\n'tagClass': [{ type: Input },],\n'validationErrors': [{ type: Input },],\n'createTagHandler': [{ type: Input, args: ['createTag', ] },],\n'tagAdding': [{ type: Output },],\n'tagAdded': [{ type: Output },],\n'tagInvalidated': [{ type: Output },],\n'tagRemoving': [{ type: Output },],\n'tagRemoved': [{ type: Output },],\n'tagClick': [{ type: Output },],\n'typeaheadQuery': [{ type: ContentChildren, args: [TypeaheadComponent, ] },],\n'tagInput': [{ type: ViewChild, args: ['tagInput', ] },],\n'_defaultTagTemplate': [{ type: ViewChild, args: ['defaultTagTemplate', ] },],\n'keyHandler': [{ type: HostListener, args: ['keydown', ['$event'], ] },],\n'focusOutHandler': [{ type: HostListener, args: ['focusout', ['$event'], ] },],\n};\n}\n\nfunction TagInputComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nTagInputComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTagInputComponent.ctorParameters;\n/** @type {?} */\nTagInputComponent.propDecorators;\n/** @type {?} */\nTagInputComponent.prototype._tags;\n/** @type {?} */\nTagInputComponent.prototype.tagsChange;\n/** @type {?} */\nTagInputComponent.prototype._input;\n/** @type {?} */\nTagInputComponent.prototype.inputChange;\n/** @type {?} */\nTagInputComponent.prototype.display;\n/** @type {?} */\nTagInputComponent.prototype.addOnPaste;\n/** @type {?} */\nTagInputComponent.prototype.disabled;\n/** @type {?} */\nTagInputComponent.prototype.enforceTagLimits;\n/** @type {?} */\nTagInputComponent.prototype.freeInput;\n/** @type {?} */\nTagInputComponent.prototype.maxTags;\n/** @type {?} */\nTagInputComponent.prototype.minTags;\n/** @type {?} */\nTagInputComponent.prototype.placeholder;\n/** @type {?} */\nTagInputComponent.prototype.showTypeaheadOnClick;\n/** @type {?} */\nTagInputComponent.prototype.tagDelimiters;\n/** @type {?} */\nTagInputComponent.prototype.tagPattern;\n/** @type {?} */\nTagInputComponent.prototype.tagTemplate;\n/** @type {?} */\nTagInputComponent.prototype.tagClass;\n/** @type {?} */\nTagInputComponent.prototype.validationErrors;\n/** @type {?} */\nTagInputComponent.prototype.createTagHandler;\n/** @type {?} */\nTagInputComponent.prototype.tagAdding;\n/** @type {?} */\nTagInputComponent.prototype.tagAdded;\n/** @type {?} */\nTagInputComponent.prototype.tagInvalidated;\n/** @type {?} */\nTagInputComponent.prototype.tagRemoving;\n/** @type {?} */\nTagInputComponent.prototype.tagRemoved;\n/** @type {?} */\nTagInputComponent.prototype.tagClick;\n/** @type {?} */\nTagInputComponent.prototype.typeaheadQuery;\n/** @type {?} */\nTagInputComponent.prototype.tagInput;\n/** @type {?} */\nTagInputComponent.prototype._defaultTagTemplate;\n/** @type {?} */\nTagInputComponent.prototype.selectedIndex;\n/** @type {?} */\nTagInputComponent.prototype.tagApi;\n/** @type {?} */\nTagInputComponent.prototype.valid;\n/** @type {?} */\nTagInputComponent.prototype.inputValid;\n/** @type {?} */\nTagInputComponent.prototype.typeahead;\n/** @type {?} */\nTagInputComponent.prototype.onChangeHandler;\n/** @type {?} */\nTagInputComponent.prototype.onTouchedHandler;\n/** @type {?} */\nTagInputComponent.prototype._element;\n/** @type {?} */\nTagInputComponent.prototype._document;\n/** @type {?} */\nTagInputComponent.prototype._typeaheadKeyService;\n}\n\n\n/**\n * The API available to tag templates.\n */\nexport interface TagApi {\n    /**\n     * Returns the display value of the given tag, according to the displayProperty property. \n     */\n    getTagDisplay: (tag: any) => string;\n\n    /**\n     * Removes the tag at the given index, if possible.\n     */\n    removeTagAt: (index: number) => void;\n\n    /**\n     * \tReturns true if the tag at the given index can be removed.\n     */\n    canRemoveTagAt: (index: number) => boolean;\n}\n\n/**\n * The function used to return custom class information, for use in `ngClass`.\n */\nexport type TagClassFunction = (tag: any, index: number, selected: boolean) => (string | string[] | Set<string>);\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, Input, ElementRef } from '@angular/core';\nexport class FocusIfDirective {\n/**\n * @param {?} focus\n * @return {?}\n */\nset focusIf(focus: boolean) {\n        if (focus) {\n            this._elementRef.nativeElement.focus();\n        }\n    }\n/**\n * @param {?} _elementRef\n */\nconstructor(private _elementRef: ElementRef) { }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{ \n    selector: '[focusIf]' \n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'focusIf': [{ type: Input },],\n};\n}\n\nfunction FocusIfDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nFocusIfDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFocusIfDirective.ctorParameters;\n/** @type {?} */\nFocusIfDirective.propDecorators;\n/** @type {?} */\nFocusIfDirective.prototype._elementRef;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { FocusIfDirective } from './focus-if.directive';\nexport class FocusIfModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    exports: [FocusIfDirective],\n    declarations: [FocusIfDirective]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction FocusIfModule_tsickle_Closure_declarations() {\n/** @type {?} */\nFocusIfModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFocusIfModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { FocusIfModule } from '../../directives/focus-if/index';\nimport { TypeaheadModule } from '../typeahead/index';\nimport { TagInputComponent } from './tag-input.component';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nexport class TagInputModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        FormsModule,\n        FocusIfModule,\n        TypeaheadModule\n    ],\n    exports: [TagInputComponent],\n    declarations: [TagInputComponent],\n    providers: [],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction TagInputModule_tsickle_Closure_declarations() {\n/** @type {?} */\nTagInputModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTagInputModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { InfiniteScrollModule } from '../../directives/infinite-scroll/index';\nimport { TagInputModule } from '../tag-input/index';\nimport { TypeaheadModule } from '../typeahead/index';\nimport { SelectComponent } from './select.component';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nexport class SelectModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        FormsModule,\n        InfiniteScrollModule,\n        TagInputModule,\n        TypeaheadModule\n    ],\n    exports: [SelectComponent],\n    declarations: [SelectComponent]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SelectModule_tsickle_Closure_declarations() {\n/** @type {?} */\nSelectModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSelectModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { SearchBuilderComponent } from './search-builder.component';\nimport { SearchBuilderGroupComponent } from './search-builder-group/search-builder-group.component';\nimport { SearchTextComponent } from './search-components/text/text.component';\nimport { SearchDateComponent } from './search-components/date/date.component';\nimport { SearchBuilderOutletDirective } from './search-builder-outlet/search-builder-outlet.directive';\nimport { BaseSearchComponent } from './search-components/base-search.component';\nimport { DateTimePickerModule } from '../date-time-picker/date-time-picker.module';\nimport { PopoverModule } from 'ngx-bootstrap/popover';\nimport { SearchDateRangeComponent } from './search-components/date-range/date-range.component';\nimport { SearchSelectComponent } from './search-components/select/select.component';\nimport { SelectModule } from '../select/index';\nexport class SearchBuilderModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [\n    CommonModule,\n    FormsModule,\n    DateTimePickerModule,\n    PopoverModule.forRoot(),\n    SelectModule\n  ],\n  exports: [\n    SearchBuilderComponent,\n    SearchBuilderGroupComponent,\n    BaseSearchComponent\n  ],\n  declarations: [\n    SearchBuilderComponent,\n    SearchBuilderGroupComponent,\n    SearchTextComponent,\n    SearchDateComponent,\n    SearchDateRangeComponent,\n    SearchBuilderOutletDirective,\n    SearchSelectComponent,\n    BaseSearchComponent\n  ],\n  entryComponents: [\n    SearchTextComponent,\n    SearchDateComponent,\n    SearchDateRangeComponent,\n    SearchSelectComponent\n  ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SearchBuilderModule_tsickle_Closure_declarations() {\n/** @type {?} */\nSearchBuilderModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSearchBuilderModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, EventEmitter, Output, OnInit, ElementRef, ViewChild, AfterViewInit, DoCheck, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport { ColorService } from '../../services/color/index';\nexport class SliderComponent implements OnInit, AfterViewInit, DoCheck {\n\n     value: SliderValue | number = 0;\n     options: SliderOptions;\n     valueChange: EventEmitter<SliderValue | number> = new EventEmitter<SliderValue | number>();\n\n     lowerTooltip: ElementRef;\n     upperTooltip: ElementRef;\n     track: ElementRef;\nprivate _value: SliderValue | number;\n\n    // expose enums to Angular view\n    sliderType = SliderType;\n    sliderStyle = SliderStyle;\n    sliderSize = SliderSize;\n    sliderThumb = SliderThumb;\n    sliderTickType = SliderTickType;\n    sliderThumbEvent = SliderThumbEvent;\n    sliderCalloutTrigger = SliderCalloutTrigger;\n\n    tracks = {\n        lower: {\n            size: 0,\n            color: ''\n        },\n        middle: {\n            size: 0,\n            color: ''\n        },\n        upper: {\n            size: 0,\n            color: ''\n        }\n    };\n\n    tooltips = {\n        lower: {\n            visible: false,\n            position: 0,\n            label: ''\n        },\n        upper: {\n            visible: false,\n            position: 0,\n            label: ''\n        }\n    };\n\n    thumbs = {\n        lower: {\n            hover: false,\n            drag: false,\n            position: 0,\n            order: 100,\n            value: /** @type {?} */(( null as number))\n        },\n        upper: {\n            hover: false,\n            drag: false,\n            position: 0,\n            order: 101,\n            value: /** @type {?} */(( null as number))\n        }\n    };\n\n    // store all the ticks to display\n    ticks: SliderTick[] = [];\n    defaultOptions: SliderOptions;\n/**\n * @param {?} colorService\n * @param {?} _changeDetectorRef\n */\nconstructor(colorService: ColorService,\nprivate _changeDetectorRef: ChangeDetectorRef) {\n\n        // setup default options\n        this.defaultOptions = {\n            type: SliderType.Value,\n            handles: {\n                style: SliderStyle.Button,\n                callout: {\n                    trigger: SliderCalloutTrigger.None,\n                    background: colorService.getColor('grey2').toHex(),\n                    color: '#fff',\n                    formatter: (value: number): string | number => value\n                }\n            },\n            track: {\n                height: SliderSize.Wide,\n                min: 0,\n                max: 100,\n                ticks: {\n                    snap: SliderSnap.None,\n                    major: {\n                        show: true,\n                        steps: 10,\n                        labels: true,\n                        formatter: (value: number): string | number => value\n                    },\n                    minor: {\n                        show: true,\n                        steps: 5,\n                        labels: false,\n                        formatter: (value: number): string | number => value\n                    }\n                },\n                colors: {\n                    lower: colorService.getColor('grey6').toHex(),\n                    range: colorService.getColor('accent').setAlpha(0.75).toRgba(),\n                    higher: colorService.getColor('grey6').toHex()\n                }\n            }\n        };\n    }\n/**\n * @return {?}\n */\nngOnInit(): void {\n\n        this.updateOptions();\n        this.updateValues();\n\n        this.setThumbState(SliderThumb.Lower, false, false);\n        this.setThumbState(SliderThumb.Upper, false, false);\n\n        // emit the initial value\n        this.valueChange.next(this.clone(this.value));\n    }\n/**\n * @return {?}\n */\nngDoCheck(): void {\n\n        if (this.detectValueChange(this.value, this._value)) {\n            this.updateValues();\n            this._value = this.clone(this.value);\n        }\n    }\n/**\n * @return {?}\n */\nngAfterViewInit(): void {\n        // persistent tooltips will need positioned correctly at this stage\n        setTimeout(() => {\n            this.updateTooltipPosition(SliderThumb.Lower);\n            this.updateTooltipPosition(SliderThumb.Upper);\n\n            // mark as dirty\n            this._changeDetectorRef.markForCheck();\n        });\n    }\n/**\n * @param {?} thumb\n * @return {?}\n */\ngetFormattedValue(thumb: SliderThumb): string | number {\n        return this.options.handles.callout.formatter(this.getThumbState(thumb).value);\n    }\n/**\n * @param {?} thumb\n * @return {?}\n */\nprivate getThumbState(thumb: SliderThumb) {\n        return thumb === SliderThumb.Lower ? this.thumbs.lower : this.thumbs.upper;\n    }\n/**\n * @param {?} thumb\n * @param {?} hover\n * @param {?} drag\n * @return {?}\n */\nprivate setThumbState(thumb: SliderThumb, hover: boolean, drag: boolean) {\n\n        if (thumb === SliderThumb.Lower) {\n            this.thumbs.lower.hover = hover;\n            this.thumbs.lower.drag = drag;\n        } else {\n            this.thumbs.upper.hover = hover;\n            this.thumbs.upper.drag = drag;\n        }\n\n        // update the visibility of the tooltips\n        this.updateTooltips(thumb);\n    }\n/**\n * @param {?} thumb\n * @param {?} event\n * @return {?}\n */\nthumbEvent(thumb: SliderThumb, event: SliderThumbEvent): void {\n\n        // get the current thumb state\n        let /** @type {?} */ state = this.getThumbState(thumb);\n\n        // update based upon event\n        switch (event) {\n\n            case SliderThumbEvent.DragStart:\n                state.drag = true;\n                break;\n\n            case SliderThumbEvent.DragEnd:\n                state.drag = false;\n                break;\n\n            case SliderThumbEvent.MouseOver:\n                state.hover = true;\n                break;\n\n            case SliderThumbEvent.MouseLeave:\n                state.hover = false;\n                break;\n\n            case SliderThumbEvent.None:\n                state.drag = false;\n                state.hover = false;\n                break;\n        }\n\n        // update the thumb state\n        this.setThumbState(thumb, state.hover, state.drag);\n    }\n/**\n * @param {?} thumb\n * @return {?}\n */\nprivate updateTooltips(thumb: SliderThumb): void {\n\n        let /** @type {?} */ visible = false;\n        let /** @type {?} */ state = this.getThumbState(thumb);\n\n        switch (this.options.handles.callout.trigger) {\n\n            case SliderCalloutTrigger.Persistent:\n                visible = true;\n                break;\n\n            case SliderCalloutTrigger.Drag:\n                visible = state.drag;\n                break;\n\n            case SliderCalloutTrigger.Hover:\n                visible = state.hover || state.drag;\n                break;\n\n            case SliderCalloutTrigger.Dynamic:\n                visible = true;\n                break;\n        }\n\n        // update the state for the corresponding thumb\n        this.getTooltip(thumb).visible = visible;\n\n        // update the tooltip text\n        this.updateTooltipText(thumb);\n\n        // update the tooltip positions\n        this.updateTooltipPosition(thumb);\n    }\n/**\n * @param {?} thumb\n * @return {?}\n */\nprivate updateTooltipText(thumb: SliderThumb) {\n\n        // get the thumb value\n        let /** @type {?} */ state = this.getThumbState(thumb);\n        let /** @type {?} */ tooltip = this.getTooltip(thumb);\n\n        // store the formatted label\n        tooltip.label = this.getFormattedValue(thumb).toString();\n    }\n/**\n * @param {?} thumb\n * @return {?}\n */\nprivate getTooltipElement(thumb: SliderThumb): ElementRef {\n        return thumb === SliderThumb.Lower ? this.lowerTooltip : this.upperTooltip;\n    }\n/**\n * @param {?} thumb\n * @return {?}\n */\nprivate getTooltip(thumb: SliderThumb) {\n        return thumb === SliderThumb.Lower ? this.tooltips.lower : this.tooltips.upper;\n    }\n/**\n * @param {?} thumb\n * @return {?}\n */\nprivate updateTooltipPosition(thumb: SliderThumb): void {\n\n        const /** @type {?} */ tooltip = this.getTooltip(thumb);\n\n        // if tooltip is not visible then stop here\n        if (tooltip.visible === false) {\n            return;\n        }\n\n        let /** @type {?} */ tooltipElement = this.getTooltipElement(thumb);\n\n        // get the element widths\n        let /** @type {?} */ thumbWidth: number;\n\n        if (this.options.handles.style === SliderStyle.Button) {\n            thumbWidth = this.options.track.height === SliderSize.Narrow ? 16 : 24;\n        } else {\n            thumbWidth = 2;\n        }\n\n        let /** @type {?} */ tooltipWidth = tooltipElement.nativeElement.offsetWidth;\n\n        // calculate the tooltips new position\n        let /** @type {?} */ tooltipPosition = Math.ceil((tooltipWidth - thumbWidth) / 2);\n\n        // update tooltip position\n        tooltip.position = -tooltipPosition;\n\n        if (this.options.type === SliderType.Range && this.options.handles.callout.trigger === SliderCalloutTrigger.Dynamic) {\n            this.preventTooltipOverlap(tooltip);\n        }\n    }\n/**\n * @param {?} tooltip\n * @return {?}\n */\nprivate preventTooltipOverlap(tooltip: any): void {\n        const /** @type {?} */ trackWidth = this.track.nativeElement.offsetWidth;\n\n        const /** @type {?} */ lower = (trackWidth / 100) * this.thumbs.lower.position;\n        const /** @type {?} */ upper = (trackWidth / 100) * this.thumbs.upper.position;\n\n        const /** @type {?} */ lowerWidth = this.lowerTooltip.nativeElement.offsetWidth / 2;\n        const /** @type {?} */ upperWidth = this.upperTooltip.nativeElement.offsetWidth / 2;\n\n        const /** @type {?} */ diff = (lower + lowerWidth) - (upper - upperWidth);\n\n        // if the tooltips are closer than 16px then adjust so the dont move any close\n        if (diff > 0) {\n            if (tooltip === this.tooltips.lower && this.thumbs.lower.drag === false) {\n                tooltip.position -= (diff / 2);\n            } else if (tooltip === this.tooltips.upper && this.thumbs.upper.drag === false) {\n                tooltip.position += (diff / 2);\n            }\n        }\n    }\n/**\n * @param {?} value\n * @param {?} min\n * @param {?} max\n * @return {?}\n */\nprivate clamp(value: number, min: number, max: number): number {\n        return Math.min(Math.max(value, min), max);\n    }\n/**\n * @param {?} event\n * @param {?} thumb\n * @return {?}\n */\nupdateThumbPosition(event: MouseEvent | TouchEvent, thumb: SliderThumb): void {\n\n        // get event position - either mouse or touch\n        let /** @type {?} */ eventPosition = event instanceof MouseEvent ? event.clientX : event.touches && event.touches.length > 0 ? event.touches[0].clientX : null;\n\n        // if event position is null do nothing\n        if (eventPosition === null) {\n            return;\n        }\n\n        // get mouse position\n        let /** @type {?} */ mouseX = window.pageXOffset + eventPosition;\n\n        // get track size and position\n        let /** @type {?} */ trackBounds = this.track.nativeElement.getBoundingClientRect();\n\n        // restrict the value within the range size\n        let /** @type {?} */ position = this.clamp(mouseX - trackBounds.left, 0, trackBounds.width);\n\n        // get fraction representation of location within the track\n        let /** @type {?} */ fraction = (position / trackBounds.width);\n\n        // convert to value within the range\n        let /** @type {?} */ value = ((this.options.track.max - this.options.track.min) * fraction) + this.options.track.min;\n\n        // ensure value is valid\n        value = this.validateValue(thumb, value);\n\n        // snap to a tick if required\n        value = this.snapToTick(value, thumb);\n\n        // update the value accordingly\n        this.setThumbValue(thumb, value);\n\n        this.updateOrder(thumb);\n        this.updateValues();\n\n        // update tooltip text & position\n        this.updateTooltipText(thumb);\n\n        // update the position of all visible tooltips\n        this.updateTooltipPosition(SliderThumb.Lower);\n        this.updateTooltipPosition(SliderThumb.Upper);\n\n        // mark as dirty for change detection\n        this._changeDetectorRef.markForCheck();\n    }\n/**\n * @param {?} thumb\n * @return {?}\n */\nprivate updateOrder(thumb: SliderThumb): void {\n\n        let /** @type {?} */ lower = thumb === SliderThumb.Lower ? 101 : 100;\n        let /** @type {?} */ upper = thumb === SliderThumb.Lower ? 100 : 101;\n\n        // The most recently used thumb should be above\n        this.thumbs.lower.order = lower;\n        this.thumbs.upper.order = upper;\n    }\n/**\n * @param {?} value\n * @param {?} thumb\n * @return {?}\n */\nprivate snapToTick(value: number, thumb: SliderThumb): number {\n\n        // get the snap target\n        const /** @type {?} */ snapTarget: SliderSnap = this.options.track.ticks.snap;\n\n        // if snap target is none then return original value\n        if (snapTarget === SliderSnap.None) {\n            return value;\n        }\n\n        // get filtered ticks\n        let /** @type {?} */ ticks: SliderTick[];\n\n        switch (snapTarget) {\n\n            case SliderSnap.Minor:\n                ticks = this.ticks.filter(tick => tick.type === SliderTickType.Minor);\n                break;\n\n            case SliderSnap.Major:\n                ticks = this.ticks.filter(tick => tick.type === SliderTickType.Major);\n                break;\n\n            default:\n                ticks = this.ticks.slice(0);\n        }\n\n        // get the track limit\n        let /** @type {?} */ lowerLimit = this.options.track.min;\n        let /** @type {?} */ upperLimit = this.options.track.max;\n\n        if (this.options.type === SliderType.Range && thumb === SliderThumb.Lower) {\n            upperLimit = this.thumbs.upper.value;\n        }\n\n        if (this.options.type === SliderType.Range && thumb === SliderThumb.Upper) {\n            lowerLimit = this.thumbs.lower.value;\n        }\n\n        // Find the closest tick to the current position\n        const /** @type {?} */ range = ticks.filter(tick => tick.value >= lowerLimit && tick.value <= upperLimit);\n\n        // If there are no close ticks in the valid range then dont snap\n        if (range.length === 0) {\n            return value;\n        }\n\n        // Find the closest tick\n        const /** @type {?} */ closest = range.reduceRight((previous, current) => {\n\n            const /** @type {?} */ previousDistance = Math.max(previous.value, value) - Math.min(previous.value, value);\n            const /** @type {?} */ currentDistance = Math.max(current.value, value) - Math.min(current.value, value);\n\n            return previousDistance < currentDistance ? previous : current;\n        });\n\n        return closest.value;\n    }\n/**\n * @param {?} thumb\n * @param {?} value\n * @return {?}\n */\nprivate validateValue(thumb: SliderThumb, value: number): number {\n\n        // if slider is not a range value is always valid providing it is within the chart min and max values\n        if (this.options.type === SliderType.Value) {\n            return Math.max(Math.min(value, this.options.track.max), this.options.track.min);\n        }\n\n        // check if value is with chart ranges\n        if (value > this.options.track.max) {\n            return thumb === SliderThumb.Lower ? Math.min(this.options.track.max, this.thumbs.upper.value) : this.options.track.max;\n        }\n\n        if (value < this.options.track.min) {\n            return thumb === SliderThumb.Upper ? Math.max(this.options.track.min, this.thumbs.lower.value) : this.options.track.min;\n        }\n\n        // otherwise we need to check to make sure lower thumb cannot go above higher and vice versa\n        if (thumb === SliderThumb.Lower) {\n\n            if (this.thumbs.upper.value === null) {\n                return value;\n            }\n\n            return value <= this.thumbs.upper.value ? value : this.thumbs.upper.value;\n        }\n\n        if (thumb === SliderThumb.Upper) {\n\n            if (this.thumbs.lower.value === null) {\n                return value;\n            }\n\n            return value >= this.thumbs.lower.value ? value : this.thumbs.lower.value;\n        }\n    }\n/**\n * @return {?}\n */\nprivate updateOptions(): void {\n\n        // add in the default options that user hasn't specified\n        this.options = this.deepMerge(this.options || {}, this.defaultOptions);\n\n        this.updateTrackColors();\n        this.updateTicks();\n        this.updateValues();\n    }\n/**\n * @return {?}\n */\nprivate updateValues(): void {\n\n        if (this.value === undefined || this.value === null) {\n            this.value = 0;\n        }\n\n        let /** @type {?} */ lowerValue = typeof this.value === 'number' ? this.value : this.value.low;\n        let /** @type {?} */ upperValue = typeof this.value === 'number' ? this.value : this.value.high;\n\n        // validate values\n        lowerValue = this.validateValue(SliderThumb.Lower, Number(lowerValue.toFixed(4)));\n        upperValue = this.validateValue(SliderThumb.Upper, Number(upperValue.toFixed(4)));\n\n        // calculate the positions as percentages\n        let /** @type {?} */ lowerPosition = (((lowerValue - this.options.track.min) / (this.options.track.max - this.options.track.min)) * 100);\n        let /** @type {?} */ upperPosition = (((upperValue - this.options.track.min) / (this.options.track.max - this.options.track.min)) * 100);\n\n        // update thumb positions\n        this.thumbs.lower.position = lowerPosition;\n        this.thumbs.upper.position = upperPosition;\n\n        // calculate the track sizes\n        this.tracks.lower.size = lowerPosition;\n        this.tracks.middle.size = upperPosition - lowerPosition;\n        this.tracks.upper.size = this.options.type === SliderType.Value ? 100 - lowerPosition : 100 - upperPosition;\n\n        // update the value input\n        this.setValue(lowerValue, upperValue);\n    }\n/**\n * @param {?} low\n * @param {?=} high\n * @return {?}\n */\nprivate setValue(low: number, high?: number): void {\n\n        this.thumbs.lower.value = low;\n        this.thumbs.upper.value = high;\n\n        let /** @type {?} */ previousValue = this.clone(this._value);\n\n        this.value = this.options.type === SliderType.Value ? low : { low: low, high: high };\n\n        // call the event emitter if changes occured\n        if (this.detectValueChange(this.value, previousValue)) {\n            this.valueChange.emit(this.clone(this.value));\n\n            this.updateTooltipText(SliderThumb.Lower);\n            this.updateTooltipText(SliderThumb.Upper);\n        } else {\n            this.valueChange.emit(this.clone(this.value));\n        }\n    }\n/**\n * @param {?} thumb\n * @param {?} value\n * @return {?}\n */\nprivate setThumbValue(thumb: SliderThumb, value: number): void {\n\n        // update the thumb value\n        this.getThumbState(thumb).value = value;\n\n        // forward these changes to the value\n        this.setValue(this.thumbs.lower.value, this.thumbs.upper.value);\n    }\n/**\n * @return {?}\n */\nprivate updateTicks(): void {\n\n        // get tick options\n        const /** @type {?} */ majorOptions = this.options.track.ticks.major;\n        const /** @type {?} */ minorOptions = this.options.track.ticks.minor;\n\n        // check if we should show ticks\n        if (majorOptions.show === false && minorOptions.show === false) {\n            this.ticks = [];\n        }\n\n        // create ticks for both major and minor - only get the ones to be shown\n        const /** @type {?} */ majorTicks = this.getTicks(majorOptions, SliderTickType.Major).filter(tick => tick.showTicks);\n        const /** @type {?} */ minorTicks = this.getTicks(minorOptions, SliderTickType.Minor).filter(tick => tick.showTicks);\n\n        // remove any minor ticks that are on a major interval\n        this.ticks = this.unionTicks(majorTicks, minorTicks);\n    }\n/**\n * @return {?}\n */\nprivate updateTrackColors(): void {\n\n        // get colors for each part of the track\n        const /** @type {?} */ lower = this.options.track.colors.lower;\n        const /** @type {?} */ range = this.options.track.colors.range;\n        const /** @type {?} */ higher = this.options.track.colors.higher;\n\n        // update the controller value\n        this.tracks.lower.color = typeof lower === 'string' ? lower : `linear-gradient(to right, ${lower.join(', ')})`;\n        this.tracks.middle.color = typeof range === 'string' ? range : `linear-gradient(to right, ${range.join(', ')})`;\n        this.tracks.upper.color = typeof higher === 'string' ? higher : `linear-gradient(to right, ${higher.join(', ')})`;\n    }\n/**\n * @param {?} steps\n * @return {?}\n */\nprivate getSteps(steps: number | number[]): number[] {\n\n        // if they are already an array just return it\n        if (steps instanceof Array) {\n            return steps;\n        }\n\n        let /** @type {?} */ output: number[] = [];\n\n        // otherwise calculate the steps\n        for (let /** @type {?} */ idx = this.options.track.min; idx <= this.options.track.max; idx += steps) {\n            output.push(idx);\n        }\n\n        return output;\n    }\n/**\n * @param {?} options\n * @param {?} type\n * @return {?}\n */\nprivate getTicks(options: SliderTickOptions, type: SliderTickType): SliderTick[] {\n\n        // create an array to store the ticks and step points\n        let /** @type {?} */ steps = this.getSteps(options.steps);\n\n        // get some chart options\n        let /** @type {?} */ min = this.options.track.min;\n        let /** @type {?} */ max = this.options.track.max;\n\n        // convert each step to a slider tick and remove invalid ticks\n        return steps.map(step => {\n            return {\n                showTicks: options.show,\n                showLabels: options.labels,\n                type: type,\n                position: ((step - min) / (max - min)) * 100,\n                value: step,\n                label: options.formatter(step)\n            };\n        }).filter(tick => tick.position >= 0 && tick.position <= 100);\n    }\n/**\n * @param {?} majorTicks\n * @param {?} minorTicks\n * @return {?}\n */\nprivate unionTicks(majorTicks: SliderTick[], minorTicks: SliderTick[]): SliderTick[] {\n\n        // get all ticks combined removing any minor ticks with the same value as major ticks\n        return majorTicks.concat(minorTicks)\n            .filter((tick, index, array) => tick.type === SliderTickType.Major || !array.find(tk => tk.type === SliderTickType.Major && tk.position === tick.position))\n            .sort((t1, t2) => t1.value - t2.value);\n    }\n/**\n * @template T\n * @param {?} destination\n * @param {?} source\n * @return {?}\n */\nprivate deepMerge<T>(destination: T, source: T): T {\n\n        // loop though all of the properties in the source object\n        for (let /** @type {?} */ prop in source) {\n\n            // check if the destination object has the property\n            if (!destination.hasOwnProperty(prop)) {\n                // copy the property across\n                destination[prop] = source[prop];\n                continue;\n            }\n\n            // if the property exists and is not an object then skip\n            if (typeof destination[prop] !== 'object') {\n                continue;\n            }\n\n            // check if property is an array\n            if (destination[prop] instanceof Array) {\n                continue;\n            }\n\n            // if it is an object then perform a recursive check\n            destination[prop] = this.deepMerge(destination[prop], source[prop]);\n        }\n\n        return destination;\n    }\n/**\n * @param {?} value1\n * @param {?} value2\n * @return {?}\n */\nprivate detectValueChange(value1: number | SliderValue, value2: number | SliderValue): boolean {\n\n        // compare two slider values\n        if (this.isSliderValue(value1) && this.isSliderValue(value2)) {\n\n            // references to the objects in the correct types\n            const /** @type {?} */ obj1 = /** @type {?} */(( value1 as SliderValue));\n            const /** @type {?} */ obj2 = /** @type {?} */(( value2 as SliderValue));\n\n            return obj1.low !== obj2.low || obj1.high !== obj2.high;\n        }\n\n        // if not a slider value - should be number of nullable type - compare normally\n        return value1 !== value2;\n    }\n/**\n * Determines whether or not an object conforms to the\n * SliderValue interface.\n * @param {?} value - The object to check - this must be type any\n * @return {?}\n */\nprivate isSliderValue(value: any): boolean {\n\n        // check if is an object\n        if (typeof value !== 'object') {\n            return false;\n        }\n\n        // next check if it contains the necessary properties\n        return 'low' in value && 'high' in value;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nprivate clone(value: number | SliderValue): number | SliderValue {\n\n        // if it is not an object simply return the value\n        if (typeof value !== 'object') {\n            return value;\n        }\n\n        // create a new object from the existing one\n        const /** @type {?} */ instance = { ...value };\n\n        // delete remove the value from the old object\n        value = undefined;\n\n        // return the new instance of the object\n        return instance;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-slider',\n    template: `\n      <div class=\"track\" #track [class.narrow]=\"options.track.height === sliderSize.Narrow\" [class.wide]=\"options.track.height === sliderSize.Wide\" [class.range]=\"options.type === sliderType.Range\">\n\n          <!-- Section Beneath Lower Thumb -->\n          <div class=\"track-section track-lower\" [style.flex-grow]=\"tracks.lower.size\" [style.background]=\"tracks.lower.color\"></div>\n\n          <!-- Lower Thumb Button / Line -->\n          <div class=\"thumb lower\" uxDrag\n              [style.left.%]=\"thumbs.lower.position\" \n              [class.active]=\"thumbs.lower.drag\" \n              [style.z-index]=\"thumbs.lower.order\" \n              [class.button]=\"options.handles.style === sliderStyle.Button\"\n              [class.line]=\"options.handles.style === sliderStyle.Line\" \n              [class.narrow]=\"options.track.height === sliderSize.Narrow\"\n              [class.wide]=\"options.track.height === sliderSize.Wide\" \n              (dragstart)=\"thumbEvent(sliderThumb.Lower, sliderThumbEvent.DragStart)\"\n              (drag)=\"updateThumbPosition($event, sliderThumb.Lower)\"\n              (dragend)=\"thumbEvent(sliderThumb.Lower, sliderThumbEvent.DragEnd)\"\n              (mouseenter)=\"thumbEvent(sliderThumb.Lower, sliderThumbEvent.MouseOver)\"\n              (mouseleave)=\"thumbEvent(sliderThumb.Lower, sliderThumbEvent.MouseLeave)\">\n\n              <!-- Lower Thumb Callout -->\n              <div class=\"tooltip top tooltip-lower\" #lowerTooltip \n                  [class.tooltip-dynamic]=\"options.handles.callout.trigger === sliderCalloutTrigger.Dynamic && thumbs.lower.drag === false\"\n                  [style.opacity]=\"tooltips.lower.visible ? 1 : 0\" \n                  [style.left.px]=\"tooltips.lower.position\">\n\n                  <div class=\"tooltip-arrow\" [style.border-top-color]=\"options.handles.callout.background\"></div>\n\n                  <div class=\"tooltip-inner\" \n                      [style.background-color]=\"options.handles.callout.background\" \n                      [style.color]=\"options.handles.callout.color\">\n                      {{ tooltips.lower.label }}\n                  </div>\n              </div>\n\n          </div>\n\n          <!-- Section of Track Between Lower and Upper Thumbs -->\n          <div class=\"track-section track-range\" *ngIf=\"options.type === sliderType.Range\" [style.flex-grow]=\"tracks.middle.size\" [style.background]=\"tracks.middle.color\">\n          </div>\n\n          <!-- Upper Thumb Button / Line -->\n          <div class=\"thumb upper\" uxDrag\n              [hidden]=\"options.type !== sliderType.Range\" \n              [class.active]=\"thumbs.upper.drag\" \n              [style.left.%]=\"thumbs.upper.position\" \n              [style.z-index]=\"thumbs.upper.order\"\n              [class.button]=\"options.handles.style === sliderStyle.Button\" \n              [class.line]=\"options.handles.style === sliderStyle.Line\"\n              [class.narrow]=\"options.track.height === sliderSize.Narrow\" \n              [class.wide]=\"options.track.height === sliderSize.Wide\" \n              (dragstart)=\"thumbEvent(sliderThumb.Upper, sliderThumbEvent.DragStart)\"\n              (drag)=\"updateThumbPosition($event, sliderThumb.Upper)\"\n              (dragend)=\"thumbEvent(sliderThumb.Upper, sliderThumbEvent.DragEnd)\"\n              (mouseenter)=\"thumbEvent(sliderThumb.Upper, sliderThumbEvent.MouseOver)\"\n              (mouseleave)=\"thumbEvent(sliderThumb.Upper, sliderThumbEvent.MouseLeave)\">\n\n              <!-- Upper Thumb Callout -->\n              <div class=\"tooltip top tooltip-upper\" #upperTooltip \n                  [class.tooltip-dynamic]=\"options.handles.callout.trigger === sliderCalloutTrigger.Dynamic && thumbs.upper.drag === false\"\n                  [style.opacity]=\"tooltips.upper.visible ? 1 : 0\" \n                  [style.left.px]=\"tooltips.upper.position\">\n\n                  <div class=\"tooltip-arrow\" [style.border-top-color]=\"options.handles.callout.background\"></div>\n\n                  <div class=\"tooltip-inner\" \n                      *ngIf=\"options.type === sliderType.Range\" \n                      [style.background-color]=\"options.handles.callout.background\"\n                      [style.color]=\"options.handles.callout.color\">\n                      {{ tooltips.upper.label }}\n                  </div>\n              </div>\n          </div>\n\n          <!-- Section of Track Abover Upper Thumb -->\n          <div class=\"track-section track-higher\" [style.flex-grow]=\"tracks.upper.size\" [style.background]=\"tracks.upper.color\"></div>\n\n      </div>\n\n      <!-- Chart Ticks and Tick Labels -->\n      <div class=\"tick-container\" \n          *ngIf=\"(options.track.ticks.major.show || options.track.ticks.minor.show) && options.handles.callout.trigger !== sliderCalloutTrigger.Dynamic\" \n          [class.show-labels]=\"options.track.ticks.major.labels || options.track.ticks.minor.labels\">\n\n          <div class=\"tick\" *ngFor=\"let tick of ticks\" [class.major]=\"tick.type === sliderTickType.Major\" [class.minor]=\"tick.type === sliderTickType.Minor\"\n              [style.left.%]=\"tick.position\" [hidden]=\"!tick.showTicks\">\n              <div class=\"tick-indicator\"></div>\n              <div class=\"tick-label\" [hidden]=\"!tick.showLabels\">{{ tick.label }}</div>\n          </div>\n      </div>\n    `,\n    changeDetection: ChangeDetectionStrategy.OnPush\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ColorService, },\n{type: ChangeDetectorRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'value': [{ type: Input },],\n'options': [{ type: Input },],\n'valueChange': [{ type: Output },],\n'lowerTooltip': [{ type: ViewChild, args: ['lowerTooltip', ] },],\n'upperTooltip': [{ type: ViewChild, args: ['upperTooltip', ] },],\n'track': [{ type: ViewChild, args: ['track', ] },],\n};\n}\n\nfunction SliderComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nSliderComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSliderComponent.ctorParameters;\n/** @type {?} */\nSliderComponent.propDecorators;\n/** @type {?} */\nSliderComponent.prototype.value;\n/** @type {?} */\nSliderComponent.prototype.options;\n/** @type {?} */\nSliderComponent.prototype.valueChange;\n/** @type {?} */\nSliderComponent.prototype.lowerTooltip;\n/** @type {?} */\nSliderComponent.prototype.upperTooltip;\n/** @type {?} */\nSliderComponent.prototype.track;\n/** @type {?} */\nSliderComponent.prototype._value;\n/** @type {?} */\nSliderComponent.prototype.sliderType;\n/** @type {?} */\nSliderComponent.prototype.sliderStyle;\n/** @type {?} */\nSliderComponent.prototype.sliderSize;\n/** @type {?} */\nSliderComponent.prototype.sliderThumb;\n/** @type {?} */\nSliderComponent.prototype.sliderTickType;\n/** @type {?} */\nSliderComponent.prototype.sliderThumbEvent;\n/** @type {?} */\nSliderComponent.prototype.sliderCalloutTrigger;\n/** @type {?} */\nSliderComponent.prototype.tracks;\n/** @type {?} */\nSliderComponent.prototype.tooltips;\n/** @type {?} */\nSliderComponent.prototype.thumbs;\n/** @type {?} */\nSliderComponent.prototype.ticks;\n/** @type {?} */\nSliderComponent.prototype.defaultOptions;\n/** @type {?} */\nSliderComponent.prototype._changeDetectorRef;\n}\n\nexport type SliderType = number;\nexport let SliderType: any = {};\nSliderType.Value = 0;\nSliderType.Range = 1;\nSliderType[SliderType.Value] = \"Value\";\nSliderType[SliderType.Range] = \"Range\";\n\nexport type SliderStyle = number;\nexport let SliderStyle: any = {};\nSliderStyle.Button = 0;\nSliderStyle.Line = 1;\nSliderStyle[SliderStyle.Button] = \"Button\";\nSliderStyle[SliderStyle.Line] = \"Line\";\n\nexport type SliderSize = number;\nexport let SliderSize: any = {};\nSliderSize.Narrow = 0;\nSliderSize.Wide = 1;\nSliderSize[SliderSize.Narrow] = \"Narrow\";\nSliderSize[SliderSize.Wide] = \"Wide\";\n\nexport type SliderCalloutTrigger = number;\nexport let SliderCalloutTrigger: any = {};\nSliderCalloutTrigger.None = 0;\nSliderCalloutTrigger.Hover = 1;\nSliderCalloutTrigger.Drag = 2;\nSliderCalloutTrigger.Persistent = 3;\nSliderCalloutTrigger.Dynamic = 4;\nSliderCalloutTrigger[SliderCalloutTrigger.None] = \"None\";\nSliderCalloutTrigger[SliderCalloutTrigger.Hover] = \"Hover\";\nSliderCalloutTrigger[SliderCalloutTrigger.Drag] = \"Drag\";\nSliderCalloutTrigger[SliderCalloutTrigger.Persistent] = \"Persistent\";\nSliderCalloutTrigger[SliderCalloutTrigger.Dynamic] = \"Dynamic\";\n\n\nexport interface SliderValue {\n    low: number;\n    high: number;\n}\nexport type SliderSnap = number;\nexport let SliderSnap: any = {};\nSliderSnap.None = 0;\nSliderSnap.Minor = 1;\nSliderSnap.Major = 2;\nSliderSnap.All = 3;\nSliderSnap[SliderSnap.None] = \"None\";\nSliderSnap[SliderSnap.Minor] = \"Minor\";\nSliderSnap[SliderSnap.Major] = \"Major\";\nSliderSnap[SliderSnap.All] = \"All\";\n\nexport type SliderTickType = number;\nexport let SliderTickType: any = {};\nSliderTickType.Minor = 0;\nSliderTickType.Major = 1;\nSliderTickType[SliderTickType.Minor] = \"Minor\";\nSliderTickType[SliderTickType.Major] = \"Major\";\n\n\nexport interface SliderOptions {\n    type?: SliderType;\n    handles?: SliderHandleOptions;\n    track?: SliderTrackOptions;\n}\n\nexport interface SliderHandleOptions {\n    style?: SliderStyle;\n    callout?: SliderCallout;\n}\n\nexport interface SliderTrackOptions {\n    height?: SliderSize;\n    min?: number;\n    max?: number;\n    ticks?: SliderTicksOptions;\n    colors?: SliderTrackColors;\n}\n\nexport interface SliderTicksOptions {\n    snap?: SliderSnap;\n    major?: SliderTickOptions;\n    minor?: SliderTickOptions;\n}\n\nexport interface SliderTickOptions {\n    show?: boolean;\n    steps?: number | number[];\n    labels?: boolean;\n    formatter?: (value: number) => string | number;\n}\n\nexport interface SliderTick {\n    showTicks: boolean;\n    showLabels: boolean;\n    type: SliderTickType;\n    position: number;\n    value: number;\n    label: string | number;\n}\n\nexport interface SliderTrackColors {\n    lower?: string | string[];\n    range?: string | string[];\n    higher?: string | string[];\n}\n\nexport interface SliderCallout {\n    trigger?: SliderCalloutTrigger;\n    background?: string;\n    color?: string;\n    formatter?: (value: number) => string | number;\n}\nexport type SliderThumbEvent = number;\nexport let SliderThumbEvent: any = {};\nSliderThumbEvent.None = 0;\nSliderThumbEvent.MouseOver = 1;\nSliderThumbEvent.MouseLeave = 2;\nSliderThumbEvent.DragStart = 3;\nSliderThumbEvent.DragEnd = 4;\nSliderThumbEvent[SliderThumbEvent.None] = \"None\";\nSliderThumbEvent[SliderThumbEvent.MouseOver] = \"MouseOver\";\nSliderThumbEvent[SliderThumbEvent.MouseLeave] = \"MouseLeave\";\nSliderThumbEvent[SliderThumbEvent.DragStart] = \"DragStart\";\nSliderThumbEvent[SliderThumbEvent.DragEnd] = \"DragEnd\";\n\nexport type SliderThumb = number;\nexport let SliderThumb: any = {};\nSliderThumb.Lower = 0;\nSliderThumb.Upper = 1;\nSliderThumb[SliderThumb.Lower] = \"Lower\";\nSliderThumb[SliderThumb.Upper] = \"Upper\";\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ColorServiceModule } from '../../services/color/index';\n\nimport { SliderComponent } from './slider.component';\nimport { DragModule } from '../../directives/drag/index';\nexport class SliderModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        ColorServiceModule,\n        DragModule\n    ],\n    exports: [SliderComponent],\n    declarations: [SliderComponent]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SliderModule_tsickle_Closure_declarations() {\n/** @type {?} */\nSliderModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSliderModule.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, ChangeDetectionStrategy } from '@angular/core';\nimport { ColorService } from '../../services/color/index';\nimport { ColorIdentifier } from '../../index';\nexport class SparkComponent {\n\n    values: number[] = [];\n\n     barHeight: number = 10;\n     inlineLabel: string;\n     topLeftLabel: string;\n     topRightLabel: string;\n     bottomLeftLabel: string;\n     bottomRightLabel: string;\n     tooltip: string;\nprivate _trackColor: string;\nprivate _theme: ColorIdentifier = 'primary';\nprivate _barColor: string | string[] = [];\n/**\n * @param {?} value\n * @return {?}\n */\nset theme(value: string) {\n        this._theme = this._colorService.resolveColorName(value);\n    }\n/**\n * @return {?}\n */\nget theme(): string {\n        return this._theme;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset trackColor(value: string) {\n        this._trackColor = this._colorService.resolve(value);\n    }\n/**\n * @return {?}\n */\nget trackColor(): string {\n        return this._trackColor;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset barColor(value: string | string[]) {\n\n        if (Array.isArray(value)) {\n            this._barColor = value.map(color => this._colorService.resolve(color));\n        } else {\n            this._barColor = [this._colorService.resolve(value)];\n        }\n    }\n/**\n * @return {?}\n */\nget barColor(): string | string[] {\n        return this._barColor;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset value(value: number | number[]) {\n\n        // ensure 'value' is an array at this point\n        const /** @type {?} */ values = Array.isArray(value) ? value : [value];\n\n        // get the total value of all lines\n        const /** @type {?} */ total = Math.max(values.reduce((previous, current) => previous + current, 0), 100);\n\n        // figure out the percentages for each spark line\n        this.values = values.map(val => (val / total) * 100);\n    }\n/**\n * @return {?}\n */\nget value() {\n        return this.values;\n    }\n/**\n * @param {?} _colorService\n */\nconstructor(private _colorService: ColorService) { }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-spark',\n    template: `\n      <!-- Inline Spark Chart -->\n      <div *ngIf=\"inlineLabel\" class=\"ux-spark-inline-label-container\">\n\n          <div class=\"ux-spark-inline-label-left\" [innerHtml]=\"inlineLabel\"></div>\n\n          <div class=\"ux-spark-line\">\n\n              <div class=\"ux-spark-top-container\" *ngIf=\"topLeftLabel || topRightLabel\">\n                  <div class=\"ux-spark-label-top-left\" *ngIf=\"topLeftLabel\" [innerHtml]=\"topLeftLabel\"></div>\n                  <div class=\"ux-spark-label-top-right\" *ngIf=\"topRightLabel\" [innerHtml]=\"topRightLabel\"></div>\n              </div>\n\n              <div class=\"ux-spark ux-inline ux-spark-theme-{{theme}}\" [style.height.px]=\"barHeight\" [style.backgroundColor]=\"trackColor\" [tooltip]=\"tooltip\">\n                  <div class=\"ux-spark-bar\" *ngFor=\"let line of values; let idx = index;\" [style.width.%]=\"line\" [style.backgroundColor]=\"barColor[idx]\"></div>\n              </div>\n\n              <div class=\"ux-spark-bottom-container\" *ngIf=\"bottomLeftLabel || bottomRightLabel\">\n                  <div class=\"ux-spark-label-bottom-left\" *ngIf=\"bottomLeftLabel\" [innerHtml]=\"bottomLeftLabel\"></div>\n                  <div class=\"ux-spark-label-bottom-right\" *ngIf=\"bottomRightLabel\" [innerHtml]=\"bottomRightLabel\"></div>\n              </div>\n\n          </div>\n      </div>\n\n      <!-- End Inline Spark Chart -->\n\n\n      <!-- Non Inline Spark Chart -->\n      <div *ngIf=\"!inlineLabel\">\n\n          <div class=\"ux-spark-top-container\" *ngIf=\"topLeftLabel || topRightLabel\">\n              <div class=\"ux-spark-label-top-left\" *ngIf=\"topLeftLabel\" [innerHtml]=\"topLeftLabel\"></div>\n              <div class=\"ux-spark-label-top-right\" *ngIf=\"topRightLabel\" [innerHtml]=\"topRightLabel\"></div>\n          </div>\n\n          <div class=\"ux-spark ux-spark-theme-{{theme}}\" [class.ux-spark-multi-value]=\"values.length > 1\" [style.height.px]=\"barHeight\" [style.backgroundColor]=\"trackColor\"\n              [tooltip]=\"tooltip\">\n              <div class=\"ux-spark-bar\" *ngFor=\"let line of value; let idx = index;\" [style.width.%]=\"line\" [style.backgroundColor]=\"barColor[idx]\"></div>\n          </div>\n\n          <div class=\"ux-spark-bottom-container\" *ngIf=\"bottomLeftLabel || bottomRightLabel\">\n              <div class=\"ux-spark-label-bottom-left\" *ngIf=\"bottomLeftLabel\" [innerHtml]=\"bottomLeftLabel\"></div>\n              <div class=\"ux-spark-label-bottom-right\" *ngIf=\"bottomRightLabel\" [innerHtml]=\"bottomRightLabel\"></div>\n          </div>\n      </div>\n\n      <!-- End Non Inline Spark Chart -->\n    `,\n    changeDetection: ChangeDetectionStrategy.OnPush\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ColorService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'barHeight': [{ type: Input },],\n'inlineLabel': [{ type: Input },],\n'topLeftLabel': [{ type: Input },],\n'topRightLabel': [{ type: Input },],\n'bottomLeftLabel': [{ type: Input },],\n'bottomRightLabel': [{ type: Input },],\n'tooltip': [{ type: Input },],\n'theme': [{ type: Input },],\n'trackColor': [{ type: Input },],\n'barColor': [{ type: Input },],\n'value': [{ type: Input },],\n};\n}\n\nfunction SparkComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nSparkComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSparkComponent.ctorParameters;\n/** @type {?} */\nSparkComponent.propDecorators;\n/** @type {?} */\nSparkComponent.prototype.values;\n/** @type {?} */\nSparkComponent.prototype.barHeight;\n/** @type {?} */\nSparkComponent.prototype.inlineLabel;\n/** @type {?} */\nSparkComponent.prototype.topLeftLabel;\n/** @type {?} */\nSparkComponent.prototype.topRightLabel;\n/** @type {?} */\nSparkComponent.prototype.bottomLeftLabel;\n/** @type {?} */\nSparkComponent.prototype.bottomRightLabel;\n/** @type {?} */\nSparkComponent.prototype.tooltip;\n/** @type {?} */\nSparkComponent.prototype._trackColor;\n/** @type {?} */\nSparkComponent.prototype._theme;\n/** @type {?} */\nSparkComponent.prototype._barColor;\n/** @type {?} */\nSparkComponent.prototype._colorService;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SparkComponent } from './spark.component';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { ColorServiceModule } from '../../services/color/index';\nexport class SparkModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        ColorServiceModule,\n        TooltipModule.forRoot()\n    ],\n    exports: [SparkComponent],\n    declarations: [SparkComponent]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SparkModule_tsickle_Closure_declarations() {\n/** @type {?} */\nSparkModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSparkModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component } from '@angular/core';\nexport class TimelineComponent {\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-timeline',\n    template: `\n      <div class=\"timeline\">\n          <ng-content></ng-content>\n      </div>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction TimelineComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nTimelineComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTimelineComponent.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input } from '@angular/core';\nexport class TimelineEventComponent {\n\n     badgeColor: string;\n     badgeTitle: string;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-timeline-event',\n    template: `\n      <div class=\"timeline-badge\" [ngClass]=\"badgeColor\">\n          <span>{{badgeTitle}}</span>\n      </div>\n      <div class=\"timeline-panel\">\n          <ng-content></ng-content>\n      </div>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'badgeColor': [{ type: Input },],\n'badgeTitle': [{ type: Input },],\n};\n}\n\nfunction TimelineEventComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nTimelineEventComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTimelineEventComponent.ctorParameters;\n/** @type {?} */\nTimelineEventComponent.propDecorators;\n/** @type {?} */\nTimelineEventComponent.prototype.badgeColor;\n/** @type {?} */\nTimelineEventComponent.prototype.badgeTitle;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TimelineComponent } from './timeline.component';\nimport { TimelineEventComponent } from './timeline-event/timeline-event.component';\nexport class TimelineModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule\n    ],\n    exports: [\n        TimelineComponent,\n        TimelineEventComponent\n    ],\n    declarations: [\n        TimelineComponent,\n        TimelineEventComponent\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction TimelineModule_tsickle_Closure_declarations() {\n/** @type {?} */\nTimelineModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTimelineModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, Output, forwardRef, EventEmitter } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\nconst /** @type {?} */ TOGGLESWITCH_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => ToggleSwitchComponent),\n    multi: true\n};\nexport class ToggleSwitchComponent implements ControlValueAccessor {\n\n     name: string = '';\n     disabled: boolean = false;\n     clickable: boolean = true;\n\n     valueChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n/**\n * @return {?}\n */\nget value() {\n        return this._value;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset value(value: boolean) {\n        this._value = value;\n\n        // Update value output\n        this.valueChange.emit(value);\n\n        // Notify ngModel\n        this.onChangeCallback(value);\n    }\nprivate _value: boolean = false;\n\n    onTouchedCallback: () => void = () => { };\n    onChangeCallback: (_: any) => void = () => { };\n/**\n * @return {?}\n */\ntoggleChecked() {\n        if (!this.disabled && this.clickable) {\n            this.value = !this.value;\n        }\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nkeydown(event: KeyboardEvent) {\n        // if spacebar is pressed toggle state\n        if (event.keyCode === 32) {\n            this.toggleChecked();\n            event.stopPropagation();\n            event.preventDefault();\n        }\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nwriteValue(value: any) {\n        this.value = !!value;\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnChange(fn: any) {\n        this.onChangeCallback = fn;\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnTouched(fn: any) {\n        this.onTouchedCallback = fn;\n    }\n/**\n * @param {?} isDisabled\n * @return {?}\n */\nsetDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-toggleswitch',\n    template: `\n      <div class=\"ux-toggleswitch\" \n        tabindex=\"0\"\n        (keydown)=\"keydown($event)\"\n        [class.checked]=\"value === true\"\n        [class.disabled]=\"disabled === true\">\n\n        <span class=\"ux-toggleswitch-bg\"></span>\n  \n        <span class=\"ux-toggleswitch-nub\"></span>\n\n        <input type=\"checkbox\" \n          role=\"checkbox\"\n          [name]=\"name\" \n          [checked]=\"value === true\"\n          [disabled]=\"disabled === true\"\n          tabindex=\"-1\" />\n      </div>\n\n      <div class=\"ux-toggleswitch-content\">\n        <ng-content></ng-content>\n      </div>\n    `,\n    providers: [TOGGLESWITCH_VALUE_ACCESSOR],\n    host: {\n        '(click)': 'toggleChecked()'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'name': [{ type: Input },],\n'disabled': [{ type: Input },],\n'clickable': [{ type: Input },],\n'valueChange': [{ type: Output },],\n'value': [{ type: Input },],\n};\n}\n\nfunction ToggleSwitchComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nToggleSwitchComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nToggleSwitchComponent.ctorParameters;\n/** @type {?} */\nToggleSwitchComponent.propDecorators;\n/** @type {?} */\nToggleSwitchComponent.prototype.name;\n/** @type {?} */\nToggleSwitchComponent.prototype.disabled;\n/** @type {?} */\nToggleSwitchComponent.prototype.clickable;\n/** @type {?} */\nToggleSwitchComponent.prototype.valueChange;\n/** @type {?} */\nToggleSwitchComponent.prototype._value;\n/** @type {?} */\nToggleSwitchComponent.prototype.onTouchedCallback;\n/** @type {?} */\nToggleSwitchComponent.prototype.onChangeCallback;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { ToggleSwitchComponent } from './toggleswitch.component';\nexport class ToggleSwitchModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [ FormsModule ],\n    exports: [ ToggleSwitchComponent ],\n    declarations: [ ToggleSwitchComponent ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ToggleSwitchModule_tsickle_Closure_declarations() {\n/** @type {?} */\nToggleSwitchModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nToggleSwitchModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModel } from '@angular/forms';\nimport { Directive, ElementRef, HostListener, EventEmitter, Output, HostBinding, Optional } from '@angular/core';\n\nconst /** @type {?} */ KEYS = {\n    ENTER: 13,\n    ESCAPE: 27\n};\nexport class ToolbarSearchFieldDirective {\n\n    \n    cancel = new EventEmitter<void>();\n\n    \n    submit = new EventEmitter<string>();\n/**\n * @return {?}\n */\nget text(): string {\n        // Use ngModel if specified on the host; otherwise read the DOM\n        if (this._ngModel) {\n            return this._ngModel.value;\n        }\n\n        return this._elementRef.nativeElement.value;\n    }\n/**\n * @param {?} _elementRef\n * @param {?} _ngModel\n */\nconstructor(\nprivate _elementRef: ElementRef,\nprivate _ngModel: NgModel) { }\n/**\n * @return {?}\n */\nfocus() {\n        setTimeout(() => {\n            this._elementRef.nativeElement.focus();\n        });\n    }\n/**\n * @return {?}\n */\nblur() {\n        setTimeout(() => {\n            this._elementRef.nativeElement.blur();\n        });\n    }\n/**\n * @return {?}\n */\nclear() {\n        // Use ngModel if specified on the host; otherwise use the DOM\n        if (this._ngModel) {\n            this._ngModel.reset();\n        } else {\n            this._elementRef.nativeElement.value = '';\n        }\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nkeydownHandler(event: KeyboardEvent) {\n        setTimeout(() => {\n            if (event.keyCode === KEYS.ENTER) {\n                this.submit.emit(this.text);\n            } else if (event.keyCode === KEYS.ESCAPE) {\n                this._elementRef.nativeElement.blur();\n                this.cancel.emit();\n            }\n        });\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxToolbarSearchField]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: NgModel, decorators: [{ type: Optional }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'cancel': [{ type: Output },],\n'submit': [{ type: Output },],\n'keydownHandler': [{ type: HostListener, args: ['keydown', ['$event'], ] },],\n};\n}\n\nfunction ToolbarSearchFieldDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nToolbarSearchFieldDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nToolbarSearchFieldDirective.ctorParameters;\n/** @type {?} */\nToolbarSearchFieldDirective.propDecorators;\n/** @type {?} */\nToolbarSearchFieldDirective.prototype.cancel;\n/** @type {?} */\nToolbarSearchFieldDirective.prototype.submit;\n/** @type {?} */\nToolbarSearchFieldDirective.prototype._elementRef;\n/** @type {?} */\nToolbarSearchFieldDirective.prototype._ngModel;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, HostListener, Output, EventEmitter, ElementRef } from '@angular/core';\nexport class ToolbarSearchButtonDirective {\n\n    \n    clicked = new EventEmitter<void>();\n/**\n * @return {?}\n */\nget width(): number {\n        return this._elementRef.nativeElement.offsetWidth;\n    }\n/**\n * @param {?} _elementRef\n */\nconstructor(private _elementRef: ElementRef) { }\n/**\n * @return {?}\n */\nclickHandler() {\n        this.clicked.emit();\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxToolbarSearchButton]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'clicked': [{ type: Output },],\n'clickHandler': [{ type: HostListener, args: ['click', ] },],\n};\n}\n\nfunction ToolbarSearchButtonDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nToolbarSearchButtonDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nToolbarSearchButtonDirective.ctorParameters;\n/** @type {?} */\nToolbarSearchButtonDirective.propDecorators;\n/** @type {?} */\nToolbarSearchButtonDirective.prototype.clicked;\n/** @type {?} */\nToolbarSearchButtonDirective.prototype._elementRef;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {\n    Component,\n    ContentChild,\n    AfterContentInit,\n    HostBinding,\n    HostListener,\n    EventEmitter,\n    Output,\n    Inject,\n    ElementRef,\n    Input\n} from '@angular/core';\nimport {\n    AnimationEvent,\n    trigger,\n    transition,\n    query,\n    style,\n    animate,\n    state\n} from '@angular/animations';\nimport { DOCUMENT } from '@angular/common';\n\nimport { ToolbarSearchFieldDirective } from './toolbar-search-field.directive';\nimport { ToolbarSearchButtonDirective } from './toolbar-search-button.directive';\nimport { ColorService } from '../../services/color/color.service';\nexport class ToolbarSearchComponent implements AfterContentInit {\n/**\n * @return {?}\n */\nget expanded(): boolean {\n        return this._expanded;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset expanded(value: boolean) {\n        this._expanded = value;\n\n        this.expandedChange.emit(value);\n\n        if (value) {\n            // Set focus on the input when expanded\n            this._field.focus();\n        } else {\n            // Clear text when contracted\n            this._field.clear();\n\n            // Remove focus (works around an IE issue where the caret remains visible)\n            this._field.blur();\n        }\n    }\n\n    \n    \n    direction: 'left' | 'right' = 'right';\n\n    \n    \n    inverse = false;\n/**\n * @param {?} value\n * @return {?}\n */\nset background(value: string) {\n        this._backgroundColor = this._colorService.resolve(value) || 'transparent';\n    }\n\n    \n    expandedChange = new EventEmitter<boolean>();\n\n    \n    search = new EventEmitter<string>();\nprivate _expanded: boolean = false;\n/**\n * @return {?}\n */\nprivate get _expandedAnimation(): any {\n        return {\n            value: this.expanded ? 'expanded' : 'collapsed',\n            params: {\n                initialWidth: this._button.width + 'px'\n            }\n        };\n    }\nprivate _position = 'relative';\nprivate _backgroundColor = 'transparent';\nprivate _field: ToolbarSearchFieldDirective;\nprivate _button: ToolbarSearchButtonDirective;\nprivate _placeholder: HTMLElement;\nprivate _document: Document;\n/**\n * @param {?} _elementRef\n * @param {?} _colorService\n * @param {?} document\n */\nconstructor(\nprivate _elementRef: ElementRef,\nprivate _colorService: ColorService,\n         document: any) {\n        this._document = <Document>document;\n    }\n/**\n * @return {?}\n */\nngAfterContentInit() {\n        // Subscribe to the submit event on the input field, triggering the search event\n        this._field.submit.subscribe((text: string) => this.search.emit(text));\n\n        // Subscribe to cancel events coming from the input field\n        this._field.cancel.subscribe(() => (this.expanded = false));\n\n        // Subscribe to the button click event\n        this._button.clicked.subscribe(() => {\n            if (this.expanded && this._field.text) {\n                this.search.emit(this._field.text);\n            } else {\n                this.expanded = !this.expanded;\n            }\n        });\n\n        // Create placeholder element to avoid changing layout when switching to position: absolute\n        this.createPlaceholder();\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nanimationStart(event: AnimationEvent) {\n        if (event.toState === 'expanded') {\n            this._position = 'absolute';\n            this.enablePlaceholder(true);\n        }\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nanimationDone(event: AnimationEvent) {\n        if (event.toState === 'collapsed') {\n            this._position = 'relative';\n            this.enablePlaceholder(false);\n        }\n    }\n/**\n * @return {?}\n */\nprivate createPlaceholder() {\n        // Get width and height of the component\n        const /** @type {?} */ styles = getComputedStyle(this._elementRef.nativeElement);\n\n        // Create invisible div with the same dimensions\n        this._placeholder = this._document.createElement('div');\n        this._placeholder.style.display = 'none';\n        this._placeholder.style.width = this._button.width + 'px';\n        this._placeholder.style.height = styles.height;\n        this._placeholder.style.visibility = 'hidden';\n\n        // Add as a sibling\n        this._elementRef.nativeElement.parentNode.insertBefore(this._placeholder, this._elementRef.nativeElement);\n    }\n/**\n * @param {?} enabled\n * @return {?}\n */\nprivate enablePlaceholder(enabled: boolean) {\n        this._placeholder.style.display = (enabled ? 'inline-block' : 'none');\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-toolbar-search',\n    template: `<ng-content></ng-content>`,\n    animations: [\n        trigger('expanded', [\n            state(\n                'collapsed',\n                style({\n                    width: '{{initialWidth}}'\n                }),\n                {\n                    params: { initialWidth: '30px' }\n                }\n            ),\n            state(\n                'expanded',\n                style({\n                    width: '100%'\n                })\n            ),\n            transition('collapsed <=> expanded', [animate('0.3s ease-out')])\n        ])\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: ColorService, },\n{type: undefined, decorators: [{ type: Inject, args: [DOCUMENT, ] }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'expanded': [{ type: HostBinding, args: ['class.expanded', ] },{ type: Input },],\n'direction': [{ type: Input },{ type: HostBinding, args: ['class', ] },],\n'inverse': [{ type: Input },{ type: HostBinding, args: ['class.inverse', ] },],\n'background': [{ type: Input },],\n'expandedChange': [{ type: Output },],\n'search': [{ type: Output },],\n'_expandedAnimation': [{ type: HostBinding, args: ['@expanded', ] },],\n'_position': [{ type: HostBinding, args: ['style.position', ] },],\n'_backgroundColor': [{ type: HostBinding, args: ['style.background-color', ] },],\n'_field': [{ type: ContentChild, args: [ToolbarSearchFieldDirective, ] },],\n'_button': [{ type: ContentChild, args: [ToolbarSearchButtonDirective, ] },],\n'animationStart': [{ type: HostListener, args: ['@expanded.start', ['$event'], ] },],\n'animationDone': [{ type: HostListener, args: ['@expanded.done', ['$event'], ] },],\n};\n}\n\nfunction ToolbarSearchComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nToolbarSearchComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nToolbarSearchComponent.ctorParameters;\n/** @type {?} */\nToolbarSearchComponent.propDecorators;\n/** @type {?} */\nToolbarSearchComponent.prototype.direction;\n/** @type {?} */\nToolbarSearchComponent.prototype.inverse;\n/** @type {?} */\nToolbarSearchComponent.prototype.expandedChange;\n/** @type {?} */\nToolbarSearchComponent.prototype.search;\n/** @type {?} */\nToolbarSearchComponent.prototype._expanded;\n/** @type {?} */\nToolbarSearchComponent.prototype._position;\n/** @type {?} */\nToolbarSearchComponent.prototype._backgroundColor;\n/** @type {?} */\nToolbarSearchComponent.prototype._field;\n/** @type {?} */\nToolbarSearchComponent.prototype._button;\n/** @type {?} */\nToolbarSearchComponent.prototype._placeholder;\n/** @type {?} */\nToolbarSearchComponent.prototype._document;\n/** @type {?} */\nToolbarSearchComponent.prototype._elementRef;\n/** @type {?} */\nToolbarSearchComponent.prototype._colorService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ToolbarSearchComponent } from './toolbar-search.component';\nimport { ToolbarSearchFieldDirective } from './toolbar-search-field.directive';\nimport { ToolbarSearchButtonDirective } from './toolbar-search-button.directive';\n\nconst /** @type {?} */ DECLARATIONS = [\n    ToolbarSearchComponent,\n    ToolbarSearchFieldDirective,\n    ToolbarSearchButtonDirective\n];\nexport class ToolbarSearchModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule\n    ],\n    exports: DECLARATIONS,\n    declarations: DECLARATIONS,\n    providers: [],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ToolbarSearchModule_tsickle_Closure_declarations() {\n/** @type {?} */\nToolbarSearchModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nToolbarSearchModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Observer } from 'rxjs/Observer';\nimport'rxjs/add/observable/concat';\nexport class FrameExtractionService {\n/**\n * @param {?} source\n * @return {?}\n */\nprivate createVideoPlayer(source: string): HTMLVideoElement {\n        let /** @type {?} */ videoPlayer = document.createElement('video');\n        videoPlayer.preload = 'auto';\n        videoPlayer.src = source;\n        return videoPlayer;\n    }\n/**\n * @param {?} width\n * @param {?} height\n * @return {?}\n */\nprivate createCanvas(width: number, height: number): HTMLCanvasElement {\n        let /** @type {?} */ canvas = document.createElement('canvas');\n        canvas.width = width;\n        canvas.height = height;\n        return canvas;\n    }\n/**\n * @param {?} videoPlayer\n * @param {?} time\n * @return {?}\n */\nprivate goToFrame(videoPlayer: HTMLVideoElement, time: number): Observable<number> {\n        videoPlayer.currentTime = time;\n        return Observable.fromEvent(videoPlayer, time === 0 ? 'loadeddata' : 'seeked');\n    }\n/**\n * @param {?} videoPlayer\n * @param {?} canvas\n * @param {?} time\n * @param {?=} width\n * @param {?=} height\n * @return {?}\n */\nprivate getThumbnail(videoPlayer: HTMLVideoElement, canvas: HTMLCanvasElement, time: number, width: number = 160, height: number = 90): Observable<ExtractedFrame> {\n\n        return Observable.create((observer: Observer<ExtractedFrame>) => {\n\n            // go to specified frame\n            let /** @type {?} */ subscription = this.goToFrame(videoPlayer, time).subscribe((event: any) => {\n                // create image from current frame\n                canvas.getContext('2d').drawImage(videoPlayer, 0, 0, width, height);\n                observer.next({ image: canvas.toDataURL(), width: width, height: height, time: time });\n                observer.complete();\n                subscription.unsubscribe();\n            });\n        });\n    }\n/**\n * @param {?} source\n * @param {?} width\n * @param {?} height\n * @param {?} time\n * @return {?}\n */\ngetFrameThumbnail(source: string, width: number, height: number, time: number): Observable<ExtractedFrame> {\n\n        // create required elements\n        let /** @type {?} */ videoPlayer = this.createVideoPlayer(source);\n        let /** @type {?} */ canvas = this.createCanvas(width, height);\n\n        let /** @type {?} */ frameSubscription = this.getThumbnail(videoPlayer, canvas, time, width, height);\n\n        // ensure we release memory after we are finished        \n        frameSubscription.subscribe(null, null, () => {\n            videoPlayer = null;\n            canvas = null;\n        });\n\n        return frameSubscription;\n    }\n/**\n * @param {?} source\n * @param {?} width\n * @param {?} height\n * @param {?} start\n * @param {?} end\n * @param {?=} skip\n * @return {?}\n */\ngetFrameThumbnails(source: string, width: number, height: number, start: number, end: number, skip: number = 5): Observable<ExtractedFrame> {\n\n        // create required elements\n        let /** @type {?} */ videoPlayer = this.createVideoPlayer(source);\n        let /** @type {?} */ canvas = this.createCanvas(width, height);\n\n        return Observable.create((observer: Observer<ExtractedFrame>) => {\n\n            Observable.fromEvent(videoPlayer, 'loadedmetadata').subscribe(() => {\n\n                // calculate the frames required\n                let /** @type {?} */ frames = [];\n\n                for (let /** @type {?} */ idx = start; idx < end; idx += skip) {\n                    frames.push(this.getThumbnail(videoPlayer, canvas, idx, width, height));\n                }\n\n                Observable.concat(...frames).subscribe((frame: ExtractedFrame) => observer.next(frame), null, () => {\n                    videoPlayer = null;\n                    canvas = null;\n                    observer.complete();\n                });\n            });\n\n        });\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction FrameExtractionService_tsickle_Closure_declarations() {\n/** @type {?} */\nFrameExtractionService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFrameExtractionService.ctorParameters;\n}\n\n\nexport interface ExtractedFrame {\n    image: string;\n    width: number;\n    height: number;\n    time: number;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\n\nimport { FrameExtractionService } from './frame-extraction.service';\nexport class FrameExtractionModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    providers: [FrameExtractionService],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction FrameExtractionModule_tsickle_Closure_declarations() {\n/** @type {?} */\nFrameExtractionModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFrameExtractionModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { MediaPlayerType } from './media-player.component';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Subject } from 'rxjs/Subject';\nimport { Observer } from 'rxjs/Observer';\nimport { FrameExtractionService, ExtractedFrame } from '../../services/frame-extraction/index';\nexport class MediaPlayerService {\n\n    source: string;\n    type: MediaPlayerType = 'video';\n    loaded: boolean = false;\n\n    /*\n        Create observables for media player events\n    */\n    playing: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n    initEvent: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n    abortEvent: Subject<void> = new Subject<void>();\n    canPlayEvent: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n    canPlayThroughEvent: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n    durationChangeEvent: Subject<number> = new Subject<number>();\n    endedEvent: Subject<void> = new Subject<void>();\n    errorEvent: Subject<any> = new Subject<any>();\n    loadedDataEvent: Subject<any> = new Subject<any>();\n    loadedMetadataEvent: Subject<any> = new Subject<any>();\n    loadStartEvent: Subject<void> = new Subject<void>();\n    pauseEvent: Subject<void> = new Subject<void>();\n    playEvent: Subject<void> = new Subject<void>();\n    playingEvent: Subject<boolean> = new Subject<boolean>();\n    rateChangeEvent: Subject<number> = new Subject<number>();\n    seekedEvent: Subject<number> = new Subject<number>();\n    seekingEvent: Subject<number> = new Subject<number>();\n    stalledEvent: Subject<void> = new Subject<void>();\n    suspendEvent: Subject<void> = new Subject<void>();\n    timeUpdateEvent: Subject<number> = new Subject<number>();\n    volumeChangeEvent: Subject<number> = new Subject<number>();\n    waitingEvent: Subject<void> = new Subject<void>();\n    mediaClickEvent: Subject<MouseEvent> = new Subject<MouseEvent>();\n    fullscreenEvent: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n    quietModeEvent: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n    progressEvent: Observable<TimeRanges> = Observable.create((observer: Observer<TimeRanges>) => {\n\n        // repeat until the whole video has fully loaded\n        let /** @type {?} */ interval = setInterval(() => {\n\n            let /** @type {?} */ buffered = /** @type {?} */(( this._mediaPlayer.buffered as TimeRanges));\n            observer.next(buffered);\n\n            if (buffered.length === 1 && buffered.start(0) === 0 && buffered.end(0) === this.duration) {\n                observer.complete();\n                clearInterval(interval);\n            }\n        }, 1000);\n    });\nprivate _mediaPlayer: HTMLMediaElement;\nprivate _hostElement: HTMLElement;\nprivate _fullscreen: boolean = false;\nprivate _quietMode: boolean;\n/**\n * @param {?} _frameExtractionService\n */\nconstructor(private _frameExtractionService: FrameExtractionService) {}\n/**\n * @return {?}\n */\nget mediaPlayer(): HTMLMediaElement {\n        return this._mediaPlayer;\n    }\n/**\n * @return {?}\n */\nget quietMode(): boolean {\n        return this._quietMode;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset quietMode(value: boolean) {\n\n        // quiet mode cannot be enabled on audio player\n        if (this.type === 'audio') {\n            value = false;\n        }\n\n        this._quietMode = value;\n        this.quietModeEvent.next(value);\n    }\n/**\n * @return {?}\n */\nget mediaPlayerWidth(): number {\n        return this._mediaPlayer ? this._mediaPlayer.offsetWidth : 0;\n    }\n/**\n * @return {?}\n */\nget mediaPlayerHeight(): number {\n        return this._mediaPlayer ? this._mediaPlayer.offsetHeight : 0;\n    }\n/**\n * @return {?}\n */\nget audioTracks(): AudioTrackList {\n        return this._mediaPlayer ? this._mediaPlayer.audioTracks : null;\n    }\n/**\n * @return {?}\n */\nget autoplay(): boolean {\n        return this._mediaPlayer ? this._mediaPlayer.autoplay : false;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset autoplay(value: boolean) {\n        this._mediaPlayer.autoplay = value;\n    }\n/**\n * @return {?}\n */\nget buffered(): TimeRanges {\n        return this._mediaPlayer ? this._mediaPlayer.buffered : new TimeRanges();\n    }\n/**\n * @return {?}\n */\nget crossOrigin(): string {\n        return this._mediaPlayer ? this._mediaPlayer.crossOrigin : null;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset crossOrigin(value: string) {\n        this._mediaPlayer.crossOrigin = value;\n    }\n/**\n * @return {?}\n */\nget currentSrc(): string {\n        return this._mediaPlayer ? this._mediaPlayer.currentSrc : null;\n    }\n/**\n * @return {?}\n */\nget currentTime(): number {\n        return this._mediaPlayer ? this._mediaPlayer.currentTime : 0;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset currentTime(value: number) {\n        this._mediaPlayer.currentTime = value;\n    }\n/**\n * @return {?}\n */\nget defaultMuted(): boolean {\n        return this._mediaPlayer ? this._mediaPlayer.defaultMuted : false;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset defaultMuted(value: boolean) {\n        this._mediaPlayer.defaultMuted = value;\n    }\n/**\n * @return {?}\n */\nget defaultPlaybackRate(): number {\n        return this._mediaPlayer ? this._mediaPlayer.defaultPlaybackRate : 1;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset defaultPlaybackRate(value: number) {\n        this._mediaPlayer.defaultPlaybackRate = value;\n    }\n/**\n * @return {?}\n */\nget duration(): number {\n        return this._mediaPlayer ? this._mediaPlayer.duration : 0;\n    }\n/**\n * @return {?}\n */\nget ended(): boolean {\n        return this._mediaPlayer ? this._mediaPlayer.ended : false;\n    }\n/**\n * @return {?}\n */\nget loop(): boolean {\n        return this._mediaPlayer ? this._mediaPlayer.loop : false;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset loop(value: boolean) {\n        this._mediaPlayer.loop = value;\n    }\n/**\n * @return {?}\n */\nget muted(): boolean {\n        return this._mediaPlayer ? this._mediaPlayer.muted : false;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset muted(value: boolean) {\n        this._mediaPlayer.muted = value;\n    }\n/**\n * @return {?}\n */\nget networkState(): number {\n        return this._mediaPlayer.networkState;\n    }\n/**\n * @return {?}\n */\nget paused(): boolean {\n        return this._mediaPlayer ? this._mediaPlayer.paused : true;\n    }\n/**\n * @return {?}\n */\nget playbackRate(): number {\n        return this._mediaPlayer ? this._mediaPlayer.playbackRate : 1;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset playbackRate(value: number) {\n        this._mediaPlayer.playbackRate = value;\n    }\n/**\n * @return {?}\n */\nget played(): TimeRanges {\n        return this._mediaPlayer ? this._mediaPlayer.played : new TimeRanges();\n    }\n/**\n * @return {?}\n */\nget preload(): string {\n        return this._mediaPlayer ? this._mediaPlayer.preload : 'auto';\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset preload(value: string) {\n        this._mediaPlayer.preload = value;\n    }\n/**\n * @return {?}\n */\nget readyState(): number {\n        return this._mediaPlayer ? this._mediaPlayer.readyState : 0;\n    }\n/**\n * @return {?}\n */\nget seekable(): TimeRanges {\n        return this._mediaPlayer ? this._mediaPlayer.seekable : new TimeRanges();\n    }\n/**\n * @return {?}\n */\nget seeking(): boolean {\n        return this._mediaPlayer ? this._mediaPlayer.seeking : false;\n    }\n/**\n * @return {?}\n */\nget src(): string {\n        return this._mediaPlayer ? this._mediaPlayer.src : '';\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset src(value: string) {\n        this._mediaPlayer.src = value;\n    }\n/**\n * @return {?}\n */\nget textTracks(): TextTrackList {\n        return this._mediaPlayer ? this._mediaPlayer.textTracks : new TextTrackList();\n    }\n/**\n * @return {?}\n */\nget videoTracks(): VideoTrackList {\n        return this._mediaPlayer ? this._mediaPlayer.videoTracks : new VideoTrackList();\n    }\n/**\n * @return {?}\n */\nget volume(): number {\n        return this._mediaPlayer ? this._mediaPlayer.volume : 1;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset volume(value: number) {\n        this._mediaPlayer.volume = value;\n    }\n/**\n * @return {?}\n */\nget fullscreen(): boolean {\n        return this._mediaPlayer ? this._fullscreen : false;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset fullscreen(value: boolean) {\n        this._fullscreen = value;\n        this.fullscreenEvent.next(value);\n    }\n/**\n * @param {?} hostElement\n * @param {?} mediaPlayer\n * @return {?}\n */\nsetMediaPlayer(hostElement: HTMLElement, mediaPlayer: HTMLMediaElement): void {\n        this._hostElement = hostElement;\n        this._mediaPlayer = mediaPlayer;\n\n        this.initEvent.next(true);\n    }\n/**\n * Toggle playing state\n * @return {?}\n */\ntogglePlay(): void {\n\n        // prevent any action is not loaded\n        if (this.loaded === false) {\n            return;\n        }\n\n        if (this.paused) {\n            this.play();\n        } else {\n            this.pause();\n        }\n    }\n/**\n * Starts playing the audio/video\n * @return {?}\n */\nplay(): void {\n        this._mediaPlayer.play();\n    }\n/**\n * Pauses the currently playing audio/video\n * @return {?}\n */\npause(): void {\n        this._mediaPlayer.pause();\n    }\n/**\n * Re-loads the audio/video element\n * @return {?}\n */\nload(): void {\n        this._mediaPlayer.load();\n    }\n/**\n * Checks if the browser can play the specified audio/video type\n * @param {?} type\n * @return {?}\n */\ncanPlayType(type: string): string {\n        return this._mediaPlayer.canPlayType(type);\n    }\n/**\n * Adds a new text track to the audio/video\n * @param {?} kind\n * @param {?} label\n * @param {?} language\n * @return {?}\n */\naddTextTrack(kind: string, label: string, language: string): TextTrack {\n        return this._mediaPlayer.addTextTrack(kind, label, language);\n    }\n/**\n * Attempt to display media in fullscreen mode\n * @return {?}\n */\nrequestFullscreen(): void {\n\n        if (this._hostElement.requestFullscreen) {\n            this._hostElement.requestFullscreen();\n        } else if (this._hostElement.webkitRequestFullscreen) {\n            this._hostElement.webkitRequestFullscreen();\n        } else if (( /** @type {?} */((<any>this._hostElement))).msRequestFullscreen) {\n            ( /** @type {?} */((<any>this._hostElement))).msRequestFullscreen();\n        } else if (( /** @type {?} */((<any>this._hostElement))).mozRequestFullScreen) {\n            ( /** @type {?} */((<any>this._hostElement))).mozRequestFullScreen();\n        }\n    }\n/**\n * Exit full screen mode\n * @return {?}\n */\nexitFullscreen(): void {\n\n        if (( /** @type {?} */((<any>this._hostElement))).exitFullscreen) {\n            document.exitFullscreen();\n        } else if (document.webkitExitFullscreen) {\n            document.webkitExitFullscreen();\n        } else if (( /** @type {?} */((<any>document))).msExitFullscreen) {\n            ( /** @type {?} */((<any>document))).msExitFullscreen();\n        } else if (( /** @type {?} */((<any>document))).mozCancelFullScreen) {\n            ( /** @type {?} */((<any>document))).mozCancelFullScreen();\n        }\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nfullscreenChange(event: Event) {\n        this.fullscreen = ( /** @type {?} */((<any>document))).fullscreen || document.webkitIsFullScreen || ( /** @type {?} */((<any>document))).mozFullScreen || ( /** @type {?} */((<any>document))).msFullscreenElement !== null && ( /** @type {?} */((<any>document))).msFullscreenElement !== undefined;\n        this.fullscreenEvent.next(this.fullscreen);\n    }\n/**\n * Toggle Fullscreen State\n * @return {?}\n */\ntoggleFullscreen(): void {\n        if (this.fullscreen) {\n            this.exitFullscreen();\n        } else {\n            this.requestFullscreen();\n        }\n    }\n/**\n * Extract the frames from the video\n * @param {?} width\n * @param {?} height\n * @param {?} skip\n * @return {?}\n */\ngetFrames(width: number, height: number, skip: number): Observable<ExtractedFrame> {\n\n        if (this.type === 'video') {\n            return this._frameExtractionService.getFrameThumbnails(this.source, width, height, 0, this.duration, 10);\n        }\n\n        return Observable.from([]);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: FrameExtractionService, },\n];\n}\n\nfunction MediaPlayerService_tsickle_Closure_declarations() {\n/** @type {?} */\nMediaPlayerService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMediaPlayerService.ctorParameters;\n/** @type {?} */\nMediaPlayerService.prototype.source;\n/** @type {?} */\nMediaPlayerService.prototype.type;\n/** @type {?} */\nMediaPlayerService.prototype.loaded;\n/** @type {?} */\nMediaPlayerService.prototype.playing;\n/** @type {?} */\nMediaPlayerService.prototype.initEvent;\n/** @type {?} */\nMediaPlayerService.prototype.abortEvent;\n/** @type {?} */\nMediaPlayerService.prototype.canPlayEvent;\n/** @type {?} */\nMediaPlayerService.prototype.canPlayThroughEvent;\n/** @type {?} */\nMediaPlayerService.prototype.durationChangeEvent;\n/** @type {?} */\nMediaPlayerService.prototype.endedEvent;\n/** @type {?} */\nMediaPlayerService.prototype.errorEvent;\n/** @type {?} */\nMediaPlayerService.prototype.loadedDataEvent;\n/** @type {?} */\nMediaPlayerService.prototype.loadedMetadataEvent;\n/** @type {?} */\nMediaPlayerService.prototype.loadStartEvent;\n/** @type {?} */\nMediaPlayerService.prototype.pauseEvent;\n/** @type {?} */\nMediaPlayerService.prototype.playEvent;\n/** @type {?} */\nMediaPlayerService.prototype.playingEvent;\n/** @type {?} */\nMediaPlayerService.prototype.rateChangeEvent;\n/** @type {?} */\nMediaPlayerService.prototype.seekedEvent;\n/** @type {?} */\nMediaPlayerService.prototype.seekingEvent;\n/** @type {?} */\nMediaPlayerService.prototype.stalledEvent;\n/** @type {?} */\nMediaPlayerService.prototype.suspendEvent;\n/** @type {?} */\nMediaPlayerService.prototype.timeUpdateEvent;\n/** @type {?} */\nMediaPlayerService.prototype.volumeChangeEvent;\n/** @type {?} */\nMediaPlayerService.prototype.waitingEvent;\n/** @type {?} */\nMediaPlayerService.prototype.mediaClickEvent;\n/** @type {?} */\nMediaPlayerService.prototype.fullscreenEvent;\n/** @type {?} */\nMediaPlayerService.prototype.quietModeEvent;\n/** @type {?} */\nMediaPlayerService.prototype.progressEvent;\n/** @type {?} */\nMediaPlayerService.prototype._mediaPlayer;\n/** @type {?} */\nMediaPlayerService.prototype._hostElement;\n/** @type {?} */\nMediaPlayerService.prototype._fullscreen;\n/** @type {?} */\nMediaPlayerService.prototype._quietMode;\n/** @type {?} */\nMediaPlayerService.prototype._frameExtractionService;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport { Http, ResponseContentType } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\nimport { Observer } from 'rxjs/Observer';\nimport'rxjs/add/observable/of';\nexport class AudioService {\nprivate _audioBuffer: AudioBuffer;\nprivate _audioBufferSource: AudioBufferSourceNode;\nprivate _audioContext: AudioContext;\nprivate _gainNode: GainNode;\nprivate _analyserNode: AnalyserNode;\n/**\n * @param {?} _http\n */\nconstructor(private _http: Http) { }\n/**\n * @param {?} mediaElement\n * @return {?}\n */\ngetAudioFileMetadata(mediaElement: HTMLMediaElement): Observable<AudioMetadata> {\n        return Observable.create((observer: Observer<AudioMetadata>) => {\n            this._http.request(mediaElement.src, { responseType: ResponseContentType.Blob }).subscribe(response => {\n\n                let /** @type {?} */ filename = mediaElement.src.substring(mediaElement.src.lastIndexOf('/') + 1);\n                let /** @type {?} */ extension = mediaElement.src.substring(mediaElement.src.lastIndexOf('.') + 1).toLowerCase();\n                let /** @type {?} */ blob = response.blob();\n                let /** @type {?} */ description;\n\n                switch (extension) {\n                    case 'mp3':\n                        description = 'MPEG audio layer 3 file';\n                        break;\n\n                    case 'wma':\n                        description = 'Windows media audio file';\n                        break;\n\n                    case 'wav':\n                        description = 'WAVE audio file';\n                        break;\n\n                    case 'ogg':\n                        description = 'Ogg Vorbis file';\n                        break;\n\n                    case 'aac':\n                        description = 'Advanced audio coding file';\n                        break;\n\n                    case 'midi':\n                        description = 'Musical instrument digital interface file';\n                        break;\n\n                    default:\n                        description = 'Audio file';\n                        break;\n                }\n\n                observer.next({\n                    filename: filename,\n                    extension: extension,\n                    description: description,\n                    size: blob.size\n                });\n            });\n        });\n    }\n/**\n * @param {?} url\n * @return {?}\n */\ngetWaveformFromUrl(url: string): Observable<Float32Array[]> {\n\n        // if audio context is not support return a stream of empty data\n        if (!( /** @type {?} */((<any>window))).AudioContext) {\n            return Observable.of<Float32Array[]>([new Float32Array(0)]);\n        }\n\n        this._audioContext = new AudioContext();\n        this.createVolumeNode();\n        this.createAnalyserNode();\n\n        return Observable.create((observer: Observer<Float32Array[]>) => {\n\n            // load the media from the URL provided\n            this._http.request(url, { responseType: ResponseContentType.ArrayBuffer }).subscribe(response => {\n                this.getAudioBuffer(response.arrayBuffer()).subscribe(audioBuffer => {\n\n                    // create the buffer source\n                    this.createBufferSource(audioBuffer);\n\n                    let /** @type {?} */ dataPoints: Float32Array[] = [];\n                    let /** @type {?} */ channels = this._audioBuffer.numberOfChannels;\n\n                    // extract the data from each channel\n                    for (let /** @type {?} */ channelIdx = 0; channelIdx < channels; channelIdx++) {\n                        dataPoints[channelIdx] = this._audioBuffer.getChannelData(channelIdx);\n                    }\n\n                    observer.next(dataPoints);\n                    observer.complete();\n\n                    // cleanup after ourselves\n                    dataPoints = null;\n                }, (error) => observer.error(error));\n            }, (error) => observer.error(error));\n        });\n    }\n/**\n * @param {?=} channels\n * @param {?=} skip\n * @return {?}\n */\ngetWaveformPoints(channels: Float32Array[] = [], skip: number = 1000): WaveformPoint[] {\n\n        let /** @type {?} */ waveform: WaveformPoint[] = [];\n        let /** @type {?} */ duration = channels.length > 0 ? channels[0].length : 0;\n\n        // convert each channel data to a series of waveform points\n        for (let /** @type {?} */ idx = 0; idx < duration; idx += skip) {\n\n            // get all the channel data for a specific point\n            let /** @type {?} */ points = channels.map(channel => channel[idx]);\n\n            // find the minimum point and maximum points at each position across all channels\n            waveform.push({\n                min: points.reduce((previous, current) => current < previous ? current : previous),\n                max: points.reduce((previous, current) => current > previous ? current : previous)\n            });\n        }\n\n        return waveform;\n    }\n/**\n * @param {?} arrayBuffer\n * @return {?}\n */\nprivate getAudioBuffer(arrayBuffer: ArrayBuffer): Observable<AudioBuffer> {\n        return Observable.create((observer: Observer<AudioBuffer>) => {\n            this.getOfflineAudioContext().decodeAudioData(arrayBuffer, (audioBuffer: AudioBuffer) => {\n                observer.next(audioBuffer);\n                observer.complete();\n            }, (error) => observer.error(error));\n        });\n    }\n/**\n * @return {?}\n */\nprivate getOfflineAudioContext(): OfflineAudioContext {\n        return new OfflineAudioContext(1, 2, this._audioContext.sampleRate || 44100);\n    }\n/**\n * @param {?} audioBuffer\n * @return {?}\n */\nprivate createBufferSource(audioBuffer: AudioBuffer): void {\n        this.disconnectSource();\n\n        this._audioBuffer = audioBuffer;\n        this._audioBufferSource = this._audioContext.createBufferSource();\n        this._audioBufferSource.buffer = this._audioBuffer;\n        this._audioBufferSource.connect(this._analyserNode);\n    }\n/**\n * @return {?}\n */\nprivate createVolumeNode(): void {\n        this._gainNode = this._audioContext.createGain();\n        this._gainNode.connect(this._audioContext.destination);\n    }\n/**\n * @return {?}\n */\nprivate createAnalyserNode(): void {\n        this._analyserNode = this._audioContext.createAnalyser();\n        this._analyserNode.connect(this._gainNode);\n    }\n/**\n * @return {?}\n */\nprivate disconnectSource(): void {\n        if (this._audioBufferSource) {\n            this._audioBufferSource.disconnect();\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Http, },\n];\n}\n\nfunction AudioService_tsickle_Closure_declarations() {\n/** @type {?} */\nAudioService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAudioService.ctorParameters;\n/** @type {?} */\nAudioService.prototype._audioBuffer;\n/** @type {?} */\nAudioService.prototype._audioBufferSource;\n/** @type {?} */\nAudioService.prototype._audioContext;\n/** @type {?} */\nAudioService.prototype._gainNode;\n/** @type {?} */\nAudioService.prototype._analyserNode;\n/** @type {?} */\nAudioService.prototype._http;\n}\n\n\nexport interface WaveformPoint {\n    min: number;\n    max: number;\n}\n\nexport interface AudioMetadata {\n    filename: string;\n    extension: string;\n    description: string;\n    size: number;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { HttpModule } from '@angular/http';\nimport { AudioService } from './audio.service';\nexport class AudioServiceModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [ HttpModule ],\n    providers: [AudioService]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction AudioServiceModule_tsickle_Closure_declarations() {\n/** @type {?} */\nAudioServiceModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAudioServiceModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, ViewChild, ElementRef, AfterViewInit, OnDestroy } from '@angular/core';\nimport { ExtractedFrame, FrameExtractionService } from '../../services/frame-extraction/frame-extraction.service';\nimport { MediaPlayerService } from './media-player.service';\nimport { Subject } from 'rxjs/Subject';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Observable } from 'rxjs/Observable';\nimport { Observer } from 'rxjs/Observer';\nimport { AudioService, AudioMetadata } from '../../services/audio/index';\nimport { Subscription } from 'rxjs/Subscription';\nimport'rxjs/add/observable/from';\nimport'rxjs/add/operator/switchMap';\nexport class MediaPlayerComponent implements AfterViewInit, OnDestroy {\nprivate _playerRef: ElementRef;\nprivate _trackBarRef: ElementRef;\n\n    hovering: boolean = false;\n    audioMetadata: Observable<AudioMetadata>;\nprivate _hover$: Subscription;\nprivate _clicked$: Subscription;\nprivate _paused$: Subscription;\nprivate _playing$: Subscription;\nprivate _loading$: Subscription;\n/**\n * @return {?}\n */\nget source(): string {\n        return this.mediaPlayerService.source;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset source(value: string) {\n        this.mediaPlayerService.source = value;\n    }\n/**\n * @return {?}\n */\nget type(): MediaPlayerType {\n        return this.mediaPlayerService.type;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset type(value: MediaPlayerType) {\n        this.mediaPlayerService.type = value;\n    }\n/**\n * @return {?}\n */\nget quietMode(): boolean {\n        return this.mediaPlayerService.quietMode;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset quietMode(value: boolean) {\n        this.mediaPlayerService.quietMode = value;\n    }\n/**\n * @param {?} mediaPlayerService\n * @param {?} _audioService\n * @param {?} _elementRef\n */\nconstructor(public mediaPlayerService: MediaPlayerService,\nprivate _audioService: AudioService,\nprivate _elementRef: ElementRef) {\n\n        // show controls when hovering and in quiet mode\n        this._hover$ = Observable.fromEvent(this._elementRef.nativeElement, 'mousemove').switchMap((event: MouseEvent) => {\n            this.hovering = true;         \n            return Observable.of(event);\n        }).debounceTime(2000).subscribe(() => this.hovering = false);\n    }\n/**\n * @return {?}\n */\nngAfterViewInit(): void {\n        this.mediaPlayerService.setMediaPlayer(this._elementRef.nativeElement, this._playerRef.nativeElement);\n\n        this.audioMetadata = this._audioService.getAudioFileMetadata(this._playerRef.nativeElement);\n        this._playing$ = this.mediaPlayerService.playingEvent.subscribe(event => this.mediaPlayerService.playing.next(true));\n        this._paused$ = this.mediaPlayerService.pauseEvent.subscribe(event => this.mediaPlayerService.playing.next(false));\n        this._clicked$ = this.mediaPlayerService.mediaClickEvent.subscribe(() => this.mediaPlayerService.togglePlay());\n        this._loading$ = this.mediaPlayerService.loadedMetadataEvent.subscribe(() => this.mediaPlayerService.loaded = true);\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        this._hover$.unsubscribe();\n        this._playing$.unsubscribe();\n        this._paused$.unsubscribe();\n        this._clicked$.unsubscribe();\n        this._loading$.unsubscribe();\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-media-player',\n    template: `\n      <div class=\"video-player-container\" *ngIf=\"type === 'video'\">\n\n          <video class=\"video-player\" #player [src]=\"source\" (abort)=\"mediaPlayerService.abortEvent.next()\" (canplay)=\"mediaPlayerService.canPlayEvent.next()\"\n              (canplaythrough)=\"mediaPlayerService.canPlayThroughEvent.next()\" (durationchange)=\"mediaPlayerService.durationChangeEvent.next(player.duration)\" (ended)=\"mediaPlayerService.endedEvent.next()\"\n              (error)=\"mediaPlayerService.errorEvent.next($event)\" (loadeddata)=\"mediaPlayerService.loadedDataEvent.next($event)\" (loadedmetadata)=\"mediaPlayerService.loadedMetadataEvent.next($event)\"\n              (loadstart)=\"mediaPlayerService.loadStartEvent.next()\" (pause)=\"mediaPlayerService.pauseEvent.next()\" (play)=\"mediaPlayerService.playEvent.next()\" (playing)=\"mediaPlayerService.playingEvent.next(!player.paused)\"\n              (ratechange)=\"mediaPlayerService.rateChangeEvent.next(player.playbackRate)\" (seeked)=\"mediaPlayerService.seekedEvent.next(player.currentTime)\" (seeking)=\"mediaPlayerService.seekingEvent.next(player.currentTime)\"\n              (stalled)=\"mediaPlayerService.stalledEvent.next()\" (suspend)=\"mediaPlayerService.suspendEvent.next()\" (timeupdate)=\"mediaPlayerService.timeUpdateEvent.next(player.currentTime)\"\n              (volumechange)=\"mediaPlayerService.volumeChangeEvent.next(player.volume)\" (waiting)=\"mediaPlayerService.waitingEvent.next()\" (click)=\"mediaPlayerService.mediaClickEvent.next($event)\"></video>\n\n          <div class=\"video-overlay\" [class.playing]=\"mediaPlayerService.playing | async\">\n              <svg class=\"play-graphic\" x=\"0px\" y=\"0px\" viewBox=\"0 0 64 64\">\n                  <circle class=\"play-circle\" cx=\"32.2\" cy=\"31.8\" r=\"31.8\" />\n                  <polygon class=\"play-triangle\" points=\"23,14.1 23,50.8 48.3,32.5\" />\n              </svg>\n          </div>\n\n      </div>\n\n\n      <div class=\"audio-player\" *ngIf=\"type === 'audio'\">\n\n          <svg width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\">\n              <g stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n                  <g transform=\"translate(-98.000000, -458.000000)\">\n                      <g transform=\"translate(98.000000, 458.000000)\">\n                          <path d=\"M4.5,0.5 L18.0435308,0.5 L23.5,6.22251502 L23.5,23.5 L4.5,23.5 L4.5,0.5 Z\" fill=\"#CCEAE2\"></path>\n                          <path d=\"M4.5,8 L4.5,0.5 L18,0.5 L23.5,6 L23.5,23.5 L18,23.5\" stroke=\"#60798D\" fill=\"#CCEAE2\"></path>\n                          <path d=\"M4,13.5 L0.5,13.5 L0.5,18.5 L4,18.5 L9.5,22.5 L9.5,9.5 L4,13.5 Z\" stroke=\"#60798D\" fill=\"#85D2BE\"></path>\n                          <path d=\"M11.5,12.5137939 C13.7576225,12.5137939 14.5,14.3709236 14.5,16 C14.5,17.6849236 13.7089152,19.5420532 11.5,19.5420532\"\n                              stroke=\"#60798D\"></path>\n                          <path d=\"M11.5,9 C15.8037643,9.04168701 18.5,11.6604805 18.5,16 C18.5,20.3395195 15.8804302,23.0079956 11.5,23\" stroke=\"#60798D\"></path>\n                          <path d=\"M17.5219116,0.761413574 L17.5219116,6 L23,6\" stroke=\"#60798D\" fill=\"#85D2BE\"></path>\n                      </g>\n                  </g>\n              </g>\n          </svg>\n\n          <p class=\"audio-file-name\">{{ (audioMetadata | async)?.filename }}</p>\n          <p class=\"audio-file-format\">{{ (audioMetadata | async)?.description }}</p>\n          <p class=\"audio-file-size\">{{ (audioMetadata | async)?.size | fileSize }}</p>\n\n          <audio #player [src]=\"source\" (abort)=\"mediaPlayerService.abortEvent.next()\" (canplay)=\"mediaPlayerService.canPlayEvent.next(true)\"\n              (canplaythrough)=\"mediaPlayerService.canPlayThroughEvent.next(true)\" (durationchange)=\"mediaPlayerService.durationChangeEvent.next(player.duration)\" (ended)=\"mediaPlayerService.endedEvent.next()\"\n              (error)=\"mediaPlayerService.errorEvent.next($event)\" (loadeddata)=\"mediaPlayerService.loadedDataEvent.next($event)\" (loadedmetadata)=\"mediaPlayerService.loadedMetadataEvent.next($event)\"\n              (loadstart)=\"mediaPlayerService.loadStartEvent.next()\" (pause)=\"mediaPlayerService.pauseEvent.next()\" (play)=\"mediaPlayerService.playEvent.next()\" (playing)=\"mediaPlayerService.playingEvent.next(!player.paused)\"\n              (ratechange)=\"mediaPlayerService.rateChangeEvent.next(player.playbackRate)\" (seeked)=\"mediaPlayerService.seekedEvent.next(player.currentTime)\" (seeking)=\"mediaPlayerService.seekingEvent.next(player.currentTime)\"\n              (stalled)=\"mediaPlayerService.stalledEvent.next()\" (suspend)=\"mediaPlayerService.suspendEvent.next()\" (timeupdate)=\"mediaPlayerService.timeUpdateEvent.next(player.currentTime)\"\n              (volumechange)=\"mediaPlayerService.volumeChangeEvent.next(player.volume)\" (waiting)=\"mediaPlayerService.waitingEvent.next()\" (click)=\"mediaPlayerService.mediaClickEvent.next($event)\"></audio>\n      </div>\n\n      <div class=\"control-bar\">\n          <ux-media-player-timeline></ux-media-player-timeline>\n          <ux-media-player-controls></ux-media-player-controls>\n      </div>\n    `,\n    providers: [ MediaPlayerService ],\n    host: {\n        'tabindex': '0',\n        '(keydown.Space)': 'mediaPlayerService.togglePlay()',\n        '[class.standard]': '!mediaPlayerService.fullscreen',\n        '[class.fullscreen]': 'mediaPlayerService.fullscreen',\n        '[class.quiet]': 'quietMode && type === \"video\" || mediaPlayerService.fullscreen',\n        '[class.hover]': 'hovering',\n        '[class.video]': 'type === \"video\"',\n        '[class.audio]': 'type === \"audio\"',\n        '(mouseenter)': 'hovering = true',\n        '(mouseleave)': 'hovering = false',\n        '(document:webkitfullscreenchange)': 'mediaPlayerService.fullscreenChange($event)',\n        '(document:mozfullscreenchange)': 'mediaPlayerService.fullscreenChange($event)',\n        '(document:MSFullscreenChange)': 'mediaPlayerService.fullscreenChange($event)'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: MediaPlayerService, },\n{type: AudioService, },\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'_playerRef': [{ type: ViewChild, args: ['player', ] },],\n'_trackBarRef': [{ type: ViewChild, args: ['trackBar', ] },],\n'source': [{ type: Input },],\n'type': [{ type: Input },],\n'quietMode': [{ type: Input },],\n};\n}\n\nfunction MediaPlayerComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nMediaPlayerComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMediaPlayerComponent.ctorParameters;\n/** @type {?} */\nMediaPlayerComponent.propDecorators;\n/** @type {?} */\nMediaPlayerComponent.prototype._playerRef;\n/** @type {?} */\nMediaPlayerComponent.prototype._trackBarRef;\n/** @type {?} */\nMediaPlayerComponent.prototype.hovering;\n/** @type {?} */\nMediaPlayerComponent.prototype.audioMetadata;\n/** @type {?} */\nMediaPlayerComponent.prototype._hover$;\n/** @type {?} */\nMediaPlayerComponent.prototype._clicked$;\n/** @type {?} */\nMediaPlayerComponent.prototype._paused$;\n/** @type {?} */\nMediaPlayerComponent.prototype._playing$;\n/** @type {?} */\nMediaPlayerComponent.prototype._loading$;\n/** @type {?} */\nMediaPlayerComponent.prototype.mediaPlayerService;\n/** @type {?} */\nMediaPlayerComponent.prototype._audioService;\n/** @type {?} */\nMediaPlayerComponent.prototype._elementRef;\n}\n\n\nexport type MediaPlayerType = 'video' | 'audio';\n\nexport interface MediaPlayerBuffer {\n    start: number;\n    end: number;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, Host } from '@angular/core';\nimport { MediaPlayerService } from '../media-player.service';\nexport class MediaPlayerBaseExtensionDirective {\n/**\n * @param {?} mediaPlayerService\n */\nconstructor(public mediaPlayerService: MediaPlayerService) { }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[mediaPlayerBaseExtension]' \n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: MediaPlayerService, },\n];\n}\n\nfunction MediaPlayerBaseExtensionDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nMediaPlayerBaseExtensionDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMediaPlayerBaseExtensionDirective.ctorParameters;\n/** @type {?} */\nMediaPlayerBaseExtensionDirective.prototype.mediaPlayerService;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, OnInit, ViewChild, ElementRef, AfterViewInit, OnDestroy } from '@angular/core';\nimport { MediaPlayerBaseExtensionDirective } from '../base-extension.directive';\nimport { Observable } from 'rxjs/Observable';\nimport'rxjs/add/operator/switchMap';\nimport'rxjs/add/operator/takeUntil';\nimport'rxjs/add/observable/fromEvent';\nimport { Subscription } from 'rxjs/Subscription';\nexport class MediaPlayerTimelineExtensionComponent extends MediaPlayerBaseExtensionDirective implements OnInit, AfterViewInit, OnDestroy {\n\n     thumb: ElementRef;\n     timelineRef: ElementRef;\n\n    current: number = 0;\n    position: number = 0;\n    duration: number = 0;\n    buffered: MediaPlayerBuffered[] = [];\n    mouseDown: boolean = false;\n    quietMode: boolean = false;\n    fullscreen: boolean = false;\nprivate _mouseEventSubscription: Subscription;\n\n    scrub = {\n        visible: false,\n        position: 0,\n        time: 0\n    };\n/**\n * @return {?}\n */\nngOnInit(): void {\n\n        // watch for changes to the current time\n        this.mediaPlayerService.durationChangeEvent.subscribe(duration => this.duration = duration);\n        this.mediaPlayerService.quietModeEvent.subscribe(quietMode => this.quietMode = quietMode);\n        this.mediaPlayerService.fullscreenEvent.subscribe(fullscreen => {\n            this.fullscreen = fullscreen;\n            this.scrub.position = 0;\n        });\n\n        this.mediaPlayerService.timeUpdateEvent.subscribe(current => {\n            this.current = current;\n            this.position = (this.current / this.duration) * 100;\n        });\n\n        this.mediaPlayerService.progressEvent.subscribe((buffered: TimeRanges) => {\n            this.buffered = [];\n\n            for (let /** @type {?} */ idx = 0; idx < buffered.length; idx++) {\n                this.buffered.push({ start: (buffered.start(idx) / this.duration) * 100, end: (buffered.end(idx) / this.duration) * 100 });\n            }\n        });\n    }\n/**\n * @return {?}\n */\nngAfterViewInit(): void {\n        let /** @type {?} */ mousedown$ = Observable.fromEvent(this.thumb.nativeElement, 'mousedown');\n        let /** @type {?} */ mousemove$ = Observable.fromEvent(document, 'mousemove');\n        let /** @type {?} */ mouseup$ = Observable.fromEvent(document, 'mouseup');\n\n        this._mouseEventSubscription = mousedown$.switchMap(event => mousemove$.takeUntil(mouseup$)).subscribe(event => {\n            this.scrub.visible = false;\n        });\n    }\n/**\n * @return {?}\n */\nngOnDestroy() {\n        this._mouseEventSubscription.unsubscribe();\n    }\n/**\n * @param {?=} event\n * @return {?}\n */\nupdateScrub(event?: MouseEvent): void {\n\n        let /** @type {?} */ target = /** @type {?} */(( event.target as HTMLElement));\n      \n        if (target.classList.contains('media-progress-bar-thumb')) {\n            return;\n        }\n\n        let /** @type {?} */ timeline = /** @type {?} */(( this.timelineRef.nativeElement as HTMLDivElement));\n        let /** @type {?} */ bounds = timeline.getBoundingClientRect();\n\n        this.scrub.position = event.offsetX;\n        this.scrub.time = (event.offsetX / bounds.width) * this.mediaPlayerService.duration;\n\n        if (this.mouseDown) {\n            this.mediaPlayerService.pause();\n            this.mediaPlayerService.currentTime = this.scrub.time;\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-media-player-timeline',\n    template: `\n      <p class=\"current-time\">{{ current | duration }}</p>\n\n      <div #timeline class=\"timeline-bar\" (mouseenter)=\"scrub.visible = true; pop.show()\" (mouseleave)=\"scrub.visible = false; pop.hide()\"\n          (mousemove)=\"updateScrub($event)\" (mouseup)=\"updateScrub($event)\" (mousedown)=\"mouseDown = true; $event.preventDefault()\">\n\n          <div class=\"buffered-bar\" *ngFor=\"let buffer of buffered\" [style.left.%]=\"buffer.start\" [style.width.%]=\"buffer.end - buffer.start\"></div>\n\n          <div class=\"media-progress-bar\" [style.width.%]=\"position\">\n              <div #progressThumb class=\"media-progress-bar-thumb\" (mouseenter)=\"scrub.visible = false; pop.hide(); $event.stopPropagation()\"\n                  (mouseleave)=\"scrub.visible = true; pop.show(); $event.stopPropagation()\"></div>\n          </div>\n\n          <div class=\"scrub-handle\" [class.scrub-handle-hidden]=\"!scrub.visible\" [style.left.px]=\"scrub.position\" [tooltip]=\"popTemplate\" placement=\"top\" triggers=\"\" #pop=\"bs-tooltip\"\n              container=\"body\" tooltipPopupDelay=\"100\" [isDisabled]=\"duration === 0\"></div>\n      </div>\n\n      <p class=\"duration-time\">{{ duration | duration }}</p>\n\n      <ng-template #popTemplate>\n          <span>{{ scrub.time | duration }}</span>\n      </ng-template>\n    `,\n    host: {\n        '(document:mouseup)': 'mouseDown = false',\n        '[class.quiet]': 'quietMode || fullscreen'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'thumb': [{ type: ViewChild, args: ['progressThumb', ] },],\n'timelineRef': [{ type: ViewChild, args: ['timeline', ] },],\n};\n}\n\nfunction MediaPlayerTimelineExtensionComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nMediaPlayerTimelineExtensionComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMediaPlayerTimelineExtensionComponent.ctorParameters;\n/** @type {?} */\nMediaPlayerTimelineExtensionComponent.propDecorators;\n/** @type {?} */\nMediaPlayerTimelineExtensionComponent.prototype.thumb;\n/** @type {?} */\nMediaPlayerTimelineExtensionComponent.prototype.timelineRef;\n/** @type {?} */\nMediaPlayerTimelineExtensionComponent.prototype.current;\n/** @type {?} */\nMediaPlayerTimelineExtensionComponent.prototype.position;\n/** @type {?} */\nMediaPlayerTimelineExtensionComponent.prototype.duration;\n/** @type {?} */\nMediaPlayerTimelineExtensionComponent.prototype.buffered;\n/** @type {?} */\nMediaPlayerTimelineExtensionComponent.prototype.mouseDown;\n/** @type {?} */\nMediaPlayerTimelineExtensionComponent.prototype.quietMode;\n/** @type {?} */\nMediaPlayerTimelineExtensionComponent.prototype.fullscreen;\n/** @type {?} */\nMediaPlayerTimelineExtensionComponent.prototype._mouseEventSubscription;\n/** @type {?} */\nMediaPlayerTimelineExtensionComponent.prototype.scrub;\n}\n\n\nexport interface MediaPlayerBuffered {\n    start: number;\n    end: number;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, OnInit, HostListener, ElementRef, ViewChild } from '@angular/core';\nimport { MediaPlayerBaseExtensionDirective } from '../base-extension.directive';\nimport { Observable } from 'rxjs/Observable';\nimport'rxjs/add/observable/timer';\nexport class MediaPlayerControlsExtensionComponent extends MediaPlayerBaseExtensionDirective implements OnInit {\n\n    playing: boolean;\n    quietMode: boolean;\n    fullscreen: boolean = false;\n    volumeActive: boolean = false;\n    volumeDragging: boolean = false;\n\n     volumeIcon: ElementRef;\n     volumeSlider: ElementRef;\n     volumeContainer: ElementRef;\nprivate _volume: number = 50;\nprivate _previousVolume = 50;\n/**\n * @return {?}\n */\nget volume(): number {\n        return this._volume;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset volume(value: number) {\n\n        if (value === 0 && this._volume !== 0) {\n            this._previousVolume = this._volume;\n        }\n        \n        this._volume = Math.min(Math.max(value, 0), 100);\n        this.mediaPlayerService.volume = this._volume / 100;\n    }\n/**\n * @return {?}\n */\nngOnInit(): void {\n        this.mediaPlayerService.playEvent.subscribe(_ => this.playing = true);\n        this.mediaPlayerService.pauseEvent.subscribe(_ => this.playing = false);\n        this.mediaPlayerService.quietModeEvent.subscribe(quietMode => this.quietMode = quietMode);\n        this.mediaPlayerService.volumeChangeEvent.subscribe(volume => this.volume = volume * 100);\n        this.mediaPlayerService.initEvent.debounceTime(1).filter(init => init === true).subscribe(() => this.volume = this.mediaPlayerService.volume * 100);\n        this.mediaPlayerService.fullscreenEvent.subscribe(fullscreen => this.fullscreen = fullscreen);\n\n        let /** @type {?} */ mouseenter$ = Observable.fromEvent(this.volumeIcon.nativeElement, 'mouseenter');\n        let /** @type {?} */ mouseenterContainer$ = Observable.fromEvent(this.volumeContainer.nativeElement, 'mouseenter');\n        let /** @type {?} */ mouseleaveContainer$ = Observable.fromEvent(this.volumeContainer.nativeElement, 'mouseleave');\n\n        mouseenter$.subscribe(() => this.volumeActive = true);\n        mouseleaveContainer$.switchMap(() => Observable.timer(1500).takeUntil(mouseenterContainer$)).subscribe(() => this.volumeActive = false);\n    }\n/**\n * @return {?}\n */\ntoggleMute(): void {\n        if (this.volume === 0) {\n            this.volume = this._previousVolume;\n        } else {\n            this.volume = 0;\n        }\n    }\n/**\n * @return {?}\n */\ntogglePlay(): void {\n        if (this.playing) {\n            this.mediaPlayerService.pause();\n        } else {\n            this.mediaPlayerService.play();\n        }\n    }\n/**\n * @return {?}\n */\nsetFullscreen(): void {\n        this.mediaPlayerService.toggleFullscreen();\n    }\n/**\n * @return {?}\n */\ngoToStart(): void {\n        this.mediaPlayerService.currentTime = 0;\n    }\n/**\n * @return {?}\n */\ngoToEnd(): void {\n        this.mediaPlayerService.currentTime = this.mediaPlayerService.duration;\n    }\n/**\n * @param {?} event\n * @return {?}\n */\ndragStart(event: MouseEvent): void {\n        event.preventDefault();\n        this.volumeDragging = true;\n\n        let /** @type {?} */ thumb = /** @type {?} */(( event.target as HTMLDivElement));\n        thumb.focus();\n    }\n/**\n * @param {?} event\n * @return {?}\n */\ndragMove(event: MouseEvent): void {\n        if (!this.volumeDragging) {\n            return;\n        }\n\n        event.preventDefault();\n\n        let /** @type {?} */ slider = /** @type {?} */(( this.volumeSlider.nativeElement as HTMLDivElement));\n        let /** @type {?} */ bounds = slider.getBoundingClientRect();\n\n        let /** @type {?} */ x = Math.min(bounds.width, Math.max(0, event.pageX - bounds.left));\n\n        // convert to a percentage\n        this.volume = (x / bounds.width) * 100;\n    }\n/**\n * @return {?}\n */\ndragEnd(): void {\n        this.volumeDragging = false;        \n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-media-player-controls',\n    template: `\n      <div class=\"volume-container\">\n\n          <div class=\"volume-slider-container\" #volumeContainer [class.active]=\"volumeActive\">\n              <div class=\"volume-slider-icon\" #volumeIcon>\n                  <span class=\"hpe-icon\" [class.hpe-volume-mute]=\"volume === 0\" [class.hpe-volume-low]=\"volume > 0 && volume <= 70\" [class.hpe-volume]=\"volume > 70\" [tooltip]=\"muteTooltip\" (click)=\"toggleMute()\"></span>\n              </div>\n        \n              <div class=\"volume-slider-node\">\n                  <div class=\"volume-slider\" #volumeSlider>\n                      <div class=\"volume-track-lower\" [style.width.%]=\"volume\"></div>\n                      <div class=\"volume-slider-thumb\" (mousedown)=\"dragStart($event)\" [style.left.%]=\"volume\" tabindex=\"0\" (keydown.ArrowRight)=\"volume = volume + 10\" (keydown.ArrowLeft)=\"volume = volume - 10\"></div>\n                  </div>\n              </div>\n          </div>\n      </div>\n\n      <div class=\"spacer\"></div>\n\n      <svg viewBox=\"0 0 51.5 64\" width=\"14\" height=\"17\" class=\"control-button\" (click)=\"goToStart()\">\n          <rect x=\"0\" y=\"0\" width=\"7.5\" height=\"64\" />\n          <polygon points=\"51.5,64 51.5,0 7.4,32 \" />\n      </svg>\n\n      <svg viewBox=\"0 0 45 64\" width=\"20\" height=\"29\" class=\"control-button\" *ngIf=\"!playing\" (click)=\"togglePlay()\">\n          <polygon points=\"0.4,0 0.4,64 44.6,32\" />\n      </svg>\n\n      <svg viewBox=\"0 0 43 56.9\" class=\"control-button\" width=\"20\" height=\"29\" *ngIf=\"playing\" (click)=\"togglePlay()\">\n          <rect y=\"0.1\" width=\"15.7\" height=\"56.9\" />\n          <rect x=\"27.3\" y=\"0.1\" width=\"15.7\" height=\"56.9\" />\n      </svg>\n\n      <svg viewBox=\"0 0 51.5 64\" width=\"14\" height=\"17\" class=\"control-button\" (click)=\"goToEnd()\">\n          <rect x=\"44.1\" y=\"0\" width=\"7.5\" height=\"64\" />\n          <polygon points=\"0,64 0,0 44.1,32 \" />\n      </svg>\n\n      <div class=\"spacer\"></div>\n\n      <span class=\"hpe-icon\" *ngIf=\"mediaPlayerService.type !== 'audio'\" [class.hpe-expand]=\"!mediaPlayerService.fullscreen\" [class.hpe-contract]=\"mediaPlayerService.fullscreen\"\n          (click)=\"setFullscreen()\"></span>\n\n      <ng-template #muteTooltip>{{ volume === 0 ? 'Unmute' : 'Mute' }}</ng-template>\n    `,\n    host: {\n        '[class.quiet]': 'quietMode || fullscreen'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'volumeIcon': [{ type: ViewChild, args: ['volumeIcon', ] },],\n'volumeSlider': [{ type: ViewChild, args: ['volumeSlider', ] },],\n'volumeContainer': [{ type: ViewChild, args: ['volumeContainer', ] },],\n'dragMove': [{ type: HostListener, args: ['document:mousemove', ['$event'], ] },],\n'dragEnd': [{ type: HostListener, args: ['document:mouseup', ] },],\n};\n}\n\nfunction MediaPlayerControlsExtensionComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nMediaPlayerControlsExtensionComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMediaPlayerControlsExtensionComponent.ctorParameters;\n/** @type {?} */\nMediaPlayerControlsExtensionComponent.propDecorators;\n/** @type {?} */\nMediaPlayerControlsExtensionComponent.prototype.playing;\n/** @type {?} */\nMediaPlayerControlsExtensionComponent.prototype.quietMode;\n/** @type {?} */\nMediaPlayerControlsExtensionComponent.prototype.fullscreen;\n/** @type {?} */\nMediaPlayerControlsExtensionComponent.prototype.volumeActive;\n/** @type {?} */\nMediaPlayerControlsExtensionComponent.prototype.volumeDragging;\n/** @type {?} */\nMediaPlayerControlsExtensionComponent.prototype.volumeIcon;\n/** @type {?} */\nMediaPlayerControlsExtensionComponent.prototype.volumeSlider;\n/** @type {?} */\nMediaPlayerControlsExtensionComponent.prototype.volumeContainer;\n/** @type {?} */\nMediaPlayerControlsExtensionComponent.prototype._volume;\n/** @type {?} */\nMediaPlayerControlsExtensionComponent.prototype._previousVolume;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nexport class DurationPipe implements PipeTransform {\n/**\n * @param {?} seconds\n * @return {?}\n */\ntransform(seconds: number): any {\n\n        let /** @type {?} */ minutes = Math.floor(seconds / 60);\n        let /** @type {?} */ hours = Math.floor(minutes / 60);\n        let /** @type {?} */ days = Math.floor(hours / 24);\n\n        hours = hours - (days * 24);\n        minutes = minutes - (days * 24 * 60) - (hours * 60);\n        seconds = Math.floor(seconds - (days * 24 * 60 * 60) - (hours * 60 * 60) - (minutes * 60));\n\n        if (hours > 0) {\n            return `${this.pad(hours)}:${this.pad(minutes)}:${this.pad(seconds)}`;\n        } else {\n            return `${this.pad(minutes)}:${this.pad(seconds)}`;\n        }\n    }\n/**\n * @param {?} value\n * @return {?}\n */\npad(value: number): string {\n        if (value < 10) {\n            return `0${value}`;\n        }\n\n        return value.toString();\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{\n    name: 'duration'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction DurationPipe_tsickle_Closure_declarations() {\n/** @type {?} */\nDurationPipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDurationPipe.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\n\nimport { DurationPipe } from './duration.pipe';\nexport class DurationPipeModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    exports: [DurationPipe],\n    declarations: [DurationPipe]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction DurationPipeModule_tsickle_Closure_declarations() {\n/** @type {?} */\nDurationPipeModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDurationPipeModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nexport class FileSizePipe implements PipeTransform {\n/**\n * @param {?} value\n * @return {?}\n */\ntransform(value: number): any {\n\n        // allow for async values\n        if (!value) {\n            return value;\n        }\n        \n        let /** @type {?} */ units = ['B', 'KB', 'MB', 'GB', 'TB'];\n\n        // calculate the which unit bracket the values should be a part of\n        let /** @type {?} */ idx = Math.floor(Math.log(value) / Math.log(1024));\n        let /** @type {?} */ formattedValue = value / Math.pow(1024, idx);\n        \n        return `${formattedValue.toFixed(2)} ${units[idx]}`;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{\n    name: 'fileSize'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction FileSizePipe_tsickle_Closure_declarations() {\n/** @type {?} */\nFileSizePipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFileSizePipe.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\n\nimport { FileSizePipe } from './file-size.pipe';\nexport class FileSizePipeModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    exports: [FileSizePipe],\n    declarations: [FileSizePipe]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction FileSizePipeModule_tsickle_Closure_declarations() {\n/** @type {?} */\nFileSizePipeModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFileSizePipeModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MediaPlayerComponent } from './media-player.component';\nimport { MediaPlayerTimelineExtensionComponent } from './extensions/timeline/timeline.component';\nimport { MediaPlayerBaseExtensionDirective } from './extensions/base-extension.directive';\nimport { MediaPlayerControlsExtensionComponent } from './extensions/controls/controls.component';\nimport { FrameExtractionModule } from '../../services/frame-extraction/frame-extraction.module';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { AudioServiceModule } from '../../services/audio/index';\nimport { DurationPipeModule } from '../../pipes/duration/index';\nimport { FileSizePipeModule } from '../../pipes/file-size/index';\nimport { MediaPlayerService } from './media-player.service';\n\nconst /** @type {?} */ DECLARATIONS = [\n    MediaPlayerComponent,\n    MediaPlayerTimelineExtensionComponent,\n    MediaPlayerBaseExtensionDirective,\n    MediaPlayerControlsExtensionComponent\n];\nexport class MediaPlayerModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        FrameExtractionModule,\n        TooltipModule.forRoot(),\n        AudioServiceModule,\n        DurationPipeModule,\n        FileSizePipeModule\n    ],\n    exports: DECLARATIONS,\n    declarations: DECLARATIONS,\n    providers: [MediaPlayerService]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MediaPlayerModule_tsickle_Closure_declarations() {\n/** @type {?} */\nMediaPlayerModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMediaPlayerModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive } from '@angular/core';\nexport class VirtualScrollLoadingDirective { static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{ \n    selector: '[uxVirtualScrollLoading]' \n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction VirtualScrollLoadingDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nVirtualScrollLoadingDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nVirtualScrollLoadingDirective.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive } from '@angular/core';\nexport class VirtualScrollLoadButtonDirective { static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxVirtualScrollLoadButton]' \n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction VirtualScrollLoadButtonDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nVirtualScrollLoadButtonDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nVirtualScrollLoadButtonDirective.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive } from '@angular/core';\nexport class VirtualScrollCellDirective {\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{ \n    selector: '[uxVirtualScrollCell]' \n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction VirtualScrollCellDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nVirtualScrollCellDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nVirtualScrollCellDirective.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, OnInit, EventEmitter, Output, Input, HostListener, ElementRef, AfterContentInit, ContentChild, TemplateRef, OnDestroy, SimpleChanges } from '@angular/core';\nimport { ResizeService } from '../../directives/resize/index';\nimport { VirtualScrollLoadingDirective } from './directives/virtual-scroll-loading.directive';\nimport { VirtualScrollLoadButtonDirective } from './directives/virtual-scroll-load-button.directive';\nimport { VirtualScrollCellDirective } from './directives/virtual-scroll-cell.directive';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Observable } from 'rxjs/Observable';\nimport { Subscription } from 'rxjs/Subscription';\nexport class VirtualScrollComponent implements OnInit, AfterContentInit, OnDestroy {\n\n     collection: Observable<any[]> = Observable.create();\n     cellHeight: number;\n     loadOnScroll: boolean = true;\n\n     loading: EventEmitter<number> = new EventEmitter<number>();\n\n     cellTemplate: TemplateRef<any>;\n     loadingIndicatorTemplate: TemplateRef<any>;\n     loadButtonTemplate: TemplateRef<any>;\n\n    cells: BehaviorSubject<any[]> = new BehaviorSubject([]);\n    scrollTop: number = 0;\n    isLoading: boolean = false;\n    pageNumber: number = 0;\n    data: any[] = [];\n    loadingComplete: boolean = false;\nprivate _subscription: Subscription;\nprivate _height: number;\n/**\n * @param {?} _elementRef\n * @param {?} resizeService\n */\nconstructor(private _elementRef: ElementRef, resizeService: ResizeService) {\n\n        // watch for any future changes to size\n        resizeService.addResizeListener(_elementRef.nativeElement).subscribe(event => this._height = event.height);\n    }\n/**\n * @return {?}\n */\nngOnInit() {\n\n        if (!this.cellHeight) {\n            throw new Error('Virtual Scroll Component requires \"cellHeight\" property to be defined.');\n        }\n\n        // subscribe to the collection\n        this.setupObservable();\n\n        // load the first page of data\n        this.loadNextPage();\n    }\n/**\n * @return {?}\n */\nngAfterContentInit(): void {\n        // re-render cells now that we can display any loading indicator or loading button\n        this.renderCells();\n    }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges): void {\n        if (changes.collection && changes.collection.currentValue !== changes.collection.previousValue && !changes.collection.isFirstChange()) {\n            this.setupObservable();\n            this.reset();\n        }\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        this._subscription.unsubscribe();\n    }\n/**\n * @return {?}\n */\nsetupObservable(): void {\n\n        // if there is a current subscription, unsubscribe\n        if (this._subscription && this._subscription.unsubscribe) {\n            this._subscription.unsubscribe();\n        }\n\n        this._subscription = this.collection.subscribe(collection => {\n            this.data.push(...collection);\n            this.renderCells();\n            this.isLoading = false;\n        }, null, () => {\n            this.loadingComplete = true;\n        });\n    }\n/**\n * @return {?}\n */\nrenderCells(): void {\n        this.cells.next(this.getVisibleCells());\n\n        if (this.loadOnScroll && !this.isLoading && !this.loadingComplete) {\n            const /** @type {?} */ remainingScroll = this._elementRef.nativeElement.scrollHeight - (this._elementRef.nativeElement.scrollTop + this._elementRef.nativeElement.clientHeight);\n\n            // if the current cells take up less than the height of the component then load the next page\n            if (remainingScroll <= this._elementRef.nativeElement.clientHeight) {\n                this.loadNextPage();\n            }\n        }\n    }\n/**\n * @return {?}\n */\ngetVisibleCells(): any[] {\n\n        // store the initial element height\n        if (!this._height) {\n            this._height = this._elementRef.nativeElement.offsetHeight;\n        }\n\n        // perform some calculations\n        const /** @type {?} */ scrollTop = this._elementRef.nativeElement.scrollTop;\n        const /** @type {?} */ startCell = Math.floor(scrollTop / this.cellHeight);\n        const /** @type {?} */ endCell = Math.ceil(this._height / this.cellHeight) + 1;\n\n        // update the scroll position\n        this.scrollTop = scrollTop - (scrollTop % this.cellHeight);\n\n        // return a sublist of items visible on the screen\n        return this.data.slice(startCell, startCell + endCell);\n    }\n/**\n * @return {?}\n */\ngetTotalHeight(): number {\n        return this.cellHeight * this.data.length;\n    }\n/**\n * @return {?}\n */\nloadNextPage(): void {\n        this.isLoading = true;\n        this.loading.next(this.pageNumber);\n        this.pageNumber++;\n    }\n/**\n * @return {?}\n */\nreset(): void {\n\n        // reset all values\n        this.scrollTop = 0;\n        this.data = [];\n        this._height = undefined;\n        this.pageNumber = 0;\n        this.loadingComplete = false;\n\n        // set scroll position\n        this._elementRef.nativeElement.scrollTop = 0;\n\n        // clear the current cells\n        this.renderCells();\n\n        // reload first page\n        this.loadNextPage();\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-virtual-scroll',\n    template: `\n      <div class=\"virtual-scroll-content-height\" [style.height.px]=\"getTotalHeight()\"></div>\n      <div class=\"virtual-scroll-content\" [style.transform]=\"'translateY(' + scrollTop + 'px)'\">\n\n          <!-- Virtually Render Cells -->\n          <ng-container *ngFor=\"let cell of cells | async\">\n              <ng-container *ngTemplateOutlet=\"cellTemplate; context: { cell: cell }\"></ng-container>\n          </ng-container>\n\n          <!-- Loading Indicator -->\n          <ng-container *ngIf=\"loadingIndicatorTemplate && isLoading\" [ngTemplateOutlet]=\"loadingIndicatorTemplate\"></ng-container>\n\n          <!-- Loading Button -->\n          <div class=\"virtual-scroll-load-button\" *ngIf=\"loadButtonTemplate && !loadOnScroll && !loadingComplete && !isLoading\" (click)=\"loadNextPage()\">\n              <ng-container *ngTemplateOutlet=\"loadButtonTemplate\"></ng-container>\n          </div>\n    \n      </div>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: ResizeService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'collection': [{ type: Input },],\n'cellHeight': [{ type: Input },],\n'loadOnScroll': [{ type: Input },],\n'loading': [{ type: Output },],\n'cellTemplate': [{ type: ContentChild, args: [VirtualScrollCellDirective, { read: TemplateRef }, ] },],\n'loadingIndicatorTemplate': [{ type: ContentChild, args: [VirtualScrollLoadingDirective, { read: TemplateRef }, ] },],\n'loadButtonTemplate': [{ type: ContentChild, args: [VirtualScrollLoadButtonDirective, { read: TemplateRef }, ] },],\n'renderCells': [{ type: HostListener, args: ['scroll', ] },],\n};\n}\n\nfunction VirtualScrollComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nVirtualScrollComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nVirtualScrollComponent.ctorParameters;\n/** @type {?} */\nVirtualScrollComponent.propDecorators;\n/** @type {?} */\nVirtualScrollComponent.prototype.collection;\n/** @type {?} */\nVirtualScrollComponent.prototype.cellHeight;\n/** @type {?} */\nVirtualScrollComponent.prototype.loadOnScroll;\n/** @type {?} */\nVirtualScrollComponent.prototype.loading;\n/** @type {?} */\nVirtualScrollComponent.prototype.cellTemplate;\n/** @type {?} */\nVirtualScrollComponent.prototype.loadingIndicatorTemplate;\n/** @type {?} */\nVirtualScrollComponent.prototype.loadButtonTemplate;\n/** @type {?} */\nVirtualScrollComponent.prototype.cells;\n/** @type {?} */\nVirtualScrollComponent.prototype.scrollTop;\n/** @type {?} */\nVirtualScrollComponent.prototype.isLoading;\n/** @type {?} */\nVirtualScrollComponent.prototype.pageNumber;\n/** @type {?} */\nVirtualScrollComponent.prototype.data;\n/** @type {?} */\nVirtualScrollComponent.prototype.loadingComplete;\n/** @type {?} */\nVirtualScrollComponent.prototype._subscription;\n/** @type {?} */\nVirtualScrollComponent.prototype._height;\n/** @type {?} */\nVirtualScrollComponent.prototype._elementRef;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { VirtualScrollComponent } from './virtual-scroll.component';\nimport { ResizeModule } from '../../directives/resize/index';\nimport { VirtualScrollLoadingDirective } from './directives/virtual-scroll-loading.directive';\nimport { VirtualScrollLoadButtonDirective } from './directives/virtual-scroll-load-button.directive';\nimport { VirtualScrollCellDirective } from './directives/virtual-scroll-cell.directive';\n\nconst /** @type {?} */ DECLARATIONS = [\n    VirtualScrollComponent,\n    VirtualScrollLoadingDirective,\n    VirtualScrollLoadButtonDirective,\n    VirtualScrollCellDirective\n];\nexport class VirtualScrollModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        ResizeModule\n    ],\n    exports: DECLARATIONS,\n    declarations: DECLARATIONS\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction VirtualScrollModule_tsickle_Closure_declarations() {\n/** @type {?} */\nVirtualScrollModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nVirtualScrollModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, OnInit, Renderer2, Input, Output, EventEmitter } from '@angular/core';\nexport class FixedHeaderTableDirective implements OnInit {\n\n   tableHeight: number | string;\n   tablePaging: EventEmitter<number> = new EventEmitter<number>();\nprivate _tableHead: HTMLElement;\nprivate _tableBody: HTMLElement;\n/**\n * @param {?} _elementRef\n * @param {?} _renderer\n */\nconstructor(private _elementRef: ElementRef,\nprivate _renderer: Renderer2) { }\n/**\n * @return {?}\n */\nngOnInit(): void {\n\n    // add class to the table\n    this._renderer.addClass(this._elementRef.nativeElement, 'ux-fixed-header-table');\n\n    // locate the important elements\n    this._tableHead = this._elementRef.nativeElement.querySelector('thead');\n    this._tableBody = this._elementRef.nativeElement.querySelector('tbody');\n\n    // bind to scroll events on the table body\n    this._renderer.listen(this._tableBody, 'scroll', this.onScroll.bind(this));\n\n    // resize the table header to account for scrollbar\n    this.setLayout();\n\n    // trigger the loading of the first page\n    this.tablePaging.emit();\n  }\n/**\n * Get the table element\n * Primarily used by column width directive\n * @return {?}\n */\ngetTable(): HTMLTableElement {\n    return this._elementRef.nativeElement;\n  }\n/**\n * Handle scroll events\n * @param {?} event\n * @return {?}\n */\nprivate onScroll(event: MouseEvent): void {\n\n    // determine if we are scrolled to the bottom and if so load the next page\n    if (this._tableBody.scrollTop === (this._tableBody.scrollHeight - this._tableBody.offsetHeight)) {\n      this.tablePaging.emit();\n    }\n  }\n/**\n * Update the size of the table header to account for the scrollbar.\n * This is important to keep the columns aligned\n * @return {?}\n */\nprivate setLayout(): void {\n\n    // calculate the size of the scrollbar\n    const /** @type {?} */ scrollbar = this._tableBody.offsetWidth - this._tableBody.clientWidth;\n\n    // add padding to the header to account for this\n    this._renderer.setStyle(this._tableHead, 'padding-right', scrollbar + 'px');\n\n    // set the desired height of the table body\n    this._renderer.setStyle(this._tableBody, 'height', typeof this.tableHeight === 'number' ? `${this.tableHeight}px` : this.tableHeight);\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[uxFixedHeaderTable]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer2, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'tableHeight': [{ type: Input },],\n'tablePaging': [{ type: Output },],\n};\n}\n\nfunction FixedHeaderTableDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nFixedHeaderTableDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFixedHeaderTableDirective.ctorParameters;\n/** @type {?} */\nFixedHeaderTableDirective.propDecorators;\n/** @type {?} */\nFixedHeaderTableDirective.prototype.tableHeight;\n/** @type {?} */\nFixedHeaderTableDirective.prototype.tablePaging;\n/** @type {?} */\nFixedHeaderTableDirective.prototype._tableHead;\n/** @type {?} */\nFixedHeaderTableDirective.prototype._tableBody;\n/** @type {?} */\nFixedHeaderTableDirective.prototype._elementRef;\n/** @type {?} */\nFixedHeaderTableDirective.prototype._renderer;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\n\nimport { FixedHeaderTableDirective } from './fixed-header-table.directive';\nexport class FixedHeaderTableModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    exports: [FixedHeaderTableDirective],\n    declarations: [FixedHeaderTableDirective]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction FixedHeaderTableModule_tsickle_Closure_declarations() {\n/** @type {?} */\nFixedHeaderTableModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFixedHeaderTableModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nexport class HelpCenterService {\n\n    items: BehaviorSubject<HelpCenterItem[]> = new BehaviorSubject<HelpCenterItem[]>([]);\n/**\n * @param {?} item\n * @return {?}\n */\nregisterItem(item: HelpCenterItem): void {\n\n        // get the current items\n        let /** @type {?} */ items = this.items.getValue();\n\n        // add the new item to the list\n        items.push(item);\n\n        // update the observable\n        this.items.next(items);\n    }\n/**\n * @param {?} item\n * @return {?}\n */\nunregisterItem(item: HelpCenterItem): void {\n\n        // get the current items\n        let /** @type {?} */ items = this.items.getValue();\n\n        // remove the item being unregistered\n        items = items.filter(itm => itm !== item);\n\n        // update the observable\n        this.items.next(items);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction HelpCenterService_tsickle_Closure_declarations() {\n/** @type {?} */\nHelpCenterService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nHelpCenterService.ctorParameters;\n/** @type {?} */\nHelpCenterService.prototype.items;\n}\n\n\nexport interface HelpCenterItem {\n    icon?: string;\n    title: string;\n    select?: () => void;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, Input, OnInit, OnDestroy } from '@angular/core';\nimport { HelpCenterService, HelpCenterItem } from './help-center.service';\nexport class HelpCenterItemDirective implements OnInit, OnDestroy {\n\n     uxHelpCenterItem: HelpCenterItem;\n/**\n * @param {?} _helpCenterService\n */\nconstructor(private _helpCenterService: HelpCenterService) { }\n/**\n * @return {?}\n */\nngOnInit(): void {\n\n        // register the item in the service\n        this._helpCenterService.registerItem(this.uxHelpCenterItem);\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        // remove this item when it is destroyed\n        this._helpCenterService.unregisterItem(this.uxHelpCenterItem);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{ selector: '[uxHelpCenterItem]' }, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: HelpCenterService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'uxHelpCenterItem': [{ type: Input },],\n};\n}\n\nfunction HelpCenterItemDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nHelpCenterItemDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nHelpCenterItemDirective.ctorParameters;\n/** @type {?} */\nHelpCenterItemDirective.propDecorators;\n/** @type {?} */\nHelpCenterItemDirective.prototype.uxHelpCenterItem;\n/** @type {?} */\nHelpCenterItemDirective.prototype._helpCenterService;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { HelpCenterItemDirective } from './help-center-item.directive';\nimport { HelpCenterService } from './help-center.service';\nexport class HelpCenterModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [],\n    exports: [HelpCenterItemDirective],\n    declarations: [HelpCenterItemDirective],\n    providers: [HelpCenterService],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction HelpCenterModule_tsickle_Closure_declarations() {\n/** @type {?} */\nHelpCenterModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nHelpCenterModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { HoverActionDirective } from './hover-action.directive';\nimport { HoverActionContainerDirective } from './hover-action-container.directive';\nexport class HoverActionService {\n\n    active: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\nprivate _container: HoverActionContainerDirective;\nprivate _focused: boolean = false;\nprivate _hovered: boolean = false;\nprivate _actions: HoverActionDirective[] = [];\n/**\n * @param {?} action\n * @return {?}\n */\nregister(action: HoverActionDirective): void {\n        this._actions.push(action);\n    }\n/**\n * @param {?} action\n * @return {?}\n */\nunregister(action: HoverActionDirective): void {\n        this._actions = this._actions.filter(actn => actn !== action);\n    }\n/**\n * @param {?} container\n * @return {?}\n */\nsetContainer(container: HoverActionContainerDirective): void {\n        this._container = container;\n    }\n/**\n * @param {?} focus\n * @return {?}\n */\nsetFocusState(focus: boolean): void {\n        this._focused = focus;\n        this.updateVisibility();\n    }\n/**\n * @param {?} hover\n * @return {?}\n */\nsetHoverState(hover: boolean): void {\n        this._hovered = hover;\n        this.updateVisibility();\n    }\n/**\n * @return {?}\n */\nnext(): void {\n\n        // if container has focus then focus the first hover action\n        if (this.containerHasFocus()) {\n            this.focusActionAtIndex(0);\n            return this.updateVisibility();\n        }\n\n        // if a hover action has focus then focus the next action\n        if (this.actionHasFocus()) {\n            let /** @type {?} */ index = this.getFocusedActionIndex() + 1;\n            this.focusActionAtIndex(index);\n            this.updateVisibility();\n        }\n    }\n/**\n * @return {?}\n */\nprevious(): void {\n        // if a hover action has focus then focus the previous action\n        if (this.actionHasFocus()) {\n            let /** @type {?} */ index = this.getFocusedActionIndex() - 1;\n\n            if (index >= 0) {\n                this.focusActionAtIndex(index);\n            } else {\n                this._container.focus();\n            }\n        }\n\n        this.updateVisibility();\n    }\n/**\n * @return {?}\n */\nupdateVisibility(): void {\n        this.active.next(this._focused || this._hovered || this.actionHasFocus());\n    }\n/**\n * @param {?} index\n * @return {?}\n */\nprivate focusActionAtIndex(index: number): void {\n        if (index >= 0 && index < this._actions.length) {\n            this._actions[index].focus();\n        }\n    }\n/**\n * @return {?}\n */\nprivate getFocusedActionIndex(): number {\n        return this._actions.findIndex(action => action === this.getFocusedAction());\n    }\n/**\n * @return {?}\n */\nprivate containerHasFocus(): boolean {\n        return this._focused;\n    }\n/**\n * @return {?}\n */\nprivate actionHasFocus(): boolean {\n        return !!this.getFocusedAction();\n    }\n/**\n * @return {?}\n */\nprivate getFocusedAction(): HoverActionDirective {\n        return this._actions.find(action => action.focused);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction HoverActionService_tsickle_Closure_declarations() {\n/** @type {?} */\nHoverActionService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nHoverActionService.ctorParameters;\n/** @type {?} */\nHoverActionService.prototype.active;\n/** @type {?} */\nHoverActionService.prototype._container;\n/** @type {?} */\nHoverActionService.prototype._focused;\n/** @type {?} */\nHoverActionService.prototype._hovered;\n/** @type {?} */\nHoverActionService.prototype._actions;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ContentChildren, QueryList, HostListener, ElementRef, OnDestroy, Input } from '@angular/core';\nimport { HoverActionDirective } from './hover-action.directive';\nimport { HoverActionService } from './hover-action.service';\nimport { Subscription } from 'rxjs/Subscription';\nexport class HoverActionContainerDirective implements OnDestroy {\n\n     tabindex: number = 0;\n    active: boolean = false;\nprivate active$: Subscription;\n/**\n * @param {?} _elementRef\n * @param {?} _hoverActionService\n */\nconstructor(private _elementRef: ElementRef,\nprivate _hoverActionService: HoverActionService) {\n        // register the container element with the service\n        this._hoverActionService.setContainer(this);\n        \n        // apply a class based on the active state of the container and it's actions\n        this.active$ = this._hoverActionService.active.subscribe(active => this.active = active);\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        this.active$.unsubscribe();\n    }\n/**\n * @return {?}\n */\nfocus(): void {\n        this._elementRef.nativeElement.focus();\n    }\n/**\n * @return {?}\n */\nonFocus(): void {\n        this._hoverActionService.setFocusState(true);\n    }\n/**\n * @return {?}\n */\nonBlur(): void {\n        this._hoverActionService.setFocusState(false);\n    }\n/**\n * @return {?}\n */\nonHover(): void {\n        this._hoverActionService.setHoverState(true);\n    }\n/**\n * @return {?}\n */\nonLeave(): void {\n        this._hoverActionService.setHoverState(false);\n    }\n/**\n * @return {?}\n */\nnext(): void {\n        this._hoverActionService.next();\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxHoverActionContainer]',\n    providers: [HoverActionService],\n    host: {\n        '[class.hover-action-container-active]': 'active',\n        '[tabindex]': 'tabindex'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: HoverActionService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'tabindex': [{ type: Input },],\n'focus': [{ type: HostListener, args: ['click', ] },],\n'onFocus': [{ type: HostListener, args: ['focus', ] },],\n'onBlur': [{ type: HostListener, args: ['blur', ] },],\n'onHover': [{ type: HostListener, args: ['mouseenter', ] },],\n'onLeave': [{ type: HostListener, args: ['mouseleave', ] },],\n'next': [{ type: HostListener, args: ['keydown.arrowright', ] },],\n};\n}\n\nfunction HoverActionContainerDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nHoverActionContainerDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nHoverActionContainerDirective.ctorParameters;\n/** @type {?} */\nHoverActionContainerDirective.propDecorators;\n/** @type {?} */\nHoverActionContainerDirective.prototype.tabindex;\n/** @type {?} */\nHoverActionContainerDirective.prototype.active;\n/** @type {?} */\nHoverActionContainerDirective.prototype.active$;\n/** @type {?} */\nHoverActionContainerDirective.prototype._elementRef;\n/** @type {?} */\nHoverActionContainerDirective.prototype._hoverActionService;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, HostListener, OnDestroy, Input } from '@angular/core';\nimport { HoverActionService } from './hover-action.service';\nimport { Subscription } from 'rxjs/Subscription';\nexport class HoverActionDirective implements OnDestroy {\n\n     tabindex: number = 1;\n    active: boolean = false;\n    focused: boolean = false;\nprivate active$: Subscription;\n/**\n * @param {?} _elementRef\n * @param {?} _hoverActionService\n */\nconstructor(private _elementRef: ElementRef,\nprivate _hoverActionService: HoverActionService) {\n\n        // register the action\n        this._hoverActionService.register(this);\n\n        // watch for changes to the activeness of the container\n        this.active$ = this._hoverActionService.active.subscribe(active => this.active = active);\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        this._hoverActionService.unregister(this);\n        this.active$.unsubscribe();\n    }\n/**\n * @return {?}\n */\nfocus(): void {\n        this._elementRef.nativeElement.focus();\n    }\n/**\n * @return {?}\n */\nonFocus(): void {\n        this.focused = true;\n        this._hoverActionService.updateVisibility();\n    }\n/**\n * @return {?}\n */\nonBlur(): void {\n        this.focused = false;\n        this._hoverActionService.updateVisibility();\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nprevious(event: MouseEvent): void {\n        event.stopPropagation();        \n        this._hoverActionService.previous();\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nnext(event: MouseEvent): void {\n        event.stopPropagation();\n        this._hoverActionService.next();\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxHoverAction]',\n    host: {\n        '[class.hover-action-active]': 'active',\n        '[class.hover-action-focused]': 'focused',\n        '[tabindex]': 'tabindex'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: HoverActionService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'tabindex': [{ type: Input },],\n'onFocus': [{ type: HostListener, args: ['focus', ] },],\n'onBlur': [{ type: HostListener, args: ['blur', ] },],\n'previous': [{ type: HostListener, args: ['keydown.arrowleft', ['$event'], ] },],\n'next': [{ type: HostListener, args: ['keydown.arrowright', ['$event'], ] },],\n};\n}\n\nfunction HoverActionDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nHoverActionDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nHoverActionDirective.ctorParameters;\n/** @type {?} */\nHoverActionDirective.propDecorators;\n/** @type {?} */\nHoverActionDirective.prototype.tabindex;\n/** @type {?} */\nHoverActionDirective.prototype.active;\n/** @type {?} */\nHoverActionDirective.prototype.focused;\n/** @type {?} */\nHoverActionDirective.prototype.active$;\n/** @type {?} */\nHoverActionDirective.prototype._elementRef;\n/** @type {?} */\nHoverActionDirective.prototype._hoverActionService;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { HoverActionContainerDirective } from './hover-action-container.directive';\nimport { HoverActionDirective } from './hover-action.directive';\n\nconst /** @type {?} */ DECLARATIONS = [\n    HoverActionDirective,\n    HoverActionContainerDirective\n];\nexport class HoverActionModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    exports: DECLARATIONS,\n    declarations: DECLARATIONS\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction HoverActionModule_tsickle_Closure_declarations() {\n/** @type {?} */\nHoverActionModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nHoverActionModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, Input, TemplateRef, SimpleChanges, ViewContainerRef, EmbeddedViewRef } from '@angular/core';\nexport class LayoutSwitcherItemDirective {\nprivate _config: LayoutSwitcherItem;\nprivate _embeddedView: EmbeddedViewRef<any>;\n/**\n * @param {?} _templateRef\n * @param {?} _viewContainerRef\n */\nconstructor(private _templateRef: TemplateRef<any>,\nprivate _viewContainerRef: ViewContainerRef) { }\n/**\n * @return {?}\n */\ngetLayout(): TemplateRef<any> {\n        return this._templateRef;\n    }\n/**\n * @return {?}\n */\ngetConfig(): LayoutSwitcherItem {\n        return this._config;\n    }\n/**\n * @return {?}\n */\nactivate(): void {\n        this._embeddedView = this._viewContainerRef.createEmbeddedView(this._templateRef);\n    }\n/**\n * @return {?}\n */\ndeactivate(): void {\n        let /** @type {?} */ index = this._viewContainerRef.indexOf(this._embeddedView);\n        this._viewContainerRef.remove(index);\n        this._embeddedView = null;\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxLayoutSwitcherItem]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: TemplateRef, },\n{type: ViewContainerRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'_config': [{ type: Input, args: ['uxLayoutSwitcherItem', ] },],\n};\n}\n\nfunction LayoutSwitcherItemDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nLayoutSwitcherItemDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nLayoutSwitcherItemDirective.ctorParameters;\n/** @type {?} */\nLayoutSwitcherItemDirective.propDecorators;\n/** @type {?} */\nLayoutSwitcherItemDirective.prototype._config;\n/** @type {?} */\nLayoutSwitcherItemDirective.prototype._embeddedView;\n/** @type {?} */\nLayoutSwitcherItemDirective.prototype._templateRef;\n/** @type {?} */\nLayoutSwitcherItemDirective.prototype._viewContainerRef;\n}\n\n\nexport interface LayoutSwitcherItem {\n    group?: string;\n    minWidth?: number;\n    maxWidth?: number;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, QueryList, ContentChildren, Input, AfterContentInit, ViewContainerRef, OnChanges, SimpleChanges } from '@angular/core';\nimport { ResizeService } from '../resize/index';\nimport { LayoutSwitcherItemDirective } from './layout-switcher-item.directive';\nexport class LayoutSwitcherDirective implements AfterContentInit, OnChanges {\n\n     group: string;\nprivate _layouts: QueryList<LayoutSwitcherItemDirective>;\nprivate _width: number;\nprivate _activeLayout: LayoutSwitcherItemDirective;\n/**\n * @param {?} _elementRef\n * @param {?} resizeService\n * @param {?} _viewContainerRef\n */\nconstructor(private _elementRef: ElementRef, resizeService: ResizeService,\nprivate _viewContainerRef: ViewContainerRef) {\n\n        // watch for changes to the container size\n        resizeService.addResizeListener(_elementRef.nativeElement).subscribe(event => {\n            this._width = event.width;\n\n            // render the appropriate layout\n            this.updateActiveLayout();\n        });\n    }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges): void {\n\n        // if the active group has changed then render the appropriate layout\n        if (changes.group.currentValue !== changes.group.previousValue) {\n            this.updateActiveLayout();\n        }\n    }\n/**\n * @return {?}\n */\ngetActiveLayout(): LayoutSwitcherItemDirective | null {\n\n        // if there are currently no layouts then do nothing\n        if (!this._layouts) {\n            return null;\n        }\n\n        // otherwise find layouts that match the active group and that meet the constraints\n        return this._layouts.filter(layout => this.group === layout.getConfig().group).find(layout => {\n\n            let /** @type {?} */ minWidth = layout.getConfig().minWidth || 0;\n            let /** @type {?} */ maxWidth = layout.getConfig().maxWidth || Infinity;\n\n            return this._width >= minWidth && this._width < maxWidth;\n        });\n    }\n/**\n * @return {?}\n */\nupdateActiveLayout(): void {\n\n        // get the layout that should be shown\n        let /** @type {?} */ layout = this.getActiveLayout();\n\n        // check if we are currently showing the layout\n        if (this._activeLayout === layout) {\n            return;\n        }\n\n        // remove the current layout\n        if (this._activeLayout) {\n            this._activeLayout.deactivate();\n        }\n\n        // store the new active layout\n        this._activeLayout = layout;\n\n        // if there is an active layout then activate\n        if (this._activeLayout) {\n            this._activeLayout.activate();\n        }\n    }\n/**\n * @return {?}\n */\nngAfterContentInit(): void {\n\n        // store the initial current element width\n        this._width = this._elementRef.nativeElement.offsetWidth;\n\n        // render the appropriate layout - need a delay as Angular doesn't like changes like this in these lifecycle hooks\n        requestAnimationFrame(this.updateActiveLayout.bind(this));\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxLayoutSwitcher]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: ResizeService, },\n{type: ViewContainerRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'group': [{ type: Input },],\n'_layouts': [{ type: ContentChildren, args: [LayoutSwitcherItemDirective, ] },],\n};\n}\n\nfunction LayoutSwitcherDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nLayoutSwitcherDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nLayoutSwitcherDirective.ctorParameters;\n/** @type {?} */\nLayoutSwitcherDirective.propDecorators;\n/** @type {?} */\nLayoutSwitcherDirective.prototype.group;\n/** @type {?} */\nLayoutSwitcherDirective.prototype._layouts;\n/** @type {?} */\nLayoutSwitcherDirective.prototype._width;\n/** @type {?} */\nLayoutSwitcherDirective.prototype._activeLayout;\n/** @type {?} */\nLayoutSwitcherDirective.prototype._elementRef;\n/** @type {?} */\nLayoutSwitcherDirective.prototype._viewContainerRef;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { LayoutSwitcherDirective } from './layout-switcher.directive';\nimport { LayoutSwitcherItemDirective } from './layout-switcher-item.directive';\nimport { ResizeModule } from '../resize/index';\n\nconst /** @type {?} */ DECLARATIONS = [\n    LayoutSwitcherDirective,\n    LayoutSwitcherItemDirective\n];\nexport class LayoutSwitcherModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        ResizeModule\n    ],\n    exports: DECLARATIONS,\n    declarations: DECLARATIONS,\n    providers: [],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction LayoutSwitcherModule_tsickle_Closure_declarations() {\n/** @type {?} */\nLayoutSwitcherModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nLayoutSwitcherModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { SelectionService } from '../selection.service';\nexport class SelectionStrategy {\n/**\n * @param {?} selectionService\n */\nconstructor(protected selectionService: SelectionService) { }\n/**\n * @param {?} event\n * @param {?} data\n * @return {?}\n */\nmousedown(event: MouseEvent, data: any): void { }\n/**\n * @param {?} event\n * @param {?} data\n * @return {?}\n */\nclick(event: MouseEvent, data: any): void { }\n/**\n * @param {?} event\n * @param {?} data\n * @return {?}\n */\nkeydown(event: KeyboardEvent, data: any): void { }\n/**\n * Select the item - default behavior\n * @param {...?} data\n * @return {?}\n */\nselect(...data: any[]): void {\n    this.selectionService.select(...data);\n  }\n/**\n * Toggle the item's selected state - default behavior\n * @param {...?} data\n * @return {?}\n */\ntoggle(...data: any[]): void {\n    this.selectionService.toggle(...data);\n  }\n/**\n * Deselect the item - default behavior\n * @param {...?} data\n * @return {?}\n */\ndeselect(...data: any[]): void {\n    this.selectionService.deselect(...data);\n  }\n/**\n * Select all items - default behavior\n * @return {?}\n */\nselectAll(): void {\n    this.select(...this.selectionService.dataset);\n  }\n/**\n * Deselect all items - default behavior\n * @return {?}\n */\ndeselectAll(): void {\n    this.deselect(...this.selectionService.dataset);\n  }\n/**\n * @return {?}\n */\ndestroy(): void { }\n}\n\nfunction SelectionStrategy_tsickle_Closure_declarations() {\n/** @type {?} */\nSelectionStrategy.prototype.selectionService;\n}\n\n","import { SelectionStrategy } from './selection.strategy';\nexport class RowSelectionStrategy extends SelectionStrategy {\nprivate _selection: Selection = { start: null, end: null };\n/**\n * By default on shift click the browser will highlight\n * text. This looks bad and we don't want this to occur\n * @param {?} event\n * @return {?}\n */\nmousedown(event: MouseEvent): void {\n    event.preventDefault();\n  }\n/**\n * When a row is clicked we want to handle selection\n * @param {?} event\n * @param {?} data\n * @return {?}\n */\nclick(event: MouseEvent, data: any): void {\n\n    // determine which modifier keys are pressed\n    const { ctrlKey, shiftKey } = event;\n\n    // if the shift key is pressed we want to perform a multiple selection\n    if (shiftKey) {\n      return this.multipleSelect(data);\n    }\n\n    // if the control key is pressed we want to perform an additive toggle selection\n    if (ctrlKey) {\n      return this.toggle(data);\n    }\n\n    // perform a single selection where all other rows are deselected\n    this.singleSelect(data);\n  }\n/**\n * To support full keyboard control we need to support the following:\n * 1. Arrow keys to navigate up and down\n * 2. Spacebar to toggle selection\n * 3. Shift + Arrow keys to multiple select\n * 4. Ctrl + Arrow keys to allow retained selection and navigation\n * @param {?} event\n * @param {?} data\n * @return {?}\n */\nkeydown(event: KeyboardEvent, data: any): void {\n\n    switch (event.keyCode) {\n\n      case KeyCode.UpArrow:\n      case KeyCode.DownArrow:\n        event.preventDefault();\n        this.navigate(event, data);\n        break;\n        \n      case KeyCode.Spacebar:\n        event.preventDefault();\n        this.selectionService.strategy.toggle(data, true);\n        break;\n\n    }\n  }\n/**\n * Override the standard toggle function to store or clear the\n * most recently selected item\n * @param {?} data\n * @param {?=} activate\n * @return {?}\n */\ntoggle(data: any, activate: boolean = false): void {\n    super.toggle(data);\n\n    // store or clear the selection\n    this.selectionService.isSelected(data) ? this.setSelectionStart(data) : this.clearSelection();\n\n    // if we want to keep the item activated then activate\n    if (activate) {\n      this.selectionService.activate(data);\n    }\n  }\n/**\n * Clear all other selected items and select only\n * the most recently selected item\n * @param {?} data\n * @return {?}\n */\nprivate singleSelect(data: any): void {\n\n    // deselect all other rows if neither modifier key is pressed\n    this.deselectAll();\n\n    // select the current row\n    this.select(data);\n\n    // store the current item as the selection start\n    this.setSelectionStart(data);\n  }\n/**\n * Handle multiple selection:\n * 1. If no start item selected - select it\n * 2. If a start item has been selected - select all in between\n * 3. If a start and end item have been selected clear the range and then select the new range\n * @param {?} data\n * @return {?}\n */\nprivate multipleSelect(data: any): void {\n\n    // if no selection currently exists then perform initial selection\n    if (!this._selection.start) {\n\n      // select the row\n      this.select(data);\n\n      // store the starting point\n      return this.setSelectionStart(data);\n    }\n\n    // if a multiple selection already took place - clear the previous selection\n    if (this._selection.start && this._selection.end) {\n      this.deselect(...this.getSelectedItems());\n    }\n\n    // set the new selection end point\n    this.setSelectionEnd(data);\n\n    // select all the items in the range\n    this.select(...this.getSelectedItems());\n  }\n/**\n * Set the selection start point. If there was previously a\n * selection end point then clear it as this is a new selection\n * @param {?} data\n * @return {?}\n */\nprivate setSelectionStart(data: any): void {\n    this._selection.start = data;\n    this._selection.end = null;\n\n    // activate the item\n    this.selectionService.activate(data);\n  }\n/**\n * Set the selection end point\n * @param {?} data\n * @return {?}\n */\nprivate setSelectionEnd(data: any): void {\n    this._selection.end = data;\n\n    // activate the item\n    this.selectionService.activate(data);\n  }\n/**\n * Clear both start and end selection points\n * @param {?=} deactivate\n * @return {?}\n */\nprivate clearSelection(deactivate: boolean = true): void {\n\n    // reset the selected item\n    this._selection = { start: null, end: null };\n\n    // remove the current active item\n    if (deactivate) {\n      this.selectionService.deactivate();\n    }\n  }\n/**\n * Determine all the items affected by the current selection.\n * Note that the end point may be above the start point so\n * we need to account for this.\n * @return {?}\n */\nprivate getSelectedItems(): any[] {\n\n    // get the latest dataset\n    const { dataset } = this.selectionService;\n\n    // get the indexes of the start and end point\n    const /** @type {?} */ startIdx = dataset.indexOf(this._selection.start);\n    const /** @type {?} */ endIdx = dataset.indexOf(this._selection.end);\n\n    // get the region of the array that is selected - note the endIdx may be before the startIdx so account for this\n    return dataset.slice(Math.min(startIdx, endIdx), Math.max(startIdx, endIdx) + 1);\n  }\n/**\n * Activate the sibling item when arrow keys are pressed\n * @param {?} event\n * @param {?} data\n * @return {?}\n */\nprivate navigate(event: KeyboardEvent, data: any): void {\n\n    // determine which modifier keys are pressed\n    const { ctrlKey, shiftKey } = event;\n\n    // if no modifier keys are pressed then deselect all and clear the selection\n    if (!ctrlKey && !shiftKey) {\n      this.deselectAll();\n      this.clearSelection(false);\n    }\n\n    // activate the sibling - if the up arrow is pressed then navigate to the previous sibling\n    const /** @type {?} */ sibling = this.selectionService.activateSibling(event.keyCode === KeyCode.UpArrow);\n\n    // if the shift key is pressed then we also want to toggle the state if the item\n    if (shiftKey && sibling) {\n\n      // if there is no current selection start then select the current row\n      if (!this._selection.start) {\n        this.multipleSelect(data);\n      }\n\n      this.multipleSelect(sibling);\n    }\n  }\n}\n\nfunction RowSelectionStrategy_tsickle_Closure_declarations() {\n/** @type {?} */\nRowSelectionStrategy.prototype._selection;\n}\n\n\nexport interface Selection {\n  start: any;\n  end: any;\n}\ntype KeyCode = number;\nlet KeyCode: any = {};\nKeyCode.UpArrow = 38;\nKeyCode.DownArrow = 40;\nKeyCode.Spacebar = 32;\nKeyCode[KeyCode.UpArrow] = \"UpArrow\";\nKeyCode[KeyCode.DownArrow] = \"DownArrow\";\nKeyCode[KeyCode.Spacebar] = \"Spacebar\";\n\n","import { SelectionStrategy } from './selection.strategy';\nexport class SimpleSelectionStrategy extends SelectionStrategy {\n/**\n * When the item is clicked simply toggle the current selected state\n * @param {?} event\n * @param {?} data\n * @return {?}\n */\nclick(event: MouseEvent, data: any): void {\n    this.toggle(data);\n  }\n/**\n * Add basic keyboard support for navigating\n * and selecting/deselecting items\n * @param {?} event\n * @param {?} data\n * @return {?}\n */\nkeydown(event: KeyboardEvent, data: any): void {\n\n    switch (event.keyCode) {\n      \n      case KeyCode.UpArrow:\n        event.preventDefault();\n        return this.selectionService.activateSibling(true);\n        \n      case KeyCode.DownArrow:\n        event.preventDefault();\n        return this.selectionService.activateSibling(false);\n      \n      case KeyCode.Spacebar:\n        event.preventDefault();      \n        return this.toggle(data);\n    }\n  }\n/**\n * Override the standard toggle function to always activate the item\n * @param {?} data\n * @return {?}\n */\ntoggle(data: any): void {\n    super.toggle(data);\n    this.selectionService.activate(data);\n  }\n}\ntype KeyCode = number;\nlet KeyCode: any = {};\nKeyCode.UpArrow = 38;\nKeyCode.DownArrow = 40;\nKeyCode.Spacebar = 32;\nKeyCode[KeyCode.UpArrow] = \"UpArrow\";\nKeyCode[KeyCode.DownArrow] = \"DownArrow\";\nKeyCode[KeyCode.Spacebar] = \"Spacebar\";\n\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Observable } from 'rxjs/Observable';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\nimport { RowSelectionStrategy } from './strategies/row-selection.strategy';\nimport { SelectionStrategy } from './strategies/selection.strategy';\nimport { SimpleSelectionStrategy } from './strategies/simple-selection.strategy';\nexport class SelectionService implements OnDestroy {\nprivate _selection = new Set();\nprivate _rowStrategy = new RowSelectionStrategy(this);\nprivate _simpleStrategy = new SimpleSelectionStrategy(this);\n\n  dataset: any[] = [];\n  enabled: boolean = true;\n  clickEnabled: boolean = true;\n  keyboardEnabled: boolean = true;\n  strategy: SelectionStrategy = this._simpleStrategy;\n\n  active$ = new BehaviorSubject<any>(null);\n  selection$ = new BehaviorSubject<any[]>([]);\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n    this._rowStrategy.destroy();\n    this._simpleStrategy.destroy();\n  }\n/**\n * If the item is not currently selected then add it\n * to the list of selected items\n * @param {...?} selections\n * @return {?}\n */\nselect(...selections: any[]): void {\n\n    // add each selection to the set\n    selections.forEach(selection => this._selection.add(selection));\n\n    // propagate the changes\n    this.selectionHasMutated();\n  }\n/**\n * Remove an item from the list of selected items\n * @param {...?} selections\n * @return {?}\n */\ndeselect(...selections: any[]): void {\n    // remove each item from the set\n    selections.forEach(selection => this._selection.delete(selection));\n\n    // propagate the changes\n    this.selectionHasMutated();\n  }\n/**\n * Toggle the selected state of any specified items\n * @param {...?} selections\n * @return {?}\n */\ntoggle(...selections: any[]): void {\n    selections.forEach(selection => this.isSelected(selection) ? this.deselect(selection) : this.select(selection));\n  }\n/**\n * Determine whether or not a specific item is currently selected\n * @param {?} data\n * @return {?}\n */\nisSelected(data: any): boolean {\n    return this._selection.has(data);\n  }\n/**\n * Return an observable specifically for notifying the subscriber\n * only when the selection state of a specific object has changed\n * @param {?} data\n * @return {?}\n */\nselected$(data: any): Observable<boolean> {\n    return this.selection$.pipe(map(() => this.isSelected(data)), distinctUntilChanged());\n  }\n/**\n * Define how selections should be performed.\n * This allows us to use an strategy pattern to handle the various keyboard\n * and mouse interactions while keeping each mode separated and\n * easily extensible if we want to add more modes in future!\n * @param {?} mode\n * @return {?}\n */\nsetMode(mode: SelectionMode): void {\n\n    switch (mode.toLowerCase().trim()) {\n\n      case 'simple':\n        this.strategy = this._simpleStrategy;\n        break;\n\n      case 'row':\n        this.strategy = this._rowStrategy;\n        break;\n\n      default:\n        throw new Error(`The selection mode '${mode}' does not exist. Valid modes are 'simple' or 'row'.`);\n    }\n  }\n/**\n * Set the current active item\n * @param {?} data\n * @return {?}\n */\nactivate(data: any): void {\n    this.active$.next(data);\n  }\n/**\n * Deactive all items\n * @return {?}\n */\ndeactivate(): void {\n    this.active$.next(null);\n  }\n/**\n * Activate the sibling of the current active item.\n * If previous is set to true the previous sibling will be activated\n * rather than the next sibling. This function will also return the\n * data of the newly activated sibling\n * @param {?=} previous\n * @return {?}\n */\nactivateSibling(previous: boolean = false): any {\n\n    // get the currently active item\n    const /** @type {?} */ current = this.active$.getValue();\n\n    // check if there is a current active item\n    if (!current) {\n      return;\n    }\n\n    // get the index of the current item\n    const /** @type {?} */ idx = this.dataset.indexOf(current);\n    const /** @type {?} */ target = this.dataset[previous ? idx - 1 : idx + 1];\n\n    // check if the target exists\n    if (target) {\n      this.activate(target);\n    }\n\n    return target;\n  }\n/**\n * @param {?} disabled\n * @return {?}\n */\nsetDisabled(disabled: boolean): void {\n    // store the current disabled state\n    this.enabled = !disabled;\n\n    // clear any stateful data\n    this.active$.next(null);\n    this._selection.clear();\n\n    // emit the selection change information\n    this.selectionHasMutated();\n  }\n/**\n * @return {?}\n */\nprivate selectionHasMutated(): void {\n    this.selection$.next(Array.from(this._selection));\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SelectionService_tsickle_Closure_declarations() {\n/** @type {?} */\nSelectionService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSelectionService.ctorParameters;\n/** @type {?} */\nSelectionService.prototype._selection;\n/** @type {?} */\nSelectionService.prototype._rowStrategy;\n/** @type {?} */\nSelectionService.prototype._simpleStrategy;\n/** @type {?} */\nSelectionService.prototype.dataset;\n/** @type {?} */\nSelectionService.prototype.enabled;\n/** @type {?} */\nSelectionService.prototype.clickEnabled;\n/** @type {?} */\nSelectionService.prototype.keyboardEnabled;\n/** @type {?} */\nSelectionService.prototype.strategy;\n/** @type {?} */\nSelectionService.prototype.active$;\n/** @type {?} */\nSelectionService.prototype.selection$;\n}\n\n\nexport type SelectionMode = 'simple' | 'row';\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, EventEmitter, HostBinding, HostListener, Input, OnDestroy, OnInit, Output } from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\nimport { map } from 'rxjs/operators';\nimport { SelectionService } from './selection.service';\nexport class SelectionItemDirective implements OnInit, OnDestroy {\n\n   uxSelectionItem: any;\n/**\n * @param {?} selected\n * @return {?}\n */\nset selected(selected: boolean) {\n    selected ? this.select() : this.deselect();\n  }\n/**\n * @return {?}\n */\nget selected(): boolean {\n    return this._selected;\n  }\n  \n    tabindex: number = 0;\n   selectedChange = new EventEmitter<boolean>();\n\n   active: boolean = false;\nprivate _selected: boolean = false;\nprivate _subscriptions = new Subscription();\n/**\n * @param {?} _selectionService\n * @param {?} _elementRef\n */\nconstructor(private _selectionService: SelectionService,\nprivate _elementRef: ElementRef) { }\n/**\n * @return {?}\n */\nngOnInit(): void {\n\n    // if there is no associated data then throw an error\n    if (!this.uxSelectionItem) {\n      throw new Error('The uxSelectionItem directive must have data associated with it.');\n    }\n\n    // subscribe to selection changes on this item\n    this._subscriptions.add(this._selectionService.selected$(this.uxSelectionItem).subscribe(selected => {\n\n      // store the selected state\n      this._selected = selected;\n\n      // emit the selected state\n      this.selectedChange.emit(selected);\n    }));\n\n    // subscribe to changes to the active state\n    this._subscriptions.add(this._selectionService.active$.pipe(map(active => active === this.uxSelectionItem)).subscribe(active => {\n\n      // store the focus state\n      this.active = active;\n\n      // if it is active then focus the element\n      if (active === true) {\n        this._elementRef.nativeElement.focus();\n      }\n    }));\n  }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n    this._subscriptions.unsubscribe();\n  }\n/**\n * @param {?} event\n * @return {?}\n */\nclick(event: MouseEvent): void {\n    if (this._selectionService.enabled && this._selectionService.clickEnabled) {\n      this._selectionService.strategy.click(event, this.uxSelectionItem);\n    }\n  }\n/**\n * @param {?} event\n * @return {?}\n */\nmousedown(event: MouseEvent): void {\n    if (this._selectionService.enabled && this._selectionService.clickEnabled) {\n      this._selectionService.strategy.mousedown(event, this.uxSelectionItem);\n    }\n  }\n/**\n * @param {?} event\n * @return {?}\n */\nkeydown(event: KeyboardEvent): void {\n    if (this._selectionService.enabled && this._selectionService.keyboardEnabled) {\n      this._selectionService.strategy.keydown(event, this.uxSelectionItem);\n    }\n  }\n/**\n * Select this item using the current strategy\n * @return {?}\n */\nselect(): void {\n    if (this._selectionService.enabled) {\n      this._selectionService.strategy.select(this.uxSelectionItem);\n    }\n  }\n/**\n * Deselect this item using the current strategy\n * @return {?}\n */\ndeselect(): void {\n    if (this._selectionService.enabled) {\n      this._selectionService.strategy.deselect(this.uxSelectionItem);\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[uxSelectionItem]',\n  exportAs: 'ux-selection-item'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: SelectionService, },\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'uxSelectionItem': [{ type: Input },],\n'selected': [{ type: Input },{ type: HostBinding, args: ['class.ux-selection-selected', ] },],\n'tabindex': [{ type: Input },{ type: HostBinding, args: ['tabindex', ] },],\n'selectedChange': [{ type: Output },],\n'active': [{ type: HostBinding, args: ['class.ux-selection-focused', ] },],\n'click': [{ type: HostListener, args: ['click', ['$event'], ] },],\n'mousedown': [{ type: HostListener, args: ['mousedown', ['$event'], ] },],\n'keydown': [{ type: HostListener, args: ['keydown', ['$event'], ] },],\n};\n}\n\nfunction SelectionItemDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nSelectionItemDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSelectionItemDirective.ctorParameters;\n/** @type {?} */\nSelectionItemDirective.propDecorators;\n/** @type {?} */\nSelectionItemDirective.prototype.uxSelectionItem;\n/** @type {?} */\nSelectionItemDirective.prototype.tabindex;\n/** @type {?} */\nSelectionItemDirective.prototype.selectedChange;\n/** @type {?} */\nSelectionItemDirective.prototype.active;\n/** @type {?} */\nSelectionItemDirective.prototype._selected;\n/** @type {?} */\nSelectionItemDirective.prototype._subscriptions;\n/** @type {?} */\nSelectionItemDirective.prototype._selectionService;\n/** @type {?} */\nSelectionItemDirective.prototype._elementRef;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { AfterContentInit, ContentChildren, Directive, EventEmitter, HostBinding, HostListener, Input, OnDestroy, Output, QueryList } from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\nimport { SelectionItemDirective } from './selection-item.directive';\nimport { SelectionMode, SelectionService } from './selection.service';\nexport class SelectionDirective implements AfterContentInit, OnDestroy {\n/**\n * @param {?} items\n * @return {?}\n */\nset uxSelection(items: any[]) {\n    this._selectionService.select(...items);\n  }\n/**\n * @param {?} disabled\n * @return {?}\n */\nset disabled(disabled: boolean) {\n    this._selectionService.setDisabled(disabled);\n  }\n/**\n * @param {?} mode\n * @return {?}\n */\nset mode(mode: SelectionMode) {\n    this._selectionService.setMode(mode);\n  }\n/**\n * @param {?} enabled\n * @return {?}\n */\nset clickSelection(enabled: boolean) {\n    this._selectionService.clickEnabled = enabled;\n  }\n/**\n * @param {?} enabled\n * @return {?}\n */\nset keyboardSelection(enabled: boolean) {\n    this._selectionService.keyboardEnabled = enabled;\n  }\n\n    tabindex: number = 0;\n\n   uxSelectionChange = new EventEmitter<any[]>();\n\n   items: QueryList<SelectionItemDirective>;\nprivate _subscriptions = new Subscription();\n/**\n * @param {?} _selectionService\n */\nconstructor(private _selectionService: SelectionService) {\n    this._subscriptions.add(_selectionService.selection$.subscribe(items => this.uxSelectionChange.emit(items)));\n  }\n/**\n * @return {?}\n */\nngAfterContentInit(): void {\n    // provide the initial list of selection items\n    this.update();\n\n    // if the list changes then inform the service\n    this._subscriptions.add(this.items.changes.subscribe(() => this.update()));\n  }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n    this._subscriptions.unsubscribe();\n  }\n/**\n * If the directive element receives focus then activate the first item\n * @return {?}\n */\nfocus(): void {\n    if (this._selectionService.enabled && this._selectionService.dataset.length > 0) {\n      this._selectionService.activate(this._selectionService.dataset[0]);\n    }\n  }\n/**\n * Update the dataset to reflect the latest selection items\n * @return {?}\n */\nupdate(): void {\n    this._selectionService.dataset = this.items.map(item => item.uxSelectionItem);\n  }\n/**\n * Select all the items in the list\n * @return {?}\n */\nselectAll(): void {\n    if (this._selectionService.enabled) {\n      this._selectionService.strategy.selectAll();\n    }\n  }\n/**\n * Deselect all currently selected items\n * @return {?}\n */\ndeselectAll(): void {\n    if (this._selectionService.enabled) {\n      this._selectionService.strategy.deselectAll();\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[uxSelection]',\n  exportAs: 'ux-selection',\n  providers: [ SelectionService ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: SelectionService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'uxSelection': [{ type: Input },],\n'disabled': [{ type: Input },],\n'mode': [{ type: Input },],\n'clickSelection': [{ type: Input },],\n'keyboardSelection': [{ type: Input },],\n'tabindex': [{ type: Input },{ type: HostBinding, args: ['tabindex', ] },],\n'uxSelectionChange': [{ type: Output },],\n'items': [{ type: ContentChildren, args: [SelectionItemDirective, ] },],\n'focus': [{ type: HostListener, args: ['focus', ] },],\n};\n}\n\nfunction SelectionDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nSelectionDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSelectionDirective.ctorParameters;\n/** @type {?} */\nSelectionDirective.propDecorators;\n/** @type {?} */\nSelectionDirective.prototype.tabindex;\n/** @type {?} */\nSelectionDirective.prototype.uxSelectionChange;\n/** @type {?} */\nSelectionDirective.prototype.items;\n/** @type {?} */\nSelectionDirective.prototype._subscriptions;\n/** @type {?} */\nSelectionDirective.prototype._selectionService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { SelectionItemDirective } from './selection-item.directive';\nimport { SelectionDirective } from './selection.directive';\nexport class SelectionModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [\n    CommonModule\n  ],\n  declarations: [SelectionDirective, SelectionItemDirective],\n  exports: [SelectionDirective, SelectionItemDirective]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SelectionModule_tsickle_Closure_declarations() {\n/** @type {?} */\nSelectionModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSelectionModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive } from '@angular/core';\nexport class ReorderableHandleDirective { static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxReorderableHandle]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ReorderableHandleDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nReorderableHandleDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nReorderableHandleDirective.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, Input, ElementRef } from '@angular/core';\nexport class ReorderableModelDirective {\n\n    // allow the user to specify a model for the item - allows use with ngFor\n     uxReorderableModel: any;\n/**\n * @param {?} elementRef\n */\nconstructor(public elementRef: ElementRef) { }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxReorderableModel]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'uxReorderableModel': [{ type: Input },],\n};\n}\n\nfunction ReorderableModelDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nReorderableModelDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nReorderableModelDirective.ctorParameters;\n/** @type {?} */\nReorderableModelDirective.propDecorators;\n/** @type {?} */\nReorderableModelDirective.prototype.uxReorderableModel;\n/** @type {?} */\nReorderableModelDirective.prototype.elementRef;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// WORKAROUND: ng-packagr issue - https://github.com/dherges/ng-packagr/issues/163\n\nimport * as dragulaNamespace from 'dragula';\nimport { Drake } from 'dragula';\n\nexport const /** @type {?} */ dragula: (containers?: any, options?: any) => Drake = ( /** @type {?} */((dragulaNamespace as any))).default || dragulaNamespace;","import { Directive, Input, ElementRef, OnInit, ContentChildren, QueryList, OnDestroy, Output, EventEmitter, Renderer2, NgZone } from '@angular/core';\nimport { Drake } from 'dragula';\nimport { ReorderableHandleDirective } from './reorderable-handle.directive';\nimport { ReorderableModelDirective } from './reorderable-model.directive';\nimport { dragula } from './dragula';\nexport class ReorderableDirective implements OnInit, OnDestroy {\n\n     reorderableModel: Array<any>;\n     reorderableModelChange = new EventEmitter<Array<any>>();\n     reorderStart = new EventEmitter<ReorderEvent>();\n     reorderCancel = new EventEmitter<ReorderEvent>();\n     reorderEnd = new EventEmitter<ReorderEvent>();\n\n     handles: QueryList<ElementRef>;\n     models: QueryList<ReorderableModelDirective>;\nprivate _instance: Drake;\n/**\n * @param {?} _elementRef\n * @param {?} _renderer\n * @param {?} _ngZone\n */\nconstructor(private _elementRef: ElementRef,\nprivate _renderer: Renderer2,\nprivate _ngZone: NgZone) { }\n/**\n * Initialise dragula and bind to all the required events\n * @return {?}\n */\nngOnInit(): void {\n        // for performance gains lets run this outside ng zone\n        this._ngZone.runOutsideAngular(() => {\n            this._instance = dragula([this._elementRef.nativeElement], { moves: this.canMove.bind(this), mirrorContainer: this._elementRef.nativeElement });\n            this._instance.on('drag', (element: Element) => this._ngZone.run(() => this.reorderStart.emit({ element: element, model: this.getModelFromElement(element) })));\n            this._instance.on('cancel', (element: Element) => this._ngZone.run(() => this.reorderCancel.emit({ element: element, model: this.getModelFromElement(element) })));\n            this._instance.on('dragend', (element: Element) => this._ngZone.run(() => this.reorderEnd.emit({ element: element, model: this.getModelFromElement(element) })));\n            this._instance.on('dragend', this.onDragEnd.bind(this));\n            this._instance.on('drop', this.onDrop.bind(this));\n            this._instance.on('cloned', this.onClone.bind(this));\n        });\n    }\n/**\n * We need to destroy the dragula instance on component destroy\n * @return {?}\n */\nngOnDestroy(): void {\n        this._instance.destroy();\n    }\n/**\n * This is fired when items get reordered - we need to emit the new order of the models\n * @param {?} element\n * @param {?} target\n * @param {?} source\n * @param {?} sibling\n * @return {?}\n */\nonDrop(element: Element, target: Element, source: Element, sibling: HTMLElement): void {\n\n        // if there is no provided module we can skip this\n        if (!this.reorderableModel) {\n            return;\n        }\n\n        // get the model of the element being moved\n        const /** @type {?} */ model = this.getModelFromElement(element);\n\n        // remove this model from the list of models\n        this.reorderableModel = this.reorderableModel.filter(_model => _model !== model);\n\n        // get the position of sibling element\n        const /** @type {?} */ index = sibling && !sibling.classList.contains('gu-mirror') ? this.reorderableModel.indexOf(this.getModelFromElement(sibling)) : this.reorderableModel.length;\n\n        // re-insert the model at its new location\n        this.reorderableModel.splice(index, 0, model);\n\n        // emit the model changes (inside zone)\n        this._ngZone.run(() => this.reorderableModelChange.emit(this.reorderableModel));\n    }\n/**\n * Return the model assciated with a particular element in the list.\n * This should ensure that the items have the draggable model directive applied\n * @param {?} element\n * @return {?}\n */\ngetModelFromElement(element: Element): any {\n        const /** @type {?} */ model = this.models.find(_model => _model.elementRef.nativeElement === element);\n\n        if (!model) {\n            return null;\n        }\n\n        return model.uxReorderableModel;\n    }\n/**\n * When we finish dragging remove the utillity class from the element being moved\n * @param {?} element\n * @return {?}\n */\nonDragEnd(element: Element): void {\n        this._renderer.removeClass(element, 'ux-reorderable-moving');\n    }\n/**\n * We want to ensure that the cloned element is identical\n * to the original, regardless of it's location in the DOM tree\n * @param {?} clone\n * @param {?} element\n * @param {?} type\n * @return {?}\n */\nonClone(clone: Element, element: Element, type: string): void {\n        this.setTableCellWidths(element, clone);\n\n        this._renderer.addClass(element, 'ux-reorderable-moving');\n    }\n/**\n * If elements contain handles then only drag when the handle is dragged\n * otherwise drag whenever an immediate child is specified\n * @param {?} element\n * @param {?} container\n * @param {?} handle\n * @return {?}\n */\ncanMove(element: Element, container: Element, handle: Element): boolean {\n        return this.handles.length === 0 ? true : !!this.handles.find(_handle => _handle.nativeElement === handle);\n    }\n/**\n * @param {?} source\n * @param {?} target\n * @return {?}\n */\nprivate setTableCellWidths(source: Element, target: Element): void {\n\n        // if it is not a table row then skip this\n        if (source.tagName !== 'TR') {\n            return;\n        }\n\n        // find any immediate td children and fix their width\n        const /** @type {?} */ sourceCells = /** @type {?} */(( Array.from(source.children) as HTMLTableCellElement[]));\n        const /** @type {?} */ targetCells = /** @type {?} */(( Array.from(target.children) as HTMLTableCellElement[]));\n\n        // fix the width of these cells\n        sourceCells.forEach((cell, idx) => targetCells[idx].style.minWidth = getComputedStyle(cell).getPropertyValue('width'));\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxReorderable]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer2, },\n{type: NgZone, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'reorderableModel': [{ type: Input },],\n'reorderableModelChange': [{ type: Output },],\n'reorderStart': [{ type: Output },],\n'reorderCancel': [{ type: Output },],\n'reorderEnd': [{ type: Output },],\n'handles': [{ type: ContentChildren, args: [ReorderableHandleDirective, { read: ElementRef, descendants: true }, ] },],\n'models': [{ type: ContentChildren, args: [ReorderableModelDirective, ] },],\n};\n}\n\nfunction ReorderableDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nReorderableDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nReorderableDirective.ctorParameters;\n/** @type {?} */\nReorderableDirective.propDecorators;\n/** @type {?} */\nReorderableDirective.prototype.reorderableModel;\n/** @type {?} */\nReorderableDirective.prototype.reorderableModelChange;\n/** @type {?} */\nReorderableDirective.prototype.reorderStart;\n/** @type {?} */\nReorderableDirective.prototype.reorderCancel;\n/** @type {?} */\nReorderableDirective.prototype.reorderEnd;\n/** @type {?} */\nReorderableDirective.prototype.handles;\n/** @type {?} */\nReorderableDirective.prototype.models;\n/** @type {?} */\nReorderableDirective.prototype._instance;\n/** @type {?} */\nReorderableDirective.prototype._elementRef;\n/** @type {?} */\nReorderableDirective.prototype._renderer;\n/** @type {?} */\nReorderableDirective.prototype._ngZone;\n}\n\n\nexport interface ReorderEvent {\n    element: Element;\n    model: any;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReorderableDirective } from './reorderable.directive';\nimport { ReorderableHandleDirective } from './reorderable-handle.directive';\nimport { ReorderableModelDirective } from './reorderable-model.directive';\nexport class ReorderableModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule\n    ],\n    declarations: [\n        ReorderableDirective,\n        ReorderableHandleDirective,\n        ReorderableModelDirective\n    ],\n    exports: [\n        ReorderableDirective,\n        ReorderableHandleDirective,\n        ReorderableModelDirective\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ReorderableModule_tsickle_Closure_declarations() {\n/** @type {?} */\nReorderableModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nReorderableModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Pipe, Injectable, PipeTransform } from '@angular/core';\nexport class StringFilterPipe implements PipeTransform {\n/**\n * @param {?} items\n * @param {?} value\n * @return {?}\n */\ntransform(items: any[], value: string): any[] {  \n        if (!items) {\n            return [];\n        }\n        return items.filter(it => it.toLowerCase().indexOf(value.toLowerCase()) >= 0);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{\n    name: 'stringFilter'\n}, ] },\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction StringFilterPipe_tsickle_Closure_declarations() {\n/** @type {?} */\nStringFilterPipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nStringFilterPipe.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { StringFilterPipe } from './string-filter.pipe';\nimport { NgModule } from '@angular/core';\nexport class StringFilterModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    exports: [StringFilterPipe],\n    declarations: [StringFilterPipe]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction StringFilterModule_tsickle_Closure_declarations() {\n/** @type {?} */\nStringFilterModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nStringFilterModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { StorageAdapter } from './storage-adapter';\nexport class CookieAdapter implements StorageAdapter {\n/**\n * @param {?} key\n * @return {?}\n */\ngetItem(key: string): string {\n\n        if (document.cookie) {\n\n            // get all the cookies for this site\n            const /** @type {?} */ cookies = document.cookie.split(';');\n\n            // process the cookies into a from we can easily manage\n            const /** @type {?} */ match = cookies\n                .map(cookie => ({ key: cookie.split('=')[0].trim(), value: cookie.split('=')[1].trim() }))\n                .find(cookie => cookie.key === key);\n\n            return match ? match.value : null;\n        }\n\n        return null;\n    }\n/**\n * @param {?} key\n * @param {?} value\n * @return {?}\n */\nsetItem(key: string, value: string): void {\n        document.cookie = `${key}=${value}; path=/`;\n    }\n/**\n * @param {?} key\n * @return {?}\n */\nremoveItem(key: string): void {\n\n        document.cookie.split(';').forEach(cookie => {\n            const /** @type {?} */ eqPos = cookie.indexOf('=');\n            const /** @type {?} */ name = eqPos > -1 ? cookie.substr(0, eqPos).trim() : cookie;\n\n            if (name === key) {\n                document.cookie = cookie.trim().replace(/=.*/, `=;expires=${new Date().toUTCString()};path=/`);\n            }\n        });\n    }\n/**\n * @return {?}\n */\nclear(): void {\n\n        // call remove item on each cookie\n        document.cookie.split(';').map(cookie => cookie.split('=')[0].trim())\n            .forEach(cookie => this.removeItem(cookie));\n    }\n/**\n * @return {?}\n */\ngetSupported(): StorageAdapter {\n        // cookies are supported in all browsers\n        return this;\n    }\n\n}","import { StorageAdapter } from './storage-adapter';\nimport { CookieAdapter } from './cookie-adapter';\nexport class LocalStorageAdapter implements StorageAdapter {\n/**\n * @param {?} key\n * @return {?}\n */\ngetItem(key: string): string {\n        return localStorage.getItem(key);\n    }\n/**\n * @param {?} key\n * @param {?} value\n * @return {?}\n */\nsetItem(key: string, value: string): void {\n        localStorage.setItem(key, value);\n    }\n/**\n * @param {?} key\n * @return {?}\n */\nremoveItem(key: string): void {\n        localStorage.removeItem(key);\n    }\n/**\n * @return {?}\n */\nclear(): void {\n        localStorage.clear();\n    }\n/**\n * @return {?}\n */\ngetSupported(): StorageAdapter {\n\n        // if local storage variable does not exist fall back to cookies\n        if (!localStorage) {\n            return new CookieAdapter();\n        }\n\n        // try to make a test save to local storage to see if there are any exceptions\n        try {\n            localStorage.setItem('ux-persistent-data-service', 'ux-persistent-data-service');\n            localStorage.removeItem('ux-persistent-data-service');\n\n            return this;\n        } catch ( /** @type {?} */err) {\n            return new CookieAdapter();\n        }\n    }\n\n}","import { StorageAdapter } from './storage-adapter';\nimport { CookieAdapter } from './cookie-adapter';\nexport class SessionStorageAdapter implements StorageAdapter {\n/**\n * @param {?} key\n * @return {?}\n */\ngetItem(key: string): string {\n        return sessionStorage.getItem(key);\n    }\n/**\n * @param {?} key\n * @param {?} value\n * @return {?}\n */\nsetItem(key: string, value: string): void {\n        sessionStorage.setItem(key, value);\n    }\n/**\n * @param {?} key\n * @return {?}\n */\nremoveItem(key: string): void {\n        sessionStorage.removeItem(key);\n    }\n/**\n * @return {?}\n */\nclear(): void {\n        sessionStorage.clear();\n    }\n/**\n * @return {?}\n */\ngetSupported(): StorageAdapter {\n\n        // if local storage variable does not exist fall back to cookies\n        if (!sessionStorage) {\n            return new CookieAdapter();\n        }\n\n        // try to make a test save to local storage to see if there are any exceptions\n        try {\n            sessionStorage.setItem('ux-persistent-data-service', 'ux-persistent-data-service');\n            sessionStorage.removeItem('ux-persistent-data-service');\n\n            return this;\n        } catch ( /** @type {?} */err) {\n            return new CookieAdapter();\n        }\n    }\n\n}","import { Injectable } from '@angular/core';\nimport { StorageAdapter } from './adapters/storage-adapter';\nimport { CookieAdapter } from './adapters/cookie-adapter';\nimport { LocalStorageAdapter } from './adapters/local-storage-adapter';\nimport { SessionStorageAdapter } from './adapters/session-storage-adapter';\nexport class PersistentDataService {\n/**\n * Save the item in some form of persistent storage\n * @param {?} key\n * @param {?} value\n * @param {?=} type\n * @return {?}\n */\nsetItem(key: string, value: string, type: PersistentDataStorageType = PersistentDataStorageType.LocalStorage): void {\n        this.getAdapter(type).setItem(key, value);\n    }\n/**\n * Get a stored value from persistent storage\n * @param {?} key\n * @param {?=} type\n * @return {?}\n */\ngetItem(key: string, type: PersistentDataStorageType = PersistentDataStorageType.LocalStorage): string {\n        return this.getAdapter(type).getItem(key);\n    }\n/**\n * Remove a stored value from persistent storage\n * @param {?} key\n * @param {?=} type\n * @return {?}\n */\nremoveItem(key: string, type: PersistentDataStorageType = PersistentDataStorageType.LocalStorage): void {\n        this.getAdapter(type).removeItem(key);\n    }\n/**\n * Remove a stored value from persistent storage\n * @param {?=} type\n * @return {?}\n */\nclear(type: PersistentDataStorageType = PersistentDataStorageType.LocalStorage): void {\n        this.getAdapter(type).clear();\n    }\n/**\n * Return the appropriate adapter based on the type requested\n * @param {?} type\n * @return {?}\n */\nprivate getAdapter(type: PersistentDataStorageType): StorageAdapter {\n\n        switch (type) {\n\n            case PersistentDataStorageType.Cookie:\n                return new CookieAdapter();\n\n            case PersistentDataStorageType.LocalStorage:\n                const /** @type {?} */ localStorageAdapter = new LocalStorageAdapter();\n                return localStorageAdapter.getSupported();\n\n            case PersistentDataStorageType.SessionStorage:\n                const /** @type {?} */ sessionStorageAdapter = new SessionStorageAdapter();\n                return sessionStorageAdapter.getSupported();\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction PersistentDataService_tsickle_Closure_declarations() {\n/** @type {?} */\nPersistentDataService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPersistentDataService.ctorParameters;\n}\n\nexport type PersistentDataStorageType = number;\nexport let PersistentDataStorageType: any = {};\nPersistentDataStorageType.LocalStorage = 0;\nPersistentDataStorageType.Cookie = 1;\nPersistentDataStorageType.SessionStorage = 2;\nPersistentDataStorageType[PersistentDataStorageType.LocalStorage] = \"LocalStorage\";\nPersistentDataStorageType[PersistentDataStorageType.Cookie] = \"Cookie\";\nPersistentDataStorageType[PersistentDataStorageType.SessionStorage] = \"SessionStorage\";\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\n\nimport { PersistentDataService } from './persistent-data.service';\nexport class PersistentDataModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    providers: [PersistentDataService],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction PersistentDataModule_tsickle_Closure_declarations() {\n/** @type {?} */\nPersistentDataModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPersistentDataModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\n/**\n * @abstract\n */\nexport abstract class StorageAdapter {\n/**\n * @abstract\n * @param {?} key\n * @return {?}\n */\ngetItem(key: string) {}\n/**\n * @abstract\n * @param {?} key\n * @param {?} value\n * @return {?}\n */\nsetItem(key: string, value: string) {}\n/**\n * @abstract\n * @param {?} key\n * @return {?}\n */\nremoveItem(key: string) {}\n/**\n * @abstract\n * @return {?}\n */\nclear() {}\n/**\n * @abstract\n * @return {?}\n */\ngetSupported() {}\n}","import { Directive, ElementRef, Injector, Input, Output, EventEmitter } from '@angular/core';\nimport { UpgradeComponent } from '@angular/upgrade/static';\nexport class ContactsNg1Component extends UpgradeComponent {\n\n     contacts: Contact[];\n     organization: string;\n     size: 'medium' | 'small';\n     colors: any;\n     maxContacts: number;\n\n     overflowClick: EventEmitter<void> = new EventEmitter<void>();\n/**\n * @param {?} elementRef\n * @param {?} injector\n */\nconstructor(elementRef: ElementRef, injector: Injector) {\n        super('contactGroup', elementRef, injector);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'contact-group'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'contacts': [{ type: Input },],\n'organization': [{ type: Input },],\n'size': [{ type: Input },],\n'colors': [{ type: Input },],\n'maxContacts': [{ type: Input },],\n'overflowClick': [{ type: Output },],\n};\n}\n\nfunction ContactsNg1Component_tsickle_Closure_declarations() {\n/** @type {?} */\nContactsNg1Component.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nContactsNg1Component.ctorParameters;\n/** @type {?} */\nContactsNg1Component.propDecorators;\n/** @type {?} */\nContactsNg1Component.prototype.contacts;\n/** @type {?} */\nContactsNg1Component.prototype.organization;\n/** @type {?} */\nContactsNg1Component.prototype.size;\n/** @type {?} */\nContactsNg1Component.prototype.colors;\n/** @type {?} */\nContactsNg1Component.prototype.maxContacts;\n/** @type {?} */\nContactsNg1Component.prototype.overflowClick;\n}\n\n\nexport interface Contact {\n    test: string;\n    status: 'active' | 'passive';\n    customTooltip?: {\n        template: string,\n        tooltipPosition: string;\n        data?: any;\n    };\n}\n\nexport interface Organization {\n    text: string;\n    label: 'external' | 'risk';\n    tooltip?: string;\n    customTooltip?: {\n        template: string,\n        tooltipPosition: string;\n        data?: any;\n    };\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Injector, Input, Output, EventEmitter } from '@angular/core';\nimport { UpgradeComponent } from '@angular/upgrade/static';\nexport class ExpandInputNg1Component extends UpgradeComponent {\n\n     elname: string;\n     placeHolder: string;\n     className: string;\n     clearTextIcon: string;\n     closeSearch: string;\n     expandAlways: boolean;\n     onEnter: Function;\n\n     focus: EventEmitter<string> = new EventEmitter<string>();\n/**\n * @param {?} elementRef\n * @param {?} injector\n */\nconstructor(elementRef: ElementRef, injector: Injector) {\n        super('expandInput', elementRef, injector);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'expand-input'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'elname': [{ type: Input },],\n'placeHolder': [{ type: Input },],\n'className': [{ type: Input },],\n'clearTextIcon': [{ type: Input },],\n'closeSearch': [{ type: Input },],\n'expandAlways': [{ type: Input },],\n'onEnter': [{ type: Input },],\n'focus': [{ type: Output },],\n};\n}\n\nfunction ExpandInputNg1Component_tsickle_Closure_declarations() {\n/** @type {?} */\nExpandInputNg1Component.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nExpandInputNg1Component.ctorParameters;\n/** @type {?} */\nExpandInputNg1Component.propDecorators;\n/** @type {?} */\nExpandInputNg1Component.prototype.elname;\n/** @type {?} */\nExpandInputNg1Component.prototype.placeHolder;\n/** @type {?} */\nExpandInputNg1Component.prototype.className;\n/** @type {?} */\nExpandInputNg1Component.prototype.clearTextIcon;\n/** @type {?} */\nExpandInputNg1Component.prototype.closeSearch;\n/** @type {?} */\nExpandInputNg1Component.prototype.expandAlways;\n/** @type {?} */\nExpandInputNg1Component.prototype.onEnter;\n/** @type {?} */\nExpandInputNg1Component.prototype.focus;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Injector, Input, EventEmitter } from '@angular/core';\nimport { UpgradeComponent } from '@angular/upgrade/static';\nexport class FloatingActionButtonNg1Component extends UpgradeComponent {\n\n     items: FloatingActionButtonItem[] = [];\n     primary: string;\n     direction: 'top' | 'right' | 'bottom' | 'left';\n     fabTooltip: string;\n     fabTooltipPlacement: 'top' | 'right' | 'bottom' | 'left';\n/**\n * @param {?} elementRef\n * @param {?} injector\n */\nconstructor(elementRef: ElementRef, injector: Injector) {\n        super('floatingActionButton', elementRef, injector);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'floating-action-button'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'items': [{ type: Input },],\n'primary': [{ type: Input },],\n'direction': [{ type: Input },],\n'fabTooltip': [{ type: Input },],\n'fabTooltipPlacement': [{ type: Input },],\n};\n}\n\nfunction FloatingActionButtonNg1Component_tsickle_Closure_declarations() {\n/** @type {?} */\nFloatingActionButtonNg1Component.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFloatingActionButtonNg1Component.ctorParameters;\n/** @type {?} */\nFloatingActionButtonNg1Component.propDecorators;\n/** @type {?} */\nFloatingActionButtonNg1Component.prototype.items;\n/** @type {?} */\nFloatingActionButtonNg1Component.prototype.primary;\n/** @type {?} */\nFloatingActionButtonNg1Component.prototype.direction;\n/** @type {?} */\nFloatingActionButtonNg1Component.prototype.fabTooltip;\n/** @type {?} */\nFloatingActionButtonNg1Component.prototype.fabTooltipPlacement;\n}\n\n\nexport interface FloatingActionButtonItem {\n    icon: string;\n    event: Function;\n    tooltip?: string;\n    tooltipPlacement?: string;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Injector, Input, Output, EventEmitter } from '@angular/core';\nimport { UpgradeComponent } from '@angular/upgrade/static';\nexport class FlotNg1Component extends UpgradeComponent {\n\n     dataset: any;\n     options: any;\n     callback: any;\n     donutLabels: any;\n     onPlotClick = new EventEmitter<any>();\n     onPlotHover = new EventEmitter<any>();\n/**\n * @param {?} elementRef\n * @param {?} injector\n */\nconstructor(elementRef: ElementRef, injector: Injector) {\n        super('uxFlotNg1', elementRef, injector);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'flot'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'dataset': [{ type: Input },],\n'options': [{ type: Input },],\n'callback': [{ type: Input },],\n'donutLabels': [{ type: Input },],\n'onPlotClick': [{ type: Output },],\n'onPlotHover': [{ type: Output },],\n};\n}\n\nfunction FlotNg1Component_tsickle_Closure_declarations() {\n/** @type {?} */\nFlotNg1Component.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFlotNg1Component.ctorParameters;\n/** @type {?} */\nFlotNg1Component.propDecorators;\n/** @type {?} */\nFlotNg1Component.prototype.dataset;\n/** @type {?} */\nFlotNg1Component.prototype.options;\n/** @type {?} */\nFlotNg1Component.prototype.callback;\n/** @type {?} */\nFlotNg1Component.prototype.donutLabels;\n/** @type {?} */\nFlotNg1Component.prototype.onPlotClick;\n/** @type {?} */\nFlotNg1Component.prototype.onPlotHover;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Injector, Input, EventEmitter } from '@angular/core';\nimport { UpgradeComponent } from '@angular/upgrade/static';\nexport class GridNg1Component extends UpgradeComponent {\n\n     source: any[] = [];\n     columns: GridColumn[] = [];\n/**\n * The following inputs are undocumented\n */\noptions: any;\n     events: any;\n     plugins: any;\n/**\n * @param {?} elementRef\n * @param {?} injector\n */\nconstructor(elementRef: ElementRef, injector: Injector) {\n        super('grid', elementRef, injector);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'grid'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'source': [{ type: Input },],\n'columns': [{ type: Input },],\n'options': [{ type: Input },],\n'events': [{ type: Input },],\n'plugins': [{ type: Input },],\n};\n}\n\nfunction GridNg1Component_tsickle_Closure_declarations() {\n/** @type {?} */\nGridNg1Component.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nGridNg1Component.ctorParameters;\n/** @type {?} */\nGridNg1Component.propDecorators;\n/** @type {?} */\nGridNg1Component.prototype.source;\n/** @type {?} */\nGridNg1Component.prototype.columns;\n/**\n * The following inputs are undocumented\n * @type {?}\n */\nGridNg1Component.prototype.options;\n/** @type {?} */\nGridNg1Component.prototype.events;\n/** @type {?} */\nGridNg1Component.prototype.plugins;\n}\n\n\nexport interface GridColumn {\n    title: string;\n    template: string;\n    width?: string;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Injector, Input, EventEmitter } from '@angular/core';\nimport { UpgradeComponent } from '@angular/upgrade/static';\nexport class HierarchyBarNg1Component extends UpgradeComponent {\n\n     data: any[];\n     options: HierarchyBarOptions;\n     selectNode: any;\n     containerClass: any;\n/**\n * @param {?} elementRef\n * @param {?} injector\n */\nconstructor(elementRef: ElementRef, injector: Injector) {\n        super('hierarchyBar', elementRef, injector);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'hierarchy-bar'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'data': [{ type: Input },],\n'options': [{ type: Input },],\n'selectNode': [{ type: Input },],\n'containerClass': [{ type: Input },],\n};\n}\n\nfunction HierarchyBarNg1Component_tsickle_Closure_declarations() {\n/** @type {?} */\nHierarchyBarNg1Component.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nHierarchyBarNg1Component.ctorParameters;\n/** @type {?} */\nHierarchyBarNg1Component.propDecorators;\n/** @type {?} */\nHierarchyBarNg1Component.prototype.data;\n/** @type {?} */\nHierarchyBarNg1Component.prototype.options;\n/** @type {?} */\nHierarchyBarNg1Component.prototype.selectNode;\n/** @type {?} */\nHierarchyBarNg1Component.prototype.containerClass;\n}\n\n\nexport interface HierarchyBarOptions {\n    enabled: boolean;\n    overview?: Function;\n    image: Function;\n    valueFormatter: Function;\n    action?: {\n        title: string;\n        event: Function;\n    };\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Injector, Input, Output, EventEmitter } from '@angular/core';\nimport { UpgradeComponent } from '@angular/upgrade/static';\nexport class MarqueeWizardNg1Component extends UpgradeComponent {\n\n     wizardIcon: string;\n     wizardSteps: MarqueeWizardStep[];\n     buttonOptions: MarqueeWizardOptions;\n     onChanging: Function;\n     onFinished: Function;\n     onFinishing: Function;\n     onCanceled: Function;\n     isVisited: boolean;\n     sideInfo: MarqueeWizardSideInfo;\n\n     wizardStepsChange: EventEmitter<MarqueeWizardStep[]> = new EventEmitter<MarqueeWizardStep[]>();\n/**\n * @param {?} elementRef\n * @param {?} injector\n */\nconstructor(elementRef: ElementRef, injector: Injector) {\n        super('marqueeWizard', elementRef, injector);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'marquee-wizard'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'wizardIcon': [{ type: Input },],\n'wizardSteps': [{ type: Input },],\n'buttonOptions': [{ type: Input },],\n'onChanging': [{ type: Input },],\n'onFinished': [{ type: Input },],\n'onFinishing': [{ type: Input },],\n'onCanceled': [{ type: Input },],\n'isVisited': [{ type: Input },],\n'sideInfo': [{ type: Input },],\n'wizardStepsChange': [{ type: Output },],\n};\n}\n\nfunction MarqueeWizardNg1Component_tsickle_Closure_declarations() {\n/** @type {?} */\nMarqueeWizardNg1Component.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMarqueeWizardNg1Component.ctorParameters;\n/** @type {?} */\nMarqueeWizardNg1Component.propDecorators;\n/** @type {?} */\nMarqueeWizardNg1Component.prototype.wizardIcon;\n/** @type {?} */\nMarqueeWizardNg1Component.prototype.wizardSteps;\n/** @type {?} */\nMarqueeWizardNg1Component.prototype.buttonOptions;\n/** @type {?} */\nMarqueeWizardNg1Component.prototype.onChanging;\n/** @type {?} */\nMarqueeWizardNg1Component.prototype.onFinished;\n/** @type {?} */\nMarqueeWizardNg1Component.prototype.onFinishing;\n/** @type {?} */\nMarqueeWizardNg1Component.prototype.onCanceled;\n/** @type {?} */\nMarqueeWizardNg1Component.prototype.isVisited;\n/** @type {?} */\nMarqueeWizardNg1Component.prototype.sideInfo;\n/** @type {?} */\nMarqueeWizardNg1Component.prototype.wizardStepsChange;\n}\n\n\nexport interface MarqueeWizardStep {\n    title: string;\n    html?: string;\n    header?: string;\n    templateUrl?: string;\n    hidden?: boolean;\n    error?: boolean;\n    completed?: boolean;\n    visited?: boolean;\n}\n\nexport interface MarqueeWizardOptions {\n    nextText?: string;\n    previousText?: string;\n    finishText?: string;\n    showNext?: boolean;\n    showPrevious?: boolean;\n    showFinish?: boolean;\n    nextTooltip?: string;\n    previousTooltip?: string;\n    finishTooltip?: string;\n    previousEnabled?: boolean;\n    nextEnabled?: boolean;\n    finishEnabled?: boolean;\n}\n\nexport interface MarqueeWizardSideInfo {\n    title: string;\n    description: string;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Injector, Input } from '@angular/core';\nimport { UpgradeComponent } from '@angular/upgrade/static';\nexport class NestedDonutNg1Component extends UpgradeComponent {\n\n     dataset: any;\n     options: any;\n/**\n * @param {?} elementRef\n * @param {?} injector\n */\nconstructor(elementRef: ElementRef, injector: Injector) {\n        super('uxNestedDonutNg1', elementRef, injector);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'nested-donut'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'dataset': [{ type: Input },],\n'options': [{ type: Input },],\n};\n}\n\nfunction NestedDonutNg1Component_tsickle_Closure_declarations() {\n/** @type {?} */\nNestedDonutNg1Component.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNestedDonutNg1Component.ctorParameters;\n/** @type {?} */\nNestedDonutNg1Component.propDecorators;\n/** @type {?} */\nNestedDonutNg1Component.prototype.dataset;\n/** @type {?} */\nNestedDonutNg1Component.prototype.options;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Injector, Input, Output, EventEmitter } from '@angular/core';\nimport { UpgradeComponent } from '@angular/upgrade/static';\nexport class OrganizationChartNg1Component extends UpgradeComponent {\n\n     data: any;\n     options: any;\n     dataChange = new EventEmitter<any>();\n     optionsChange = new EventEmitter<any>();\n/**\n * @param {?} elementRef\n * @param {?} injector\n */\nconstructor(elementRef: ElementRef, injector: Injector) {\n        super('uxOrganizationChartNg1', elementRef, injector);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'organization-chart'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'data': [{ type: Input },],\n'options': [{ type: Input },],\n'dataChange': [{ type: Output },],\n'optionsChange': [{ type: Output },],\n};\n}\n\nfunction OrganizationChartNg1Component_tsickle_Closure_declarations() {\n/** @type {?} */\nOrganizationChartNg1Component.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nOrganizationChartNg1Component.ctorParameters;\n/** @type {?} */\nOrganizationChartNg1Component.propDecorators;\n/** @type {?} */\nOrganizationChartNg1Component.prototype.data;\n/** @type {?} */\nOrganizationChartNg1Component.prototype.options;\n/** @type {?} */\nOrganizationChartNg1Component.prototype.dataChange;\n/** @type {?} */\nOrganizationChartNg1Component.prototype.optionsChange;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Injector, Input } from '@angular/core';\nimport { UpgradeComponent } from '@angular/upgrade/static';\nexport class PartitionMapNg1Component extends UpgradeComponent {\n\n     chartData: any;\n     chartOptions: any;\n     chartLoading: any;\n/**\n * @param {?} elementRef\n * @param {?} injector\n */\nconstructor(elementRef: ElementRef, injector: Injector) {\n        super('uxPartitionMapNg1', elementRef, injector);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'partition-map'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'chartData': [{ type: Input },],\n'chartOptions': [{ type: Input },],\n'chartLoading': [{ type: Input },],\n};\n}\n\nfunction PartitionMapNg1Component_tsickle_Closure_declarations() {\n/** @type {?} */\nPartitionMapNg1Component.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPartitionMapNg1Component.ctorParameters;\n/** @type {?} */\nPartitionMapNg1Component.propDecorators;\n/** @type {?} */\nPartitionMapNg1Component.prototype.chartData;\n/** @type {?} */\nPartitionMapNg1Component.prototype.chartOptions;\n/** @type {?} */\nPartitionMapNg1Component.prototype.chartLoading;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Injector, Input } from '@angular/core';\nimport { UpgradeComponent } from '@angular/upgrade/static';\nexport class PeityBarChartNg1Component extends UpgradeComponent {\n\n     data: any;\n     options: any;\n/**\n * @param {?} elementRef\n * @param {?} injector\n */\nconstructor(elementRef: ElementRef, injector: Injector) {\n        super('uxPeityBarChartNg1', elementRef, injector);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'bar-chart'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'data': [{ type: Input },],\n'options': [{ type: Input },],\n};\n}\n\nfunction PeityBarChartNg1Component_tsickle_Closure_declarations() {\n/** @type {?} */\nPeityBarChartNg1Component.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPeityBarChartNg1Component.ctorParameters;\n/** @type {?} */\nPeityBarChartNg1Component.propDecorators;\n/** @type {?} */\nPeityBarChartNg1Component.prototype.data;\n/** @type {?} */\nPeityBarChartNg1Component.prototype.options;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Injector, Input } from '@angular/core';\nimport { UpgradeComponent } from '@angular/upgrade/static';\nexport class PeityLineChartNg1Component extends UpgradeComponent {\n\n     data: any;\n     options: any;\n/**\n * @param {?} elementRef\n * @param {?} injector\n */\nconstructor(elementRef: ElementRef, injector: Injector) {\n        super('uxPeityLineChartNg1', elementRef, injector);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'line-chart'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'data': [{ type: Input },],\n'options': [{ type: Input },],\n};\n}\n\nfunction PeityLineChartNg1Component_tsickle_Closure_declarations() {\n/** @type {?} */\nPeityLineChartNg1Component.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPeityLineChartNg1Component.ctorParameters;\n/** @type {?} */\nPeityLineChartNg1Component.propDecorators;\n/** @type {?} */\nPeityLineChartNg1Component.prototype.data;\n/** @type {?} */\nPeityLineChartNg1Component.prototype.options;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Injector, Input } from '@angular/core';\nimport { UpgradeComponent } from '@angular/upgrade/static';\nexport class PeityPieChartNg1Component extends UpgradeComponent {\n\n     data: any;\n     options: any;\n/**\n * @param {?} elementRef\n * @param {?} injector\n */\nconstructor(elementRef: ElementRef, injector: Injector) {\n        super('uxPeityPieChartNg1', elementRef, injector);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'pie-chart'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'data': [{ type: Input },],\n'options': [{ type: Input },],\n};\n}\n\nfunction PeityPieChartNg1Component_tsickle_Closure_declarations() {\n/** @type {?} */\nPeityPieChartNg1Component.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPeityPieChartNg1Component.ctorParameters;\n/** @type {?} */\nPeityPieChartNg1Component.propDecorators;\n/** @type {?} */\nPeityPieChartNg1Component.prototype.data;\n/** @type {?} */\nPeityPieChartNg1Component.prototype.options;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Injector, Input } from '@angular/core';\nimport { UpgradeComponent } from '@angular/upgrade/static';\nexport class PeityUpdatingLineChartNg1Component extends UpgradeComponent {\n\n     data: any;\n     options: any;\n     method: any;\n     updateinterval: any;\n/**\n * @param {?} elementRef\n * @param {?} injector\n */\nconstructor(elementRef: ElementRef, injector: Injector) {\n        super('uxPeityUpdatingLineChartNg1', elementRef, injector);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'updating-line-chart'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'data': [{ type: Input },],\n'options': [{ type: Input },],\n'method': [{ type: Input },],\n'updateinterval': [{ type: Input },],\n};\n}\n\nfunction PeityUpdatingLineChartNg1Component_tsickle_Closure_declarations() {\n/** @type {?} */\nPeityUpdatingLineChartNg1Component.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPeityUpdatingLineChartNg1Component.ctorParameters;\n/** @type {?} */\nPeityUpdatingLineChartNg1Component.propDecorators;\n/** @type {?} */\nPeityUpdatingLineChartNg1Component.prototype.data;\n/** @type {?} */\nPeityUpdatingLineChartNg1Component.prototype.options;\n/** @type {?} */\nPeityUpdatingLineChartNg1Component.prototype.method;\n/** @type {?} */\nPeityUpdatingLineChartNg1Component.prototype.updateinterval;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Injector, Input } from '@angular/core';\nimport { UpgradeComponent } from '@angular/upgrade/static';\nexport class SankeyNg1Component extends UpgradeComponent {\n\n     chartSize: any;\n     chartData: any;\n     options: any;\n     click: any;\n/**\n * @param {?} elementRef\n * @param {?} injector\n */\nconstructor(elementRef: ElementRef, injector: Injector) {\n        super('uxSankeyNg1', elementRef, injector);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'sankey'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'chartSize': [{ type: Input },],\n'chartData': [{ type: Input },],\n'options': [{ type: Input },],\n'click': [{ type: Input },],\n};\n}\n\nfunction SankeyNg1Component_tsickle_Closure_declarations() {\n/** @type {?} */\nSankeyNg1Component.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSankeyNg1Component.ctorParameters;\n/** @type {?} */\nSankeyNg1Component.propDecorators;\n/** @type {?} */\nSankeyNg1Component.prototype.chartSize;\n/** @type {?} */\nSankeyNg1Component.prototype.chartData;\n/** @type {?} */\nSankeyNg1Component.prototype.options;\n/** @type {?} */\nSankeyNg1Component.prototype.click;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Injector, Input } from '@angular/core';\nimport { UpgradeComponent } from '@angular/upgrade/static';\nexport class SearchToolbarNg1Component extends UpgradeComponent {\n\n     searchTypeahead: any[];\n     placeHolder: string;\n     closeSearch: string;\n     onSearch: Function;\n     onFocus: Function;\n/**\n * @param {?} elementRef\n * @param {?} injector\n */\nconstructor(elementRef: ElementRef, injector: Injector) {\n        super('searchToolbar', elementRef, injector);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'search-toolbar'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'searchTypeahead': [{ type: Input },],\n'placeHolder': [{ type: Input },],\n'closeSearch': [{ type: Input },],\n'onSearch': [{ type: Input },],\n'onFocus': [{ type: Input },],\n};\n}\n\nfunction SearchToolbarNg1Component_tsickle_Closure_declarations() {\n/** @type {?} */\nSearchToolbarNg1Component.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSearchToolbarNg1Component.ctorParameters;\n/** @type {?} */\nSearchToolbarNg1Component.propDecorators;\n/** @type {?} */\nSearchToolbarNg1Component.prototype.searchTypeahead;\n/** @type {?} */\nSearchToolbarNg1Component.prototype.placeHolder;\n/** @type {?} */\nSearchToolbarNg1Component.prototype.closeSearch;\n/** @type {?} */\nSearchToolbarNg1Component.prototype.onSearch;\n/** @type {?} */\nSearchToolbarNg1Component.prototype.onFocus;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Injector, Input, Output, EventEmitter } from '@angular/core';\nimport { UpgradeComponent } from '@angular/upgrade/static';\nexport class SelectTableNg1Component extends UpgradeComponent {\n\n     values: any[];\n     multipleSelect: boolean;\n     selectKey: string;\n     selected: string;\n     searchText: string;\n     tableHeight: string;\n     selectHiddenItems: 'clear' | 'reselect';\n\n     selectedChange: EventEmitter<string> = new EventEmitter<string>();\n/**\n * @param {?} elementRef\n * @param {?} injector\n */\nconstructor(elementRef: ElementRef, injector: Injector) {\n        super('selectTable', elementRef, injector);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'select-table'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'values': [{ type: Input },],\n'multipleSelect': [{ type: Input },],\n'selectKey': [{ type: Input },],\n'selected': [{ type: Input },],\n'searchText': [{ type: Input },],\n'tableHeight': [{ type: Input },],\n'selectHiddenItems': [{ type: Input },],\n'selectedChange': [{ type: Output },],\n};\n}\n\nfunction SelectTableNg1Component_tsickle_Closure_declarations() {\n/** @type {?} */\nSelectTableNg1Component.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSelectTableNg1Component.ctorParameters;\n/** @type {?} */\nSelectTableNg1Component.propDecorators;\n/** @type {?} */\nSelectTableNg1Component.prototype.values;\n/** @type {?} */\nSelectTableNg1Component.prototype.multipleSelect;\n/** @type {?} */\nSelectTableNg1Component.prototype.selectKey;\n/** @type {?} */\nSelectTableNg1Component.prototype.selected;\n/** @type {?} */\nSelectTableNg1Component.prototype.searchText;\n/** @type {?} */\nSelectTableNg1Component.prototype.tableHeight;\n/** @type {?} */\nSelectTableNg1Component.prototype.selectHiddenItems;\n/** @type {?} */\nSelectTableNg1Component.prototype.selectedChange;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Injector, Input, Output, EventEmitter, forwardRef } from '@angular/core';\nimport { UpgradeComponent } from '@angular/upgrade/static';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nexport const /** @type {?} */ SLIDER_CHART_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => SliderChartNg1Component),\n    multi: true\n};\nexport class SliderChartNg1Component extends UpgradeComponent implements ControlValueAccessor {\n\n     sliderOptions: any;\n     ngModel: any;\n     chartOptions: any;\n     chartData: any;\n\n     ngModelChange: EventEmitter<any> = new EventEmitter<any>();\n/**\n * @param {?} elementRef\n * @param {?} injector\n */\nconstructor(elementRef: ElementRef, injector: Injector) {\n        super('sliderChart', elementRef, injector);\n    }\n/**\n * @param {?} obj\n * @return {?}\n */\nwriteValue(obj: any): void { }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnChange(fn: any): void { }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnTouched(fn: any): void { }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'slider-chart',\n    providers: [SLIDER_CHART_VALUE_ACCESSOR]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'sliderOptions': [{ type: Input },],\n'ngModel': [{ type: Input },],\n'chartOptions': [{ type: Input },],\n'chartData': [{ type: Input },],\n'ngModelChange': [{ type: Output },],\n};\n}\n\nfunction SliderChartNg1Component_tsickle_Closure_declarations() {\n/** @type {?} */\nSliderChartNg1Component.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSliderChartNg1Component.ctorParameters;\n/** @type {?} */\nSliderChartNg1Component.propDecorators;\n/** @type {?} */\nSliderChartNg1Component.prototype.sliderOptions;\n/** @type {?} */\nSliderChartNg1Component.prototype.ngModel;\n/** @type {?} */\nSliderChartNg1Component.prototype.chartOptions;\n/** @type {?} */\nSliderChartNg1Component.prototype.chartData;\n/** @type {?} */\nSliderChartNg1Component.prototype.ngModelChange;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Injector, Input } from '@angular/core';\nimport { UpgradeComponent } from '@angular/upgrade/static';\nexport class SocialChartNg1Component extends UpgradeComponent {\n\n     data: any;\n     options: any;\n     width: any;\n     height: any;\n     api: any;\n     communities: any;\n     detailStyle: any;\n     popoverStyle: any;\n     nodeDetail: any;\n     edgeDetail: any;\n     nodePopover: any;\n     edgePopover: any;\n     forceAtlasDuration: any;\n     nodeSizeAttribute: any;\n     startMaximized: any;\n     startMaximised: any;\n     showMaximizeControl: any;\n     showMaximiseControl: any;\n     socialChartContainer: any;\n     fullscreenButtonPosition: any;\n     localStrings: any;\n     chartTitle: any;\n     titleDisplayTime: any;\n     edgeWeightInfluence: any;\n     minLabels: any;\n/**\n * @param {?} elementRef\n * @param {?} injector\n */\nconstructor(elementRef: ElementRef, injector: Injector) {\n        super('uxSocialChartNg1', elementRef, injector);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'social-chart'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'data': [{ type: Input },],\n'options': [{ type: Input },],\n'width': [{ type: Input },],\n'height': [{ type: Input },],\n'api': [{ type: Input },],\n'communities': [{ type: Input },],\n'detailStyle': [{ type: Input },],\n'popoverStyle': [{ type: Input },],\n'nodeDetail': [{ type: Input },],\n'edgeDetail': [{ type: Input },],\n'nodePopover': [{ type: Input },],\n'edgePopover': [{ type: Input },],\n'forceAtlasDuration': [{ type: Input },],\n'nodeSizeAttribute': [{ type: Input },],\n'startMaximized': [{ type: Input },],\n'startMaximised': [{ type: Input },],\n'showMaximizeControl': [{ type: Input },],\n'showMaximiseControl': [{ type: Input },],\n'socialChartContainer': [{ type: Input },],\n'fullscreenButtonPosition': [{ type: Input },],\n'localStrings': [{ type: Input },],\n'chartTitle': [{ type: Input },],\n'titleDisplayTime': [{ type: Input },],\n'edgeWeightInfluence': [{ type: Input },],\n'minLabels': [{ type: Input },],\n};\n}\n\nfunction SocialChartNg1Component_tsickle_Closure_declarations() {\n/** @type {?} */\nSocialChartNg1Component.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSocialChartNg1Component.ctorParameters;\n/** @type {?} */\nSocialChartNg1Component.propDecorators;\n/** @type {?} */\nSocialChartNg1Component.prototype.data;\n/** @type {?} */\nSocialChartNg1Component.prototype.options;\n/** @type {?} */\nSocialChartNg1Component.prototype.width;\n/** @type {?} */\nSocialChartNg1Component.prototype.height;\n/** @type {?} */\nSocialChartNg1Component.prototype.api;\n/** @type {?} */\nSocialChartNg1Component.prototype.communities;\n/** @type {?} */\nSocialChartNg1Component.prototype.detailStyle;\n/** @type {?} */\nSocialChartNg1Component.prototype.popoverStyle;\n/** @type {?} */\nSocialChartNg1Component.prototype.nodeDetail;\n/** @type {?} */\nSocialChartNg1Component.prototype.edgeDetail;\n/** @type {?} */\nSocialChartNg1Component.prototype.nodePopover;\n/** @type {?} */\nSocialChartNg1Component.prototype.edgePopover;\n/** @type {?} */\nSocialChartNg1Component.prototype.forceAtlasDuration;\n/** @type {?} */\nSocialChartNg1Component.prototype.nodeSizeAttribute;\n/** @type {?} */\nSocialChartNg1Component.prototype.startMaximized;\n/** @type {?} */\nSocialChartNg1Component.prototype.startMaximised;\n/** @type {?} */\nSocialChartNg1Component.prototype.showMaximizeControl;\n/** @type {?} */\nSocialChartNg1Component.prototype.showMaximiseControl;\n/** @type {?} */\nSocialChartNg1Component.prototype.socialChartContainer;\n/** @type {?} */\nSocialChartNg1Component.prototype.fullscreenButtonPosition;\n/** @type {?} */\nSocialChartNg1Component.prototype.localStrings;\n/** @type {?} */\nSocialChartNg1Component.prototype.chartTitle;\n/** @type {?} */\nSocialChartNg1Component.prototype.titleDisplayTime;\n/** @type {?} */\nSocialChartNg1Component.prototype.edgeWeightInfluence;\n/** @type {?} */\nSocialChartNg1Component.prototype.minLabels;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Injector, Input, Output, EventEmitter } from '@angular/core';\nimport { UpgradeComponent } from '@angular/upgrade/static';\nexport class SortDirectionToggleNg1Component extends UpgradeComponent {\n\n     label: string;\n     sorters: SortDirectionToggleSorter[];\n     descend: boolean;\n/**\n * @param {?} elementRef\n * @param {?} injector\n */\nconstructor(elementRef: ElementRef, injector: Injector) {\n        super('sortDirectionToggle', elementRef, injector);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'sort-direction-toggle'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'label': [{ type: Input },],\n'sorters': [{ type: Input },],\n'descend': [{ type: Input },],\n};\n}\n\nfunction SortDirectionToggleNg1Component_tsickle_Closure_declarations() {\n/** @type {?} */\nSortDirectionToggleNg1Component.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSortDirectionToggleNg1Component.ctorParameters;\n/** @type {?} */\nSortDirectionToggleNg1Component.propDecorators;\n/** @type {?} */\nSortDirectionToggleNg1Component.prototype.label;\n/** @type {?} */\nSortDirectionToggleNg1Component.prototype.sorters;\n/** @type {?} */\nSortDirectionToggleNg1Component.prototype.descend;\n}\n\n\nexport interface SortDirectionToggleSorter {\n    name: string;\n    sort: string;\n    defaultSorter: boolean;\n    select: Function;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Injector, Input, Output, EventEmitter } from '@angular/core';\nimport { UpgradeComponent } from '@angular/upgrade/static';\nexport class TreeGridNg1Component extends UpgradeComponent {\n\n     data: TreeGridData[] | Function;\n     columns: TreeGridColumn[];\n     treeData: TreeGridData[];\n     selected: any[];\n     currentRow: any;\n     options: TreeGridOptions;\n\n     optionsChange: EventEmitter<TreeGridOptions> = new EventEmitter<TreeGridOptions>();\n     selectedChange: EventEmitter<any[]> = new EventEmitter<any[]>();\n     currentRowChange: EventEmitter<any> = new EventEmitter<any>();\n     treeDataChange: EventEmitter<TreeGridData[]> = new EventEmitter<TreeGridData[]>();\n/**\n * @param {?} elementRef\n * @param {?} injector\n */\nconstructor(elementRef: ElementRef, injector: Injector) {\n        super('treegrid', elementRef, injector);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'treegrid'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'data': [{ type: Input },],\n'columns': [{ type: Input },],\n'treeData': [{ type: Input },],\n'selected': [{ type: Input },],\n'currentRow': [{ type: Input },],\n'options': [{ type: Input },],\n'optionsChange': [{ type: Output },],\n'selectedChange': [{ type: Output },],\n'currentRowChange': [{ type: Output },],\n'treeDataChange': [{ type: Output },],\n};\n}\n\nfunction TreeGridNg1Component_tsickle_Closure_declarations() {\n/** @type {?} */\nTreeGridNg1Component.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTreeGridNg1Component.ctorParameters;\n/** @type {?} */\nTreeGridNg1Component.propDecorators;\n/** @type {?} */\nTreeGridNg1Component.prototype.data;\n/** @type {?} */\nTreeGridNg1Component.prototype.columns;\n/** @type {?} */\nTreeGridNg1Component.prototype.treeData;\n/** @type {?} */\nTreeGridNg1Component.prototype.selected;\n/** @type {?} */\nTreeGridNg1Component.prototype.currentRow;\n/** @type {?} */\nTreeGridNg1Component.prototype.options;\n/** @type {?} */\nTreeGridNg1Component.prototype.optionsChange;\n/** @type {?} */\nTreeGridNg1Component.prototype.selectedChange;\n/** @type {?} */\nTreeGridNg1Component.prototype.currentRowChange;\n/** @type {?} */\nTreeGridNg1Component.prototype.treeDataChange;\n}\n\n\nexport interface TreeGridColumn {\n    name: string;\n    value?: string | Function;\n    template?: string;\n    headerClass?: string;\n    cellClass?: string;\n    width?: string;\n    tooltip?: string;\n    tooltipPlacement?: 'top' | 'bottom' | 'left' | 'right';\n}\n\nexport interface TreeGridData {\n    dataItem: any;\n    children: any[];\n    expanded: boolean;\n    expanding: boolean;\n    level: number;\n    api: any;\n}\n\nexport interface TreeGridOptions {\n    childrenProperty?: string;\n    hasChildren?: Function;\n    maxDepth?: number;\n    expandTopLevel?: boolean;\n    select?: any;\n    expander?: any;\n    icons?: any;\n    rowClass?: string | Function;\n    sort?: Function;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Injector, Input, EventEmitter } from '@angular/core';\nimport { UpgradeComponent } from '@angular/upgrade/static';\nexport class ThumbnailNg1Component extends UpgradeComponent {\n\n     url: string;\n     show: boolean;\n     width: string;\n     height: string;\n/**\n * @param {?} elementRef\n * @param {?} injector\n */\nconstructor(elementRef: ElementRef, injector: Injector) {\n        super('thumbnail', elementRef, injector);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'thumbnail'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'url': [{ type: Input },],\n'show': [{ type: Input },],\n'width': [{ type: Input },],\n'height': [{ type: Input },],\n};\n}\n\nfunction ThumbnailNg1Component_tsickle_Closure_declarations() {\n/** @type {?} */\nThumbnailNg1Component.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nThumbnailNg1Component.ctorParameters;\n/** @type {?} */\nThumbnailNg1Component.propDecorators;\n/** @type {?} */\nThumbnailNg1Component.prototype.url;\n/** @type {?} */\nThumbnailNg1Component.prototype.show;\n/** @type {?} */\nThumbnailNg1Component.prototype.width;\n/** @type {?} */\nThumbnailNg1Component.prototype.height;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable, Inject, Injector } from '@angular/core';\nimport { INavigationMenuService } from './navigation-menu.interface';\nexport class NavigationMenuService implements INavigationMenuService {\n/**\n * @param {?} _navigationMenuService\n */\nconstructor(\nprivate _navigationMenuService: INavigationMenuService) { }\n/**\n * @return {?}\n */\nshow(): void {\n        this._navigationMenuService.show();\n    }\n/**\n * @return {?}\n */\nhide(): void {\n        this._navigationMenuService.hide();\n    }\n/**\n * @return {?}\n */\nvisible(): boolean {\n        return this._navigationMenuService.visible();\n    }\n/**\n * @return {?}\n */\ncollapseAtWidth(): number {\n        return this._navigationMenuService.collapseAtWidth();\n    }\n/**\n * @param {?} width\n * @return {?}\n */\nsetCollapseAtWidth(width: number): void {\n        this._navigationMenuService.setCollapseAtWidth(width);\n    }\n/**\n * @return {?}\n */\nsetDefaultCollapseAtWidth(): void {\n        this._navigationMenuService.setDefaultCollapseAtWidth();\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Inject, args: ['$navigationMenu', ] }, ]},\n];\n}\n\nfunction NavigationMenuService_tsickle_Closure_declarations() {\n/** @type {?} */\nNavigationMenuService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNavigationMenuService.ctorParameters;\n/** @type {?} */\nNavigationMenuService.prototype._navigationMenuService;\n}\n\n/**\n * @param {?} injector\n * @return {?}\n */\nexport function navigationMenuServiceFactory(injector: Injector) {\n    return injector.get('$navigationMenu');\n}\n\nexport const /** @type {?} */ navigationMenuServiceProvider = {\n    provide: '$navigationMenu',\n    useFactory: navigationMenuServiceFactory,\n    deps: ['$injector']\n};\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable, Inject, Injector } from '@angular/core';\nimport { IPdfService, PdfColumns, PdfOptions, PdfDocument } from './pdf.interface';\nexport class PdfService implements IPdfService {\n/**\n * @param {?} _pdfService\n */\nconstructor(\nprivate _pdfService: IPdfService) { }\n/**\n * @param {?} columns\n * @param {?} rows\n * @param {?=} options\n * @return {?}\n */\ncreateTable(columns: PdfColumns, rows: any[], options: PdfOptions = {}): PdfDocument {\n        return this._pdfService.createTable(columns, rows, options);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Inject, args: ['$pdf', ] }, ]},\n];\n}\n\nfunction PdfService_tsickle_Closure_declarations() {\n/** @type {?} */\nPdfService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPdfService.ctorParameters;\n/** @type {?} */\nPdfService.prototype._pdfService;\n}\n\n/**\n * @param {?} injector\n * @return {?}\n */\nexport function pdfServiceFactory(injector: Injector) {\n    return injector.get('$pdf');\n}\n\nexport const /** @type {?} */ pdfServiceProvider = {\n    provide: '$pdf',\n    useFactory: pdfServiceFactory,\n    deps: ['$injector']\n};\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable, Inject, Injector } from '@angular/core';\nimport { ITimeAgoService, TimeAgoLocalizedTimes } from './time-ago.interface';\nexport class TimeAgoService implements ITimeAgoService {\n/**\n * @param {?} _timeAgoService\n */\nconstructor(\nprivate _timeAgoService: ITimeAgoService) { }\n/**\n * @param {?} strings\n * @return {?}\n */\nsetStrings(strings: TimeAgoLocalizedTimes): void {\n        this._timeAgoService.setStrings(strings);\n    }\n/**\n * @param {?} past\n * @param {?} present\n * @return {?}\n */\ntimeSince(past: Date, present: Date): string {\n        return this._timeAgoService.timeSince(past, present);\n    }\n/**\n * @param {?} moment\n * @return {?}\n */\ntimeSinceNow(moment: Date): string {\n        return this._timeAgoService.timeSinceNow(moment);\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Inject, args: ['timeAgoService', ] }, ]},\n];\n}\n\nfunction TimeAgoService_tsickle_Closure_declarations() {\n/** @type {?} */\nTimeAgoService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTimeAgoService.ctorParameters;\n/** @type {?} */\nTimeAgoService.prototype._timeAgoService;\n}\n\n/**\n * @param {?} injector\n * @return {?}\n */\nexport function timeAgoServiceFactory(injector: Injector) {\n    return injector.get('timeAgoService');\n}\n\nexport const /** @type {?} */ timeAgoServiceProvider = {\n    provide: 'timeAgoService',\n    useFactory: timeAgoServiceFactory,\n    deps: ['$injector']\n};\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule, Injector } from '@angular/core';\n\nimport { FloatingActionButtonNg1Component } from './components/floating-action-button/floating-action-button.component';\nimport { FlotNg1Component } from './components/flot/flot.component';\nimport { NestedDonutNg1Component } from './components/nested-donut/nested-donut.component';\nimport { OrganizationChartNg1Component } from './components/organization-chart/organization-chart.component';\nimport { PartitionMapNg1Component } from './components/partition-map/partition-map.component';\nimport { PeityBarChartNg1Component } from './components/peity-chart/peity-bar-chart.component';\nimport { PeityLineChartNg1Component } from './components/peity-chart/peity-line-chart.component';\nimport { PeityPieChartNg1Component } from './components/peity-chart/peity-pie-chart.component';\nimport { PeityUpdatingLineChartNg1Component } from './components/peity-chart/peity-updating-line-chart.component';\nimport { SankeyNg1Component } from './components/sankey-chart/sankey.component';\nimport { SocialChartNg1Component } from './components/social-chart/social-chart.component';\nimport { TimeAgoService, timeAgoServiceProvider } from './services/time-ago/time-ago.service';\nimport { PdfService, pdfServiceProvider } from './services/pdf/pdf.service';\nimport { NavigationMenuService, navigationMenuServiceProvider } from './services/navigation-menu/navigation-menu.service';\nimport { GridNg1Component } from './components/grid/grid.component';\nimport { ThumbnailNg1Component } from './components/thumbnail/thumbnail.component';\nimport { HierarchyBarNg1Component } from './components/hierarchy-bar/hierarchy-bar.component';\nimport { ContactsNg1Component } from './components/contacts/contacts.component';\nimport { ExpandInputNg1Component } from './components/expand-input/expand-input.component';\nimport { SortDirectionToggleNg1Component } from './components/sort-direction-toggle/sort-direction-toggle.component';\nimport { SearchToolbarNg1Component } from './components/search-toolbar/search-toolbar.component';\nimport { TreeGridNg1Component } from './components/tree-grid/tree-grid.component';\nimport { SelectTableNg1Component } from './components/select-table/select-table.component';\nimport { MarqueeWizardNg1Component } from './components/marquee-wizard/marquee-wizard.component';\nimport { SliderChartNg1Component } from './components/slider-chart/slider-chart.directive';\n\nconst /** @type {?} */ declarations = [\n    ContactsNg1Component,\n    ExpandInputNg1Component,\n    FloatingActionButtonNg1Component,\n    FlotNg1Component,\n    GridNg1Component,\n    HierarchyBarNg1Component,\n    MarqueeWizardNg1Component,\n    NestedDonutNg1Component,\n    OrganizationChartNg1Component,\n    PartitionMapNg1Component,\n    PeityBarChartNg1Component,\n    PeityLineChartNg1Component,\n    PeityPieChartNg1Component,\n    PeityUpdatingLineChartNg1Component,\n    SankeyNg1Component,\n    SearchToolbarNg1Component,\n    SelectTableNg1Component,\n    SliderChartNg1Component,\n    SocialChartNg1Component,\n    SortDirectionToggleNg1Component,\n    TreeGridNg1Component,\n    ThumbnailNg1Component,\n];\nexport class HybridModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [],\n    exports: declarations,\n    declarations: declarations,\n    providers: [\n        navigationMenuServiceProvider,\n        pdfServiceProvider,\n        timeAgoServiceProvider,\n        TimeAgoService,\n        PdfService,\n        NavigationMenuService,\n    ],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction HybridModule_tsickle_Closure_declarations() {\n/** @type {?} */\nHybridModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nHybridModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input } from '@angular/core';\nexport class BreadcrumbsComponent {\n\n     crumbs: Breadcrumb[];\n/**\n * @param {?} event\n * @param {?} crumb\n * @return {?}\n */\nclickCrumb(event: MouseEvent, crumb: Breadcrumb) {\n        if (crumb.onClick) {\n            crumb.onClick.call(null, event);\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-breadcrumbs',\n    template: `\n      <ol class=\"breadcrumb\">\n          <li *ngFor=\"let crumb of crumbs\">\n\n              <!-- If there is a router link then use a tag -->\n              <a *ngIf=\"crumb.routerLink\"\n                 [routerLink]=\"crumb.routerLink\" \n                 [fragment]=\"crumb.fragment\" \n                 [queryParams]=\"crumb.queryParams\" \n                 (click)=\"clickCrumb($event, crumb)\">\n                      {{ crumb.title }}\n              </a>\n\n              <!-- If there is not router link then display text in a span -->\n              <span *ngIf=\"!crumb.routerLink\">{{ crumb.title }}</span>\n          </li>\n      </ol>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'crumbs': [{ type: Input },],\n};\n}\n\nfunction BreadcrumbsComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nBreadcrumbsComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nBreadcrumbsComponent.ctorParameters;\n/** @type {?} */\nBreadcrumbsComponent.propDecorators;\n/** @type {?} */\nBreadcrumbsComponent.prototype.crumbs;\n}\n\n\nexport interface Breadcrumb {\n    title: string;\n    routerLink?: string;\n    fragment?: string;\n    queryParams?: any;\n    onClick?: (event: MouseEvent) => void;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\n\nimport { BreadcrumbsComponent } from './breadcrumbs.component';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nexport class BreadcrumbsModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule, \n        RouterModule\n    ],\n    exports: [BreadcrumbsComponent],\n    declarations: [BreadcrumbsComponent]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction BreadcrumbsModule_tsickle_Closure_declarations() {\n/** @type {?} */\nBreadcrumbsModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nBreadcrumbsModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, forwardRef, Output, EventEmitter } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\nexport const /** @type {?} */ CHECKBOX_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => CheckboxComponent),\n    multi: true\n};\nexport class CheckboxComponent implements ControlValueAccessor {\n\n     name: string = '';\n     clickable: boolean = true;\n     disabled: boolean = false;\n     simplified: boolean = false;\n     indeterminateValue: any = -1;\n     valueChange: EventEmitter<any> = new EventEmitter<any>();\n/**\n * @return {?}\n */\nget value() {\n        return this._value;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset value(value: any) {\n        this._value = value;\n\n        // invoke change event\n        this.valueChange.emit(this._value);\n\n        // call callback\n        this.onChangeCallback(this._value);\n    }\nprivate _value: any = false;\n\n    onTouchedCallback: () => void = () => { };\n    onChangeCallback: (_: any) => void = () => { };\n/**\n * @return {?}\n */\ntoggleChecked() {\n\n        if (this.disabled === true || this.clickable === false) {\n            return;\n        }\n\n        if (this.value === this.indeterminateValue) {\n            this.value = true;\n            return;\n        }\n\n        // toggle the checked state\n        this.value = !this.value;\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nkeyDown(event: KeyboardEvent) {\n        // then toggle the checkbox\n        this.toggleChecked();\n\n        // prevent default browser behavior\n        event.stopPropagation();\n        event.preventDefault();\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nwriteValue(value: boolean) {\n        if (value !== this._value) {\n            this._value = value;\n        }\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnChange(fn: any) {\n        this.onChangeCallback = fn;\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnTouched(fn: any) {\n        this.onTouchedCallback = fn;\n    }\n/**\n * @param {?} isDisabled\n * @return {?}\n */\nsetDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-checkbox',\n    template: `\n      <div class=\"ux-checkbox\" tabindex=\"0\"\n          [class.ux-checked]=\"value == true\"\n          [class.ux-indeterminate]=\"value == indeterminateValue\"\n          [class.ux-simplified]=\"simplified == true\"\n          [class.ux-disabled]=\"disabled == true\"\n          (keydown.space)=\"keyDown($event)\">\n\n          <input type=\"checkbox\" role=\"checkbox\" tabindex=\"-1\"\n              [name]=\"name\" \n              [checked]=\"value\" \n              [disabled]=\"disabled\" />\n        \n      </div>\n\n      <div class=\"ux-checkbox-content\">\n          <ng-content></ng-content>\n      </div>\n    `,\n    providers: [CHECKBOX_VALUE_ACCESSOR],\n    host: {\n        '(click)': 'toggleChecked()'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'name': [{ type: Input },],\n'clickable': [{ type: Input },],\n'disabled': [{ type: Input },],\n'simplified': [{ type: Input },],\n'indeterminateValue': [{ type: Input },],\n'valueChange': [{ type: Output },],\n'value': [{ type: Input },],\n};\n}\n\nfunction CheckboxComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nCheckboxComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCheckboxComponent.ctorParameters;\n/** @type {?} */\nCheckboxComponent.propDecorators;\n/** @type {?} */\nCheckboxComponent.prototype.name;\n/** @type {?} */\nCheckboxComponent.prototype.clickable;\n/** @type {?} */\nCheckboxComponent.prototype.disabled;\n/** @type {?} */\nCheckboxComponent.prototype.simplified;\n/** @type {?} */\nCheckboxComponent.prototype.indeterminateValue;\n/** @type {?} */\nCheckboxComponent.prototype.valueChange;\n/** @type {?} */\nCheckboxComponent.prototype._value;\n/** @type {?} */\nCheckboxComponent.prototype.onTouchedCallback;\n/** @type {?} */\nCheckboxComponent.prototype.onChangeCallback;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport {FormsModule} from '@angular/forms';\n\nimport { CheckboxComponent } from './checkbox.component';\nexport class CheckboxModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [FormsModule],\n    exports: [CheckboxComponent],\n    declarations: [CheckboxComponent]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction CheckboxModule_tsickle_Closure_declarations() {\n/** @type {?} */\nCheckboxModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCheckboxModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { ColumnSortingDirective, ColumnSortingOrder } from './column-sorting.directive';\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\nexport class ColumnSortingComponent {\n\n     state: ColumnSortingState;\n     key: string;\n     orderNumber: number;\n     stateChange: EventEmitter<ColumnSortingState> = new EventEmitter<ColumnSortingState>();\nprivate _parent: ColumnSortingDirective;\n    columnSortingState = ColumnSortingState;\n/**\n * @param {?} parent\n * @return {?}\n */\ninitParent(parent: ColumnSortingDirective) {\n        this._parent = parent;\n\n        // watch for any events\n        this._parent.events.subscribe(event => {\n\n            let /** @type {?} */ idx = event.findIndex(column => column.key === this.key);\n\n            if (idx == -1) {\n                this.state = ColumnSortingState.NoSort;\n            }\n\n            // only store the number if we have 2 or more columns being sorted\n            if (event.length > 1) {\n                this.orderNumber = idx === -1 ? null : idx + 1;\n            } else {\n                this.orderNumber = null;\n            }\n\n            this.stateChange.emit(this.state);\n\n        });\n    }\n/**\n * @return {?}\n */\nchangeState(): ColumnSortingOrder[] {\n\n        if (this.state === ColumnSortingState.Ascending) {\n            this.state = ColumnSortingState.Descending;\n        } else if (this.state === ColumnSortingState.Descending) {\n            this.state = ColumnSortingState.NoSort;\n        } else {\n            this.state = ColumnSortingState.Ascending;\n        }\n\n        // inform parent\n        return this._parent.toggleColumn(this.key, this.state);\n\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-column-sorting',\n    template: `\n      <div class=\"ux-column-sorting\">\n          <i class=\"ux-column-sorting-icon hpe-icon\" \n              [class.hpe-ascend]=\"state === columnSortingState.Ascending\" \n              [class.hpe-descend]=\"state === columnSortingState.Descending\" \n              [class.column-sorting-icon-hidden]=\"state === columnSortingState.NoSort\"></i>\n          <p class=\"ux-column-sorting-number\">{{ orderNumber }}</p>\n      </div>\n    `,\n    exportAs: 'ux-column-sorting'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'state': [{ type: Input },],\n'key': [{ type: Input },],\n'orderNumber': [{ type: Input },],\n'stateChange': [{ type: Output },],\n};\n}\n\nfunction ColumnSortingComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nColumnSortingComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nColumnSortingComponent.ctorParameters;\n/** @type {?} */\nColumnSortingComponent.propDecorators;\n/** @type {?} */\nColumnSortingComponent.prototype.state;\n/** @type {?} */\nColumnSortingComponent.prototype.key;\n/** @type {?} */\nColumnSortingComponent.prototype.orderNumber;\n/** @type {?} */\nColumnSortingComponent.prototype.stateChange;\n/** @type {?} */\nColumnSortingComponent.prototype._parent;\n/** @type {?} */\nColumnSortingComponent.prototype.columnSortingState;\n}\n\nexport type ColumnSortingState = number;\nexport let ColumnSortingState: any = {};\nColumnSortingState.Ascending = 0;\nColumnSortingState.Descending = 1;\nColumnSortingState.NoSort = 2;\nColumnSortingState[ColumnSortingState.Ascending] = \"Ascending\";\nColumnSortingState[ColumnSortingState.Descending] = \"Descending\";\nColumnSortingState[ColumnSortingState.NoSort] = \"NoSort\";\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { ColumnSortingComponent, ColumnSortingState } from './column-sorting.component';\nimport { Directive, Host, QueryList, ContentChildren, Input } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nexport class ColumnSortingDirective {\n\n     singleSort: boolean;\n     components: QueryList<ColumnSortingComponent>;\n\n    events: Subject<ColumnSortingOrder[]> = new Subject<ColumnSortingOrder[]>();\n    order: ColumnSortingOrder[] = [];\n/**\n * @return {?}\n */\nngAfterViewInit() {\n        this.components.forEach(component => component.initParent(this));\n    }\n/**\n * @param {?} key\n * @param {?} state\n * @return {?}\n */\ntoggleColumn(key: string, state: ColumnSortingState) {\n\n        if (this.singleSort) {\n            if (state === ColumnSortingState.NoSort) {\n                this.order = [];\n            } else {\n                this.order = [{key: key, state: state}];\n            }\n        } else {\n            // reorder columns here\n            let /** @type {?} */ idx = this.order.findIndex(column => column.key === key);\n\n            // if wasnt previously selected add to list\n            if (idx === -1) {\n                this.order.push({ key: key, state: state});\n            } else if (state === ColumnSortingState.Ascending || state === ColumnSortingState.Descending) {\n                this.order.splice(idx, 1);\n                this.order.push({ key: key, state: state});\n            } else {\n                this.order.splice(idx, 1);\n            }\n        }\n\n            this.events.next(this.order);\n            // return the order\n            return this.order;\n\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxColumnSorting]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'singleSort': [{ type: Input },],\n'components': [{ type: ContentChildren, args: [ColumnSortingComponent, ] },],\n};\n}\n\nfunction ColumnSortingDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nColumnSortingDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nColumnSortingDirective.ctorParameters;\n/** @type {?} */\nColumnSortingDirective.propDecorators;\n/** @type {?} */\nColumnSortingDirective.prototype.singleSort;\n/** @type {?} */\nColumnSortingDirective.prototype.components;\n/** @type {?} */\nColumnSortingDirective.prototype.events;\n/** @type {?} */\nColumnSortingDirective.prototype.order;\n}\n\n\nexport interface ColumnSortingOrder {\n    key: string;\n    state: ColumnSortingState; \n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\n\nimport { ColumnSortingComponent } from './column-sorting.component';\n\nimport { ColumnSortingDirective } from './column-sorting.directive';\nexport class ColumnSortingModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    exports: [ColumnSortingComponent, ColumnSortingDirective],\n    declarations: [ColumnSortingComponent, ColumnSortingDirective]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ColumnSortingModule_tsickle_Closure_declarations() {\n/** @type {?} */\nColumnSortingModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nColumnSortingModule.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","export function isFunction(x: any): x is Function {\n  return typeof x === 'function';\n}\n","export const isArray = Array.isArray || (<T>(x: any): x is T[] => x && typeof x.length === 'number');\n","export function isObject(x: any): x is Object {\n  return x != null && typeof x === 'object';\n}\n","import { errorObject } from './errorObject';\n\nlet tryCatchTarget: Function;\n\nfunction tryCatcher(this: any): any {\n  try {\n    return tryCatchTarget.apply(this, arguments);\n  } catch (e) {\n    errorObject.e = e;\n    return errorObject;\n  }\n}\n\nexport function tryCatch<T extends Function>(fn: T): T {\n  tryCatchTarget = fn;\n  return <any>tryCatcher;\n};\n","// typeof any so that it we don't have to cast when comparing a result to the error object\nexport const errorObject: any = { e: {} };","/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\nexport class UnsubscriptionError extends Error {\n  constructor(public errors: any[]) {\n    super();\n    const err: any = Error.call(this, errors ?\n      `${errors.length} errors occurred during unsubscription:\n  ${errors.map((err, i) => `${i + 1}) ${err.toString()}`).join('\\n  ')}` : '');\n    (<any> this).name = err.name = 'UnsubscriptionError';\n    (<any> this).stack = err.stack;\n    (<any> this).message = err.message;\n  }\n}\n","import { isArray } from './util/isArray';\nimport { isObject } from './util/isObject';\nimport { isFunction } from './util/isFunction';\nimport { tryCatch } from './util/tryCatch';\nimport { errorObject } from './util/errorObject';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\n\nexport interface AnonymousSubscription {\n  unsubscribe(): void;\n}\n\nexport type TeardownLogic = AnonymousSubscription | Function | void;\n\nexport interface ISubscription extends AnonymousSubscription {\n  unsubscribe(): void;\n  readonly closed: boolean;\n}\n\n/**\n * Represents a disposable resource, such as the execution of an Observable. A\n * Subscription has one important method, `unsubscribe`, that takes no argument\n * and just disposes the resource held by the subscription.\n *\n * Additionally, subscriptions may be grouped together through the `add()`\n * method, which will attach a child Subscription to the current Subscription.\n * When a Subscription is unsubscribed, all its children (and its grandchildren)\n * will be unsubscribed as well.\n *\n * @class Subscription\n */\nexport class Subscription implements ISubscription {\n  public static EMPTY: Subscription = (function(empty: any){\n    empty.closed = true;\n    return empty;\n  }(new Subscription()));\n\n  /**\n   * A flag to indicate whether this Subscription has already been unsubscribed.\n   * @type {boolean}\n   */\n  public closed: boolean = false;\n\n  protected _parent: Subscription = null;\n  protected _parents: Subscription[] = null;\n  private _subscriptions: ISubscription[] = null;\n\n  /**\n   * @param {function(): void} [unsubscribe] A function describing how to\n   * perform the disposal of resources when the `unsubscribe` method is called.\n   */\n  constructor(unsubscribe?: () => void) {\n    if (unsubscribe) {\n      (<any> this)._unsubscribe = unsubscribe;\n    }\n  }\n\n  /**\n   * Disposes the resources held by the subscription. May, for instance, cancel\n   * an ongoing Observable execution or cancel any other type of work that\n   * started when the Subscription was created.\n   * @return {void}\n   */\n  unsubscribe(): void {\n    let hasErrors = false;\n    let errors: any[];\n\n    if (this.closed) {\n      return;\n    }\n\n    let { _parent, _parents, _unsubscribe, _subscriptions } = (<any> this);\n\n    this.closed = true;\n    this._parent = null;\n    this._parents = null;\n    // null out _subscriptions first so any child subscriptions that attempt\n    // to remove themselves from this subscription will noop\n    this._subscriptions = null;\n\n    let index = -1;\n    let len = _parents ? _parents.length : 0;\n\n    // if this._parent is null, then so is this._parents, and we\n    // don't have to remove ourselves from any parent subscriptions.\n    while (_parent) {\n      _parent.remove(this);\n      // if this._parents is null or index >= len,\n      // then _parent is set to null, and the loop exits\n      _parent = ++index < len && _parents[index] || null;\n    }\n\n    if (isFunction(_unsubscribe)) {\n      let trial = tryCatch(_unsubscribe).call(this);\n      if (trial === errorObject) {\n        hasErrors = true;\n        errors = errors || (\n          errorObject.e instanceof UnsubscriptionError ?\n            flattenUnsubscriptionErrors(errorObject.e.errors) : [errorObject.e]\n        );\n      }\n    }\n\n    if (isArray(_subscriptions)) {\n\n      index = -1;\n      len = _subscriptions.length;\n\n      while (++index < len) {\n        const sub = _subscriptions[index];\n        if (isObject(sub)) {\n          let trial = tryCatch(sub.unsubscribe).call(sub);\n          if (trial === errorObject) {\n            hasErrors = true;\n            errors = errors || [];\n            let err = errorObject.e;\n            if (err instanceof UnsubscriptionError) {\n              errors = errors.concat(flattenUnsubscriptionErrors(err.errors));\n            } else {\n              errors.push(err);\n            }\n          }\n        }\n      }\n    }\n\n    if (hasErrors) {\n      throw new UnsubscriptionError(errors);\n    }\n  }\n\n  /**\n   * Adds a tear down to be called during the unsubscribe() of this\n   * Subscription.\n   *\n   * If the tear down being added is a subscription that is already\n   * unsubscribed, is the same reference `add` is being called on, or is\n   * `Subscription.EMPTY`, it will not be added.\n   *\n   * If this subscription is already in an `closed` state, the passed\n   * tear down logic will be executed immediately.\n   *\n   * @param {TeardownLogic} teardown The additional logic to execute on\n   * teardown.\n   * @return {Subscription} Returns the Subscription used or created to be\n   * added to the inner subscriptions list. This Subscription can be used with\n   * `remove()` to remove the passed teardown logic from the inner subscriptions\n   * list.\n   */\n  add(teardown: TeardownLogic): Subscription {\n    if (!teardown || (teardown === Subscription.EMPTY)) {\n      return Subscription.EMPTY;\n    }\n\n    if (teardown === this) {\n      return this;\n    }\n\n    let subscription = (<Subscription> teardown);\n\n    switch (typeof teardown) {\n      case 'function':\n        subscription = new Subscription(<(() => void) > teardown);\n      case 'object':\n        if (subscription.closed || typeof subscription.unsubscribe !== 'function') {\n          return subscription;\n        } else if (this.closed) {\n          subscription.unsubscribe();\n          return subscription;\n        } else if (typeof subscription._addParent !== 'function' /* quack quack */) {\n          const tmp = subscription;\n          subscription = new Subscription();\n          subscription._subscriptions = [tmp];\n        }\n        break;\n      default:\n        throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n    }\n\n    const subscriptions = this._subscriptions || (this._subscriptions = []);\n\n    subscriptions.push(subscription);\n    subscription._addParent(this);\n\n    return subscription;\n  }\n\n  /**\n   * Removes a Subscription from the internal list of subscriptions that will\n   * unsubscribe during the unsubscribe process of this Subscription.\n   * @param {Subscription} subscription The subscription to remove.\n   * @return {void}\n   */\n  remove(subscription: Subscription): void {\n    const subscriptions = this._subscriptions;\n    if (subscriptions) {\n      const subscriptionIndex = subscriptions.indexOf(subscription);\n      if (subscriptionIndex !== -1) {\n        subscriptions.splice(subscriptionIndex, 1);\n      }\n    }\n  }\n\n  private _addParent(parent: Subscription) {\n    let { _parent, _parents } = this;\n    if (!_parent || _parent === parent) {\n      // If we don't have a parent, or the new parent is the same as the\n      // current parent, then set this._parent to the new parent.\n      this._parent = parent;\n    } else if (!_parents) {\n      // If there's already one parent, but not multiple, allocate an Array to\n      // store the rest of the parent Subscriptions.\n      this._parents = [parent];\n    } else if (_parents.indexOf(parent) === -1) {\n      // Only add the new parent to the _parents list if it's not already there.\n      _parents.push(parent);\n    }\n  }\n}\n\nfunction flattenUnsubscriptionErrors(errors: any[]) {\n return errors.reduce((errs, err) => errs.concat((err instanceof UnsubscriptionError) ? err.errors : err), []);\n}\n","export interface NextObserver<T> {\n  closed?: boolean;\n  next: (value: T) => void;\n  error?: (err: any) => void;\n  complete?: () => void;\n}\n\nexport interface ErrorObserver<T> {\n  closed?: boolean;\n  next?: (value: T) => void;\n  error: (err: any) => void;\n  complete?: () => void;\n}\n\nexport interface CompletionObserver<T> {\n  closed?: boolean;\n  next?: (value: T) => void;\n  error?: (err: any) => void;\n  complete: () => void;\n}\n\nexport type PartialObserver<T> = NextObserver<T> | ErrorObserver<T> | CompletionObserver<T>;\n\nexport interface Observer<T> {\n  closed?: boolean;\n  next: (value: T) => void;\n  error: (err: any) => void;\n  complete: () => void;\n}\n\nexport const empty: Observer<any> = {\n  closed: true,\n  next(value: any): void { /* noop */},\n  error(err: any): void { throw err; },\n  complete(): void { /*noop*/ }\n};\n","declare let global: any;\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\ndeclare var WorkerGlobalScope: any;\n// CommonJS / Node have global context exposed as \"global\" variable.\n// We don't want to include the whole node.d.ts this this compilation unit so we'll just fake\n// the global \"global\" var for now.\n\nconst __window = typeof window !== 'undefined' && window;\nconst __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope && self;\nconst __global = typeof global !== 'undefined' && global;\nconst _root: any = __window || __global || __self;\n\n// Workaround Closure Compiler restriction: The body of a goog.module cannot use throw.\n// This is needed when used with angular/tsickle which inserts a goog.module statement.\n// Wrap in IIFE\n(function () {\n  if (!_root) {\n    throw new Error('RxJS could not find any global context (window, self, global)');\n  }\n})();\n\nexport { _root as root };","import { root } from '../util/root';\n\nconst Symbol: any = root.Symbol;\n\nexport const rxSubscriber = (typeof Symbol === 'function' && typeof Symbol.for === 'function') ?\n  Symbol.for('rxSubscriber') : '@@rxSubscriber';\n\n/**\n * @deprecated use rxSubscriber instead\n */\nexport const $$rxSubscriber = rxSubscriber;\n","import { isFunction } from './util/isFunction';\nimport { Observer, PartialObserver } from './Observer';\nimport { Subscription } from './Subscription';\nimport { empty as emptyObserver } from './Observer';\nimport { rxSubscriber as rxSubscriberSymbol } from './symbol/rxSubscriber';\n\n/**\n * Implements the {@link Observer} interface and extends the\n * {@link Subscription} class. While the {@link Observer} is the public API for\n * consuming the values of an {@link Observable}, all Observers get converted to\n * a Subscriber, in order to provide Subscription-like capabilities such as\n * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n * implementing operators, but it is rarely used as a public API.\n *\n * @class Subscriber<T>\n */\nexport class Subscriber<T> extends Subscription implements Observer<T> {\n\n  [rxSubscriberSymbol]() { return this; }\n\n  /**\n   * A static factory for a Subscriber, given a (potentially partial) definition\n   * of an Observer.\n   * @param {function(x: ?T): void} [next] The `next` callback of an Observer.\n   * @param {function(e: ?any): void} [error] The `error` callback of an\n   * Observer.\n   * @param {function(): void} [complete] The `complete` callback of an\n   * Observer.\n   * @return {Subscriber<T>} A Subscriber wrapping the (partially defined)\n   * Observer represented by the given arguments.\n   */\n  static create<T>(next?: (x?: T) => void,\n                   error?: (e?: any) => void,\n                   complete?: () => void): Subscriber<T> {\n    const subscriber = new Subscriber(next, error, complete);\n    subscriber.syncErrorThrowable = false;\n    return subscriber;\n  }\n\n  public syncErrorValue: any = null;\n  public syncErrorThrown: boolean = false;\n  public syncErrorThrowable: boolean = false;\n\n  protected isStopped: boolean = false;\n  protected destination: PartialObserver<any>; // this `any` is the escape hatch to erase extra type param (e.g. R)\n\n  /**\n   * @param {Observer|function(value: T): void} [destinationOrNext] A partially\n   * defined Observer or a `next` callback function.\n   * @param {function(e: ?any): void} [error] The `error` callback of an\n   * Observer.\n   * @param {function(): void} [complete] The `complete` callback of an\n   * Observer.\n   */\n  constructor(destinationOrNext?: PartialObserver<any> | ((value: T) => void),\n              error?: (e?: any) => void,\n              complete?: () => void) {\n    super();\n\n    switch (arguments.length) {\n      case 0:\n        this.destination = emptyObserver;\n        break;\n      case 1:\n        if (!destinationOrNext) {\n          this.destination = emptyObserver;\n          break;\n        }\n        if (typeof destinationOrNext === 'object') {\n          if (destinationOrNext instanceof Subscriber) {\n            this.syncErrorThrowable = destinationOrNext.syncErrorThrowable;\n            this.destination = (<Subscriber<any>> destinationOrNext);\n            (<any> this.destination).add(this);\n          } else {\n            this.syncErrorThrowable = true;\n            this.destination = new SafeSubscriber<T>(this, <PartialObserver<any>> destinationOrNext);\n          }\n          break;\n        }\n      default:\n        this.syncErrorThrowable = true;\n        this.destination = new SafeSubscriber<T>(this, <((value: T) => void)> destinationOrNext, error, complete);\n        break;\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `next` from\n   * the Observable, with a value. The Observable may call this method 0 or more\n   * times.\n   * @param {T} [value] The `next` value.\n   * @return {void}\n   */\n  next(value?: T): void {\n    if (!this.isStopped) {\n      this._next(value);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `error` from\n   * the Observable, with an attached {@link Error}. Notifies the Observer that\n   * the Observable has experienced an error condition.\n   * @param {any} [err] The `error` exception.\n   * @return {void}\n   */\n  error(err?: any): void {\n    if (!this.isStopped) {\n      this.isStopped = true;\n      this._error(err);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive a valueless notification of type\n   * `complete` from the Observable. Notifies the Observer that the Observable\n   * has finished sending push-based notifications.\n   * @return {void}\n   */\n  complete(): void {\n    if (!this.isStopped) {\n      this.isStopped = true;\n      this._complete();\n    }\n  }\n\n  unsubscribe(): void {\n    if (this.closed) {\n      return;\n    }\n    this.isStopped = true;\n    super.unsubscribe();\n  }\n\n  protected _next(value: T): void {\n    this.destination.next(value);\n  }\n\n  protected _error(err: any): void {\n    this.destination.error(err);\n    this.unsubscribe();\n  }\n\n  protected _complete(): void {\n    this.destination.complete();\n    this.unsubscribe();\n  }\n\n  protected _unsubscribeAndRecycle(): Subscriber<T> {\n    const { _parent, _parents } = this;\n    this._parent = null;\n    this._parents = null;\n    this.unsubscribe();\n    this.closed = false;\n    this.isStopped = false;\n    this._parent = _parent;\n    this._parents = _parents;\n    return this;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SafeSubscriber<T> extends Subscriber<T> {\n\n  private _context: any;\n\n  constructor(private _parentSubscriber: Subscriber<T>,\n              observerOrNext?: PartialObserver<T> | ((value: T) => void),\n              error?: (e?: any) => void,\n              complete?: () => void) {\n    super();\n\n    let next: ((value: T) => void);\n    let context: any = this;\n\n    if (isFunction(observerOrNext)) {\n      next = (<((value: T) => void)> observerOrNext);\n    } else if (observerOrNext) {\n      next = (<PartialObserver<T>> observerOrNext).next;\n      error = (<PartialObserver<T>> observerOrNext).error;\n      complete = (<PartialObserver<T>> observerOrNext).complete;\n      if (observerOrNext !== emptyObserver) {\n        context = Object.create(observerOrNext);\n        if (isFunction(context.unsubscribe)) {\n          this.add(<() => void> context.unsubscribe.bind(context));\n        }\n        context.unsubscribe = this.unsubscribe.bind(this);\n      }\n    }\n\n    this._context = context;\n    this._next = next;\n    this._error = error;\n    this._complete = complete;\n  }\n\n  next(value?: T): void {\n    if (!this.isStopped && this._next) {\n      const { _parentSubscriber } = this;\n      if (!_parentSubscriber.syncErrorThrowable) {\n        this.__tryOrUnsub(this._next, value);\n      } else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {\n        this.unsubscribe();\n      }\n    }\n  }\n\n  error(err?: any): void {\n    if (!this.isStopped) {\n      const { _parentSubscriber } = this;\n      if (this._error) {\n        if (!_parentSubscriber.syncErrorThrowable) {\n          this.__tryOrUnsub(this._error, err);\n          this.unsubscribe();\n        } else {\n          this.__tryOrSetError(_parentSubscriber, this._error, err);\n          this.unsubscribe();\n        }\n      } else if (!_parentSubscriber.syncErrorThrowable) {\n        this.unsubscribe();\n        throw err;\n      } else {\n        _parentSubscriber.syncErrorValue = err;\n        _parentSubscriber.syncErrorThrown = true;\n        this.unsubscribe();\n      }\n    }\n  }\n\n  complete(): void {\n    if (!this.isStopped) {\n      const { _parentSubscriber } = this;\n      if (this._complete) {\n        const wrappedComplete = () => this._complete.call(this._context);\n\n        if (!_parentSubscriber.syncErrorThrowable) {\n          this.__tryOrUnsub(wrappedComplete);\n          this.unsubscribe();\n        } else {\n          this.__tryOrSetError(_parentSubscriber, wrappedComplete);\n          this.unsubscribe();\n        }\n      } else {\n        this.unsubscribe();\n      }\n    }\n  }\n\n  private __tryOrUnsub(fn: Function, value?: any): void {\n    try {\n      fn.call(this._context, value);\n    } catch (err) {\n      this.unsubscribe();\n      throw err;\n    }\n  }\n\n  private __tryOrSetError(parent: Subscriber<T>, fn: Function, value?: any): boolean {\n    try {\n      fn.call(this._context, value);\n    } catch (err) {\n      parent.syncErrorValue = err;\n      parent.syncErrorThrown = true;\n      return true;\n    }\n    return false;\n  }\n\n  protected _unsubscribe(): void {\n    const { _parentSubscriber } = this;\n    this._context = null;\n    this._parentSubscriber = null;\n    _parentSubscriber.unsubscribe();\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\nimport { OperatorFunction, MonoTypeOperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function filter<T, S extends T>(predicate: (value: T, index: number) => value is S,\n                                       thisArg?: any): OperatorFunction<T, S>;\nexport function filter<T>(predicate: (value: T, index: number) => boolean,\n                          thisArg?: any): MonoTypeOperatorFunction<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Filter items emitted by the source Observable by only emitting those that\n * satisfy a specified predicate.\n *\n * <span class=\"informal\">Like\n * [Array.prototype.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),\n * it only emits a value from the source if it passes a criterion function.</span>\n *\n * <img src=\"./img/filter.png\" width=\"100%\">\n *\n * Similar to the well-known `Array.prototype.filter` method, this operator\n * takes values from the source Observable, passes them through a `predicate`\n * function and only emits those values that yielded `true`.\n *\n * @example <caption>Emit only click events whose target was a DIV element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var clicksOnDivs = clicks.filter(ev => ev.target.tagName === 'DIV');\n * clicksOnDivs.subscribe(x => console.log(x));\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n * @see {@link ignoreElements}\n * @see {@link partition}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted, if `false` the value is not passed to the output\n * Observable. The `index` parameter is the number `i` for the i-th source\n * emission that has happened since the subscription, starting from the number\n * `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable} An Observable of values from the source that were\n * allowed by the `predicate` function.\n * @method filter\n * @owner Observable\n */\nexport function filter<T>(predicate: (value: T, index: number) => boolean,\n                          thisArg?: any): MonoTypeOperatorFunction<T> {\n  return function filterOperatorFunction(source: Observable<T>): Observable<T> {\n    return source.lift(new FilterOperator(predicate, thisArg));\n  };\n}\n\nclass FilterOperator<T> implements Operator<T, T> {\n  constructor(private predicate: (value: T, index: number) => boolean,\n              private thisArg?: any) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new FilterSubscriber(subscriber, this.predicate, this.thisArg));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass FilterSubscriber<T> extends Subscriber<T> {\n\n  count: number = 0;\n\n  constructor(destination: Subscriber<T>,\n              private predicate: (value: T, index: number) => boolean,\n              private thisArg: any) {\n    super(destination);\n  }\n\n  // the try catch block below is left specifically for\n  // optimization and perf reasons. a tryCatcher is not necessary here.\n  protected _next(value: T) {\n    let result: any;\n    try {\n      result = this.predicate.call(this.thisArg, value, this.count++);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    if (result) {\n      this.destination.next(value);\n    }\n  }\n}","import { Scheduler } from '../Scheduler';\nimport { Subscription } from '../Subscription';\n\n/**\n * A unit of work to be executed in a {@link Scheduler}. An action is typically\n * created from within a Scheduler and an RxJS user does not need to concern\n * themselves about creating and manipulating an Action.\n *\n * ```ts\n * class Action<T> extends Subscription {\n *   new (scheduler: Scheduler, work: (state?: T) => void);\n *   schedule(state?: T, delay: number = 0): Subscription;\n * }\n * ```\n *\n * @class Action<T>\n */\nexport class Action<T> extends Subscription {\n  constructor(scheduler: Scheduler, work: (this: Action<T>, state?: T) => void) {\n    super();\n  }\n  /**\n   * Schedules this action on its parent Scheduler for execution. May be passed\n   * some context object, `state`. May happen at some point in the future,\n   * according to the `delay` parameter, if specified.\n   * @param {T} [state] Some contextual data that the `work` function uses when\n   * called by the Scheduler.\n   * @param {number} [delay] Time to wait before executing the work, where the\n   * time unit is implicit and defined by the Scheduler.\n   * @return {void}\n   */\n  public schedule(state?: T, delay: number = 0): Subscription {\n    return this;\n  }\n}\n","import { root } from '../util/root';\nimport { Action } from './Action';\nimport { Subscription } from '../Subscription';\nimport { AsyncScheduler } from './AsyncScheduler';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class AsyncAction<T> extends Action<T> {\n\n  public id: any;\n  public state: T;\n  public delay: number;\n  protected pending: boolean = false;\n\n  constructor(protected scheduler: AsyncScheduler,\n              protected work: (this: AsyncAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n\n    if (this.closed) {\n      return this;\n     }\n\n    // Always replace the current state with the new state.\n    this.state = state;\n\n    // Set the pending flag indicating that this action has been scheduled, or\n    // has recursively rescheduled itself.\n    this.pending = true;\n\n    const id = this.id;\n    const scheduler = this.scheduler;\n\n    //\n    // Important implementation note:\n    //\n    // Actions only execute once by default, unless rescheduled from within the\n    // scheduled callback. This allows us to implement single and repeat\n    // actions via the same code path, without adding API surface area, as well\n    // as mimic traditional recursion but across asynchronous boundaries.\n    //\n    // However, JS runtimes and timers distinguish between intervals achieved by\n    // serial `setTimeout` calls vs. a single `setInterval` call. An interval of\n    // serial `setTimeout` calls can be individually delayed, which delays\n    // scheduling the next `setTimeout`, and so on. `setInterval` attempts to\n    // guarantee the interval callback will be invoked more precisely to the\n    // interval period, regardless of load.\n    //\n    // Therefore, we use `setInterval` to schedule single and repeat actions.\n    // If the action reschedules itself with the same delay, the interval is not\n    // canceled. If the action doesn't reschedule, or reschedules with a\n    // different delay, the interval will be canceled after scheduled callback\n    // execution.\n    //\n    if (id != null) {\n      this.id = this.recycleAsyncId(scheduler, id, delay);\n    }\n\n    this.delay = delay;\n    // If this action has already an async Id, don't request a new one.\n    this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);\n\n    return this;\n  }\n\n  protected requestAsyncId(scheduler: AsyncScheduler, id?: any, delay: number = 0): any {\n    return root.setInterval(scheduler.flush.bind(scheduler, this), delay);\n  }\n\n  protected recycleAsyncId(scheduler: AsyncScheduler, id: any, delay: number = 0): any {\n    // If this action is rescheduled with the same delay time, don't clear the interval id.\n    if (delay !== null && this.delay === delay && this.pending === false) {\n      return id;\n    }\n    // Otherwise, if the action's delay time is different from the current delay,\n    // or the action has been rescheduled before it's executed, clear the interval id\n    return root.clearInterval(id) && undefined || undefined;\n  }\n\n  /**\n   * Immediately executes this action and the `work` it contains.\n   * @return {any}\n   */\n  public execute(state: T, delay: number): any {\n\n    if (this.closed) {\n      return new Error('executing a cancelled action');\n    }\n\n    this.pending = false;\n    const error = this._execute(state, delay);\n    if (error) {\n      return error;\n    } else if (this.pending === false && this.id != null) {\n      // Dequeue if the action didn't reschedule itself. Don't call\n      // unsubscribe(), because the action could reschedule later.\n      // For example:\n      // ```\n      // scheduler.schedule(function doWork(counter) {\n      //   /* ... I'm a busy worker bee ... */\n      //   var originalAction = this;\n      //   /* wait 100ms before rescheduling the action */\n      //   setTimeout(function () {\n      //     originalAction.schedule(counter + 1);\n      //   }, 100);\n      // }, 1000);\n      // ```\n      this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n    }\n  }\n\n  protected _execute(state: T, delay: number): any {\n    let errored: boolean = false;\n    let errorValue: any = undefined;\n    try {\n      this.work(state);\n    } catch (e) {\n      errored = true;\n      errorValue = !!e && e || new Error(e);\n    }\n    if (errored) {\n      this.unsubscribe();\n      return errorValue;\n    }\n  }\n\n  protected _unsubscribe() {\n\n    const id = this.id;\n    const scheduler = this.scheduler;\n    const actions = scheduler.actions;\n    const index = actions.indexOf(this);\n\n    this.work  = null;\n    this.state = null;\n    this.pending = false;\n    this.scheduler = null;\n\n    if (index !== -1) {\n      actions.splice(index, 1);\n    }\n\n    if (id != null) {\n      this.id = this.recycleAsyncId(scheduler, id, null);\n    }\n\n    this.delay = null;\n  }\n}\n","import { Action } from './scheduler/Action';\nimport { Subscription } from './Subscription';\n\nexport interface IScheduler {\n  now(): number;\n  schedule<T>(work: (this: Action<T>, state?: T) => void, delay?: number, state?: T): Subscription;\n}\n/**\n * An execution context and a data structure to order tasks and schedule their\n * execution. Provides a notion of (potentially virtual) time, through the\n * `now()` getter method.\n *\n * Each unit of work in a Scheduler is called an {@link Action}.\n *\n * ```ts\n * class Scheduler {\n *   now(): number;\n *   schedule(work, delay?, state?): Subscription;\n * }\n * ```\n *\n * @class Scheduler\n */\nexport class Scheduler implements IScheduler {\n\n  public static now: () => number = Date.now ? Date.now : () => +new Date();\n\n  constructor(private SchedulerAction: typeof Action,\n              now: () => number = Scheduler.now) {\n    this.now = now;\n  }\n\n  /**\n   * A getter method that returns a number representing the current time\n   * (at the time this function was called) according to the scheduler's own\n   * internal clock.\n   * @return {number} A number that represents the current time. May or may not\n   * have a relation to wall-clock time. May or may not refer to a time unit\n   * (e.g. milliseconds).\n   */\n  public now: () => number;\n\n  /**\n   * Schedules a function, `work`, for execution. May happen at some point in\n   * the future, according to the `delay` parameter, if specified. May be passed\n   * some context object, `state`, which will be passed to the `work` function.\n   *\n   * The given arguments will be processed an stored as an Action object in a\n   * queue of actions.\n   *\n   * @param {function(state: ?T): ?Subscription} work A function representing a\n   * task, or some unit of work to be executed by the Scheduler.\n   * @param {number} [delay] Time to wait before executing the work, where the\n   * time unit is implicit and defined by the Scheduler itself.\n   * @param {T} [state] Some contextual data that the `work` function uses when\n   * called by the Scheduler.\n   * @return {Subscription} A subscription in order to be able to unsubscribe\n   * the scheduled work.\n   */\n  public schedule<T>(work: (this: Action<T>, state?: T) => void, delay: number = 0, state?: T): Subscription {\n    return new this.SchedulerAction<T>(this, work).schedule(state, delay);\n  }\n}\n","import { Scheduler } from '../Scheduler';\nimport { AsyncAction } from './AsyncAction';\n\nexport class AsyncScheduler extends Scheduler {\n  public actions: Array<AsyncAction<any>> = [];\n  /**\n   * A flag to indicate whether the Scheduler is currently executing a batch of\n   * queued actions.\n   * @type {boolean}\n   */\n  public active: boolean = false;\n  /**\n   * An internal ID used to track the latest asynchronous task such as those\n   * coming from `setTimeout`, `setInterval`, `requestAnimationFrame`, and\n   * others.\n   * @type {any}\n   */\n  public scheduled: any = undefined;\n\n  public flush(action: AsyncAction<any>): void {\n\n    const {actions} = this;\n\n    if (this.active) {\n      actions.push(action);\n      return;\n    }\n\n    let error: any;\n    this.active = true;\n\n    do {\n      if (error = action.execute(action.state, action.delay)) {\n        break;\n      }\n    } while (action = actions.shift()); // exhaust the scheduler queue\n\n    this.active = false;\n\n    if (error) {\n      while (action = actions.shift()) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n","import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\n\n/**\n *\n * Async Scheduler\n *\n * <span class=\"informal\">Schedule task as if you used setTimeout(task, duration)</span>\n *\n * `async` scheduler schedules tasks asynchronously, by putting them on the JavaScript\n * event loop queue. It is best used to delay tasks in time or to schedule tasks repeating\n * in intervals.\n *\n * If you just want to \"defer\" task, that is to perform it right after currently\n * executing synchronous code ends (commonly achieved by `setTimeout(deferredTask, 0)`),\n * better choice will be the {@link asap} scheduler.\n *\n * @example <caption>Use async scheduler to delay task</caption>\n * const task = () => console.log('it works!');\n *\n * Rx.Scheduler.async.schedule(task, 2000);\n *\n * // After 2 seconds logs:\n * // \"it works!\"\n *\n *\n * @example <caption>Use async scheduler to repeat task in intervals</caption>\n * function task(state) {\n *   console.log(state);\n *   this.schedule(state + 1, 1000); // `this` references currently executing Action,\n *                                   // which we reschedule with new state and delay\n * }\n *\n * Rx.Scheduler.async.schedule(task, 3000, 0);\n *\n * // Logs:\n * // 0 after 3s\n * // 1 after 4s\n * // 2 after 5s\n * // 3 after 6s\n *\n * @static true\n * @name async\n * @owner Scheduler\n */\n\nexport const async = new AsyncScheduler(AsyncAction);\n","export function isDate(value: any): value is Date {\n  return value instanceof Date && !isNaN(+value);\n}\n","import { Subscriber } from '../Subscriber';\nimport { rxSubscriber as rxSubscriberSymbol } from '../symbol/rxSubscriber';\nimport { PartialObserver, empty as emptyObserver } from '../Observer';\n\nexport function toSubscriber<T>(\n  nextOrObserver?: PartialObserver<T> | ((value: T) => void),\n  error?: (error: any) => void,\n  complete?: () => void): Subscriber<T> {\n\n  if (nextOrObserver) {\n    if (nextOrObserver instanceof Subscriber) {\n      return (<Subscriber<T>> nextOrObserver);\n    }\n\n    if (nextOrObserver[rxSubscriberSymbol]) {\n      return nextOrObserver[rxSubscriberSymbol]();\n    }\n  }\n\n  if (!nextOrObserver && !error && !complete) {\n    return new Subscriber(emptyObserver);\n  }\n\n  return new Subscriber(nextOrObserver, error, complete);\n}\n","import { root } from '../util/root';\n\nexport function getSymbolObservable(context: any) {\n  let $$observable: any;\n  let Symbol = context.Symbol;\n\n  if (typeof Symbol === 'function') {\n    if (Symbol.observable) {\n      $$observable = Symbol.observable;\n    } else {\n        $$observable = Symbol('observable');\n        Symbol.observable = $$observable;\n    }\n  } else {\n    $$observable = '@@observable';\n  }\n\n  return $$observable;\n}\n\nexport const observable = getSymbolObservable(root);\n\n/**\n * @deprecated use observable instead\n */\nexport const $$observable = observable;\n","/* tslint:disable:no-empty */\nexport function noop() { }\n","import { noop } from './noop';\nimport { UnaryFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function pipe<T>(): UnaryFunction<T, T>;\nexport function pipe<T, A>(op1: UnaryFunction<T, A>): UnaryFunction<T, A>;\nexport function pipe<T, A, B>(op1: UnaryFunction<T, A>, op2: UnaryFunction<A, B>): UnaryFunction<T, B>;\nexport function pipe<T, A, B, C>(op1: UnaryFunction<T, A>, op2: UnaryFunction<A, B>, op3: UnaryFunction<B, C>): UnaryFunction<T, C>;\nexport function pipe<T, A, B, C, D>(op1: UnaryFunction<T, A>, op2: UnaryFunction<A, B>, op3: UnaryFunction<B, C>, op4: UnaryFunction<C, D>): UnaryFunction<T, D>;\nexport function pipe<T, A, B, C, D, E>(op1: UnaryFunction<T, A>, op2: UnaryFunction<A, B>, op3: UnaryFunction<B, C>, op4: UnaryFunction<C, D>, op5: UnaryFunction<D, E>): UnaryFunction<T, E>;\nexport function pipe<T, A, B, C, D, E, F>(op1: UnaryFunction<T, A>, op2: UnaryFunction<A, B>, op3: UnaryFunction<B, C>, op4: UnaryFunction<C, D>, op5: UnaryFunction<D, E>, op6: UnaryFunction<E, F>): UnaryFunction<T, F>;\nexport function pipe<T, A, B, C, D, E, F, G>(op1: UnaryFunction<T, A>, op2: UnaryFunction<A, B>, op3: UnaryFunction<B, C>, op4: UnaryFunction<C, D>, op5: UnaryFunction<D, E>, op6: UnaryFunction<E, F>, op7: UnaryFunction<F, G>): UnaryFunction<T, G>;\nexport function pipe<T, A, B, C, D, E, F, G, H>(op1: UnaryFunction<T, A>, op2: UnaryFunction<A, B>, op3: UnaryFunction<B, C>, op4: UnaryFunction<C, D>, op5: UnaryFunction<D, E>, op6: UnaryFunction<E, F>, op7: UnaryFunction<F, G>, op8: UnaryFunction<G, H>): UnaryFunction<T, H>;\nexport function pipe<T, A, B, C, D, E, F, G, H, I>(op1: UnaryFunction<T, A>, op2: UnaryFunction<A, B>, op3: UnaryFunction<B, C>, op4: UnaryFunction<C, D>, op5: UnaryFunction<D, E>, op6: UnaryFunction<E, F>, op7: UnaryFunction<F, G>, op8: UnaryFunction<G, H>, op9: UnaryFunction<H, I>): UnaryFunction<T, I>;\n/* tslint:enable:max-line-length */\n\nexport function pipe<T, R>(...fns: Array<UnaryFunction<T, R>>): UnaryFunction<T, R> {\n  return pipeFromArray(fns);\n}\n\n/* @internal */\nexport function pipeFromArray<T, R>(fns: Array<UnaryFunction<T, R>>): UnaryFunction<T, R> {\n  if (!fns) {\n    return noop as UnaryFunction<any, any>;\n  }\n\n  if (fns.length === 1) {\n    return fns[0];\n  }\n\n  return function piped(input: T): R {\n    return fns.reduce((prev: any, fn: UnaryFunction<T, R>) => fn(prev), input);\n  };\n}\n","import { PartialObserver } from './Observer';\nimport { Operator } from './Operator';\nimport { Subscriber } from './Subscriber';\nimport { Subscription, AnonymousSubscription, TeardownLogic } from './Subscription';\nimport { root } from './util/root';\nimport { toSubscriber } from './util/toSubscriber';\nimport { IfObservable } from './observable/IfObservable';\nimport { ErrorObservable } from './observable/ErrorObservable';\nimport { observable as Symbol_observable } from './symbol/observable';\nimport { OperatorFunction } from './interfaces';\nimport { pipeFromArray } from './util/pipe';\n\nexport interface Subscribable<T> {\n  subscribe(observerOrNext?: PartialObserver<T> | ((value: T) => void),\n            error?: (error: any) => void,\n            complete?: () => void): AnonymousSubscription;\n}\n\nexport type SubscribableOrPromise<T> = Subscribable<T> | PromiseLike<T>;\nexport type ObservableInput<T> = SubscribableOrPromise<T> | ArrayLike<T>;\n\n/**\n * A representation of any set of values over any amount of time. This is the most basic building block\n * of RxJS.\n *\n * @class Observable<T>\n */\nexport class Observable<T> implements Subscribable<T> {\n\n  public _isScalar: boolean = false;\n\n  protected source: Observable<any>;\n  protected operator: Operator<any, T>;\n\n  /**\n   * @constructor\n   * @param {Function} subscribe the function that is called when the Observable is\n   * initially subscribed to. This function is given a Subscriber, to which new values\n   * can be `next`ed, or an `error` method can be called to raise an error, or\n   * `complete` can be called to notify of a successful completion.\n   */\n  constructor(subscribe?: (this: Observable<T>, subscriber: Subscriber<T>) => TeardownLogic) {\n    if (subscribe) {\n      this._subscribe = subscribe;\n    }\n  }\n\n  // HACK: Since TypeScript inherits static properties too, we have to\n  // fight against TypeScript here so Subject can have a different static create signature\n  /**\n   * Creates a new cold Observable by calling the Observable constructor\n   * @static true\n   * @owner Observable\n   * @method create\n   * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\n   * @return {Observable} a new cold observable\n   */\n  static create: Function = <T>(subscribe?: (subscriber: Subscriber<T>) => TeardownLogic) => {\n    return new Observable<T>(subscribe);\n  }\n\n  /**\n   * Creates a new Observable, with this Observable as the source, and the passed\n   * operator defined as the new observable's operator.\n   * @method lift\n   * @param {Operator} operator the operator defining the operation to take on the observable\n   * @return {Observable} a new observable with the Operator applied\n   */\n  lift<R>(operator: Operator<T, R>): Observable<R> {\n    const observable = new Observable<R>();\n    observable.source = this;\n    observable.operator = operator;\n    return observable;\n  }\n\n  subscribe(observer?: PartialObserver<T>): Subscription;\n  subscribe(next?: (value: T) => void, error?: (error: any) => void, complete?: () => void): Subscription;\n  /**\n   * Invokes an execution of an Observable and registers Observer handlers for notifications it will emit.\n   *\n   * <span class=\"informal\">Use it when you have all these Observables, but still nothing is happening.</span>\n   *\n   * `subscribe` is not a regular operator, but a method that calls Observable's internal `subscribe` function. It\n   * might be for example a function that you passed to a {@link create} static factory, but most of the time it is\n   * a library implementation, which defines what and when will be emitted by an Observable. This means that calling\n   * `subscribe` is actually the moment when Observable starts its work, not when it is created, as it is often\n   * thought.\n   *\n   * Apart from starting the execution of an Observable, this method allows you to listen for values\n   * that an Observable emits, as well as for when it completes or errors. You can achieve this in two\n   * following ways.\n   *\n   * The first way is creating an object that implements {@link Observer} interface. It should have methods\n   * defined by that interface, but note that it should be just a regular JavaScript object, which you can create\n   * yourself in any way you want (ES6 class, classic function constructor, object literal etc.). In particular do\n   * not attempt to use any RxJS implementation details to create Observers - you don't need them. Remember also\n   * that your object does not have to implement all methods. If you find yourself creating a method that doesn't\n   * do anything, you can simply omit it. Note however, that if `error` method is not provided, all errors will\n   * be left uncaught.\n   *\n   * The second way is to give up on Observer object altogether and simply provide callback functions in place of its methods.\n   * This means you can provide three functions as arguments to `subscribe`, where first function is equivalent\n   * of a `next` method, second of an `error` method and third of a `complete` method. Just as in case of Observer,\n   * if you do not need to listen for something, you can omit a function, preferably by passing `undefined` or `null`,\n   * since `subscribe` recognizes these functions by where they were placed in function call. When it comes\n   * to `error` function, just as before, if not provided, errors emitted by an Observable will be thrown.\n   *\n   * Whatever style of calling `subscribe` you use, in both cases it returns a Subscription object.\n   * This object allows you to call `unsubscribe` on it, which in turn will stop work that an Observable does and will clean\n   * up all resources that an Observable used. Note that cancelling a subscription will not call `complete` callback\n   * provided to `subscribe` function, which is reserved for a regular completion signal that comes from an Observable.\n   *\n   * Remember that callbacks provided to `subscribe` are not guaranteed to be called asynchronously.\n   * It is an Observable itself that decides when these functions will be called. For example {@link of}\n   * by default emits all its values synchronously. Always check documentation for how given Observable\n   * will behave when subscribed and if its default behavior can be modified with a {@link Scheduler}.\n   *\n   * @example <caption>Subscribe with an Observer</caption>\n   * const sumObserver = {\n   *   sum: 0,\n   *   next(value) {\n   *     console.log('Adding: ' + value);\n   *     this.sum = this.sum + value;\n   *   },\n   *   error() { // We actually could just remove this method,\n   *   },        // since we do not really care about errors right now.\n   *   complete() {\n   *     console.log('Sum equals: ' + this.sum);\n   *   }\n   * };\n   *\n   * Rx.Observable.of(1, 2, 3) // Synchronously emits 1, 2, 3 and then completes.\n   * .subscribe(sumObserver);\n   *\n   * // Logs:\n   * // \"Adding: 1\"\n   * // \"Adding: 2\"\n   * // \"Adding: 3\"\n   * // \"Sum equals: 6\"\n   *\n   *\n   * @example <caption>Subscribe with functions</caption>\n   * let sum = 0;\n   *\n   * Rx.Observable.of(1, 2, 3)\n   * .subscribe(\n   *   function(value) {\n   *     console.log('Adding: ' + value);\n   *     sum = sum + value;\n   *   },\n   *   undefined,\n   *   function() {\n   *     console.log('Sum equals: ' + sum);\n   *   }\n   * );\n   *\n   * // Logs:\n   * // \"Adding: 1\"\n   * // \"Adding: 2\"\n   * // \"Adding: 3\"\n   * // \"Sum equals: 6\"\n   *\n   *\n   * @example <caption>Cancel a subscription</caption>\n   * const subscription = Rx.Observable.interval(1000).subscribe(\n   *   num => console.log(num),\n   *   undefined,\n   *   () => console.log('completed!') // Will not be called, even\n   * );                                // when cancelling subscription\n   *\n   *\n   * setTimeout(() => {\n   *   subscription.unsubscribe();\n   *   console.log('unsubscribed!');\n   * }, 2500);\n   *\n   * // Logs:\n   * // 0 after 1s\n   * // 1 after 2s\n   * // \"unsubscribed!\" after 2.5s\n   *\n   *\n   * @param {Observer|Function} observerOrNext (optional) Either an observer with methods to be called,\n   *  or the first of three possible handlers, which is the handler for each value emitted from the subscribed\n   *  Observable.\n   * @param {Function} error (optional) A handler for a terminal event resulting from an error. If no error handler is provided,\n   *  the error will be thrown as unhandled.\n   * @param {Function} complete (optional) A handler for a terminal event resulting from successful completion.\n   * @return {ISubscription} a subscription reference to the registered handlers\n   * @method subscribe\n   */\n  subscribe(observerOrNext?: PartialObserver<T> | ((value: T) => void),\n            error?: (error: any) => void,\n            complete?: () => void): Subscription {\n\n    const { operator } = this;\n    const sink = toSubscriber(observerOrNext, error, complete);\n\n    if (operator) {\n      operator.call(sink, this.source);\n    } else {\n      sink.add(this.source || !sink.syncErrorThrowable ? this._subscribe(sink) : this._trySubscribe(sink));\n    }\n\n    if (sink.syncErrorThrowable) {\n      sink.syncErrorThrowable = false;\n      if (sink.syncErrorThrown) {\n        throw sink.syncErrorValue;\n      }\n    }\n\n    return sink;\n  }\n\n  protected _trySubscribe(sink: Subscriber<T>): TeardownLogic {\n    try {\n      return this._subscribe(sink);\n    } catch (err) {\n      sink.syncErrorThrown = true;\n      sink.syncErrorValue = err;\n      sink.error(err);\n    }\n  }\n\n  /**\n   * @method forEach\n   * @param {Function} next a handler for each value emitted by the observable\n   * @param {PromiseConstructor} [PromiseCtor] a constructor function used to instantiate the Promise\n   * @return {Promise} a promise that either resolves on observable completion or\n   *  rejects with the handled error\n   */\n  forEach(next: (value: T) => void, PromiseCtor?: typeof Promise): Promise<void> {\n    if (!PromiseCtor) {\n      if (root.Rx && root.Rx.config && root.Rx.config.Promise) {\n        PromiseCtor = root.Rx.config.Promise;\n      } else if (root.Promise) {\n        PromiseCtor = root.Promise;\n      }\n    }\n\n    if (!PromiseCtor) {\n      throw new Error('no Promise impl found');\n    }\n\n    return new PromiseCtor<void>((resolve, reject) => {\n      // Must be declared in a separate statement to avoid a RefernceError when\n      // accessing subscription below in the closure due to Temporal Dead Zone.\n      let subscription: Subscription;\n      subscription = this.subscribe((value) => {\n        if (subscription) {\n          // if there is a subscription, then we can surmise\n          // the next handling is asynchronous. Any errors thrown\n          // need to be rejected explicitly and unsubscribe must be\n          // called manually\n          try {\n            next(value);\n          } catch (err) {\n            reject(err);\n            subscription.unsubscribe();\n          }\n        } else {\n          // if there is NO subscription, then we're getting a nexted\n          // value synchronously during subscription. We can just call it.\n          // If it errors, Observable's `subscribe` will ensure the\n          // unsubscription logic is called, then synchronously rethrow the error.\n          // After that, Promise will trap the error and send it\n          // down the rejection path.\n          next(value);\n        }\n      }, reject, resolve);\n    });\n  }\n\n  protected _subscribe(subscriber: Subscriber<any>): TeardownLogic {\n    return this.source.subscribe(subscriber);\n  }\n\n  // `if` and `throw` are special snow flakes, the compiler sees them as reserved words\n  static if: typeof IfObservable.create;\n  static throw: typeof ErrorObservable.create;\n\n  /**\n   * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n   * @method Symbol.observable\n   * @return {Observable} this instance of the observable\n   */\n  [Symbol_observable]() {\n    return this;\n  }\n\n  /* tslint:disable:max-line-length */\n  pipe(): Observable<T>\n  pipe<A>(op1: OperatorFunction<T, A>): Observable<A>\n  pipe<A, B>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>): Observable<B>\n  pipe<A, B, C>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>): Observable<C>\n  pipe<A, B, C, D>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>): Observable<D>\n  pipe<A, B, C, D, E>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>): Observable<E>\n  pipe<A, B, C, D, E, F>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>): Observable<F>\n  pipe<A, B, C, D, E, F, G>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>): Observable<G>\n  pipe<A, B, C, D, E, F, G, H>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>, op8: OperatorFunction<G, H>): Observable<H>\n  pipe<A, B, C, D, E, F, G, H, I>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>, op8: OperatorFunction<G, H>, op9: OperatorFunction<H, I>): Observable<I>\n  /* tslint:enable:max-line-length */\n\n  /**\n   * Used to stitch together functional operators into a chain.\n   * @method pipe\n   * @return {Observable} the Observable result of all of the operators having\n   * been called in the order they were passed in.\n   *\n   * @example\n   *\n   * import { map, filter, scan } from 'rxjs/operators';\n   *\n   * Rx.Observable.interval(1000)\n   *   .pipe(\n   *     filter(x => x % 2 === 0),\n   *     map(x => x + x),\n   *     scan((acc, x) => acc + x)\n   *   )\n   *   .subscribe(x => console.log(x))\n   */\n  pipe<R>(...operations: OperatorFunction<T, R>[]): Observable<R> {\n    if (operations.length === 0) {\n      return this as any;\n    }\n\n    return pipeFromArray(operations)(this);\n  }\n\n  /* tslint:disable:max-line-length */\n  toPromise<T>(this: Observable<T>): Promise<T>;\n  toPromise<T>(this: Observable<T>, PromiseCtor: typeof Promise): Promise<T>;\n  toPromise<T>(this: Observable<T>, PromiseCtor: PromiseConstructorLike): Promise<T>;\n  /* tslint:enable:max-line-length */\n\n  toPromise(PromiseCtor?: PromiseConstructorLike) {\n    if (!PromiseCtor) {\n      if (root.Rx && root.Rx.config && root.Rx.config.Promise) {\n        PromiseCtor = root.Rx.config.Promise;\n      } else if (root.Promise) {\n        PromiseCtor = root.Promise;\n      }\n    }\n\n    if (!PromiseCtor) {\n      throw new Error('no Promise impl found');\n    }\n\n    return new PromiseCtor((resolve, reject) => {\n      let value: any;\n      this.subscribe((x: T) => value = x, (err: any) => reject(err), () => resolve(value));\n    }) as Promise<T>;\n  }\n}\n","import { PartialObserver } from './Observer';\nimport { Observable } from './Observable';\n\n/**\n * Represents a push-based event or value that an {@link Observable} can emit.\n * This class is particularly useful for operators that manage notifications,\n * like {@link materialize}, {@link dematerialize}, {@link observeOn}, and\n * others. Besides wrapping the actual delivered value, it also annotates it\n * with metadata of, for instance, what type of push message it is (`next`,\n * `error`, or `complete`).\n *\n * @see {@link materialize}\n * @see {@link dematerialize}\n * @see {@link observeOn}\n *\n * @class Notification<T>\n */\nexport class Notification<T> {\n  hasValue: boolean;\n\n  constructor(public kind: string, public value?: T, public error?: any) {\n    this.hasValue = kind === 'N';\n  }\n\n  /**\n   * Delivers to the given `observer` the value wrapped by this Notification.\n   * @param {Observer} observer\n   * @return\n   */\n  observe(observer: PartialObserver<T>): any {\n    switch (this.kind) {\n      case 'N':\n        return observer.next && observer.next(this.value);\n      case 'E':\n        return observer.error && observer.error(this.error);\n      case 'C':\n        return observer.complete && observer.complete();\n    }\n  }\n\n  /**\n   * Given some {@link Observer} callbacks, deliver the value represented by the\n   * current Notification to the correctly corresponding callback.\n   * @param {function(value: T): void} next An Observer `next` callback.\n   * @param {function(err: any): void} [error] An Observer `error` callback.\n   * @param {function(): void} [complete] An Observer `complete` callback.\n   * @return {any}\n   */\n  do(next: (value: T) => void, error?: (err: any) => void, complete?: () => void): any {\n    const kind = this.kind;\n    switch (kind) {\n      case 'N':\n        return next && next(this.value);\n      case 'E':\n        return error && error(this.error);\n      case 'C':\n        return complete && complete();\n    }\n  }\n\n  /**\n   * Takes an Observer or its individual callback functions, and calls `observe`\n   * or `do` methods accordingly.\n   * @param {Observer|function(value: T): void} nextOrObserver An Observer or\n   * the `next` callback.\n   * @param {function(err: any): void} [error] An Observer `error` callback.\n   * @param {function(): void} [complete] An Observer `complete` callback.\n   * @return {any}\n   */\n  accept(nextOrObserver: PartialObserver<T> | ((value: T) => void), error?: (err: any) => void, complete?: () => void) {\n    if (nextOrObserver && typeof (<PartialObserver<T>>nextOrObserver).next === 'function') {\n      return this.observe(<PartialObserver<T>>nextOrObserver);\n    } else {\n      return this.do(<(value: T) => void>nextOrObserver, error, complete);\n    }\n  }\n\n  /**\n   * Returns a simple Observable that just delivers the notification represented\n   * by this Notification instance.\n   * @return {any}\n   */\n  toObservable(): Observable<T> {\n    const kind = this.kind;\n    switch (kind) {\n      case 'N':\n        return Observable.of(this.value);\n      case 'E':\n        return Observable.throw(this.error);\n      case 'C':\n        return Observable.empty<T>();\n    }\n    throw new Error('unexpected notification kind value');\n  }\n\n  private static completeNotification: Notification<any> = new Notification('C');\n  private static undefinedValueNotification: Notification<any> = new Notification('N', undefined);\n\n  /**\n   * A shortcut to create a Notification instance of the type `next` from a\n   * given value.\n   * @param {T} value The `next` value.\n   * @return {Notification<T>} The \"next\" Notification representing the\n   * argument.\n   */\n  static createNext<T>(value: T): Notification<T> {\n    if (typeof value !== 'undefined') {\n      return new Notification('N', value);\n    }\n    return Notification.undefinedValueNotification;\n  }\n\n  /**\n   * A shortcut to create a Notification instance of the type `error` from a\n   * given error.\n   * @param {any} [err] The `error` error.\n   * @return {Notification<T>} The \"error\" Notification representing the\n   * argument.\n   */\n  static createError<T>(err?: any): Notification<T> {\n    return new Notification('E', undefined, err);\n  }\n\n  /**\n   * A shortcut to create a Notification instance of the type `complete`.\n   * @return {Notification<any>} The valueless \"complete\" Notification.\n   */\n  static createComplete(): Notification<any> {\n    return Notification.completeNotification;\n  }\n}\n","import { async } from '../scheduler/async';\nimport { isDate } from '../util/isDate';\nimport { Operator } from '../Operator';\nimport { IScheduler } from '../Scheduler';\nimport { Subscriber } from '../Subscriber';\nimport { Action } from '../scheduler/Action';\nimport { Notification } from '../Notification';\nimport { Observable } from '../Observable';\nimport { PartialObserver } from '../Observer';\nimport { TeardownLogic } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Delays the emission of items from the source Observable by a given timeout or\n * until a given Date.\n *\n * <span class=\"informal\">Time shifts each item by some specified amount of\n * milliseconds.</span>\n *\n * <img src=\"./img/delay.png\" width=\"100%\">\n *\n * If the delay argument is a Number, this operator time shifts the source\n * Observable by that amount of time expressed in milliseconds. The relative\n * time intervals between the values are preserved.\n *\n * If the delay argument is a Date, this operator time shifts the start of the\n * Observable execution until the given date occurs.\n *\n * @example <caption>Delay each click by one second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var delayedClicks = clicks.delay(1000); // each click emitted after 1 second\n * delayedClicks.subscribe(x => console.log(x));\n *\n * @example <caption>Delay all clicks until a future date happens</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var date = new Date('March 15, 2050 12:00:00'); // in the future\n * var delayedClicks = clicks.delay(date); // click emitted only after that date\n * delayedClicks.subscribe(x => console.log(x));\n *\n * @see {@link debounceTime}\n * @see {@link delayWhen}\n *\n * @param {number|Date} delay The delay duration in milliseconds (a `number`) or\n * a `Date` until which the emission of the source items is delayed.\n * @param {Scheduler} [scheduler=async] The IScheduler to use for\n * managing the timers that handle the time-shift for each item.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified timeout or Date.\n * @method delay\n * @owner Observable\n */\nexport function delay<T>(delay: number|Date,\n                         scheduler: IScheduler = async): MonoTypeOperatorFunction<T> {\n  const absoluteDelay = isDate(delay);\n  const delayFor = absoluteDelay ? (+delay - scheduler.now()) : Math.abs(<number>delay);\n  return (source: Observable<T>) => source.lift(new DelayOperator(delayFor, scheduler));\n}\n\nclass DelayOperator<T> implements Operator<T, T> {\n  constructor(private delay: number,\n              private scheduler: IScheduler) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new DelaySubscriber(subscriber, this.delay, this.scheduler));\n  }\n}\n\ninterface DelayState<T> {\n  source: DelaySubscriber<T>;\n  destination: PartialObserver<T>;\n  scheduler: IScheduler;\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DelaySubscriber<T> extends Subscriber<T> {\n  private queue: Array<DelayMessage<T>> = [];\n  private active: boolean = false;\n  private errored: boolean = false;\n\n  private static dispatch<T>(this: Action<DelayState<T>>, state: DelayState<T>): void {\n    const source = state.source;\n    const queue = source.queue;\n    const scheduler = state.scheduler;\n    const destination = state.destination;\n\n    while (queue.length > 0 && (queue[0].time - scheduler.now()) <= 0) {\n      queue.shift().notification.observe(destination);\n    }\n\n    if (queue.length > 0) {\n      const delay = Math.max(0, queue[0].time - scheduler.now());\n      this.schedule(state, delay);\n    } else {\n      source.active = false;\n    }\n  }\n\n  constructor(destination: Subscriber<T>,\n              private delay: number,\n              private scheduler: IScheduler) {\n    super(destination);\n  }\n\n  private _schedule(scheduler: IScheduler): void {\n    this.active = true;\n    this.add(scheduler.schedule<DelayState<T>>(DelaySubscriber.dispatch, this.delay, {\n      source: this, destination: this.destination, scheduler: scheduler\n    }));\n  }\n\n  private scheduleNotification(notification: Notification<T>): void {\n    if (this.errored === true) {\n      return;\n    }\n\n    const scheduler = this.scheduler;\n    const message = new DelayMessage(scheduler.now() + this.delay, notification);\n    this.queue.push(message);\n\n    if (this.active === false) {\n      this._schedule(scheduler);\n    }\n  }\n\n  protected _next(value: T) {\n    this.scheduleNotification(Notification.createNext(value));\n  }\n\n  protected _error(err: any) {\n    this.errored = true;\n    this.queue = [];\n    this.destination.error(err);\n  }\n\n  protected _complete() {\n    this.scheduleNotification(Notification.createComplete());\n  }\n}\n\nclass DelayMessage<T> {\n  constructor(public readonly time: number,\n              public readonly notification: Notification<T>) {\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Applies a given `project` function to each value emitted by the source\n * Observable, and emits the resulting values as an Observable.\n *\n * <span class=\"informal\">Like [Array.prototype.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map),\n * it passes each source value through a transformation function to get\n * corresponding output values.</span>\n *\n * <img src=\"./img/map.png\" width=\"100%\">\n *\n * Similar to the well known `Array.prototype.map` function, this operator\n * applies a projection to each value and emits that projection in the output\n * Observable.\n *\n * @example <caption>Map every click to the clientX position of that click</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var positions = clicks.map(ev => ev.clientX);\n * positions.subscribe(x => console.log(x));\n *\n * @see {@link mapTo}\n * @see {@link pluck}\n *\n * @param {function(value: T, index: number): R} project The function to apply\n * to each `value` emitted by the source Observable. The `index` parameter is\n * the number `i` for the i-th emission that has happened since the\n * subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to define what `this` is in the\n * `project` function.\n * @return {Observable<R>} An Observable that emits the values from the source\n * Observable transformed by the given `project` function.\n * @method map\n * @owner Observable\n */\nexport function map<T, R>(project: (value: T, index: number) => R, thisArg?: any): OperatorFunction<T, R> {\n  return function mapOperation(source: Observable<T>): Observable<R> {\n    if (typeof project !== 'function') {\n      throw new TypeError('argument is not a function. Are you looking for `mapTo()`?');\n    }\n    return source.lift(new MapOperator(project, thisArg));\n  };\n}\n\nexport class MapOperator<T, R> implements Operator<T, R> {\n  constructor(private project: (value: T, index: number) => R, private thisArg: any) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new MapSubscriber(subscriber, this.project, this.thisArg));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass MapSubscriber<T, R> extends Subscriber<T> {\n  count: number = 0;\n  private thisArg: any;\n\n  constructor(destination: Subscriber<R>,\n              private project: (value: T, index: number) => R,\n              thisArg: any) {\n    super(destination);\n    this.thisArg = thisArg || this;\n  }\n\n  // NOTE: This looks unoptimized, but it's actually purposefully NOT\n  // using try/catch optimizations.\n  protected _next(value: T) {\n    let result: any;\n    try {\n      result = this.project.call(this.thisArg, value, this.count++);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function distinctUntilChanged<T>(compare?: (x: T, y: T) => boolean): MonoTypeOperatorFunction<T>;\nexport function distinctUntilChanged<T, K>(compare: (x: K, y: K) => boolean, keySelector: (x: T) => K): MonoTypeOperatorFunction<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from the previous item.\n *\n * If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.\n *\n * If a comparator function is not provided, an equality check is used by default.\n *\n * @example <caption>A simple example with numbers</caption>\n * Observable.of(1, 1, 2, 2, 2, 1, 1, 2, 3, 3, 4)\n *   .distinctUntilChanged()\n *   .subscribe(x => console.log(x)); // 1, 2, 1, 2, 3, 4\n *\n * @example <caption>An example using a compare function</caption>\n * interface Person {\n *    age: number,\n *    name: string\n * }\n *\n * Observable.of<Person>(\n *     { age: 4, name: 'Foo'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo'})\n *     { age: 6, name: 'Foo'})\n *     .distinctUntilChanged((p: Person, q: Person) => p.name === q.name)\n *     .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo' }\n *\n * @see {@link distinct}\n * @see {@link distinctUntilKeyChanged}\n *\n * @param {function} [compare] Optional comparison function called to test if an item is distinct from the previous item in the source.\n * @return {Observable} An Observable that emits items from the source Observable with distinct values.\n * @method distinctUntilChanged\n * @owner Observable\n */\nexport function distinctUntilChanged<T, K>(compare?: (x: K, y: K) => boolean, keySelector?: (x: T) => K): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new DistinctUntilChangedOperator<T, K>(compare, keySelector));\n}\n\nclass DistinctUntilChangedOperator<T, K> implements Operator<T, T> {\n  constructor(private compare: (x: K, y: K) => boolean,\n              private keySelector: (x: T) => K) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new DistinctUntilChangedSubscriber(subscriber, this.compare, this.keySelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DistinctUntilChangedSubscriber<T, K> extends Subscriber<T> {\n  private key: K;\n  private hasKey: boolean = false;\n\n  constructor(destination: Subscriber<T>,\n              compare: (x: K, y: K) => boolean,\n              private keySelector: (x: T) => K) {\n    super(destination);\n    if (typeof compare === 'function') {\n      this.compare = compare;\n    }\n  }\n\n  private compare(x: any, y: any): boolean {\n    return x === y;\n  }\n\n  protected _next(value: T): void {\n\n    const keySelector = this.keySelector;\n    let key: any = value;\n\n    if (keySelector) {\n      key = tryCatch(this.keySelector)(value);\n      if (key === errorObject) {\n        return this.destination.error(errorObject.e);\n      }\n    }\n\n    let result: any = false;\n\n    if (this.hasKey) {\n      result = tryCatch(this.compare)(this.key, key);\n      if (result === errorObject) {\n        return this.destination.error(errorObject.e);\n      }\n    } else {\n      this.hasKey = true;\n    }\n\n    if (Boolean(result) === false) {\n      this.key = key;\n      this.destination.next(value);\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { DashboardWidgetComponent } from './widget/dashboard-widget.component';\nimport { DashboardOptions } from './dashboard.component';\nimport { Subject } from 'rxjs/Subject';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { filter } from 'rxjs/operators/filter';\nimport { delay } from 'rxjs/operators/delay';\nimport { map } from 'rxjs/operators/map';\nimport { distinctUntilChanged } from 'rxjs/operators/distinctUntilChanged';\nimport { Observable } from 'rxjs/Observable';\nexport class DashboardService {\nprivate _dashboard: HTMLElement;\nprivate _widgetOrigin: { column?: number, row?: number, columnSpan?: number, rowSpan?: number };\nprivate _actionWidget: DashboardAction;\nprivate _rowHeight: number = 0;\nprivate _cache: DashboardCache[];\nprivate _mouseEvent: MouseEvent;\n\n    widgets$ = new BehaviorSubject<DashboardWidgetComponent[]>([]);\n    options$ = new BehaviorSubject<DashboardOptions>(defaultOptions);\n    dimensions$ = new BehaviorSubject<DashboardDimensions>({});\n    height$: Observable<number> = this.dimensions$.pipe(delay(0), map((dimensions: DashboardDimensions) => dimensions.height), distinctUntilChanged());\n    placeholder$ = new BehaviorSubject<DashboardPlaceholder>({ visible: false, x: 0, y: 0, width: 0, height: 0 });\n    layout$ = new Subject<DashboardLayoutData[]>();\n    stacked$ = new BehaviorSubject<boolean>(false);\n/**\n * @return {?}\n */\nget options() {\n        return this.options$.getValue();\n    }\n/**\n * @return {?}\n */\nget widgets() {\n        return this.widgets$.getValue();\n    }\n/**\n * @return {?}\n */\nget stacked() {\n        return this.stacked$.getValue();\n    }\n/**\n * @return {?}\n */\nget dimensions() {\n        return this.dimensions$.getValue();\n    }\n/**\n * @return {?}\n */\nget columnWidth() {\n        return this.dimensions.width / this.options.columns;\n    }\nconstructor() {\n        this.layout$.subscribe(this.setLayoutData.bind(this));\n        this.stacked$.pipe(filter(stacked => stacked === true)).subscribe(this.updateWhenStacked.bind(this));\n        this.widgets$.pipe(delay(0)).subscribe(() => this.renderDashboard());\n        this.dimensions$.pipe(delay(0)).subscribe(() => this.renderDashboard());\n    }\n/**\n * Set the dashboard container element\n * @param {?} dashboard The HTMLElement that is the dashboard container\n * @return {?}\n */\nsetDashboard(dashboard: HTMLElement): void {\n        this._dashboard = dashboard;\n    }\n/**\n * Add a widget to the dashboard\n * @param {?} widget The widget component to add to the dashboard\n * @return {?}\n */\naddWidget(widget: DashboardWidgetComponent): void {\n        this.widgets$.next([...this.widgets$.getValue(), widget]);\n    }\n/**\n * Remove a widget from the dashboard\n * @param {?} widget The widget to remove\n * @return {?}\n */\nremoveWidget(widget: DashboardWidgetComponent): void {\n        this.widgets$.next(this.widgets$.getValue().filter(_widget => _widget !== widget));\n    }\n/**\n * Indicate that the dashboard element has been resized\n * @param {?=} width The width of the dashboard element in px\n * @param {?=} height The height of the dashboard element in px\n * @return {?}\n */\nsetDimensions(width: number = this.dimensions.width, height: number = this.dimensions.height): void {\n        if (this.dimensions.width !== width || this.dimensions.height !== height) {\n            this.dimensions$.next({ width: width, height: height });\n        }\n    }\n/**\n * Produce an object containing all the required layout data.\n * This can be useful for exporting/saving a layout\n * @return {?}\n */\ngetLayoutData(): DashboardLayoutData[] {\n        return this.widgets.map(widget => {\n            return { id: widget.id, col: widget.getColumn(), row: widget.getRow(), colSpan: widget.getColumnSpan(), rowSpan: widget.getRowSpan() };\n        });\n    }\n/**\n * Position widgets programatically\n * @param {?} widgets\n * @return {?}\n */\nsetLayoutData(widgets: DashboardLayoutData[]): void {\n\n        // iterate through each widget data and find a match\n        widgets.forEach(widget => {\n\n            // find the matching widget\n            const /** @type {?} */ target = this.widgets.find(_widget => _widget.id === widget.id);\n\n            if (target) {\n                target.setColumn(widget.col);\n                target.setRow(widget.row);\n                target.setColumnSpan(widget.colSpan);\n                target.setRowSpan(widget.rowSpan);\n            }\n        });\n    }\n/**\n * Update the positions and sizes of the widgets\n * @return {?}\n */\nrenderDashboard(): void {\n\n        // get the dimensions of the dashboard\n        this._rowHeight = this.options.rowHeight || this.columnWidth;\n\n        // ensure the column width is not below the min widths\n        this.stacked$.next(this.columnWidth < this.options.minWidth);\n\n        // ensure the row height is not below the min widths\n        if (this._rowHeight < this.options.minWidth) {\n            this._rowHeight = this.options.minWidth;\n        }\n\n        this.setDashboardLayout();\n\n        // iterate through each widget and set the size - except the one being resized\n        this.widgets.filter(widget => !this._actionWidget || widget !== this._actionWidget.widget)\n            .forEach(widget => widget.render());\n    }\n/**\n * Determine where widgets should be positioned based on their positions, width and the size of the container\n * @return {?}\n */\nsetDashboardLayout(): void {\n\n        // find any widgets that do not currently have a position set\n        this.widgets.filter(widget => widget.getColumn() === undefined || widget.getRow() === undefined)\n            .forEach(widget => this.setWidgetPosition(widget));\n\n        this.setDashboardHeight();\n    }\n/**\n * @return {?}\n */\nupdateWhenStacked(): void {\n\n        // iterate through each widget set it's stacked state and\n        this.getWidgetsByOrder().forEach((widget, idx) => {\n            widget.setColumn(0);\n            widget.setRow(idx);\n        });\n\n    }\n/**\n * @return {?}\n */\ngetWidgetsByOrder(): DashboardWidgetComponent[] {\n        return this.widgets.sort((w1, w2) => {\n\n            const /** @type {?} */ w1Position = w1.getColumn() * w1.getRow();\n            const /** @type {?} */ w2Position = w2.getColumn() * w2.getRow();\n\n            if (w1Position < w2Position) {\n                return -1;\n            }\n\n            if (w1Position > w2Position) {\n                return 1;\n            }\n\n            return 0;\n        });\n    }\n/**\n * Find a position that a widget can fit in the dashboard\n * @param {?} widget The widget to try and position\n * @return {?}\n */\nsetWidgetPosition(widget: DashboardWidgetComponent): void {\n\n        // find a position for the widget\n        let /** @type {?} */ position = 0;\n        let /** @type {?} */ success = false;\n\n        // repeat until a space is found\n        while (!success) {\n\n            // get a position to try\n            const /** @type {?} */ column = position % this.options.columns;\n            const /** @type {?} */ row = Math.floor(position / this.options.columns);\n\n            // check the current position\n            if (this.getPositionAvailable(column, row, widget.getColumnSpan(), widget.getRowSpan())) {\n                success = true;\n                widget.setColumn(column);\n                widget.setRow(row);\n                return;\n            }\n\n            if (column === 0 && widget.colSpan > this.options.columns) {\n                throw new Error('Dashboard widgets have a colSpan greater than the max number of dashboard columns!');\n            }\n\n            position++;\n        }\n    }\n/**\n * Check if a position in the dashboard is vacant or not\n * @param {?} column\n * @param {?} row\n * @param {?} columnSpan\n * @param {?} rowSpan\n * @param {?=} ignoreWidget\n * @return {?}\n */\ngetPositionAvailable(column: number, row: number, columnSpan: number, rowSpan: number, ignoreWidget?: DashboardWidgetComponent): boolean {\n\n        // get a list of grid spaces that are populated\n        const /** @type {?} */ spaces = this.getOccupiedSpaces();\n\n        // check if the block would still be in bounds\n        if (column + columnSpan > this.options.columns) {\n            return false;\n        }\n\n        // check each required position\n        for (let /** @type {?} */ x = column; x < column + columnSpan; x++) {\n            for (let /** @type {?} */ y = row; y < row + rowSpan; y++) {\n                if (spaces.find(block => block.column === x && block.row === y && block.widget !== ignoreWidget)) {\n                    return false;\n                }\n            }\n        }\n\n        return true;\n    }\n/**\n * @return {?}\n */\ngetOccupiedSpaces(): DashboardSpace[] {\n\n        // find all spaces that are currently occupied\n        return this.widgets.filter(widget => widget.getColumn() !== undefined && widget.getRow() !== undefined)\n            .reduce((value, widget) => {\n\n                this.forEachBlock(widget, (column, row) => value.push({ widget: widget, column: column, row: row }));\n\n                return value;\n            }, []);\n    }\n/**\n * Begin resizing a widget\n * @param {?} action The the widget to resize\n * @return {?}\n */\nonResizeStart(action: DashboardAction): void {\n\n        // store the mouse event\n        this._mouseEvent = action.event;\n        this._actionWidget = action;\n\n        // bring the widget to the font\n        this.bringToFront(action.widget);\n    }\n/**\n * @param {?} action\n * @return {?}\n */\nonResizeDrag(action: DashboardAction): void {\n\n        // if there was no movement then do nothing\n        if (action.event.x === this._mouseEvent.x && action.event.y === this._mouseEvent.y) {\n            return;\n        }\n\n        // update the stored mouse event\n        this._mouseEvent = action.event;\n\n        // get handle for direction\n        const { handle } = action;\n\n        // get the bounds of the handle\n        const /** @type {?} */ bounds = handle.getBoundingClientRect();\n\n        // get the center of the handle\n        const /** @type {?} */ centerX = bounds.left + (bounds.width / 2);\n        const /** @type {?} */ centerY = bounds.top + (bounds.height / 2);\n\n        // get the current mouse position\n        const /** @type {?} */ mouseX = action.event.x - centerX;\n        const /** @type {?} */ mouseY = action.event.y - centerY;\n\n        // store the new proposed dimensions for the widget\n        const /** @type {?} */ dimensions: DashboardWidgetDimensions = {\n            x: action.widget.x,\n            y: action.widget.y,\n            width: action.widget.width,\n            height: action.widget.height\n        };\n\n        // update widget based on the handle being dragged\n        switch (action.direction) {\n\n            case ActionDirection.Right:\n                dimensions.width += mouseX;\n                break;\n\n            case ActionDirection.Left:\n                dimensions.x += mouseX;\n                dimensions.width -= mouseX;\n\n                if (dimensions.width < this.options.minWidth) {\n                    const /** @type {?} */ difference = this.options.minWidth - dimensions.width;\n                    dimensions.x -= difference;\n                    dimensions.width += difference;\n                }\n\n                break;\n\n            case ActionDirection.Bottom:\n                dimensions.height += mouseY;\n                break;\n\n            case ActionDirection.Top:\n                dimensions.y += mouseY;\n                dimensions.height -= mouseY;\n\n                if (dimensions.height < this.options.minHeight) {\n                    const /** @type {?} */ difference = this.options.minHeight - dimensions.height;\n                    dimensions.y -= difference;\n                    dimensions.height += difference;\n                }\n                break;\n\n            // Support resizing on multiple axis simultaneously\n            case ActionDirection.TopLeft:\n\n                dimensions.x += mouseX;\n                dimensions.width -= mouseX;\n\n                if (dimensions.width < this.options.minWidth) {\n                    const /** @type {?} */ difference = this.options.minWidth - dimensions.width;\n                    dimensions.x -= difference;\n                    dimensions.width += difference;\n                }\n\n                dimensions.y += mouseY;\n                dimensions.height -= mouseY;\n\n                if (dimensions.height < this.options.minHeight) {\n                    const /** @type {?} */ difference = this.options.minHeight - dimensions.height;\n                    dimensions.y -= difference;\n                    dimensions.height += difference;\n                }\n                break;\n\n            case ActionDirection.TopRight:\n                dimensions.width += mouseX;\n                dimensions.y += mouseY;\n                dimensions.height -= mouseY;\n\n                if (dimensions.height < this.options.minHeight) {\n                    const /** @type {?} */ difference = this.options.minHeight - dimensions.height;\n                    dimensions.y -= difference;\n                    dimensions.height += difference;\n                }\n                break;\n\n            case ActionDirection.BottomLeft:\n                dimensions.height += mouseY;\n                dimensions.x += mouseX;\n                dimensions.width -= mouseX;\n\n                if (dimensions.width < this.options.minWidth) {\n                    const /** @type {?} */ difference = this.options.minWidth - dimensions.width;\n                    dimensions.x -= difference;\n                    dimensions.width += difference;\n                }\n                break;\n\n            case ActionDirection.BottomRight:\n                dimensions.height += mouseY;\n                dimensions.width += mouseX;\n                break;\n        }\n\n        const /** @type {?} */ currentWidth = action.widget.x + action.widget.width;\n        const /** @type {?} */ currentHeight = action.widget.y + action.widget.height;\n\n        // ensure values are within the dashboard bounds\n        if (dimensions.x < 0) {\n            dimensions.x = 0;\n            dimensions.width = currentWidth;\n        }\n\n        if (dimensions.y < 0) {\n            dimensions.y = 0;\n            dimensions.height = currentHeight;\n        }\n\n        if ((dimensions.x + dimensions.width) > this.dimensions.width) {\n            dimensions.width = this.dimensions.width - dimensions.x;\n        }\n\n        // if the proposed width is smaller than allowed then reset width to minimum and ignore x changes\n        if (dimensions.width < this.options.minWidth) {\n            dimensions.x = action.widget.x;\n            dimensions.width = this.options.minWidth;\n        }\n\n        // if the proposed height is smaller than allowed then reset height to minimum and ignore y changes\n        if (dimensions.height < this.options.minHeight) {\n            dimensions.y = action.widget.y;\n            dimensions.height = this.options.minHeight;\n        }\n\n        // update the widget actual values\n        action.widget.setBounds(dimensions.x, dimensions.y, dimensions.width, dimensions.height);\n\n        // update placeholder position and value\n        this.setPlaceholderBounds(true, dimensions.x, dimensions.y, dimensions.width, dimensions.height);\n\n        // show the widget positions if the current positions and sizes were to persist\n        this.updateWidgetPositions(action.widget);\n    }\n/**\n * @return {?}\n */\nonResizeEnd(): void {\n\n        const /** @type {?} */ placeholder = this.placeholder$.getValue();\n\n        // commit resize changes\n        this.commitWidgetChanges();\n\n        // hide placeholder\n        placeholder.visible = false;\n\n        // update the placeholder\n        this.placeholder$.next(placeholder);\n\n        this._actionWidget = null;\n        this._mouseEvent = null;\n\n        // ensure any vacant upper spaces are filled where required\n        this.shiftWidgetsUp();\n\n        // update dashboard height\n        this.setDashboardHeight();\n\n        // emit information about the layout\n        this.layout$.next(this.getLayoutData());\n    }\n/**\n * @param {?} action\n * @return {?}\n */\nonDragStart(action: DashboardAction): void {\n        this.onResizeStart(action);\n\n        // store the starting placeholder position\n        this.setWidgetOrigin();\n\n        this.cacheWidgets();\n    }\n/**\n * @return {?}\n */\nonDragEnd(): void {\n        this.onResizeEnd();\n\n        this._widgetOrigin = {};\n    }\n/**\n * @param {?} action\n * @return {?}\n */\nonDrag(action: DashboardAction): void {\n\n        // if there was no movement then do nothing\n        if (action.event.pageX === this._mouseEvent.pageX && action.event.pageY === this._mouseEvent.pageY) {\n            return;\n        }\n\n        // get the current mouse position\n        const /** @type {?} */ mouseX = action.event.pageX - this._mouseEvent.pageX;\n        const /** @type {?} */ mouseY = action.event.pageY - this._mouseEvent.pageY;\n\n        // store the latest event\n        this._mouseEvent = action.event;\n\n        const /** @type {?} */ dimensions: DashboardWidgetDimensions = {\n            x: action.widget.x + mouseX,\n            y: action.widget.y + mouseY,\n            width: action.widget.width,\n            height: action.widget.height\n        };\n\n        this.restoreWidgets(true);\n\n        // update widget position\n        action.widget.setBounds(dimensions.x, dimensions.y, dimensions.width, dimensions.height);\n\n        // update placeholder position and value\n        this.setPlaceholderBounds(true, dimensions.x, dimensions.y, dimensions.width, dimensions.height);\n\n        // show the widget positions if the current positions and sizes were to persist\n        this.shiftWidgets();\n\n        this.setDashboardHeight();\n    }\n/**\n * @return {?}\n */\ngetRowHeight(): number {\n        return this._rowHeight;\n    }\n/**\n * @return {?}\n */\ncacheWidgets(): void {\n        this._cache = this.widgets.map(widget => ({ id: widget.id, column: widget.getColumn(), row: widget.getRow() }));\n    }\n/**\n * @param {?=} ignoreActionWidget\n * @return {?}\n */\nrestoreWidgets(ignoreActionWidget: boolean = false): void {\n        this._cache.filter(widget => !ignoreActionWidget || widget.id !== this._actionWidget.widget.id).forEach(widget => {\n\n            const /** @type {?} */ match = this.widgets.find(wgt => wgt.id === widget.id);\n\n            if (match) {\n                match.setColumn(widget.column);\n                match.setRow(widget.row);\n            }\n        });\n    }\n/**\n * When dragging any widgets that need to be moved should be moved to an appropriate position\n * @return {?}\n */\nshiftWidgets(): void {\n\n        let /** @type {?} */ widgetsToMove: DashboardWidgetComponent[] = [];\n\n        const /** @type {?} */ placeholder = this.placeholder$.getValue();\n\n        // check if there are any widgets under the placeholder\n        for (let /** @type {?} */ row = placeholder.row; row < placeholder.row + placeholder.rowSpan; row++) {\n            for (let /** @type {?} */ column = placeholder.column; column < placeholder.column + placeholder.columnSpan; column++) {\n\n                // store reference to any widgets that need moved\n                this.getOccupiedSpaces()\n                    .filter(space => space.column === column && space.row === row && space.widget !== this._actionWidget.widget)\n                    .forEach(space => widgetsToMove.push(space.widget));\n            }\n        }\n\n        // remove any duplicates\n        widgetsToMove = widgetsToMove.filter((widget, idx, array) => array.indexOf(widget) === idx);\n\n        // if no widgets need moved then we can stop here\n        if (widgetsToMove.length === 0) {\n            return;\n        }\n\n        // create a duplicate we can use to keep track of which have been moved\n        const /** @type {?} */ unmovedWidgets = widgetsToMove.slice();\n\n        // attempt to move any widgets to the previous widget position\n        widgetsToMove.forEach(widget => {\n\n            // get a grid off all occupied spaces - taking into account the placeholder and ignoring widgets that need moved\n            const /** @type {?} */ grid = this.getOccupiedSpaces().filter(space => !unmovedWidgets.find(wgt => wgt === space.widget));\n\n            // iterate each free block\n            for (let /** @type {?} */ row = this._widgetOrigin.row; row < this._widgetOrigin.row + this._widgetOrigin.rowSpan; row++) {\n                for (let /** @type {?} */ column = this._widgetOrigin.column; column < this._widgetOrigin.column + this._widgetOrigin.columnSpan; column++) {\n\n                    // determine if the block can fit in this space\n                    let /** @type {?} */ requiredSpaces = this.getRequiredSpacesFromPoint(widget, column, row);\n\n                    // check if widget would fit in space\n                    let /** @type {?} */ available = requiredSpaces.every(space => {\n                        return !grid.find(gridSpace => gridSpace.column === space.column && gridSpace.row === space.row) && space.column < this.getColumnCount();\n                    });\n\n                    if (available) {\n                        widget.setColumn(column);\n                        widget.setRow(row);\n                        unmovedWidgets.splice(unmovedWidgets.findIndex(wgt => wgt === widget), 1);\n                        return;\n                    }\n                }\n            }\n\n            // if we get to here then we can't simply swap the positions - next try moving right\n            if (this.canWidgetMoveRight(widget, true)) {\n\n                // after the shift check if placeholder position is still valid\n                this.validatePlaceholderPosition(ActionDirection.Right);\n                return;\n            }\n\n            // next try moving left\n            if (this.canWidgetMoveLeft(widget, true)) {\n\n                // after the shift check if placeholder position is still valid\n                this.validatePlaceholderPosition(ActionDirection.Left);\n                return;\n            }\n\n            // determine the distance that the widget needs to be moved down\n            let /** @type {?} */ distance = (this._actionWidget.widget.getRow() - widget.getRow()) + this._actionWidget.widget.getRowSpan();\n\n            // as a last resort move the widget downwards\n            this.moveWidgetDown(widget, distance);\n        });\n    }\n/**\n * After shifts have taken place we should verify the place holder position is still valid\n * @param {?} shiftDirection - the position widgets were shifted\n * @return {?}\n */\nvalidatePlaceholderPosition(shiftDirection: ActionDirection) {\n\n        const /** @type {?} */ placeholder = this.placeholder$.getValue();\n\n        // check if the placeholder is over a widget\n        if (this.getWidgetsAtPosition(placeholder.column, placeholder.row, true).length > 0) {\n\n            // move the placeholder the opposite direction\n            switch (shiftDirection) {\n\n                case ActionDirection.Left:\n                    this.setPlaceholderBounds(placeholder.visible, placeholder.x + this.getColumnWidth(), placeholder.y, placeholder.width, placeholder.height);\n                    break;\n\n                case ActionDirection.Right:\n                    this.setPlaceholderBounds(placeholder.visible, placeholder.x - this.getColumnWidth(), placeholder.y, placeholder.width, placeholder.height);\n                    break;\n            }\n\n            // validate this new position again\n            this.validatePlaceholderPosition(shiftDirection);\n        }\n    }\n/**\n * Determine if a widget can be moved left - or if it can move the widgets to the right to make space for the widget\n * @param {?} widget\n * @param {?=} performMove\n * @return {?}\n */\ncanWidgetMoveLeft(widget: DashboardWidgetComponent, performMove: boolean = false): boolean {\n\n        // check if the widget is the action widget or occupies the first column\n        if (widget === this._actionWidget.widget || widget.getColumn() === 0) {\n            return false;\n        }\n\n        // find the positions required\n        const /** @type {?} */ targetSpaces = this.getOccupiedSpaces().filter(space => space.widget === widget).map(space => {\n            return { column: space.column - widget.getColumnSpan(), row: space.row, widget: space.widget };\n        });\n\n        // check if there are widget in the required positions and if so, can they move right?\n        const /** @type {?} */ moveable = targetSpaces.every(space => this.getWidgetsAtPosition(space.column, space.row).filter(wgt => wgt !== space.widget).every(wgt => this.canWidgetMoveLeft(wgt)));\n\n        if (performMove && moveable) {\n\n            // move all widgets to the right\n            targetSpaces.forEach(space => this.getWidgetsAtPosition(space.column, space.row).filter(wgt => wgt !== space.widget).forEach(wgt => this.canWidgetMoveLeft(wgt, true)));\n\n            // move current widget to the right\n            widget.setColumn(widget.getColumn() - 1);\n        }\n\n        return moveable;\n    }\n/**\n * Determine if a widget can be moved right - or if it can move the widgets to the right to make space for the widget\n * @param {?} widget\n * @param {?=} performMove\n * @return {?}\n */\ncanWidgetMoveRight(widget: DashboardWidgetComponent, performMove: boolean = false): boolean {\n\n        // check if the widget is the dragging widget or the widget occupies the final column\n        if (widget === this._actionWidget.widget || widget.getColumn() + widget.getColumnSpan() === this.options.columns) {\n            return false;\n        }\n\n        // find the positions required\n        const /** @type {?} */ targetSpaces = this.getOccupiedSpaces().filter(space => space.widget === widget).map(space => {\n            return { column: space.column + widget.getColumnSpan(), row: space.row, widget: space.widget };\n        });\n\n        // check if there are widget in the required positions and if so, can they move right?\n        const /** @type {?} */ moveable = targetSpaces.every(space => this.getWidgetsAtPosition(space.column, space.row).filter(wgt => wgt !== space.widget).every(wgt => this.canWidgetMoveRight(wgt)));\n\n        if (performMove && moveable) {\n\n            // move all widgets to the right\n            targetSpaces.forEach(space => this.getWidgetsAtPosition(space.column, space.row).filter(wgt => wgt !== space.widget).forEach(wgt => this.canWidgetMoveRight(wgt, true)));\n\n            // move current widget to the right\n            widget.setColumn(widget.getColumn() + 1);\n        }\n\n        return moveable;\n    }\n/**\n * Store the initial position of the widget being dragged\n * @return {?}\n */\nsetWidgetOrigin(): void {\n        this._widgetOrigin = {\n            column: this._actionWidget.widget.getColumn(),\n            row: this._actionWidget.widget.getRow(),\n            columnSpan: this._actionWidget.widget.getColumnSpan(),\n            rowSpan: this._actionWidget.widget.getRowSpan()\n        };\n    }\n/**\n * Calculate all the required positions is a widget was to be positioned at a particular point\n * @param {?} widget\n * @param {?} column\n * @param {?} row\n * @return {?}\n */\ngetRequiredSpacesFromPoint(widget: DashboardWidgetComponent, column: number, row: number): DashboardSpace[] {\n        const /** @type {?} */ spaces: DashboardSpace[] = [];\n\n        for (let /** @type {?} */ y = row; y < row + widget.getRowSpan(); y++) {\n            for (let /** @type {?} */ x = column; x < column + widget.getColumnSpan(); x++) {\n                spaces.push({ column: x, row: y, widget: widget });\n            }\n        }\n\n        return spaces;\n    }\n/**\n * Position widgets based on the position of the placeholder - this is temporary until confirmed\n * @param {?} widget\n * @return {?}\n */\nupdateWidgetPositions(widget: DashboardWidgetComponent) {\n\n        const /** @type {?} */ placeholder = this.placeholder$.getValue();\n\n        // check all spaces the placeholder will occupy and move any widget currently in them down\n        for (let /** @type {?} */ column = placeholder.column; column < placeholder.column + placeholder.columnSpan; column++) {\n            for (let /** @type {?} */ row = placeholder.row; row < placeholder.row + placeholder.rowSpan; row++) {\n\n                this.getWidgetsAtPosition(column, row, true)\n                    .filter(wgt => wgt !== widget)\n                    .forEach(wgt => this.moveWidgetDown(wgt));\n            }\n        }\n\n        // update the height of the dashboard\n        this.setDashboardHeight();\n\n        // if we arent dragging the top handle then fill spaces\n        if (this._actionWidget.direction !== ActionDirection.Top &&\n            this._actionWidget.direction !== ActionDirection.TopLeft &&\n            this._actionWidget.direction !== ActionDirection.TopRight) {\n            this.shiftWidgetsUp();\n        }\n    }\n/**\n * Determine if a widget is occupying a specific row and column\n * @param {?} column The columns to check if occupied\n * @param {?} row The row to check if occupied\n * @param {?=} ignoreResizing Whether or not to ignore the widget currently being resized\n * @return {?}\n */\ngetWidgetsAtPosition(column: number, row: number, ignoreResizing: boolean = false): DashboardWidgetComponent[] {\n        return this.getOccupiedSpaces()\n            .filter(space => space.column === column && space.row === row)\n            .filter(space => space.widget !== this._actionWidget.widget || !ignoreResizing)\n            .map(space => space.widget);\n    }\n/**\n * Update the placeholder visibility, position and size\n * @param {?} visible\n * @param {?} x\n * @param {?} y\n * @param {?} width\n * @param {?} height\n * @return {?}\n */\nsetPlaceholderBounds(visible: boolean, x: number, y: number, width: number, height: number): void {\n\n        const /** @type {?} */ placeholder = this.placeholder$.getValue();\n\n        const /** @type {?} */ rounding = this._actionWidget.direction === ActionDirection.Left ||\n            this._actionWidget.direction === ActionDirection.Top ? Rounding.RoundDownBelowHalf : Rounding.RoundUpOverHalf;\n\n        placeholder.visible = visible;\n\n        placeholder.column = this.getPlaceholderColumn(x, width);\n        placeholder.row = this.getPlaceholderRow(y, height);\n        placeholder.columnSpan = this.getPlaceholderColumnSpan(width);\n        placeholder.rowSpan = this.getPlaceholderRowSpan(height);\n\n        // calculate the maximum number of rows\n        const /** @type {?} */ rowCount = this.widgets.filter(widget => widget !== this._actionWidget.widget)\n            .reduce((previous, widget) => Math.max(widget.getRow() + widget.getRowSpan(), previous), 0);\n\n        // constrain maximum placeholder row\n        placeholder.row = Math.min(placeholder.row, rowCount);\n\n        placeholder.x = (placeholder.column * this.getColumnWidth()) + this.options.padding;\n        placeholder.y = (placeholder.row * this._rowHeight) + this.options.padding;\n        placeholder.width = (placeholder.columnSpan * this.getColumnWidth()) - (this.options.padding * 2);\n        placeholder.height = (placeholder.rowSpan * this._rowHeight) - (this.options.padding * 2);\n\n        // set the values of the widget to match the values of the placeholder - however do not render the changes\n        this._actionWidget.widget.setColumn(placeholder.column, false);\n        this._actionWidget.widget.setRow(placeholder.row, false);\n        this._actionWidget.widget.setColumnSpan(placeholder.columnSpan, false);\n        this._actionWidget.widget.setRowSpan(placeholder.rowSpan, false);\n\n        // update the placeholder\n        this.placeholder$.next(placeholder);\n    }\n/**\n * Get the placeholder column position\n * @param {?} x\n * @param {?} width\n * @return {?}\n */\ngetPlaceholderColumn(x: number, width: number): number {\n\n        const /** @type {?} */ column = this.getColumnFromPx(x, this._actionWidget.direction === ActionDirection.Move ? Rounding.RoundUpOverHalf : Rounding.RoundDown);\n        const /** @type {?} */ columnSpan = Math.floor(width / this.getColumnWidth());\n        const /** @type {?} */ upperLimit = this.getColumnCount() - columnSpan;\n\n        // if we arent dragging left then just return the column\n        if (this._actionWidget.direction !== ActionDirection.Left &&\n            this._actionWidget.direction !== ActionDirection.TopLeft &&\n            this._actionWidget.direction !== ActionDirection.BottomLeft) {\n            return Math.max(Math.min(column, upperLimit), 0);\n        }\n\n        // get any overflow\n        const /** @type {?} */ overflow = width % this.getColumnWidth();\n\n        return (x <= 0 || overflow === 0 || columnSpan === 0 || overflow > (this.getColumnWidth() / 2)) ?\n            Math.max(Math.min(column, upperLimit), 0) :\n            Math.max(Math.min(column + 1, upperLimit), 0);\n    }\n/**\n * Get the column span of the placeholder\n * @param {?} width\n * @return {?}\n */\ngetPlaceholderColumnSpan(width: number): number {\n\n        const /** @type {?} */ columnSpan = this.getColumnFromPx(width);\n\n        // if we arent dragging right or left then just return the column span\n        if (this._actionWidget.direction !== ActionDirection.Right &&\n            this._actionWidget.direction !== ActionDirection.TopRight &&\n            this._actionWidget.direction !== ActionDirection.BottomRight &&\n            this._actionWidget.direction !== ActionDirection.Left &&\n            this._actionWidget.direction !== ActionDirection.TopLeft &&\n            this._actionWidget.direction !== ActionDirection.BottomLeft) {\n            return Math.max(columnSpan, 1);\n        }\n\n        // get the current column span and any overflow\n        const /** @type {?} */ overflow = width % this.getColumnWidth();\n\n        return (columnSpan > 0 && overflow > (this.getColumnWidth() / 2)) ? Math.max(columnSpan + 1, 1) : Math.max(columnSpan, 1);\n    }\n/**\n * Get the row position of the placeholder\n * @param {?} y\n * @param {?} height\n * @return {?}\n */\ngetPlaceholderRow(y: number, height: number): number {\n\n        const /** @type {?} */ row = this.getRowFromPx(y, this._actionWidget.direction === ActionDirection.Move ? Rounding.RoundUpOverHalf : Rounding.RoundDown);\n        const /** @type {?} */ rowSpan = Math.ceil(height / this._rowHeight);\n\n        // if we arent dragging up then just return the row\n        if (this._actionWidget.direction !== ActionDirection.Top &&\n            this._actionWidget.direction !== ActionDirection.TopLeft &&\n            this._actionWidget.direction !== ActionDirection.TopRight) {\n            return Math.max(row, 0);\n        }\n\n        // get any overflow\n        let /** @type {?} */ overflow = height < this._rowHeight ? 0 : height % this._rowHeight;\n\n        return (y <= 0 || rowSpan === 0 || overflow === 0 || overflow > (this._rowHeight / 2)) ? Math.max(row, 0) : Math.max(row + 1, 0);\n    }\n/**\n * Get the row span of the placeholder\n * @param {?} height\n * @return {?}\n */\ngetPlaceholderRowSpan(height: number): number {\n\n        const /** @type {?} */ rowSpan = this.getRowFromPx(height);\n\n        // if we arent dragging up or down then just return the column span\n        if (this._actionWidget.direction !== ActionDirection.Top &&\n            this._actionWidget.direction !== ActionDirection.TopLeft &&\n            this._actionWidget.direction !== ActionDirection.TopRight &&\n            this._actionWidget.direction !== ActionDirection.Bottom &&\n            this._actionWidget.direction !== ActionDirection.BottomLeft &&\n            this._actionWidget.direction !== ActionDirection.BottomRight) {\n            return Math.max(rowSpan, 1);\n        }\n\n        // get the current column span and any overflow\n        const /** @type {?} */ overflow = height % this._rowHeight;\n\n        return (overflow > (this._rowHeight / 2)) ? Math.max(rowSpan + 1, 1) : Math.max(rowSpan, 1);\n    }\n/**\n * @param {?} x\n * @param {?=} rounding\n * @return {?}\n */\ngetColumnFromPx(x: number, rounding: Rounding = Rounding.RoundDown): number {\n\n        const /** @type {?} */ column = Math.floor(x / Math.floor(this.getColumnWidth()));\n        const /** @type {?} */ overflow = (x % Math.floor(this.getColumnWidth()));\n        const /** @type {?} */ half = this.getColumnWidth() / 2;\n\n        switch (rounding) {\n\n            case Rounding.RoundDown:\n                return column;\n\n            case Rounding.RoundDownBelowHalf:\n                return overflow < half ? column : column + 1;\n\n            case Rounding.RoundUpOverHalf:\n                return overflow > half ? column + 1 : column;\n\n            case Rounding.RoundUp:\n                return overflow > 0 ? column + 1 : column;\n        }\n\n    }\n/**\n * @param {?} y\n * @param {?=} rounding\n * @return {?}\n */\ngetRowFromPx(y: number, rounding: Rounding = Rounding.RoundDown): number {\n\n        const /** @type {?} */ row = Math.floor(y / Math.floor(this._rowHeight));\n        const /** @type {?} */ overflow = (y % Math.floor(this._rowHeight));\n        const /** @type {?} */ half = this._rowHeight / 2;\n\n        switch (rounding) {\n\n            case Rounding.RoundDown:\n                return row;\n\n            case Rounding.RoundDownBelowHalf:\n                return overflow < half ? row : row + 1;\n\n            case Rounding.RoundUpOverHalf:\n                return overflow > half ? row + 1 : row;\n\n            case Rounding.RoundUp:\n                return overflow > 0 ? row + 1 : row;\n        }\n    }\n/**\n * @return {?}\n */\ncommitWidgetChanges(): void {\n\n        const /** @type {?} */ placeholder = this.placeholder$.getValue();\n\n        // check that we have all the values we need\n        if (placeholder.column === undefined || placeholder.row === undefined ||\n            placeholder.columnSpan === undefined || placeholder.rowSpan === undefined) {\n            return;\n        }\n\n        if (this._actionWidget) {\n            this._actionWidget.widget.setColumn(placeholder.column);\n            this._actionWidget.widget.setRow(placeholder.row);\n            this._actionWidget.widget.setColumnSpan(placeholder.columnSpan);\n            this._actionWidget.widget.setRowSpan(placeholder.rowSpan);\n        }\n\n        // reset all placeholder values\n        placeholder.column = undefined;\n        placeholder.row = undefined;\n        placeholder.columnSpan = undefined;\n        placeholder.rowSpan = undefined;\n\n        // emit the new placeholder values\n        this.placeholder$.next(placeholder);\n    }\n/**\n * Get the current column width\n * @return {?}\n */\ngetColumnWidth(): number {\n        return Math.floor(this.columnWidth);\n    }\n/**\n * Calculate the number of rows populated with widgets\n * @return {?}\n */\ngetRowCount(): number {\n        return this.widgets.reduce((previous, widget) => Math.max(widget.getRow() + widget.getRowSpan(), previous), 0);\n    }\n/**\n * Set the height of the dashboard container element\n * @return {?}\n */\nsetDashboardHeight(): void {\n\n        // size the dashboard container to ensure all rows fit\n        let /** @type {?} */ rowCount = this.getRowCount();\n\n        // if we should show an empty row increment the row count by 1\n        if (this.options.emptyRow) {\n            rowCount++;\n        }\n\n        this.setDimensions(undefined, rowCount * this._rowHeight);\n    }\n/**\n * Orders the z-index of all widgets to move the active one to the front\n * @param {?} widget The widget that should be brought to the front\n * @return {?}\n */\nbringToFront(widget: DashboardWidgetComponent): void {\n        this.widgets.forEach(_widget => _widget === widget ? _widget.bringToFront() : _widget.sendToBack());\n    }\n/**\n * Move a widget down - if widgets are in the position below, then move them down further\n * @param {?} widget The widget to move downwards\n * @param {?=} distance\n * @return {?}\n */\nmoveWidgetDown(widget: DashboardWidgetComponent, distance: number = 1): void {\n\n        // move the widget down one position\n        widget.setRow(widget.getRow() + distance);\n\n        // check every space the widget occupies for collisions\n        this.forEachBlock(widget, (column, row) =>\n            this.getWidgetsAtPosition(column, row, true)\n                .filter(wgt => wgt !== widget)\n                .forEach(wgt => this.moveWidgetDown(wgt, distance)));\n    }\n/**\n * Widgets should not be allowed to have a vacant space above them - if there is one they should move upwards to fill it\n * @return {?}\n */\nshiftWidgetsUp(): void {\n\n        // check whether or not changes have been made - if so we need to repeat until stable\n        let /** @type {?} */ stable = true;\n\n        // iterate each widget and \n        this.widgets.forEach(widget => {\n\n            // if widget is already on the top row then do nothing\n            if (widget.getRow() === 0) {\n                return;\n            }\n\n            // if we are currently dragging and this is the dragging widget then skip\n            if (this._actionWidget && this._actionWidget.widget === widget) {\n                return;\n            }\n\n            if (this.getPositionAvailable(widget.getColumn(), widget.getRow() - 1, widget.getColumnSpan(), 1)) {\n                widget.setRow(widget.getRow() - 1);\n                stable = false;\n            }\n        });\n\n        // if changes occurred then we should repeat the process\n        if (!stable) {\n            this.shiftWidgetsUp();\n        }\n    }\n/**\n * Iterate over each space a widget occupied\n * @param {?} widget The widget to determine spaces\n * @param {?} callback The function to be called for each space, should expect a column and row argument witht he context being the widget\n * @return {?}\n */\nforEachBlock(widget: DashboardWidgetComponent, callback: (column: number, row: number) => void): void {\n        for (let /** @type {?} */ row = widget.getRow(); row < widget.getRow() + widget.getRowSpan(); row++) {\n            for (let /** @type {?} */ column = widget.getColumn(); column < widget.getColumn() + widget.getColumnSpan(); column++) {\n                callback.call(widget, column, row);\n            }\n        }\n    }\n/**\n * Returns the number of columns available\n * @return {?}\n */\ngetColumnCount(): number {\n        return this.stacked ? 1 : this.options.columns;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction DashboardService_tsickle_Closure_declarations() {\n/** @type {?} */\nDashboardService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDashboardService.ctorParameters;\n/** @type {?} */\nDashboardService.prototype._dashboard;\n/** @type {?} */\nDashboardService.prototype._widgetOrigin;\n/** @type {?} */\nDashboardService.prototype._actionWidget;\n/** @type {?} */\nDashboardService.prototype._rowHeight;\n/** @type {?} */\nDashboardService.prototype._cache;\n/** @type {?} */\nDashboardService.prototype._mouseEvent;\n/** @type {?} */\nDashboardService.prototype.widgets$;\n/** @type {?} */\nDashboardService.prototype.options$;\n/** @type {?} */\nDashboardService.prototype.dimensions$;\n/** @type {?} */\nDashboardService.prototype.height$;\n/** @type {?} */\nDashboardService.prototype.placeholder$;\n/** @type {?} */\nDashboardService.prototype.layout$;\n/** @type {?} */\nDashboardService.prototype.stacked$;\n}\n\n\nexport const /** @type {?} */ defaultOptions: DashboardOptions = { columns: 5, padding: 5, minWidth: 100, minHeight: 100, emptyRow: true };\n\nexport interface DashboardDimensions {\n    width?: number;\n    height?: number;\n}\n\nexport interface DashboardWidgetDimensions {\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n}\n\nexport interface DashboardAction {\n    widget: DashboardWidgetComponent;\n    direction: ActionDirection;\n    event: MouseEvent;\n    handle?: HTMLElement;\n}\n\nexport interface DashboardSpace {\n    widget: DashboardWidgetComponent;\n    column: number;\n    row: number;\n}\n\nexport interface DashboardPlaceholder {\n    visible: boolean;\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n    column?: number;\n    row?: number;\n    columnSpan?: number;\n    rowSpan?: number;\n}\n\nexport interface DashboardCache {\n    id: string;\n    column: number;\n    row: number;\n}\n\nexport interface DashboardLayoutData {\n    id: string;\n    col: number;\n    row: number;\n    colSpan: number;\n    rowSpan: number;\n}\nexport type ActionDirection = number;\nexport let ActionDirection: any = {};\nActionDirection.Top = 0;\nActionDirection.TopRight = 1;\nActionDirection.Right = 2;\nActionDirection.BottomRight = 3;\nActionDirection.Bottom = 4;\nActionDirection.BottomLeft = 5;\nActionDirection.Left = 6;\nActionDirection.TopLeft = 7;\nActionDirection.Move = 8;\nActionDirection[ActionDirection.Top] = \"Top\";\nActionDirection[ActionDirection.TopRight] = \"TopRight\";\nActionDirection[ActionDirection.Right] = \"Right\";\nActionDirection[ActionDirection.BottomRight] = \"BottomRight\";\nActionDirection[ActionDirection.Bottom] = \"Bottom\";\nActionDirection[ActionDirection.BottomLeft] = \"BottomLeft\";\nActionDirection[ActionDirection.Left] = \"Left\";\nActionDirection[ActionDirection.TopLeft] = \"TopLeft\";\nActionDirection[ActionDirection.Move] = \"Move\";\n\nexport type Rounding = number;\nexport let Rounding: any = {};\nRounding.RoundDown = 0;\nRounding.RoundDownBelowHalf = 1;\nRounding.RoundUp = 2;\nRounding.RoundUpOverHalf = 3;\nRounding[Rounding.RoundDown] = \"RoundDown\";\nRounding[Rounding.RoundDownBelowHalf] = \"RoundDownBelowHalf\";\nRounding[Rounding.RoundUp] = \"RoundUp\";\nRounding[Rounding.RoundUpOverHalf] = \"RoundUpOverHalf\";\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, ElementRef, AfterViewInit, EventEmitter, Output, ViewChild, ChangeDetectionStrategy } from '@angular/core';\nimport { DashboardService, DashboardLayoutData, DashboardPlaceholder, defaultOptions } from './dashboard.service';\nimport { ResizeDimensions } from '../../directives/resize/resize.service';\nexport class DashboardComponent implements AfterViewInit {\n/**\n * @param {?} layout\n * @return {?}\n */\nset layout(layout: DashboardLayoutData[]) {\n        if (layout) {\n            this.dashboardService.layout$.next(layout);\n        }\n    }\n/**\n * @param {?} options\n * @return {?}\n */\nset options(options: DashboardOptions) {\n        this.dashboardService.options$.next({ ...defaultOptions, ...options });\n    }\n    \n     layoutChange = new EventEmitter<DashboardLayoutData[]>();\n\n     dashboardElement: ElementRef;\n/**\n * @param {?} dashboardService\n */\nconstructor(public dashboardService: DashboardService) {\n        dashboardService.layout$.subscribe(layout => this.layoutChange.emit(layout));\n    }\n/**\n * Set the initial dimensions\n * @return {?}\n */\nngAfterViewInit(): void {\n        this.dashboardService.setDashboard(this.dashboardElement.nativeElement);\n        this.dashboardService.setDimensions(this.dashboardElement.nativeElement.offsetWidth, this.dashboardElement.nativeElement.offsetHeight);\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nonResize(event: ResizeDimensions): void {\n        this.dashboardService.setDimensions(event.width, event.height);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-dashboard',\n    template: `\n      <div #dashboard class=\"dashboard-container\" [style.height.px]=\"dashboardService.height$ | async\">\n          <div (uxResize)=\"onResize($event)\" [throttle]=\"16\" class=\"dashboard\">\n              <ng-content></ng-content>\n          </div>\n    \n          <div class=\"position-indicator\" *ngIf=\"(dashboardService.placeholder$ | async).visible\" \n              [style.left.px]=\"(dashboardService.placeholder$ | async).x\" \n              [style.top.px]=\"(dashboardService.placeholder$ | async).y\" \n              [style.width.px]=\"(dashboardService.placeholder$ | async).width\"\n              [style.height.px]=\"(dashboardService.placeholder$ | async).height\"></div>\n      </div>\n    `,\n    providers: [DashboardService],\n    changeDetection: ChangeDetectionStrategy.OnPush\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DashboardService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'layout': [{ type: Input },],\n'options': [{ type: Input },],\n'layoutChange': [{ type: Output },],\n'dashboardElement': [{ type: ViewChild, args: ['dashboard', ] },],\n};\n}\n\nfunction DashboardComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nDashboardComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDashboardComponent.ctorParameters;\n/** @type {?} */\nDashboardComponent.propDecorators;\n/** @type {?} */\nDashboardComponent.prototype.layoutChange;\n/** @type {?} */\nDashboardComponent.prototype.dashboardElement;\n/** @type {?} */\nDashboardComponent.prototype.dashboardService;\n}\n\n\nexport interface DashboardOptions {\n    columns?: number;\n    padding?: number;\n    minWidth?: number;\n    minHeight?: number;\n    rowHeight?: number;\n    emptyRow?: boolean;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, OnInit, OnDestroy, HostBinding, AfterViewInit } from '@angular/core';\nimport { DashboardService, ActionDirection } from '../dashboard.service';\nimport { Subscription } from 'rxjs/Subscription';\nexport class DashboardWidgetComponent implements OnInit, AfterViewInit, OnDestroy {\n\n     id: string;\n     col: number;\n     row: number;\n     colSpan: number = 1;\n     rowSpan: number = 1;\n     resizable: boolean = false;\n\n     x: number = 0;\n     y: number = 0;\n     width: number = 100;\n     height: number = 100;\n     padding: number = 0;\n     zIndex: number = 0;\nprivate _column: StackableValue = { regular: undefined, stacked: undefined };\nprivate _row: StackableValue = { regular: undefined, stacked: undefined };\nprivate _columnSpan: StackableValue = { regular: 1, stacked: 1 };\nprivate _rowSpan: StackableValue = { regular: 1, stacked: 1 };\nprivate _subscription: Subscription;\n/**\n * @param {?} dashboardService\n */\nconstructor(public dashboardService: DashboardService) {\n        this._subscription = dashboardService.options$.subscribe(() => this.update());\n    }\n/**\n * @return {?}\n */\nngOnInit(): void {\n\n        this._columnSpan.regular = this.colSpan;\n        this._rowSpan.regular = this.rowSpan;\n\n        if (!this.id) {\n            console.warn('Dashboard Widget is missing an ID.');\n\n            // set random id - keeps things working but prevents exporting of positions\n            this.id = Math.floor(Math.random() * 100000).toString();\n        }\n    }\n/**\n * @return {?}\n */\nngAfterViewInit(): void {\n        // add the widget to the dashboard\n        this.dashboardService.addWidget(this);\n\n        // apply the current options\n        this.update();\n    }\n/**\n * If component is removed, then unregister it from the service\n * @return {?}\n */\nngOnDestroy(): void {\n        this._subscription.unsubscribe();\n        this.dashboardService.removeWidget(this);\n    }\n/**\n * Apply the current dashboard options\n * @return {?}\n */\nupdate(): void {\n\n        // get the current options at the time \n        const { padding, columns } = this.dashboardService.options;\n\n        this.padding = padding;\n        this._columnSpan.stacked = columns;\n    }\n/**\n * Set the actual position and size values\n * @return {?}\n */\nrender(): void {\n        this.x = this.getColumn() * this.dashboardService.getColumnWidth();\n        this.y = this.getRow() * this.dashboardService.getRowHeight();\n        this.width = this.getColumnSpan() * this.dashboardService.getColumnWidth();\n        this.height = this.getRowSpan() * this.dashboardService.getRowHeight();\n    }\n/**\n * @return {?}\n */\ngetColumn(): number {\n        return this.getStackableValue(this._column);\n    }\n/**\n * @return {?}\n */\ngetRow(): number {\n        return this.getStackableValue(this._row);\n    }\n/**\n * @param {?} column\n * @param {?=} render\n * @return {?}\n */\nsetColumn(column: number, render: boolean = true): void {\n        this.setStackableValue(this._column, column);\n\n        if (render) {\n            this.render();\n        }\n    }\n/**\n * @param {?} row\n * @param {?=} render\n * @return {?}\n */\nsetRow(row: number, render: boolean = true): void {\n        this.setStackableValue(this._row, row);\n\n        if (render) {\n            this.render();\n        }\n    }\n/**\n * @return {?}\n */\ngetColumnSpan(): number {\n        return this.getStackableValue(this._columnSpan);\n    }\n/**\n * @return {?}\n */\ngetRowSpan(): number {\n        return this.getStackableValue(this._rowSpan);\n    }\n/**\n * @param {?} columnSpan\n * @param {?=} render\n * @return {?}\n */\nsetColumnSpan(columnSpan: number, render: boolean = true): void {\n        this.setStackableValue(this._columnSpan, columnSpan);\n\n        if (render) {\n            this.render();\n        }\n    }\n/**\n * @param {?} rowSpan\n * @param {?=} render\n * @return {?}\n */\nsetRowSpan(rowSpan: number, render: boolean = true): void {\n        this.setStackableValue(this._rowSpan, rowSpan);\n\n        if (render) {\n            this.render();\n        }\n    }\n/**\n * @return {?}\n */\nbringToFront(): void {\n        this.zIndex = 1;\n    }\n/**\n * @return {?}\n */\nsendToBack(): void {\n        this.zIndex = 0;\n    }\n/**\n * @param {?} x\n * @param {?} y\n * @param {?} width\n * @param {?} height\n * @return {?}\n */\nsetBounds(x: number, y: number, width: number, height: number): void {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n/**\n * @param {?} handle\n * @param {?} event\n * @param {?} direction\n * @return {?}\n */\ndragstart(handle: HTMLElement, event: MouseEvent, direction: ActionDirection): void {\n        this.dashboardService.onResizeStart({ widget: this, direction: direction, event: event, handle: handle });\n    }\n/**\n * @param {?} handle\n * @param {?} event\n * @param {?} direction\n * @return {?}\n */\ndrag(handle: HTMLElement, event: MouseEvent, direction: ActionDirection): void {\n        this.dashboardService.onResizeDrag({ widget: this, direction: direction, event: event, handle: handle });\n    }\n/**\n * @return {?}\n */\ndragend(): void {\n        this.dashboardService.onResizeEnd();\n    }\n/**\n * Allows automatic setting of stackable value\n * @param {?} property The current StackableValue object\n * @param {?} value The value to set in the appropriate field\n * @return {?}\n */\nprivate setStackableValue(property: StackableValue, value: number): void {\n\n        if (this.dashboardService.stacked) {\n            property.stacked = value;\n        } else {\n            property.regular = value;\n        }\n    }\n/**\n * Return the appropriate value from a stackable value\n * @param {?} property The Stackable value object\n * @return {?}\n */\nprivate getStackableValue(property: StackableValue): number {\n        return this.dashboardService.stacked ? property.stacked : property.regular;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-dashboard-widget',\n    template: `\n      <div class=\"widget-content widget-col-span-{{ getColumnSpan() }} widget-row-span-{{ getRowSpan() }}\">\n          <ng-content></ng-content>\n      </div>\n\n      <div uxDrag #handleTop class=\"resizer-handle handle-top\" \n          (dragstart)=\"dragstart(handleTop, $event, 0)\"\n          (drag)=\"drag(handleTop, $event, 0)\"\n          (dragend)=\"dragend()\"\n          [style.top.px]=\"padding\" \n          [hidden]=\"!resizable\">\n      </div>\n\n      <div uxDrag #handleTopRight class=\"resizer-handle handle-top-right\" \n          (dragstart)=\"dragstart(handleTopRight, $event, 1)\"\n          (drag)=\"drag(handleTopRight, $event, 1)\"\n          (dragend)=\"dragend()\"\n          [style.top.px]=\"padding\" \n          [style.right.px]=\"padding\" \n          [hidden]=\"!resizable && !(dashboardService.stacked$ | async)\">\n      </div>\n\n      <div uxDrag #handleRight class=\"resizer-handle handle-right\" \n          (dragstart)=\"dragstart(handleRight, $event, 2)\"\n          (drag)=\"drag(handleRight, $event, 2)\"\n          (dragend)=\"dragend()\"\n          [style.right.px]=\"padding\" \n          [hidden]=\"!resizable || (dashboardService.stacked$ | async)\">\n      </div>\n\n      <div uxDrag #handleBottomRight class=\"resizer-handle handle-bottom-right\" \n          (dragstart)=\"dragstart(handleBottomRight, $event, 3)\"\n          (drag)=\"drag(handleBottomRight, $event, 3)\"\n          (dragend)=\"dragend()\"\n          [style.bottom.px]=\"padding\" \n          [style.right.px]=\"padding\" \n          [hidden]=\"!resizable && !(dashboardService.stacked$ | async)\">\n      </div>\n\n      <div uxDrag #handleBottom class=\"resizer-handle handle-bottom\" \n          (dragstart)=\"dragstart(handleBottom, $event, 4)\"\n          (drag)=\"drag(handleBottom, $event, 4)\"\n          (dragend)=\"dragend()\"\n          [style.bottom.px]=\"padding\" \n          [hidden]=\"!resizable\">\n      </div>\n\n      <div uxDrag #handleBottomLeft class=\"resizer-handle handle-bottom-left\" \n          (dragstart)=\"dragstart(handleBottomLeft, $event, 5)\"\n          (drag)=\"drag(handleBottomLeft, $event, 5)\"\n          (dragend)=\"dragend()\"\n          [style.bottom.px]=\"padding\" \n          [style.left.px]=\"padding\" \n          [hidden]=\"!resizable && !(dashboardService.stacked$ | async)\">\n      </div>\n\n      <div uxDrag #handleLeft class=\"resizer-handle handle-left\" \n          (dragstart)=\"dragstart(handleLeft, $event, 6)\"\n          (drag)=\"drag(handleLeft, $event, 6)\"\n          (dragend)=\"dragend()\"\n          [style.left.px]=\"padding\" \n          [hidden]=\"!resizable || (dashboardService.stacked$ | async)\">\n      </div>\n\n      <div uxDrag #handleTopLeft class=\"resizer-handle handle-top-left\" \n          (dragstart)=\"dragstart(handleTopLeft, $event, 7)\"\n          (drag)=\"drag(handleTopLeft, $event, 7)\"\n          (dragend)=\"dragend()\"\n          [style.top.px]=\"padding\" \n          [style.left.px]=\"padding\" \n          [hidden]=\"!resizable && !(dashboardService.stacked$ | async)\">\n      </div>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DashboardService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'id': [{ type: Input },],\n'col': [{ type: Input },],\n'row': [{ type: Input },],\n'colSpan': [{ type: Input },],\n'rowSpan': [{ type: Input },],\n'resizable': [{ type: Input },],\n'x': [{ type: HostBinding, args: ['style.left.px', ] },],\n'y': [{ type: HostBinding, args: ['style.top.px', ] },],\n'width': [{ type: HostBinding, args: ['style.width.px', ] },],\n'height': [{ type: HostBinding, args: ['style.height.px', ] },],\n'padding': [{ type: HostBinding, args: ['style.padding.px', ] },],\n'zIndex': [{ type: HostBinding, args: ['style.z-index', ] },],\n};\n}\n\nfunction DashboardWidgetComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nDashboardWidgetComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDashboardWidgetComponent.ctorParameters;\n/** @type {?} */\nDashboardWidgetComponent.propDecorators;\n/** @type {?} */\nDashboardWidgetComponent.prototype.id;\n/** @type {?} */\nDashboardWidgetComponent.prototype.col;\n/** @type {?} */\nDashboardWidgetComponent.prototype.row;\n/** @type {?} */\nDashboardWidgetComponent.prototype.colSpan;\n/** @type {?} */\nDashboardWidgetComponent.prototype.rowSpan;\n/** @type {?} */\nDashboardWidgetComponent.prototype.resizable;\n/** @type {?} */\nDashboardWidgetComponent.prototype.x;\n/** @type {?} */\nDashboardWidgetComponent.prototype.y;\n/** @type {?} */\nDashboardWidgetComponent.prototype.width;\n/** @type {?} */\nDashboardWidgetComponent.prototype.height;\n/** @type {?} */\nDashboardWidgetComponent.prototype.padding;\n/** @type {?} */\nDashboardWidgetComponent.prototype.zIndex;\n/** @type {?} */\nDashboardWidgetComponent.prototype._column;\n/** @type {?} */\nDashboardWidgetComponent.prototype._row;\n/** @type {?} */\nDashboardWidgetComponent.prototype._columnSpan;\n/** @type {?} */\nDashboardWidgetComponent.prototype._rowSpan;\n/** @type {?} */\nDashboardWidgetComponent.prototype._subscription;\n/** @type {?} */\nDashboardWidgetComponent.prototype.dashboardService;\n}\n\n\nexport interface StackableValue {\n    regular: number;\n    stacked: number;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Subscriber } from './Subscriber';\nimport { InnerSubscriber } from './InnerSubscriber';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class OuterSubscriber<T, R> extends Subscriber<T> {\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.destination.next(innerValue);\n  }\n\n  notifyError(error: any, innerSub: InnerSubscriber<T, R>): void {\n    this.destination.error(error);\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, R>): void {\n    this.destination.complete();\n  }\n}\n","export const isArrayLike = (<T>(x: any): x is ArrayLike<T> => x && typeof x.length === 'number');","export function isPromise<T>(value: any | Promise<T>): value is Promise<T> {\n  return value && typeof (<any>value).subscribe !== 'function' && typeof (value as any).then === 'function';\n}\n","import { root } from '../util/root';\n\nexport function symbolIteratorPonyfill(root: any) {\n  const Symbol: any = root.Symbol;\n\n  if (typeof Symbol === 'function') {\n    if (!Symbol.iterator) {\n      Symbol.iterator = Symbol('iterator polyfill');\n    }\n    return Symbol.iterator;\n  } else {\n    // [for Mozilla Gecko 27-35:](https://mzl.la/2ewE1zC)\n    const { Set } = root;\n    if (Set && typeof new Set()['@@iterator'] === 'function') {\n      return '@@iterator';\n    }\n    const { Map } = root;\n    // required for compatability with es6-shim\n    if (Map) {\n      let keys = Object.getOwnPropertyNames(Map.prototype);\n      for (let i = 0; i < keys.length; ++i) {\n        let key = keys[i];\n        // according to spec, Map.prototype[@@iterator] and Map.orototype.entries must be equal.\n        if (key !== 'entries' && key !== 'size' && Map.prototype[key] === Map.prototype['entries']) {\n          return key;\n        }\n      }\n    }\n    return '@@iterator';\n  }\n}\n\nexport const iterator = symbolIteratorPonyfill(root);\n\n/**\n * @deprecated use iterator instead\n */\nexport const $$iterator = iterator;\n","import { Subscriber } from './Subscriber';\nimport { OuterSubscriber } from './OuterSubscriber';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class InnerSubscriber<T, R> extends Subscriber<R> {\n  private index: number = 0;\n\n  constructor(private parent: OuterSubscriber<T, R>, private outerValue: T, private outerIndex: number) {\n    super();\n  }\n\n  protected _next(value: R): void {\n    this.parent.notifyNext(this.outerValue, value, this.outerIndex, this.index++, this);\n  }\n\n  protected _error(error: any): void {\n    this.parent.notifyError(error, this);\n    this.unsubscribe();\n  }\n\n  protected _complete(): void {\n    this.parent.notifyComplete(this);\n    this.unsubscribe();\n  }\n}\n","import { root } from './root';\nimport { isArrayLike } from './isArrayLike';\nimport { isPromise } from './isPromise';\nimport { isObject } from './isObject';\nimport { Subscriber } from '../Subscriber';\nimport { Observable, ObservableInput } from '../Observable';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { Subscription } from '../Subscription';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { observable as Symbol_observable } from '../symbol/observable';\n\nexport function subscribeToResult<T, R>(outerSubscriber: OuterSubscriber<T, R>,\n                                        result: any,\n                                        outerValue?: T,\n                                        outerIndex?: number): Subscription;\nexport function subscribeToResult<T>(outerSubscriber: OuterSubscriber<any, any>,\n                                     result: ObservableInput<T>,\n                                     outerValue?: T,\n                                     outerIndex?: number): Subscription {\n  let destination: Subscriber<any> = new InnerSubscriber(outerSubscriber, outerValue, outerIndex);\n\n  if (destination.closed) {\n    return null;\n  }\n\n  if (result instanceof Observable) {\n    if (result._isScalar) {\n      destination.next((<any>result).value);\n      destination.complete();\n      return null;\n    } else {\n      destination.syncErrorThrowable = true;\n      return result.subscribe(destination);\n    }\n  } else if (isArrayLike(result)) {\n    for (let i = 0, len = result.length; i < len && !destination.closed; i++) {\n      destination.next(result[i]);\n    }\n    if (!destination.closed) {\n      destination.complete();\n    }\n  } else if (isPromise(result)) {\n    result.then(\n      (value) => {\n        if (!destination.closed) {\n          destination.next(<any>value);\n          destination.complete();\n        }\n      },\n      (err: any) => destination.error(err)\n    )\n    .then(null, (err: any) => {\n      // Escaping the Promise trap: globally throw unhandled errors\n      root.setTimeout(() => { throw err; });\n    });\n    return destination;\n  } else if (result && typeof result[Symbol_iterator] === 'function') {\n    const iterator = <any>result[Symbol_iterator]();\n    do {\n      let item = iterator.next();\n      if (item.done) {\n        destination.complete();\n        break;\n      }\n      destination.next(item.value);\n      if (destination.closed) {\n        break;\n      }\n    } while (true);\n  } else if (result && typeof result[Symbol_observable] === 'function') {\n    const obs = result[Symbol_observable]();\n    if (typeof obs.subscribe !== 'function') {\n      destination.error(new TypeError('Provided object does not correctly implement Symbol.observable'));\n    } else {\n      return obs.subscribe(new InnerSubscriber(outerSubscriber, outerValue, outerIndex));\n    }\n  } else {\n    const value = isObject(result) ? 'an invalid object' : `'${result}'`;\n    const msg = `You provided ${value} where a stream was expected.`\n      + ' You can provide an Observable, Promise, Array, or Iterable.';\n    destination.error(new TypeError(msg));\n  }\n  return null;\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { TeardownLogic } from '../Subscription';\n\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Emits the values emitted by the source Observable until a `notifier`\n * Observable emits a value.\n *\n * <span class=\"informal\">Lets values pass until a second Observable,\n * `notifier`, emits something. Then, it completes.</span>\n *\n * <img src=\"./img/takeUntil.png\" width=\"100%\">\n *\n * `takeUntil` subscribes and begins mirroring the source Observable. It also\n * monitors a second Observable, `notifier` that you provide. If the `notifier`\n * emits a value or a complete notification, the output Observable stops\n * mirroring the source Observable and completes.\n *\n * @example <caption>Tick every second until the first click happens</caption>\n * var interval = Rx.Observable.interval(1000);\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = interval.takeUntil(clicks);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link take}\n * @see {@link takeLast}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @param {Observable} notifier The Observable whose first emitted value will\n * cause the output Observable of `takeUntil` to stop emitting values from the\n * source Observable.\n * @return {Observable<T>} An Observable that emits the values from the source\n * Observable until such time as `notifier` emits its first value.\n * @method takeUntil\n * @owner Observable\n */\nexport function takeUntil<T>(notifier: Observable<any>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new TakeUntilOperator(notifier));\n}\n\nclass TakeUntilOperator<T> implements Operator<T, T> {\n  constructor(private notifier: Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new TakeUntilSubscriber(subscriber, this.notifier));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TakeUntilSubscriber<T, R> extends OuterSubscriber<T, R> {\n\n  constructor(destination: Subscriber<any>,\n              private notifier: Observable<any>) {\n    super(destination);\n    this.add(subscribeToResult(this, notifier));\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.complete();\n  }\n\n  notifyComplete(): void {\n    // noop\n  }\n}\n","import { Directive, Output, EventEmitter, ElementRef, NgZone, OnDestroy, Input, HostListener } from '@angular/core';\nimport { fromEvent } from 'rxjs/observable/fromEvent';\nimport { Subscription } from 'rxjs/Subscription';\nimport { takeUntil } from 'rxjs/operators/takeUntil';\nexport class DragDirective implements OnDestroy {\n\n     dragstart = new EventEmitter<MouseEvent>();\n     drag = new EventEmitter<MouseEvent>();\n     dragend = new EventEmitter<void>();\nprivate _subscription: Subscription;\n/**\n * @param {?} elementRef\n * @param {?} ngZone\n */\nconstructor(elementRef: ElementRef, ngZone: NgZone) {\n        const mousedown$ = fromEvent<MouseEvent>(elementRef.nativeElement, 'mousedown');\n        const mousemove$ = fromEvent<MouseEvent>(document, 'mousemove');\n        const mouseup$ = fromEvent<MouseEvent>(document, 'mouseup');\n\n        this._subscription = mousedown$.subscribe(event => {\n            event.preventDefault();\n\n            // emit the drag start event \n            ngZone.run(() => this.dragstart.emit(event));\n\n            mousemove$.pipe(takeUntil<MouseEvent>(mouseup$)).subscribe(moveevent => {\n                moveevent.preventDefault();\n\n                // emit the drag start event \n                ngZone.run(() => this.drag.emit(moveevent));\n            }, null, \n            () => ngZone.run(() => this.dragend.emit()));\n        });\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        this._subscription.unsubscribe();\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{ \n    selector: '[uxDrag]' \n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: NgZone, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'dragstart': [{ type: Output },],\n'drag': [{ type: Output },],\n'dragend': [{ type: Output },],\n};\n}\n\nfunction DragDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nDragDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDragDirective.ctorParameters;\n/** @type {?} */\nDragDirective.propDecorators;\n/** @type {?} */\nDragDirective.prototype.dragstart;\n/** @type {?} */\nDragDirective.prototype.drag;\n/** @type {?} */\nDragDirective.prototype.dragend;\n/** @type {?} */\nDragDirective.prototype._subscription;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, NgZone, ElementRef } from '@angular/core';\n\nimport { DashboardWidgetComponent } from '../widget/dashboard-widget.component';\nimport { DashboardService, ActionDirection } from '../dashboard.service';\nimport { DragDirective } from '../../../directives/drag/drag.directive';\nexport class DashboardDragHandleDirective extends DragDirective {\n/**\n * @param {?} widget\n * @param {?} dashboardService\n * @param {?} elementRef\n * @param {?} ngZone\n */\nconstructor(widget: DashboardWidgetComponent, dashboardService: DashboardService, elementRef: ElementRef, ngZone: NgZone) {\n        super(elementRef, ngZone);\n\n        this.dragstart.subscribe((event: MouseEvent) => dashboardService.onDragStart({ widget: widget, direction: ActionDirection.Move, event: event }));\n        this.drag.subscribe((event: MouseEvent) => dashboardService.onDrag({ widget: widget, direction: ActionDirection.Move, event: event }));\n        this.dragend.subscribe(() => dashboardService.onDragEnd());\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxDashboardWidgetDragHandle], [ux-dashboard-widget-drag-handle]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DashboardWidgetComponent, },\n{type: DashboardService, },\n{type: ElementRef, },\n{type: NgZone, },\n];\n}\n\nfunction DashboardDragHandleDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nDashboardDragHandleDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDashboardDragHandleDirective.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable, Renderer2, RendererFactory2 } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Observable';\nimport'rxjs/add/observable/fromEvent';\nexport class ResizeService {\nprivate _renderer: Renderer2;\n/**\n * @param {?} rendererFactory\n */\nconstructor(rendererFactory: RendererFactory2) {\n        this._renderer = rendererFactory.createRenderer(null, null);\n    }\n/**\n * @param {?} nativeElement\n * @return {?}\n */\naddResizeListener(nativeElement: HTMLElement): Subject<ResizeDimensions> {\n\n        // create subject\n        const /** @type {?} */ subject = new Subject<ResizeDimensions>();\n\n        // determine the style of the element\n        const /** @type {?} */ displayMode = window.getComputedStyle(nativeElement).getPropertyValue('display');\n\n        // create the iframe element\n        const /** @type {?} */ iframe: HTMLIFrameElement = this._renderer.createElement('iframe');\n\n        // style the iframe to be invisible but fill containing element\n        this._renderer.setStyle(iframe, 'position', 'absolute');\n        this._renderer.setStyle(iframe, 'width', '100%');\n        this._renderer.setStyle(iframe, 'height', '100%');\n        this._renderer.setStyle(iframe, 'top', '0');\n        this._renderer.setStyle(iframe, 'right', '0');\n        this._renderer.setStyle(iframe, 'bottom', '0');\n        this._renderer.setStyle(iframe, 'left', '0');\n        this._renderer.setStyle(iframe, 'z-index', '-1');\n        this._renderer.setStyle(iframe, 'opacity', '0');\n        this._renderer.setStyle(iframe, 'border', 'none');\n        this._renderer.setStyle(iframe, 'margin', '0');\n        this._renderer.setStyle(iframe, 'pointer-events', 'none');\n        this._renderer.setStyle(iframe, 'overflow', 'hidden');\n\n        // ensure the iframe ignores any tabbing\n        this._renderer.setAttribute(iframe, 'tabindex', '-1');\n\n        // statically positioned elements need changed to relative for this method to work\n        if (displayMode !== 'relative' && displayMode !== 'absolute' && displayMode !== 'fixed') {\n            this._renderer.setStyle(nativeElement, 'position', 'relative');\n        }\n\n        // add the iframe to the container element\n        this._renderer.appendChild(nativeElement, iframe);\n\n        this.waitUntilReady(iframe, () => {\n            const /** @type {?} */ iframeDoc = iframe.contentDocument || /** @type {?} */(( iframe.contentWindow.document as Document));\n\n            const /** @type {?} */ attachListener = function () {\n                Observable.fromEvent(iframe.contentWindow, 'resize').subscribe((event: ResizeDimensions) => {\n\n                    subject.next({\n                        width: nativeElement.offsetWidth,\n                        height: nativeElement.offsetHeight\n                    });\n                });\n            };\n\n            if (iframeDoc.readyState === 'complete') {\n                attachListener();\n            } else {\n\n                // wait for iframe to load\n                iframe.addEventListener('load', () => attachListener());\n            }\n        });\n\n\n        return subject;\n    }\n/**\n * @param {?} iframe\n * @param {?} callback\n * @return {?}\n */\nprivate waitUntilReady(iframe: HTMLIFrameElement, callback: () => void) {\n        if (iframe.contentDocument || iframe.contentWindow) {\n            callback.call(this);\n        } else {\n            setTimeout(() => this.waitUntilReady(iframe, callback));\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: RendererFactory2, },\n];\n}\n\nfunction ResizeService_tsickle_Closure_declarations() {\n/** @type {?} */\nResizeService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nResizeService.ctorParameters;\n/** @type {?} */\nResizeService.prototype._renderer;\n}\n\n\nexport interface ResizeDimensions {\n    width: number;\n    height: number;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { IScheduler } from '../Scheduler';\nimport { Subscription, TeardownLogic } from '../Subscription';\nimport { async } from '../scheduler/async';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Emits a value from the source Observable only after a particular time span\n * has passed without another source emission.\n *\n * <span class=\"informal\">It's like {@link delay}, but passes only the most\n * recent value from each burst of emissions.</span>\n *\n * <img src=\"./img/debounceTime.png\" width=\"100%\">\n *\n * `debounceTime` delays values emitted by the source Observable, but drops\n * previous pending delayed emissions if a new value arrives on the source\n * Observable. This operator keeps track of the most recent value from the\n * source Observable, and emits that only when `dueTime` enough time has passed\n * without any other value appearing on the source Observable. If a new value\n * appears before `dueTime` silence occurs, the previous value will be dropped\n * and will not be emitted on the output Observable.\n *\n * This is a rate-limiting operator, because it is impossible for more than one\n * value to be emitted in any time window of duration `dueTime`, but it is also\n * a delay-like operator since output emissions do not occur at the same time as\n * they did on the source Observable. Optionally takes a {@link IScheduler} for\n * managing timers.\n *\n * @example <caption>Emit the most recent click after a burst of clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.debounceTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounce}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttleTime}\n *\n * @param {number} dueTime The timeout duration in milliseconds (or the time\n * unit determined internally by the optional `scheduler`) for the window of\n * time required to wait for emission silence before emitting the most recent\n * source value.\n * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for\n * managing the timers that handle the timeout for each value.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified `dueTime`, and may drop some values if they occur\n * too frequently.\n * @method debounceTime\n * @owner Observable\n */\nexport function debounceTime<T>(dueTime: number, scheduler: IScheduler = async): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new DebounceTimeOperator(dueTime, scheduler));\n}\n\nclass DebounceTimeOperator<T> implements Operator<T, T> {\n  constructor(private dueTime: number, private scheduler: IScheduler) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new DebounceTimeSubscriber(subscriber, this.dueTime, this.scheduler));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DebounceTimeSubscriber<T> extends Subscriber<T> {\n  private debouncedSubscription: Subscription = null;\n  private lastValue: T = null;\n  private hasValue: boolean = false;\n\n  constructor(destination: Subscriber<T>,\n              private dueTime: number,\n              private scheduler: IScheduler) {\n    super(destination);\n  }\n\n  protected _next(value: T) {\n    this.clearDebounce();\n    this.lastValue = value;\n    this.hasValue = true;\n    this.add(this.debouncedSubscription = this.scheduler.schedule(dispatchNext, this.dueTime, this));\n  }\n\n  protected _complete() {\n    this.debouncedNext();\n    this.destination.complete();\n  }\n\n  debouncedNext(): void {\n    this.clearDebounce();\n\n    if (this.hasValue) {\n      this.destination.next(this.lastValue);\n      this.lastValue = null;\n      this.hasValue = false;\n    }\n  }\n\n  private clearDebounce(): void {\n    const debouncedSubscription = this.debouncedSubscription;\n\n    if (debouncedSubscription !== null) {\n      this.remove(debouncedSubscription);\n      debouncedSubscription.unsubscribe();\n      this.debouncedSubscription = null;\n    }\n  }\n}\n\nfunction dispatchNext(subscriber: DebounceTimeSubscriber<any>) {\n  subscriber.debouncedNext();\n}\n","import { Directive, Output, EventEmitter, ElementRef, Input, NgZone, OnInit } from '@angular/core';\nimport { ResizeService, ResizeDimensions } from './resize.service';\nimport { debounceTime } from 'rxjs/operators/debounceTime';\nexport class ResizeDirective implements OnInit {\n\n     throttle: number = 0;\n     uxResize: EventEmitter<ResizeDimensions> = new EventEmitter<ResizeDimensions>();\n/**\n * @param {?} _elementRef\n * @param {?} _resizeService\n * @param {?} _ngZone\n */\nconstructor(private _elementRef: ElementRef,\nprivate _resizeService: ResizeService,\nprivate _ngZone: NgZone) { }\n/**\n * @return {?}\n */\nngOnInit(): void {\n        this._resizeService.addResizeListener(this._elementRef.nativeElement)\n            .pipe(debounceTime(this.throttle))\n            .subscribe((event: ResizeDimensions) => this._ngZone.run(() => this.uxResize.emit(event)));\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxResize]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: ResizeService, },\n{type: NgZone, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'throttle': [{ type: Input },],\n'uxResize': [{ type: Output },],\n};\n}\n\nfunction ResizeDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nResizeDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nResizeDirective.ctorParameters;\n/** @type {?} */\nResizeDirective.propDecorators;\n/** @type {?} */\nResizeDirective.prototype.throttle;\n/** @type {?} */\nResizeDirective.prototype.uxResize;\n/** @type {?} */\nResizeDirective.prototype._elementRef;\n/** @type {?} */\nResizeDirective.prototype._resizeService;\n/** @type {?} */\nResizeDirective.prototype._ngZone;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\n\nimport { ResizeDirective } from './resize.directive';\nimport { ResizeService } from './resize.service';\nexport class ResizeModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    exports: [ResizeDirective],\n    declarations: [ResizeDirective],\n    providers: [ResizeService]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ResizeModule_tsickle_Closure_declarations() {\n/** @type {?} */\nResizeModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nResizeModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\n\nimport { DragDirective } from './drag.directive';\nexport class DragModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    exports: [DragDirective],\n    declarations: [DragDirective]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction DragModule_tsickle_Closure_declarations() {\n/** @type {?} */\nDragModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDragModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DashboardComponent } from './dashboard.component';\nimport { DashboardWidgetComponent } from './widget/dashboard-widget.component';\nimport { DashboardService } from './dashboard.service';\nimport { DashboardDragHandleDirective } from './drag-handle/drag-handle.directive';\nimport { ResizeModule } from '../../directives/resize/index';\nimport { DragModule } from '../../directives/drag/index';\n\nconst /** @type {?} */ DECLARATIONS: any[] = [\n    DashboardComponent,\n    DashboardWidgetComponent,\n    DashboardDragHandleDirective\n];\nexport class DashboardModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        ResizeModule,\n        DragModule\n    ],\n    exports: DECLARATIONS,\n    declarations: DECLARATIONS,\n    providers: [DashboardService],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction DashboardModule_tsickle_Closure_declarations() {\n/** @type {?} */\nDashboardModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDashboardModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport { Action } from '../../mini-ngrx/index';\nimport {\n  TimeChangeEvent,\n  TimepickerComponentState,\n  Time\n} from '../timepicker.models';\n\n\nexport class TimepickerActions {\n  static readonly WRITE_VALUE = '[timepicker] write value from ng model';\n  static readonly CHANGE_HOURS = '[timepicker] change hours';\n  static readonly CHANGE_MINUTES = '[timepicker] change minutes';\n  static readonly CHANGE_SECONDS = '[timepicker] change seconds';\n  static readonly SET_TIME_UNIT = '[timepicker] set time unit';\n  static readonly UPDATE_CONTROLS = '[timepicker] update controls';\n\n  writeValue(value: Date | string) {\n    return {\n      type: TimepickerActions.WRITE_VALUE,\n      payload: value\n    };\n  }\n\n  changeHours(event: TimeChangeEvent) {\n    return {\n      type: TimepickerActions.CHANGE_HOURS,\n      payload: event\n    };\n  }\n\n  changeMinutes(event: TimeChangeEvent) {\n    return {\n      type: TimepickerActions.CHANGE_MINUTES,\n      payload: event\n    };\n  }\n\n  changeSeconds(event: TimeChangeEvent): Action {\n    return {\n      type: TimepickerActions.CHANGE_SECONDS,\n      payload: event\n    };\n  }\n\n  setTime(value: Time): Action {\n    return {\n      type: TimepickerActions.SET_TIME_UNIT,\n      payload: value\n    };\n  }\n\n  updateControls(value: TimepickerComponentState): Action {\n    return {\n      type: TimepickerActions.UPDATE_CONTROLS,\n      payload: value\n    };\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Time } from './timepicker.models';\n\nconst dex = 10;\nconst hoursPerDay = 24;\nconst hoursPerDayHalf = 12;\nconst minutesPerHour = 60;\nconst secondsPerMinute = 60;\n\nexport function isValidDate(value?: string | Date): boolean {\n  if (!value) {\n    return false;\n  }\n\n  if (value instanceof Date && isNaN(value.getHours())) {\n    return false;\n  }\n\n  if (typeof value === 'string') {\n    return isValidDate(new Date(value));\n  }\n\n  return true;\n}\n\nexport function toNumber(value: string | number): number {\n  if (typeof value === 'number') {\n    return value;\n  }\n\n  return parseInt(value, dex);\n}\n\nexport function isNumber(value: any): value is number {\n  return !isNaN(toNumber(value));\n}\n\nexport function parseHours(\n  value: string | number,\n  isPM = false\n): number {\n  const hour = toNumber(value);\n  if (\n    isNaN(hour) ||\n    hour < 0 ||\n    hour > (isPM ? hoursPerDayHalf : hoursPerDay)\n  ) {\n    return NaN;\n  }\n\n  return hour;\n}\n\nexport function parseMinutes(value: string | number): number {\n  const minute = toNumber(value);\n  if (isNaN(minute) || minute < 0 || minute > minutesPerHour) {\n    return NaN;\n  }\n\n  return minute;\n}\n\nexport function parseSeconds(value: string | number): number {\n  const seconds = toNumber(value);\n  if (isNaN(seconds) || seconds < 0 || seconds > secondsPerMinute) {\n    return NaN;\n  }\n\n  return seconds;\n}\n\nexport function parseTime(value: string | Date): Date {\n  if (typeof value === 'string') {\n    return new Date(value);\n  }\n\n  return value;\n}\n\nexport function changeTime(value: Date, diff: Time): Date {\n  if (!value) {\n    return changeTime(createDate(new Date(), 0, 0, 0), diff);\n  }\n\n  let hour = value.getHours();\n  let minutes = value.getMinutes();\n  let seconds = value.getSeconds();\n\n  if (diff.hour) {\n    hour = (hour + toNumber(diff.hour)) % hoursPerDay;\n    if (hour < 0) {\n      hour += hoursPerDay;\n    }\n  }\n\n  if (diff.minute) {\n    minutes = minutes + toNumber(diff.minute);\n  }\n\n  if (diff.seconds) {\n    seconds = seconds + toNumber(diff.seconds);\n  }\n\n  return createDate(value, hour, minutes, seconds);\n}\n\nexport function setTime(value: Date, opts: Time): Date {\n  let hour = parseHours(opts.hour);\n  const minute = parseMinutes(opts.minute);\n  const seconds = parseSeconds(opts.seconds) || 0;\n\n  if (opts.isPM) {\n    hour += hoursPerDayHalf;\n  }\n\n  // fixme: unreachable code, value is mandatory\n  if (!value) {\n    if (!isNaN(hour) && !isNaN(minute)) {\n      return createDate(new Date(), hour, minute, seconds);\n    }\n\n    return value;\n  }\n\n  if (isNaN(hour) || isNaN(minute)) {\n    return value;\n  }\n\n  return createDate(value, hour, minute, seconds);\n}\n\nexport function createDate(\n  value: Date,\n  hours: number,\n  minutes: number,\n  seconds: number\n): Date {\n  // fixme: unreachable code, value is mandatory\n  const _value = value || new Date();\n\n  return new Date(\n    _value.getFullYear(),\n    _value.getMonth(),\n    _value.getDate(),\n    hours,\n    minutes,\n    seconds,\n    _value.getMilliseconds()\n  );\n}\n\nexport function padNumber(value: number): string {\n  const _value = value.toString();\n  if (_value.length > 1) {\n    return _value;\n  }\n\n  return `0${_value}`;\n}\n\nexport function isInputValid(\n  hours: string,\n  minutes = '0',\n  seconds = '0',\n  isPM: boolean\n): boolean {\n  return !(isNaN(parseHours(hours, isPM))\n    || isNaN(parseMinutes(minutes))\n    || isNaN(parseSeconds(seconds)));\n}\n","import { changeTime } from './timepicker.utils';\nimport {\n  TimeChangeEvent,\n  TimepickerComponentState,\n  TimepickerControls\n} from './timepicker.models';\n\nexport function canChangeValue(\n  state: TimepickerComponentState,\n  event?: TimeChangeEvent\n): boolean {\n  if (state.readonlyInput) {\n    return false;\n  }\n\n  if (event) {\n    if (event.source === 'wheel' && !state.mousewheel) {\n      return false;\n    }\n\n    if (event.source === 'key' && !state.arrowkeys) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport function canChangeHours(\n  event: TimeChangeEvent,\n  controls: TimepickerControls\n): boolean {\n  if (!event.step) {\n    return false;\n  }\n\n  if (event.step > 0 && !controls.canIncrementHours) {\n    return false;\n  }\n\n  if (event.step < 0 && !controls.canDecrementHours) {\n    return false;\n  }\n\n  return true;\n}\n\nexport function canChangeMinutes(\n  event: TimeChangeEvent,\n  controls: TimepickerControls\n): boolean {\n  if (!event.step) {\n    return false;\n  }\n  if (event.step > 0 && !controls.canIncrementMinutes) {\n    return false;\n  }\n  if (event.step < 0 && !controls.canDecrementMinutes) {\n    return false;\n  }\n\n  return true;\n}\n\nexport function canChangeSeconds(\n  event: TimeChangeEvent,\n  controls: TimepickerControls\n): boolean {\n  if (!event.step) {\n    return false;\n  }\n  if (event.step > 0 && !controls.canIncrementSeconds) {\n    return false;\n  }\n  if (event.step < 0 && !controls.canDecrementSeconds) {\n    return false;\n  }\n\n  return true;\n}\n\nexport function getControlsValue(\n  state: TimepickerComponentState\n): TimepickerComponentState {\n  const {\n    hourStep,\n    minuteStep,\n    secondsStep,\n    readonlyInput,\n    mousewheel,\n    arrowkeys,\n    showSpinners,\n    showMeridian,\n    showSeconds,\n    meridians,\n    min,\n    max\n  } = state;\n\n  return {\n    hourStep,\n    minuteStep,\n    secondsStep,\n    readonlyInput,\n    mousewheel,\n    arrowkeys,\n    showSpinners,\n    showMeridian,\n    showSeconds,\n    meridians,\n    min,\n    max\n  };\n}\n\nexport function timepickerControls(\n  value: Date,\n  state: TimepickerComponentState\n): TimepickerControls {\n  const { min, max, hourStep, minuteStep, secondsStep, showSeconds } = state;\n  const res: TimepickerControls = {\n    canIncrementHours: true,\n    canIncrementMinutes: true,\n    canIncrementSeconds: true,\n\n    canDecrementHours: true,\n    canDecrementMinutes: true,\n    canDecrementSeconds: true\n  };\n\n  if (!value) {\n    return res;\n  }\n\n  // compare dates\n  if (max) {\n    const _newHour = changeTime(value, { hour: hourStep });\n    res.canIncrementHours = max > _newHour;\n\n    if (!res.canIncrementHours) {\n      const _newMinutes = changeTime(value, { minute: minuteStep });\n      res.canIncrementMinutes = showSeconds\n        ? max > _newMinutes\n        : max >= _newMinutes;\n    }\n\n    if (!res.canIncrementMinutes) {\n      const _newSeconds = changeTime(value, { seconds: secondsStep });\n      res.canIncrementSeconds = max >= _newSeconds;\n    }\n  }\n\n  if (min) {\n    const _newHour = changeTime(value, { hour: -hourStep });\n    res.canDecrementHours = min < _newHour;\n\n    if (!res.canDecrementHours) {\n      const _newMinutes = changeTime(value, { minute: -minuteStep });\n      res.canDecrementMinutes = showSeconds\n        ? min < _newMinutes\n        : min <= _newMinutes;\n    }\n\n    if (!res.canDecrementMinutes) {\n      const _newSeconds = changeTime(value, { seconds: -secondsStep });\n      res.canDecrementSeconds = min <= _newSeconds;\n    }\n  }\n\n  return res;\n}\n","import { Injectable } from '@angular/core';\n\n/** Provides default configuration values for timepicker */\n\nexport class TimepickerConfig {\n  /** hours change step */\n  hourStep = 1;\n  /** hours change step */\n  minuteStep = 5;\n  /** seconds changes step */\n  secondsStep = 10;\n  /** if true works in 12H mode and displays AM/PM. If false works in 24H mode and hides AM/PM */\n  showMeridian = true;\n  /** meridian labels based on locale */\n  meridians = ['AM', 'PM'];\n  /** if true hours and minutes fields will be readonly */\n  readonlyInput = false;\n  /** if true scroll inside hours and minutes inputs will change time */\n  mousewheel = true;\n  /** if true up/down arrowkeys inside hours and minutes inputs will change time */\n  arrowkeys = true;\n  /** if true spinner arrows above and below the inputs will be shown */\n  showSpinners = true;\n  /** show seconds in timepicker */\n  showSeconds = false;\n  /** show minutes in timepicker */\n  showMinutes = true;\n  /** minimum time user can select */\n  min: Date;\n  /** maximum time user can select */\n  max: Date;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Action } from '../../mini-ngrx/index';\nimport {\n  canChangeHours,\n  canChangeMinutes,\n  canChangeSeconds,\n  canChangeValue,\n  timepickerControls\n} from '../timepicker-controls.util';\nimport { TimepickerConfig } from '../timepicker.config';\nimport {\n  TimepickerComponentState,\n  TimepickerControls\n} from '../timepicker.models';\nimport { changeTime, setTime } from '../timepicker.utils';\nimport { TimepickerActions } from './timepicker.actions';\n\nexport class TimepickerState {\n  value: Date;\n  config: TimepickerComponentState;\n  controls: TimepickerControls;\n}\n\nexport const initialState: TimepickerState = {\n  value: null,\n  config: new TimepickerConfig(),\n  controls: {\n    canIncrementHours: true,\n    canIncrementMinutes: true,\n    canIncrementSeconds: true,\n\n    canDecrementHours: true,\n    canDecrementMinutes: true,\n    canDecrementSeconds: true\n  }\n};\n\nexport function timepickerReducer(state = initialState, action: Action) {\n  switch (action.type) {\n    case TimepickerActions.WRITE_VALUE: {\n      return Object.assign({}, state, { value: action.payload });\n    }\n\n    case TimepickerActions.CHANGE_HOURS: {\n      if (\n        !canChangeValue(state.config, action.payload) ||\n        !canChangeHours(action.payload, state.controls)\n      ) {\n        return state;\n      }\n\n      const _newTime = changeTime(state.value, { hour: action.payload.step });\n\n      return Object.assign({}, state, { value: _newTime });\n    }\n\n    case TimepickerActions.CHANGE_MINUTES: {\n      if (\n        !canChangeValue(state.config, action.payload) ||\n        !canChangeMinutes(action.payload, state.controls)\n      ) {\n        return state;\n      }\n\n      const _newTime = changeTime(state.value, { minute: action.payload.step });\n\n      return Object.assign({}, state, { value: _newTime });\n    }\n\n    case TimepickerActions.CHANGE_SECONDS: {\n      if (\n        !canChangeValue(state.config, action.payload) ||\n        !canChangeSeconds(action.payload, state.controls)\n      ) {\n        return state;\n      }\n\n      const _newTime = changeTime(state.value, {\n        seconds: action.payload.step\n      });\n\n      return Object.assign({}, state, { value: _newTime });\n    }\n\n    case TimepickerActions.SET_TIME_UNIT: {\n      if (!canChangeValue(state.config)) {\n        return state;\n      }\n\n      const _newTime = setTime(state.value, action.payload);\n\n      return Object.assign({}, state, { value: _newTime });\n    }\n\n    case TimepickerActions.UPDATE_CONTROLS: {\n      const _newControlsState = timepickerControls(state.value, action.payload);\n      const _newState: TimepickerState = {\n        value: state.value,\n        config: action.payload,\n        controls: _newControlsState\n      };\n\n      if (state.config.showMeridian !== _newState.config.showMeridian) {\n        if(state.value){\n          _newState.value = new Date(state.value);\n        }\n      }\n\n      return Object.assign({}, state, _newState);\n    }\n\n    default:\n      return state;\n  }\n}\n","/**\n * @copyright ngrx\n */\nimport { Observable } from 'rxjs/Observable';\nimport { Observer } from 'rxjs/Observer';\nimport { Operator } from 'rxjs/Operator';\nimport { distinctUntilChanged } from 'rxjs/operator/distinctUntilChanged';\n\nimport { map } from 'rxjs/operator/map';\nimport { Action, ActionReducer } from './index';\n\nexport class MiniStore<T> extends Observable<T> implements Observer<Action> {\n  constructor(\n    private _dispatcher: Observer<Action>,\n    private _reducer: ActionReducer<any>,\n    state$: Observable<any>\n  ) {\n    super();\n\n    this.source = state$;\n  }\n\n  select<R>(pathOrMapFn: (state: T) => R): Observable<R> {\n    const mapped$: Observable<R> = map.call(this, pathOrMapFn);\n\n    return distinctUntilChanged.call(mapped$);\n  }\n\n  lift<R>(operator: Operator<T, R>): MiniStore<R> {\n    const store = new MiniStore<R>(this._dispatcher, this._reducer, this);\n    store.operator = operator;\n\n    return store;\n  }\n\n  dispatch(action: Action) {\n    this._dispatcher.next(action);\n  }\n\n  next(action: Action) {\n    this._dispatcher.next(action);\n  }\n\n  error(err: any) {\n    this._dispatcher.error(err);\n  }\n\n  complete() {\n    /*noop*/\n  }\n}\n","import { AsyncAction } from './AsyncAction';\nimport { Subscription } from '../Subscription';\nimport { QueueScheduler } from './QueueScheduler';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class QueueAction<T> extends AsyncAction<T> {\n\n  constructor(protected scheduler: QueueScheduler,\n              protected work: (this: QueueAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n    if (delay > 0) {\n      return super.schedule(state, delay);\n    }\n    this.delay = delay;\n    this.state = state;\n    this.scheduler.flush(this);\n    return this;\n  }\n\n  public execute(state: T, delay: number): any {\n    return (delay > 0 || this.closed) ?\n      super.execute(state, delay) :\n      this._execute(state, delay) ;\n  }\n\n  protected requestAsyncId(scheduler: QueueScheduler, id?: any, delay: number = 0): any {\n    // If delay exists and is greater than 0, or if the delay is null (the\n    // action wasn't rescheduled) but was originally scheduled as an async\n    // action, then recycle as an async action.\n    if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n      return super.requestAsyncId(scheduler, id, delay);\n    }\n    // Otherwise flush the scheduler starting with this action.\n    return scheduler.flush(this);\n  }\n}\n","import { QueueAction } from './QueueAction';\nimport { QueueScheduler } from './QueueScheduler';\n\n/**\n *\n * Queue Scheduler\n *\n * <span class=\"informal\">Put every next task on a queue, instead of executing it immediately</span>\n *\n * `queue` scheduler, when used with delay, behaves the same as {@link async} scheduler.\n *\n * When used without delay, it schedules given task synchronously - executes it right when\n * it is scheduled. However when called recursively, that is when inside the scheduled task,\n * another task is scheduled with queue scheduler, instead of executing immediately as well,\n * that task will be put on a queue and wait for current one to finish.\n *\n * This means that when you execute task with `queue` scheduler, you are sure it will end\n * before any other task scheduled with that scheduler will start.\n *\n * @examples <caption>Schedule recursively first, then do something</caption>\n *\n * Rx.Scheduler.queue.schedule(() => {\n *   Rx.Scheduler.queue.schedule(() => console.log('second')); // will not happen now, but will be put on a queue\n *\n *   console.log('first');\n * });\n *\n * // Logs:\n * // \"first\"\n * // \"second\"\n *\n *\n * @example <caption>Reschedule itself recursively</caption>\n *\n * Rx.Scheduler.queue.schedule(function(state) {\n *   if (state !== 0) {\n *     console.log('before', state);\n *     this.schedule(state - 1); // `this` references currently executing Action,\n *                               // which we reschedule with new state\n *     console.log('after', state);\n *   }\n * }, 0, 3);\n *\n * // In scheduler that runs recursively, you would expect:\n * // \"before\", 3\n * // \"before\", 2\n * // \"before\", 1\n * // \"after\", 1\n * // \"after\", 2\n * // \"after\", 3\n *\n * // But with queue it logs:\n * // \"before\", 3\n * // \"after\", 3\n * // \"before\", 2\n * // \"after\", 2\n * // \"before\", 1\n * // \"after\", 1\n *\n *\n * @static true\n * @name queue\n * @owner Scheduler\n */\n\nexport const queue = new QueueScheduler(QueueAction);\n","import { AsyncScheduler } from './AsyncScheduler';\n\nexport class QueueScheduler extends AsyncScheduler {\n}\n","/**\n * @copyright ngrx\n */\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Observable } from 'rxjs/Observable';\nimport { Action, ActionReducer } from './index';\nimport { observeOn } from 'rxjs/operator/observeOn';\nimport { queue } from 'rxjs/scheduler/queue';\nimport { scan } from 'rxjs/operator/scan';\n\nexport class MiniState<T> extends BehaviorSubject<T> {\n  constructor(\n    _initialState: T,\n    actionsDispatcher$: Observable<Action>,\n    reducer: ActionReducer<T>\n  ) {\n    super(_initialState);\n\n    const actionInQueue$ = observeOn.call(actionsDispatcher$, queue);\n    const state$ = scan.call(\n      actionInQueue$,\n      (state: T, action: Action) => {\n        if (!action) {\n          return state;\n        }\n\n        return reducer(state, action);\n      },\n      _initialState\n    );\n\n    state$.subscribe((value: T) => this.next(value));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  timepickerReducer,\n  TimepickerState,\n  initialState\n} from './timepicker.reducer';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\n\nimport { Action } from '../../mini-ngrx/index';\nimport { MiniStore } from '../../mini-ngrx/store.class';\nimport { MiniState } from '../../mini-ngrx/state.class';\n\n\nexport class TimepickerStore extends MiniStore<TimepickerState> {\n  constructor() {\n    const _dispatcher = new BehaviorSubject<Action>({\n      type: '[mini-ngrx] dispatcher init'\n    });\n    const state = new MiniState<TimepickerState>(\n      initialState,\n      _dispatcher,\n      timepickerReducer\n    );\n    super(_dispatcher, timepickerReducer, state);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/* tslint:disable:no-forward-ref max-file-line-count */\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  forwardRef,\n  Input,\n  OnChanges,\n  Output,\n  SimpleChanges, ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { TimepickerActions } from './reducer/timepicker.actions';\nimport { TimepickerStore } from './reducer/timepicker.store';\nimport { getControlsValue } from './timepicker-controls.util';\nimport { TimepickerConfig } from './timepicker.config';\nimport {\n  TimeChangeSource,\n  TimepickerComponentState,\n  TimepickerControls\n} from './timepicker.models';\nimport {\n  isValidDate,\n  padNumber,\n  parseTime,\n  isInputValid, parseSeconds\n} from './timepicker.utils';\nimport { fakeAsync } from '@angular/core/testing';\n\nexport const TIMEPICKER_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  // tslint:disable-next-line\n  useExisting: forwardRef(() => TimepickerComponent),\n  multi: true\n};\n\n\nexport class TimepickerComponent\n  implements ControlValueAccessor,\n    TimepickerComponentState,\n    TimepickerControls,\n    OnChanges {\n  /** hours change step */\n   hourStep: number;\n  /** hours change step */\n   minuteStep: number;\n  /** seconds change step */\n   secondsStep: number;\n  /** if true hours and minutes fields will be readonly */\n   readonlyInput: boolean;\n  /** if true scroll inside hours and minutes inputs will change time */\n   mousewheel: boolean;\n  /** if true up/down arrowkeys inside hours and minutes inputs will change time */\n   arrowkeys: boolean;\n  /** if true spinner arrows above and below the inputs will be shown */\n   showSpinners: boolean;\n  /** if true meridian button will be shown */\n   showMeridian: boolean;\n  /** show minutes in timepicker */\n   showMinutes: boolean;\n  /** show seconds in timepicker */\n   showSeconds: boolean;\n  /** meridian labels based on locale */\n   meridians: string[];\n  /** minimum time user can select */\n   min: Date;\n  /** maximum time user can select */\n   max: Date;\n\n  /** emits true if value is a valid date */\n   isValid: EventEmitter<boolean> = new EventEmitter();\n\n  // ui variables\n  hours: string;\n  minutes: string;\n  seconds: string;\n  meridian: string;\n\n  get isSpinnersVisible(): boolean {\n    return this.showSpinners && !this.readonlyInput;\n  }\n\n  // min\\max validation for input fields\n  invalidHours = false;\n  invalidMinutes = false;\n  invalidSeconds = false;\n\n  // time picker controls state\n  canIncrementHours: boolean;\n  canIncrementMinutes: boolean;\n  canIncrementSeconds: boolean;\n\n  canDecrementHours: boolean;\n  canDecrementMinutes: boolean;\n  canDecrementSeconds: boolean;\n\n  // control value accessor methods\n  onChange: any = Function.prototype;\n  onTouched: any = Function.prototype;\n\n  constructor(\n    _config: TimepickerConfig,\n    _cd: ChangeDetectorRef,\n    private _store: TimepickerStore,\n    private _timepickerActions: TimepickerActions\n  ) {\n    Object.assign(this, _config);\n    // todo: add unsubscribe\n    _store.select(state => state.value).subscribe(value => {\n      // update UI values if date changed\n      this._renderTime(value);\n      this.onChange(value);\n\n      this._store.dispatch(\n        this._timepickerActions.updateControls(getControlsValue(this))\n      );\n    });\n\n    _store.select(state => state.controls).subscribe(controlsState => {\n      this.isValid.emit(\n        isInputValid(this.hours, this.minutes, this.seconds, this.isPM())\n      );\n      Object.assign(this, controlsState);\n      _cd.markForCheck();\n    });\n  }\n\n  isPM(): boolean {\n    return this.showMeridian && this.meridian === this.meridians[1];\n  }\n\n  prevDef($event: any) {\n    $event.preventDefault();\n  }\n\n  wheelSign($event: any): number {\n    return Math.sign($event.deltaY as number) * -1;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this._store.dispatch(\n      this._timepickerActions.updateControls(getControlsValue(this))\n    );\n  }\n\n  changeHours(step: number, source: TimeChangeSource = ''): void {\n    this._store.dispatch(this._timepickerActions.changeHours({ step, source }));\n  }\n\n  changeMinutes(step: number, source: TimeChangeSource = ''): void {\n    this._store.dispatch(\n      this._timepickerActions.changeMinutes({ step, source })\n    );\n  }\n\n  changeSeconds(step: number, source: TimeChangeSource = ''): void {\n    this._store.dispatch(\n      this._timepickerActions.changeSeconds({ step, source })\n    );\n  }\n\n  updateHours(hours: string): void {\n    this.hours = hours;\n    this._updateTime();\n  }\n\n  updateMinutes(minutes: string) {\n    this.minutes = minutes;\n    this._updateTime();\n  }\n\n  updateSeconds(seconds: string) {\n    this.seconds = seconds;\n    this._updateTime();\n  }\n\n  _updateTime() {\n    const _seconds = this.showSeconds ? this.seconds : void 0;\n    const _minutes = this.showMinutes ? this.minutes : void 0;\n    if (!isInputValid(this.hours, _minutes, _seconds, this.isPM())) {\n      this.isValid.emit(false);\n      this.onChange(null);\n\n      return;\n    }\n    this._store.dispatch(\n      this._timepickerActions.setTime({\n        hour: this.hours,\n        minute: this.minutes,\n        seconds: this.seconds,\n        isPM: this.isPM()\n      })\n    );\n  }\n\n  toggleMeridian(): void {\n    if (!this.showMeridian || this.readonlyInput) {\n      return;\n    }\n\n    const _hoursPerDayHalf = 12;\n    this._store.dispatch(\n      this._timepickerActions.changeHours({\n        step: _hoursPerDayHalf,\n        source: ''\n      })\n    );\n  }\n\n  /**\n   * Write a new value to the element.\n   */\n  writeValue(obj: any): void {\n    if (isValidDate(obj)) {\n      this._store.dispatch(this._timepickerActions.writeValue(parseTime(obj)));\n    } else if (obj == null) {\n      this._store.dispatch(this._timepickerActions.writeValue(null));\n    }\n  }\n\n  /**\n   * Set the function to be called when the control receives a change event.\n   */\n  registerOnChange(fn: (_: any) => {}): void {\n    this.onChange = fn;\n  }\n\n  /**\n   * Set the function to be called when the control receives a touch event.\n   */\n  registerOnTouched(fn: () => {}): void {\n    this.onTouched = fn;\n  }\n\n  /**\n   * This function is called when the control status changes to or from \"DISABLED\".\n   * Depending on the value, it will enable or disable the appropriate DOM element.\n   *\n   * @param isDisabled\n   */\n  setDisabledState(isDisabled: boolean): void {\n    this.readonlyInput = isDisabled;\n  }\n\n  private _renderTime(value: string | Date): void {\n    if (!isValidDate(value)) {\n      this.hours = '';\n      this.minutes = '';\n      this.seconds = '';\n      this.meridian = this.meridians[0];\n\n      return;\n    }\n\n    const _value = parseTime(value);\n    const _hoursPerDayHalf = 12;\n    let _hours = _value.getHours();\n\n    if (this.showMeridian) {\n      this.meridian = this.meridians[_hours >= _hoursPerDayHalf ? 1 : 0];\n      _hours = _hours % _hoursPerDayHalf;\n      // should be 12 PM, not 00 PM\n      if (_hours === 0) {\n        _hours = _hoursPerDayHalf;\n      }\n    }\n\n    this.hours = padNumber(_hours);\n    this.minutes = padNumber(_value.getMinutes());\n    this.seconds = padNumber(_value.getUTCSeconds());\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'timepicker',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [TIMEPICKER_CONTROL_VALUE_ACCESSOR, TimepickerStore],\n  template: \"<table> <tbody> <tr class=\\\"text-center\\\" [class.hidden]=\\\"!isSpinnersVisible\\\"> <!-- increment hours button--> <td> <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canIncrementHours\\\" (click)=\\\"changeHours(hourStep)\\\" ><span class=\\\"bs-chevron bs-chevron-up\\\"></span></a> </td> <!-- divider --> <td *ngIf=\\\"showMinutes\\\">&nbsp;&nbsp;&nbsp;</td> <!-- increment minutes button --> <td *ngIf=\\\"showMinutes\\\"> <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canIncrementMinutes\\\" (click)=\\\"changeMinutes(minuteStep)\\\" ><span class=\\\"bs-chevron bs-chevron-up\\\"></span></a> </td> <!-- divider --> <td *ngIf=\\\"showSeconds\\\">&nbsp;</td> <!-- increment seconds button --> <td *ngIf=\\\"showSeconds\\\"> <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canIncrementSeconds\\\" (click)=\\\"changeSeconds(secondsStep)\\\"> <span class=\\\"bs-chevron bs-chevron-up\\\"></span> </a> </td> <!-- space between --> <td>&nbsp;&nbsp;&nbsp;</td> <!-- meridian placeholder--> <td *ngIf=\\\"showMeridian\\\"></td> </tr> <tr> <!-- hours --> <td class=\\\"form-group\\\" [class.has-error]=\\\"invalidHours\\\"> <input type=\\\"text\\\" class=\\\"form-control text-center bs-timepicker-field\\\" placeholder=\\\"HH\\\" maxlength=\\\"2\\\" [readonly]=\\\"readonlyInput\\\" [value]=\\\"hours\\\" (wheel)=\\\"prevDef($event);changeHours(hourStep * wheelSign($event), 'wheel')\\\" (keydown.ArrowUp)=\\\"changeHours(hourStep, 'key')\\\" (keydown.ArrowDown)=\\\"changeHours(-hourStep, 'key')\\\" (change)=\\\"updateHours($event.target.value)\\\"></td> <!-- divider --> <td *ngIf=\\\"showMinutes\\\">&nbsp;:&nbsp;</td> <!-- minutes --> <td class=\\\"form-group\\\" *ngIf=\\\"showMinutes\\\"[class.has-error]=\\\"invalidMinutes\\\"> <input type=\\\"text\\\" class=\\\"form-control text-center bs-timepicker-field\\\" placeholder=\\\"MM\\\" maxlength=\\\"2\\\" [readonly]=\\\"readonlyInput\\\" [value]=\\\"minutes\\\" (wheel)=\\\"prevDef($event);changeMinutes(minuteStep * wheelSign($event), 'wheel')\\\" (keydown.ArrowUp)=\\\"changeMinutes(minuteStep, 'key')\\\" (keydown.ArrowDown)=\\\"changeMinutes(-minuteStep, 'key')\\\" (change)=\\\"updateMinutes($event.target.value)\\\"> </td> <!-- divider --> <td *ngIf=\\\"showSeconds\\\">&nbsp;:&nbsp;</td> <!-- seconds --> <td class=\\\"form-group\\\" *ngIf=\\\"showSeconds\\\" [class.has-error]=\\\"invalidSeconds\\\"> <input type=\\\"text\\\" class=\\\"form-control text-center bs-timepicker-field\\\" placeholder=\\\"SS\\\" maxlength=\\\"2\\\" [readonly]=\\\"readonlyInput\\\" [value]=\\\"seconds\\\" (wheel)=\\\"prevDef($event);changeSeconds(secondsStep * wheelSign($event), 'wheel')\\\" (keydown.ArrowUp)=\\\"changeSeconds(secondsStep, 'key')\\\" (keydown.ArrowDown)=\\\"changeSeconds(-secondsStep, 'key')\\\" (change)=\\\"updateSeconds($event.target.value)\\\"> </td> <!-- space between --> <td>&nbsp;&nbsp;&nbsp;</td> <!-- meridian --> <td *ngIf=\\\"showMeridian\\\"> <button type=\\\"button\\\" class=\\\"btn btn-default text-center\\\" [disabled]=\\\"readonlyInput\\\" [class.disabled]=\\\"readonlyInput\\\" (click)=\\\"toggleMeridian()\\\" >{{ meridian }} </button> </td> </tr> <tr class=\\\"text-center\\\" [class.hidden]=\\\"!isSpinnersVisible\\\"> <!-- decrement hours button--> <td> <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canDecrementHours\\\" (click)=\\\"changeHours(-hourStep)\\\"> <span class=\\\"bs-chevron bs-chevron-down\\\"></span> </a> </td> <!-- divider --> <td *ngIf=\\\"showMinutes\\\">&nbsp;&nbsp;&nbsp;</td> <!-- decrement minutes button--> <td *ngIf=\\\"showMinutes\\\"> <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canDecrementMinutes\\\" (click)=\\\"changeMinutes(-minuteStep)\\\"> <span class=\\\"bs-chevron bs-chevron-down\\\"></span> </a> </td> <!-- divider --> <td *ngIf=\\\"showSeconds\\\">&nbsp;</td> <!-- decrement seconds button--> <td *ngIf=\\\"showSeconds\\\"> <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canDecrementSeconds\\\" (click)=\\\"changeSeconds(-secondsStep)\\\"> <span class=\\\"bs-chevron bs-chevron-down\\\"></span> </a> </td> <!-- space between --> <td>&nbsp;&nbsp;&nbsp;</td> <!-- meridian placeholder--> <td *ngIf=\\\"showMeridian\\\"></td> </tr> </tbody> </table> \",\n  styles: [`\n    .bs-chevron{\n      border-style: solid;\n      display: block;\n      width: 9px;\n      height: 9px;\n      position: relative;\n      border-width: 3px 0px 0 3px;\n    }\n    .bs-chevron-up{\n      -webkit-transform: rotate(45deg);\n      transform: rotate(45deg);\n      top: 2px;\n    }\n    .bs-chevron-down{\n      -webkit-transform: rotate(-135deg);\n      transform: rotate(-135deg);\n      top: -2px;\n    }\n    .bs-timepicker-field{\n      width: 50px;\n    }\n  `],\n  encapsulation: ViewEncapsulation.None\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: TimepickerConfig, },\n{type: ChangeDetectorRef, },\n{type: TimepickerStore, },\n{type: TimepickerActions, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'hourStep': [{ type: Input },],\n'minuteStep': [{ type: Input },],\n'secondsStep': [{ type: Input },],\n'readonlyInput': [{ type: Input },],\n'mousewheel': [{ type: Input },],\n'arrowkeys': [{ type: Input },],\n'showSpinners': [{ type: Input },],\n'showMeridian': [{ type: Input },],\n'showMinutes': [{ type: Input },],\n'showSeconds': [{ type: Input },],\n'meridians': [{ type: Input },],\n'min': [{ type: Input },],\n'max': [{ type: Input },],\n'isValid': [{ type: Output },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { TimepickerComponent } from './timepicker.component';\nimport { TimepickerActions } from './reducer/timepicker.actions';\nimport { TimepickerConfig } from './timepicker.config';\nimport { TimepickerStore } from './reducer/timepicker.store';\n\n\nexport class TimepickerModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: TimepickerModule,\n      providers: [TimepickerConfig, TimepickerActions, TimepickerStore]\n    };\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [CommonModule],\n  declarations: [TimepickerComponent],\n  exports: [TimepickerComponent]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// tslint:disable:no-use-before-declare\nimport {\n  Directive,\n  HostBinding,\n  HostListener,\n  Input,\n  OnInit,\n  forwardRef\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n// TODO: config: activeClass - Class to apply to the checked buttons\n\nexport const CHECKBOX_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => ButtonCheckboxDirective),\n  multi: true\n};\n\n/**\n * Add checkbox functionality to any element\n */\n\nexport class ButtonCheckboxDirective implements ControlValueAccessor, OnInit {\n  /** Truthy value, will be set to ngModel */\n   btnCheckboxTrue: any = true;\n  /** Falsy value, will be set to ngModel */\n   btnCheckboxFalse: any = false;\n\n   state = false;\n\n  protected value: any;\n  protected isDisabled: boolean;\n\n  protected onChange: any = Function.prototype;\n  protected onTouched: any = Function.prototype;\n\n  // view -> model\n  \n  onClick(): void {\n    if (this.isDisabled) {\n      return;\n    }\n\n    this.toggle(!this.state);\n    this.onChange(this.value);\n  }\n\n  ngOnInit(): any {\n    this.toggle(this.trueValue === this.value);\n  }\n\n  protected get trueValue(): boolean {\n    return typeof this.btnCheckboxTrue !== 'undefined'\n      ? this.btnCheckboxTrue\n      : true;\n  }\n\n  protected get falseValue(): boolean {\n    return typeof this.btnCheckboxFalse !== 'undefined'\n      ? this.btnCheckboxFalse\n      : false;\n  }\n\n  toggle(state: boolean): void {\n    this.state = state;\n    this.value = this.state ? this.trueValue : this.falseValue;\n  }\n\n  // ControlValueAccessor\n  // model -> view\n  writeValue(value: any): void {\n    this.state = this.trueValue === value;\n    this.value = value ? this.trueValue : this.falseValue;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.isDisabled = isDisabled;\n  }\n\n  registerOnChange(fn: (_: any) => {}): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => {}): void {\n    this.onTouched = fn;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[btnCheckbox]',\n  providers: [CHECKBOX_CONTROL_VALUE_ACCESSOR]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'btnCheckboxTrue': [{ type: Input },],\n'btnCheckboxFalse': [{ type: Input },],\n'state': [{ type: HostBinding, args: ['class.active', ] },],\n'onClick': [{ type: HostListener, args: ['click', ] },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// tslint:disable:no-use-before-declare\nimport { ChangeDetectorRef, Directive, ElementRef, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nexport const RADIO_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => ButtonRadioGroupDirective),\n  multi: true\n};\n\n/**\n * A group of radio buttons.\n * A value of a selected button is bound to a variable specified via ngModel.\n */\n\nexport class ButtonRadioGroupDirective implements ControlValueAccessor {\n  onChange: any = Function.prototype;\n  onTouched: any = Function.prototype;\n\n  get value(): any {\n    return this._value;\n  }\n  set value(value: any) {\n    this._value = value;\n  }\n\n  private _value: any;\n\n  constructor(private el: ElementRef, private cdr: ChangeDetectorRef) {}\n\n  writeValue(value: any): void {\n    this._value = value;\n    this.cdr.markForCheck();\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[btnRadioGroup]',\n  providers: [RADIO_CONTROL_VALUE_ACCESSOR]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: ChangeDetectorRef, },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// tslint:disable:no-use-before-declare\nimport {\n  ChangeDetectorRef, Directive, ElementRef, forwardRef, HostBinding, HostListener, Input, OnInit,\n  Optional, Renderer2\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ButtonRadioGroupDirective } from './button-radio-group.directive';\n\nexport const RADIO_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => ButtonRadioDirective),\n  multi: true\n};\n\n/**\n * Create radio buttons or groups of buttons.\n * A value of a selected button is bound to a variable specified via ngModel.\n */\n\nexport class ButtonRadioDirective implements ControlValueAccessor, OnInit {\n  onChange: any = Function.prototype;\n  onTouched: any = Function.prototype;\n  private _value: any;\n  private _disabled: boolean;\n\n  /** Radio button value, will be set to `ngModel` */\n   btnRadio: any;\n  /** If `true` — radio button can be unchecked */\n   uncheckable: boolean;\n  /** Current value of radio component or group */\n   get value(): any {\n    return this.group ? this.group.value : this._value;\n  }\n\n  set value(value: any) {\n    if (this.group) {\n      this.group.value = value;\n\n      return;\n    }\n    this._value = value;\n  }\n  /** If `true` — radio button is disabled */\n   get disabled(): boolean {\n    return this._disabled;\n  }\n\n  set disabled(disabled: boolean) {\n    this._disabled = disabled;\n    this.setDisabledState(disabled);\n  }\n\n  \n  get isActive(): boolean {\n    return this.btnRadio === this.value;\n  }\n\n  constructor(\n    private el: ElementRef,\n    private cdr: ChangeDetectorRef,\n     private group: ButtonRadioGroupDirective,\n    private renderer: Renderer2\n  ) {}\n\n  \n  onClick(): void {\n    if (this.el.nativeElement.attributes.disabled || !this.uncheckable && this.btnRadio === this.value) {\n      return;\n    }\n\n    this.value = this.uncheckable && this.btnRadio === this.value ? undefined : this.btnRadio;\n    this._onChange(this.value);\n  }\n\n  ngOnInit(): void {\n    this.uncheckable = typeof this.uncheckable !== 'undefined';\n  }\n\n  onBlur(): void {\n    this.onTouched();\n  }\n\n  _onChange(value: any): void {\n    if (this.group) {\n      this.group.onTouched();\n      this.group.onChange(value);\n\n      return;\n    }\n    this.onTouched();\n    this.onChange(value);\n  }\n\n  // ControlValueAccessor\n  // model -> view\n  writeValue(value: any): void {\n    this.value = value;\n    this.cdr.markForCheck();\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(disabled: boolean): void {\n    if (disabled) {\n      this.renderer.setAttribute(this.el.nativeElement, 'disabled', 'disabled');\n\n      return;\n    }\n    this.renderer.removeAttribute(this.el.nativeElement, 'disabled');\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[btnRadio]',\n  providers: [RADIO_CONTROL_VALUE_ACCESSOR]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: ChangeDetectorRef, },\n{type: ButtonRadioGroupDirective, decorators: [{ type: Optional }, ]},\n{type: Renderer2, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'btnRadio': [{ type: Input },],\n'uncheckable': [{ type: Input },],\n'value': [{ type: Input },],\n'disabled': [{ type: Input },],\n'isActive': [{ type: HostBinding, args: ['class.active', ] },],\n'onClick': [{ type: HostListener, args: ['click', ] },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { ButtonCheckboxDirective } from './button-checkbox.directive';\nimport { ButtonRadioDirective } from './button-radio.directive';\nimport { ButtonRadioGroupDirective } from './button-radio-group.directive';\n\n\nexport class ButtonsModule {\n  static forRoot(): ModuleWithProviders {\n    return { ngModule: ButtonsModule, providers: [] };\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  declarations: [ButtonCheckboxDirective, ButtonRadioDirective, ButtonRadioGroupDirective],\n  exports: [ButtonCheckboxDirective, ButtonRadioDirective, ButtonRadioGroupDirective]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\n/**\n * Convert a single dimension array to a double dimension array\n * @template T\n * @param {?} items the single dimension array to convert\n * @param {?} columns the number of items each array should have\n * @return {?}\n */\nexport function gridify<T>(items: T[], columns: number): T[][] {\n\n    const /** @type {?} */ grid: T[][] = [];\n\n    while (items.length) {\n        grid.push(items.splice(0, columns));\n    }\n\n    return grid;\n}\n/**\n * Create an array of numbers between two limits\n * @param {?} start the lower limit\n * @param {?} end the upper limit\n * @return {?}\n */\nexport function range(start: number, end: number): number[] {\n    const /** @type {?} */ list: number[] = [];\n\n    for (let /** @type {?} */ idx = start; idx <= end; idx++) {\n        list.push(idx);\n    }\n\n    return list;\n}\n/**\n * Create an array of dates between two points\n * @param {?} start the date to start the array\n * @param {?} end the date to end the array\n * @return {?}\n */\nexport function dateRange(start: Date, end: Date): Date[] {\n\n    let /** @type {?} */ dates: Date[] = [];\n\n    // loop through all the days between the date range\n    while (start <= end) {\n\n        // add the date to the array\n        dates.push(new Date(start));\n\n        // move to the next day\n        start.setDate(start.getDate() + 1);\n    }\n\n    return dates;\n}\n/**\n * Compare two dates to see if they are on the same day\n * @param {?} day1 the first date to compare\n * @param {?} day2 the second date to compare\n * @return {?}\n */\nexport function compareDays(day1: Date, day2: Date): boolean {\n    return day1.getDate() === day2.getDate() &&\n        day1.getMonth() === day2.getMonth() &&\n        day1.getFullYear() === day2.getFullYear();\n}\n/**\n * Export an array of all the available months\n */\nexport const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\nexport const /** @type {?} */ monthsShort = months.map(month => month.substring(0, 3));\n/**\n * Export an array of all the available days of the week\n */\nexport const weekdays = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\nexport const /** @type {?} */ weekdaysShort = weekdays.map(weekday => weekday.substring(0, 3));","/**\n * Add a config service to allow an application\n * to customize the date time picker default settings\n * across the entire application\n */\n\n\nimport { Injectable } from '@angular/core';\nimport { weekdaysShort } from './date-time-picker.utils';\nimport { DateTimePickerTimezone } from './time-view/time-view.component';\nexport class DateTimePickerConfig {\n\n    showDate: boolean = true;\n    showTime: boolean = true;\n    showTimezone: boolean = true;\n    showSeconds: boolean = false;\n    showMeridian: boolean = true;\n    showSpinners: boolean = true;\n    weekdays: string[] = weekdaysShort;\n    nowBtnText: string = 'Today';\n\n    timezones: DateTimePickerTimezone[] = [\n        { name: 'GMT-11', offset: -660 },\n        { name: 'GMT-10', offset: -600 },\n        { name: 'GMT-9', offset: -540 },\n        { name: 'GMT-8', offset: -480 },\n        { name: 'GMT-7', offset: -420 },\n        { name: 'GMT-6', offset: -360 },\n        { name: 'GMT-5', offset: -300 },\n        { name: 'GMT-4', offset: -240 },\n        { name: 'GMT-3', offset: -180 },\n        { name: 'GMT-2', offset: -12 },\n        { name: 'GMT-1', offset: -60 },\n        { name: 'GMT', offset: 0 },\n        { name: 'GMT+1', offset: 60 },\n        { name: 'GMT+2', offset: 120 },\n        { name: 'GMT+3', offset: 180 },\n        { name: 'GMT+4', offset: 240 },\n        { name: 'GMT+5', offset: 300 },\n        { name: 'GMT+6', offset: 360 },\n        { name: 'GMT+7', offset: 420 },\n        { name: 'GMT+8', offset: 480 },\n        { name: 'GMT+9', offset: 540 },\n        { name: 'GMT+10', offset: 600 },\n        { name: 'GMT+11', offset: 660 },\n        { name: 'GMT+12', offset: 720 }\n    ];\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction DateTimePickerConfig_tsickle_Closure_declarations() {\n/** @type {?} */\nDateTimePickerConfig.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDateTimePickerConfig.ctorParameters;\n/** @type {?} */\nDateTimePickerConfig.prototype.showDate;\n/** @type {?} */\nDateTimePickerConfig.prototype.showTime;\n/** @type {?} */\nDateTimePickerConfig.prototype.showTimezone;\n/** @type {?} */\nDateTimePickerConfig.prototype.showSeconds;\n/** @type {?} */\nDateTimePickerConfig.prototype.showMeridian;\n/** @type {?} */\nDateTimePickerConfig.prototype.showSpinners;\n/** @type {?} */\nDateTimePickerConfig.prototype.weekdays;\n/** @type {?} */\nDateTimePickerConfig.prototype.nowBtnText;\n/** @type {?} */\nDateTimePickerConfig.prototype.timezones;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { DatePickerMode } from './date-time-picker.component';\nimport'rxjs/add/operator/distinctUntilChanged';\nexport class DateTimePickerService {\n\n    date: BehaviorSubject<Date> = new BehaviorSubject<Date>(new Date());\n    activeDate: BehaviorSubject<Date> = new BehaviorSubject<Date>(new Date());\n\n    mode: BehaviorSubject<DatePickerMode> = new BehaviorSubject<DatePickerMode>(DatePickerMode.Day);\n\n    month: BehaviorSubject<number> = new BehaviorSubject<number>(new Date().getMonth());\n    year: BehaviorSubject<number> = new BehaviorSubject<number>(new Date().getFullYear());\nconstructor() {\n\n        // when the date changes update the current month and year\n        this.date.distinctUntilChanged((previous, current) => previous.getTime() === current.getTime()).subscribe(date => {\n            this.month.next(date.getMonth());\n            this.year.next(date.getFullYear());\n        });\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction DateTimePickerService_tsickle_Closure_declarations() {\n/** @type {?} */\nDateTimePickerService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDateTimePickerService.ctorParameters;\n/** @type {?} */\nDateTimePickerService.prototype.date;\n/** @type {?} */\nDateTimePickerService.prototype.activeDate;\n/** @type {?} */\nDateTimePickerService.prototype.mode;\n/** @type {?} */\nDateTimePickerService.prototype.month;\n/** @type {?} */\nDateTimePickerService.prototype.year;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, Output, EventEmitter, ViewChild } from '@angular/core';\nimport { DateTimePickerTimeViewComponent, DateTimePickerTimezone } from './time-view/time-view.component';\nimport { weekdaysShort } from './date-time-picker.utils';\nimport { DateTimePickerConfig } from './date-time-picker.config';\nimport { DateTimePickerService } from './date-time-picker.service';\nexport class DateTimePickerComponent {\n\n   timePickerComponent: DateTimePickerTimeViewComponent;\nprivate _timezone: DateTimePickerTimezone;\n\n   showDate: boolean = this._config.showDate;\n   showTime: boolean = this._config.showTime;\n   showTimezone: boolean = this._config.showTimezone;\n   showSeconds: boolean = this._config.showSeconds;\n   showMeridian: boolean = this._config.showMeridian;\n   showSpinners: boolean = this._config.showSpinners;\n   weekdays: string[] = this._config.weekdays;\n   nowBtnText: string = this._config.nowBtnText;\n   timezones: DateTimePickerTimezone[] = this._config.timezones;\n\n   dateChange: EventEmitter<Date> = new EventEmitter<Date>();\n   timezoneChange: EventEmitter<DateTimePickerTimezone> = new EventEmitter<DateTimePickerTimezone>();\n/**\n * @param {?} value\n * @return {?}\n */\nset date(value: Date) {\n\n    this.dateTimePickerService.date.next(new Date(value));\n\n    // set the active date to the new date\n    this.dateTimePickerService.activeDate.next(new Date(value));\n  }\n/**\n * @return {?}\n */\nget date(): Date {\n    return this.dateTimePickerService.date.getValue();\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nset timezone(value: DateTimePickerTimezone) {\n    const /** @type {?} */ timezone = this.timezones.find(zone => zone.offset === value.offset);\n\n    // only update if the timezone is valid\n    if (timezone) {\n      this._timezone = timezone;\n    }\n  }\n/**\n * @return {?}\n */\nget timezone(): DateTimePickerTimezone {\n    return this._timezone;\n  }\n\n  // expose enum to view\n  DatePickerMode = DatePickerMode;\n/**\n * @param {?} _config\n * @param {?} dateTimePickerService\n */\nconstructor(private _config: DateTimePickerConfig,\npublic dateTimePickerService: DateTimePickerService) { }\n/**\n * This will emit the newly selected date\n * @return {?}\n */\ncommit(): void {\n    this.dateChange.emit(this.dateTimePickerService.activeDate.getValue());\n  }\n/**\n * Change the date to the current date and time\n * @return {?}\n */\nsetToNow(): void {\n\n    // set the date to the current moment\n    this.date = new Date();\n\n    // reset the timezone to the default\n    if (this.timePickerComponent) {\n      this.timePickerComponent.setDefaultTimezone();\n    }\n\n    // emit the changes\n    this.commit();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ux-date-time-picker',\n  template: `\n    <div class=\"calendar-container\">\n\n      <ng-container *ngIf=\"showDate\" [ngSwitch]=\"dateTimePickerService.mode | async\">\n\n        <!-- Display days in the current month -->\n        <ux-date-time-picker-day-view *ngSwitchCase=\"DatePickerMode.Day\" [weekdays]=\"weekdays\" (dateChange)=\"commit()\"></ux-date-time-picker-day-view>\n  \n        <!-- Display the months in the current year -->\n        <ux-date-time-picker-month-view *ngSwitchCase=\"DatePickerMode.Month\"></ux-date-time-picker-month-view>\n  \n        <!-- Display a decade -->\n        <ux-date-time-picker-year-view *ngSwitchCase=\"DatePickerMode.Year\"></ux-date-time-picker-year-view>\n  \n      </ng-container>\n\n      <!-- Display a Time Picker -->\n      <ux-date-time-picker-time-view *ngIf=\"showTime\" #timePicker (dateChange)=\"commit()\" [showSpinners]=\"showSpinners\" [showTimezone]=\"showTimezone\" [showSeconds]=\"showSeconds\" [showMeridian]=\"showMeridian\" (dateChange)=\"commit()\" [timezone]=\"timezone\" (timezoneChange)=\"timezoneChange.emit($event)\" [timezones]=\"timezones\"></ux-date-time-picker-time-view>\n\n    </div>\n\n    <button class=\"now-button\" (click)=\"setToNow()\">{{ nowBtnText }}</button>\n  `,\n  providers: [DateTimePickerService]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DateTimePickerConfig, },\n{type: DateTimePickerService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'timePickerComponent': [{ type: ViewChild, args: ['timePicker', ] },],\n'showDate': [{ type: Input },],\n'showTime': [{ type: Input },],\n'showTimezone': [{ type: Input },],\n'showSeconds': [{ type: Input },],\n'showMeridian': [{ type: Input },],\n'showSpinners': [{ type: Input },],\n'weekdays': [{ type: Input },],\n'nowBtnText': [{ type: Input },],\n'timezones': [{ type: Input },],\n'dateChange': [{ type: Output },],\n'timezoneChange': [{ type: Output },],\n'date': [{ type: Input },],\n'timezone': [{ type: Input },],\n};\n}\n\nfunction DateTimePickerComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nDateTimePickerComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDateTimePickerComponent.ctorParameters;\n/** @type {?} */\nDateTimePickerComponent.propDecorators;\n/** @type {?} */\nDateTimePickerComponent.prototype.timePickerComponent;\n/** @type {?} */\nDateTimePickerComponent.prototype._timezone;\n/** @type {?} */\nDateTimePickerComponent.prototype.showDate;\n/** @type {?} */\nDateTimePickerComponent.prototype.showTime;\n/** @type {?} */\nDateTimePickerComponent.prototype.showTimezone;\n/** @type {?} */\nDateTimePickerComponent.prototype.showSeconds;\n/** @type {?} */\nDateTimePickerComponent.prototype.showMeridian;\n/** @type {?} */\nDateTimePickerComponent.prototype.showSpinners;\n/** @type {?} */\nDateTimePickerComponent.prototype.weekdays;\n/** @type {?} */\nDateTimePickerComponent.prototype.nowBtnText;\n/** @type {?} */\nDateTimePickerComponent.prototype.timezones;\n/** @type {?} */\nDateTimePickerComponent.prototype.dateChange;\n/** @type {?} */\nDateTimePickerComponent.prototype.timezoneChange;\n/** @type {?} */\nDateTimePickerComponent.prototype.DatePickerMode;\n/** @type {?} */\nDateTimePickerComponent.prototype._config;\n/** @type {?} */\nDateTimePickerComponent.prototype.dateTimePickerService;\n}\n\nexport type DatePickerMode = number;\nexport let DatePickerMode: any = {};\nDatePickerMode.Day = 0;\nDatePickerMode.Month = 1;\nDatePickerMode.Year = 2;\nDatePickerMode[DatePickerMode.Day] = \"Day\";\nDatePickerMode[DatePickerMode.Month] = \"Month\";\nDatePickerMode[DatePickerMode.Year] = \"Year\";\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, Output, EventEmitter, OnInit, OnDestroy } from '@angular/core';\nimport { dateRange, gridify, compareDays, months, weekdaysShort } from '../date-time-picker.utils';\nimport { DateTimePickerService } from '../date-time-picker.service';\nimport { DatePickerMode } from '../date-time-picker.component';\nimport'rxjs/add/operator/distinctUntilChanged';\nimport'rxjs/add/observable/merge';\nimport { Subscription } from 'rxjs/Subscription';\nimport { Observable } from 'rxjs/Observable';\nexport class DateTimePickerDayViewComponent implements OnInit, OnDestroy {\n\n  header: string;\n  days: DatePickerDay[][] = [];\n\n   weekdays: string[] = weekdaysShort;\n   dateChange: EventEmitter<void> = new EventEmitter<void>();\n/**\n * @param {?} value\n * @return {?}\n */\nset date(value: Date) {\n    this.dateTimePickerService.activeDate.next(value);\n  }\n/**\n * @return {?}\n */\nget date() {\n    return this.dateTimePickerService.activeDate.getValue();\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nset month(value: number) {\n    this.dateTimePickerService.month.next(value);\n  }\n/**\n * @return {?}\n */\nget month(): number {\n    return this.dateTimePickerService.month.getValue();\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nset year(value: number) {\n    this.dateTimePickerService.year.next(value);\n  }\n/**\n * @return {?}\n */\nget year(): number {\n    return this.dateTimePickerService.year.getValue();\n  }\nprivate _subscription: Subscription;\n/**\n * @param {?} dateTimePickerService\n */\nconstructor(public dateTimePickerService: DateTimePickerService) {}\n/**\n * @return {?}\n */\nngOnInit(): void {\n\n    // update the grid only when the value of the active date, month or year has changed\n    this._subscription = Observable.merge(\n      this.dateTimePickerService.activeDate.distinctUntilChanged(),\n      this.dateTimePickerService.month.distinctUntilChanged(),\n      this.dateTimePickerService.year.distinctUntilChanged()\n    )\n    .subscribe(() => this.update());\n\n  }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n    // remove all subscriptions\n    this._subscription.unsubscribe();\n  }\n/**\n * Navigate to the previous page of dates\n * @return {?}\n */\nprevious(): void {\n\n    // update the month\n    this.month--;\n\n    // if the month is now the previous year take that into account\n    if (this.month < 0) {\n      this.month = 11;\n      this.year--;\n    }\n\n    // update the grid\n    this.update();\n  }\n/**\n * Navigate to the next page of dates\n * @return {?}\n */\nnext(): void {\n\n    // update the month\n    this.month++;\n\n    // if the month is now the previous year take that into account\n    if (this.month > 11) {\n      this.month = 0;\n      this.year++;\n    }\n\n    // update the grid\n    this.update();\n  }\n/**\n * Updates the grid of all the days in the month\n * @return {?}\n */\nupdate(): void {\n\n    // find the lower and upper boundaries\n    const /** @type {?} */ start = new Date(this.year, this.month, 1);\n    const /** @type {?} */ end = new Date(this.year, this.month + 1, 0);\n\n    // we always want to show from the sunday - this may include showing some dates from the previous month\n    start.setDate(start.getDate() - start.getDay());\n\n    // we also want to make sure that the range ends on a saturday\n    end.setDate(end.getDate() + (6 - end.getDay()));\n\n    // create an array of all the days to display\n    const /** @type {?} */ dates = dateRange(start, end);\n\n    // update the page header\n    this.header = `${months[this.month]} ${this.year}`;\n\n    // turn the dates into a grid\n    this.days = gridify(dates, 7).map(week => week.map(date => ({\n      date: date,\n      today: this.isToday(date),\n      active: this.isActive(date),\n      currentMonth: this.isCurrentMonth(date)\n    })));\n  }\n/**\n * Select a particular date\n * @param {?} date the date to select\n * @return {?}\n */\nselect(date: Date): void {\n    // update the current date object\n    this.date = new Date(date);\n\n    // emit the new date\n    this.dateChange.emit();\n  }\n/**\n * Determine whether or not a specific date is today\n * @param {?} date The date to check\n * @return {?}\n */\nisToday(date: Date): boolean {\n    return compareDays(new Date(), date);\n  }\n/**\n * Determines whether or not a specific date is the selected one\n * @param {?} date the date to check\n * @return {?}\n */\nisActive(date: Date): boolean {\n    return compareDays(this.date, date);\n  }\n/**\n * Determine whether or not a date is within the current month\n * or is it part of another month being show to fill the grid\n * @param {?} date The date in question\n * @return {?}\n */\nisCurrentMonth(date: Date): boolean {\n    return date.getMonth() === this.month;\n  }\n/**\n * Update the date picker view to show the month picker\n * @return {?}\n */\nshowMonthPicker(): void {\n    this.dateTimePickerService.mode.next(DatePickerMode.Month);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ux-date-time-picker-day-view',\n  template: `\n    <ux-date-time-picker-header [header]=\"header\" (previous)=\"previous()\" (next)=\"next()\" (ascend)=\"showMonthPicker()\"></ux-date-time-picker-header>\n\n    <table class=\"calendar\">\n      <thead>\n        <tr>\n          <th *ngFor=\"let day of weekdays\" class=\"weekday\">{{ day }}</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        <tr *ngFor=\"let row of days\">\n          <td *ngFor=\"let day of row\" class=\"date-cell\" [class.current]=\"day.today\" \n            [class.active]=\"day.active\" [class.preview]=\"!day.currentMonth\" \n            (mousedown)=\"select(day.date)\" (keyup.enter)=\"select(day.date)\" \n            tabindex=\"0\">{{ day.date.getDate() }}</td>\n        </tr>\n      </tbody>\n    </table>\n  `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DateTimePickerService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'weekdays': [{ type: Input },],\n'dateChange': [{ type: Output },],\n};\n}\n\nfunction DateTimePickerDayViewComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nDateTimePickerDayViewComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDateTimePickerDayViewComponent.ctorParameters;\n/** @type {?} */\nDateTimePickerDayViewComponent.propDecorators;\n/** @type {?} */\nDateTimePickerDayViewComponent.prototype.header;\n/** @type {?} */\nDateTimePickerDayViewComponent.prototype.days;\n/** @type {?} */\nDateTimePickerDayViewComponent.prototype.weekdays;\n/** @type {?} */\nDateTimePickerDayViewComponent.prototype.dateChange;\n/** @type {?} */\nDateTimePickerDayViewComponent.prototype._subscription;\n/** @type {?} */\nDateTimePickerDayViewComponent.prototype.dateTimePickerService;\n}\n\n\nexport interface DatePickerDay {\n  date: Date;\n  today: boolean;\n  active: boolean;\n  currentMonth: boolean;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { gridify, range, monthsShort } from '../date-time-picker.utils';\nimport { DateTimePickerService } from '../date-time-picker.service';\nimport { DatePickerMode } from '../date-time-picker.component';\nexport class DateTimePickerMonthViewComponent {\n\n  months: number[][] = gridify(range(0, 11), 4);\n  currentDate: Date = new Date();\n/**\n * @return {?}\n */\nget date() {\n    return this._dateTimePickerService.activeDate.getValue();\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nset month(value: number) {\n    this._dateTimePickerService.month.next(value);\n  }\n/**\n * @return {?}\n */\nget month(): number {\n    return this._dateTimePickerService.month.getValue();\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nset year(value: number) {\n    this._dateTimePickerService.year.next(value);\n  }\n/**\n * @return {?}\n */\nget year(): number {\n    return this._dateTimePickerService.year.getValue();\n  }\n/**\n * @param {?} _dateTimePickerService\n */\nconstructor(private _dateTimePickerService: DateTimePickerService) {}\n/**\n * Go to the previous year and emit the change\n * @return {?}\n */\nprevious(): void {\n    this.year--;\n  }\n/**\n * Go to the next year and emit the change\n * @return {?}\n */\nnext(): void {\n    this.year++;\n  }\n/**\n * Select a month in the calendar\n * @param {?} month the index of the month to select\n * @return {?}\n */\nselect(month: number): void {\n    this.month = month;\n\n    // show the day picker\n    this.showDayPicker();\n  }\n/**\n * Get the name of a month\n * @param {?} month the month in question\n * @return {?}\n */\ngetMonthName(month: number): string {\n    return monthsShort[month];\n  }\n/**\n * Show the daye picker view\n * @return {?}\n */\nshowDayPicker(): void {\n    this._dateTimePickerService.mode.next(DatePickerMode.Day);\n  }\n/**\n * Show the year picker view\n * @return {?}\n */\nshowYearPicker(): void {\n    this._dateTimePickerService.mode.next(DatePickerMode.Year);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ux-date-time-picker-month-view',\n  template: `\n    <ux-date-time-picker-header [header]=\"year\" (previous)=\"previous()\" (next)=\"next()\" (ascend)=\"showYearPicker()\"></ux-date-time-picker-header>\n\n    <div class=\"calendar\">\n      <div class=\"calendar-row\" *ngFor=\"let row of months\">\n        <div class=\"calendar-item\" *ngFor=\"let item of row\" [class.active]=\"item === date.getMonth() && year === date.getFullYear()\"\n          [class.current]=\"item === currentDate.getMonth() && year === currentDate.getFullYear()\" (mousedown)=\"select(item)\" (keyup.enter)=\"select(item)\" tabindex=\"0\">{{ getMonthName(item) }}</div>\n      </div>\n    </div>\n  `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DateTimePickerService, },\n];\n}\n\nfunction DateTimePickerMonthViewComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nDateTimePickerMonthViewComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDateTimePickerMonthViewComponent.ctorParameters;\n/** @type {?} */\nDateTimePickerMonthViewComponent.prototype.months;\n/** @type {?} */\nDateTimePickerMonthViewComponent.prototype.currentDate;\n/** @type {?} */\nDateTimePickerMonthViewComponent.prototype._dateTimePickerService;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, EventEmitter, Output, SimpleChanges, OnInit } from '@angular/core';\nimport { gridify, range } from '../date-time-picker.utils';\nimport { DateTimePickerService } from '../date-time-picker.service';\nimport { DatePickerMode } from '../date-time-picker.component';\nexport class DateTimePickerYearViewComponent implements OnInit {\nprivate _page: number = 0;\n\n  header: string;\n  years: number[][] = [];\n  currentYear: number = new Date().getFullYear();\n/**\n * @return {?}\n */\nngOnInit(): void {\n    this.update();\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nset year(value: number) {\n    this._dateTimePickerService.year.next(value);\n  }\n/**\n * @return {?}\n */\nget year(): number {\n    return this._dateTimePickerService.year.getValue();\n  }\n/**\n * @param {?} _dateTimePickerService\n */\nconstructor(private _dateTimePickerService: DateTimePickerService) {}\n/**\n * @param {?} year\n * @return {?}\n */\nselect(year: number): void {\n    this.year = year;\n\n    // show the month picker\n    this.showMonthPicker();\n  }\n/**\n * @return {?}\n */\nprevious(): void {\n    this._page--;\n    this.update();\n  }\n/**\n * @return {?}\n */\nnext(): void {\n    this._page++;\n    this.update();\n  }\n/**\n * @return {?}\n */\nupdate(): void {\n\n    // get the years to display\n    const /** @type {?} */ decade = this.getDecade();\n\n    // update the header\n    this.header = `${decade.start} - ${decade.end}`;\n\n    // create the grid\n    this.years = gridify(decade.range, 4);\n  }\n/**\n * Get the years in the current decade to display\n * @return {?}\n */\ngetDecade(): DatePickerYearRange {\n\n    // the number of years to display\n    const /** @type {?} */ yearCount = 10;\n\n    // figure the start and end points\n    const /** @type {?} */ start = (this.year - (this.year % yearCount)) + (this._page * yearCount);\n    const /** @type {?} */ end = start + yearCount - 1;\n\n    // create an array containing all the numbers between the start and end points\n    return { start: start, end: end, range: range(start, end) };\n  }\n/**\n * Show the month picker view\n * @return {?}\n */\nshowMonthPicker(): void {\n    this._dateTimePickerService.mode.next(DatePickerMode.Month);\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ux-date-time-picker-year-view',\n  template: `\n    <ux-date-time-picker-header [header]=\"header\" [canAscend]=\"false\" (previous)=\"previous()\" (next)=\"next()\"></ux-date-time-picker-header>\n\n    <div class=\"calendar\">\n      <div class=\"calendar-row\" *ngFor=\"let row of years\">\n        <div *ngFor=\"let item of row\" class=\"calendar-item\" [class.current]=\"item === currentYear\" [class.active]=\"item === year\"\n        (mousedown)=\"select(item)\" (keyup.enter)=\"select(item)\" tabindex=\"0\">{{ item }}</div>\n      </div>\n    </div>\n  `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DateTimePickerService, },\n];\n}\n\nfunction DateTimePickerYearViewComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nDateTimePickerYearViewComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDateTimePickerYearViewComponent.ctorParameters;\n/** @type {?} */\nDateTimePickerYearViewComponent.prototype._page;\n/** @type {?} */\nDateTimePickerYearViewComponent.prototype.header;\n/** @type {?} */\nDateTimePickerYearViewComponent.prototype.years;\n/** @type {?} */\nDateTimePickerYearViewComponent.prototype.currentYear;\n/** @type {?} */\nDateTimePickerYearViewComponent.prototype._dateTimePickerService;\n}\n\n\nexport interface DatePickerYearRange {\n  start: number;\n  end: number;\n  range: number[];\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nexport class DateTimePickerHeaderComponent {\n\n     header: string;\n     canAscend: boolean = true;\n\n     next: EventEmitter<void> = new EventEmitter<void>();\n     previous: EventEmitter<void> = new EventEmitter<void>();\n     ascend: EventEmitter<void> = new EventEmitter<void>();\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-date-time-picker-header',\n    template: `\n      <header class=\"header\">\n\n        <div class=\"header-navigation\" (click)=\"previous.emit(); $event.stopPropagation()\" (keyup.enter)=\"previous.emit()\" tabindex=\"0\">\n          <i class=\"hpe-icon hpe-previous\"></i>\n        </div>\n\n        <div class=\"header-title\" [class.active]=\"canAscend\" (click)=\"ascend.emit(); $event.stopPropagation()\" (keyup.enter)=\"ascend.emit()\" tabindex=\"0\">{{ header }}</div>\n\n        <div class=\"header-navigation\" (click)=\"next.emit(); $event.stopPropagation()\" (keyup.enter)=\"next.emit()\" tabindex=\"0\">\n          <i class=\"hpe-icon hpe-next\"></i>\n        </div>\n      </header>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'header': [{ type: Input },],\n'canAscend': [{ type: Input },],\n'next': [{ type: Output },],\n'previous': [{ type: Output },],\n'ascend': [{ type: Output },],\n};\n}\n\nfunction DateTimePickerHeaderComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nDateTimePickerHeaderComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDateTimePickerHeaderComponent.ctorParameters;\n/** @type {?} */\nDateTimePickerHeaderComponent.propDecorators;\n/** @type {?} */\nDateTimePickerHeaderComponent.prototype.header;\n/** @type {?} */\nDateTimePickerHeaderComponent.prototype.canAscend;\n/** @type {?} */\nDateTimePickerHeaderComponent.prototype.next;\n/** @type {?} */\nDateTimePickerHeaderComponent.prototype.previous;\n/** @type {?} */\nDateTimePickerHeaderComponent.prototype.ascend;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, EventEmitter, Output, AfterViewInit } from '@angular/core';\nexport class DateTimePickerTimeViewComponent implements AfterViewInit {\n\n     date: Date = new Date();\n     showSeconds: boolean = false;\n     showSpinners: boolean = true;\n     showTimezone: boolean = true;\n     showMeridian: boolean = true;\n\n     timezones: DateTimePickerTimezone[];\n\n     dateChange: EventEmitter<Date> = new EventEmitter<Date>();\n     timezoneChange: EventEmitter<DateTimePickerTimezone> = new EventEmitter<DateTimePickerTimezone>();\n\n    meridian: DatePickerMeridian = DatePickerMeridian.AM;\n/**\n * @param {?} value\n * @return {?}\n */\nset timezone(value: DateTimePickerTimezone) {\n        if (value !== this._timezone) {\n            this._timezone = value;\n            this.timezoneChange.emit(this._timezone);\n        }\n    }\n/**\n * @return {?}\n */\nget timezone() {\n        return this._timezone;\n    }\n\n    // Expose enum to view\n    DatePickerMeridian = DatePickerMeridian;\nprivate _timezone: DateTimePickerTimezone;\n/**\n * @return {?}\n */\nngAfterViewInit(): void {\n\n        // if the user did not specify a timezone - choose a default one\n        if (!this.timezone) {\n            setTimeout(() => this.setDefaultTimezone());\n        }\n    }\n/**\n * @return {?}\n */\nsetDefaultTimezone(): void {\n        // determine the user default timezone\n        const /** @type {?} */ offset = new Date().getTimezoneOffset();\n\n        // find the closest timezone\n        this.timezone = this.timezones.find(zone => zone.offset === offset);\n\n        // if not match was found then set to GMT\n        if (!this.timezone) {\n            this.timezone = this.timezones.find(zone => zone.offset === 0);\n        }\n    }\n/**\n * @param {?} date\n * @return {?}\n */\nupdate(date: Date | null): void {\n\n        // if the date is invalid then stop here\n        if (!date) {\n            return;\n        }\n\n        // update the meridian\n        this.meridian = date.getHours() < 12 ? DatePickerMeridian.AM : DatePickerMeridian.PM;\n        \n        // if the date has not changed then don't emit\n        if (date.getTime() !== this.date.getTime()) {\n            this.date = date;\n            this.dateChange.emit(date);\n        }\n    }\n/**\n * @param {?} meridian\n * @return {?}\n */\nsetMeridian(meridian: DatePickerMeridian): void {\n\n        // get the current hours\n        const /** @type {?} */ hours = this.date.getHours();\n\n        // if we are transitioning to AM and time is currently PM\n        if (meridian === DatePickerMeridian.AM && hours >= 12) {\n            this.date.setHours(hours - 12);\n            this.dateChange.emit(this.date);\n        }\n\n        // if we are transitioning to PM and time is currently AM\n        if (meridian === DatePickerMeridian.PM && hours < 12) {\n            this.date.setHours(hours + 12);\n            this.dateChange.emit(this.date);\n        }\n    }\n/**\n * @return {?}\n */\npreviousTimezone(): void {\n\n        // get the current zone\n        const /** @type {?} */ currentZone = this.timezones.findIndex(zone => zone.name === this.timezone.name && zone.offset === this.timezone.offset);\n\n        // try to get the previous zone\n        this.timezone = this.timezones[currentZone - 1] ? this.timezones[currentZone - 1] : this.timezones[currentZone];\n    }\n/**\n * @return {?}\n */\nnextTimezone(): void {\n        // get the current zone\n        const /** @type {?} */ currentZone = this.timezones.findIndex(zone => zone.name === this.timezone.name && zone.offset === this.timezone.offset);\n\n        // try to get the next zone\n        this.timezone = this.timezones[currentZone + 1] ? this.timezones[currentZone + 1] : this.timezones[currentZone];\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-date-time-picker-time-view',\n    template: `\n      <div class=\"time-input-container\">\n        <timepicker [ngModel]=\"date\" (ngModelChange)=\"update($event)\" [minuteStep]=\"1\" [hourStep]=\"1\" [secondsStep]=\"1\" [showSeconds]=\"showSeconds\"\n          [showSpinners]=\"showSpinners\" [showMeridian]=\"showMeridian\"></timepicker>\n\n        <div class=\"btn-group meridian-picker\" *ngIf=\"showMeridian\">\n          <button type=\"button\" class=\"btn button-toggle-accent\" [(ngModel)]=\"meridian\" (ngModelChange)=\"setMeridian($event)\" [btnRadio]=\"DatePickerMeridian.AM\">AM</button>\n          <button type=\"button\" class=\"btn button-toggle-accent\" [(ngModel)]=\"meridian\" (ngModelChange)=\"setMeridian($event)\" [btnRadio]=\"DatePickerMeridian.PM\">PM</button>\n        </div>\n\n        <table class=\"time-zone-picker-container\" *ngIf=\"showTimezone && showSpinners\">\n          <tbody>\n            <tr>\n              <td class=\"text-center\">\n                <a class=\"btn btn-link\" (click)=\"nextTimezone()\">\n                  <span class=\"hpe-icon hpe-up\"></span>\n                </a>\n              </td>\n            </tr>\n            <tr>\n              <td class=\"form-group\">\n                <div class=\"form-control time-zone-picker\">\n                  <span class=\"time-zone\">{{ timezone?.name }}</span>\n                </div>\n              </td>\n            </tr>\n            <tr>\n              <td class=\"text-center\">\n                <a class=\"btn btn-link\" (click)=\"previousTimezone()\">\n                  <span class=\"hpe-icon hpe-down\"></span>\n                </a>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n\n        <div *ngIf=\"showTimezone && !showSpinners\">\n          <select class=\"form-control time-zone-picker-select\" [(ngModel)]=\"timezone\">\n            <option *ngFor=\"let zone of timezones\" [ngValue]=\"zone\">{{ zone?.name }}</option>\n          </select>\n        </div>\n\n      </div>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'date': [{ type: Input },],\n'showSeconds': [{ type: Input },],\n'showSpinners': [{ type: Input },],\n'showTimezone': [{ type: Input },],\n'showMeridian': [{ type: Input },],\n'timezones': [{ type: Input },],\n'dateChange': [{ type: Output },],\n'timezoneChange': [{ type: Output },],\n'timezone': [{ type: Input },],\n};\n}\n\nfunction DateTimePickerTimeViewComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nDateTimePickerTimeViewComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDateTimePickerTimeViewComponent.ctorParameters;\n/** @type {?} */\nDateTimePickerTimeViewComponent.propDecorators;\n/** @type {?} */\nDateTimePickerTimeViewComponent.prototype.date;\n/** @type {?} */\nDateTimePickerTimeViewComponent.prototype.showSeconds;\n/** @type {?} */\nDateTimePickerTimeViewComponent.prototype.showSpinners;\n/** @type {?} */\nDateTimePickerTimeViewComponent.prototype.showTimezone;\n/** @type {?} */\nDateTimePickerTimeViewComponent.prototype.showMeridian;\n/** @type {?} */\nDateTimePickerTimeViewComponent.prototype.timezones;\n/** @type {?} */\nDateTimePickerTimeViewComponent.prototype.dateChange;\n/** @type {?} */\nDateTimePickerTimeViewComponent.prototype.timezoneChange;\n/** @type {?} */\nDateTimePickerTimeViewComponent.prototype.meridian;\n/** @type {?} */\nDateTimePickerTimeViewComponent.prototype.DatePickerMeridian;\n/** @type {?} */\nDateTimePickerTimeViewComponent.prototype._timezone;\n}\n\nexport type DatePickerMeridian = number;\nexport let DatePickerMeridian: any = {};\nDatePickerMeridian.AM = 0;\nDatePickerMeridian.PM = 1;\nDatePickerMeridian[DatePickerMeridian.AM] = \"AM\";\nDatePickerMeridian[DatePickerMeridian.PM] = \"PM\";\n\n\nexport interface DateTimePickerTimezone {\n    name: string;\n    offset: number;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { TimepickerModule } from 'ngx-bootstrap/timepicker';\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\n\nimport { DateTimePickerComponent } from './date-time-picker.component';\nimport { DateTimePickerDayViewComponent } from './day-view/day-view.component';\nimport { DateTimePickerMonthViewComponent } from './month-view/month-view.component';\nimport { DateTimePickerYearViewComponent } from './year-view/year-view.component';\nimport { DateTimePickerHeaderComponent } from './header/header.component';\nimport { DateTimePickerTimeViewComponent } from './time-view/time-view.component';\nimport { DateTimePickerConfig } from './date-time-picker.config';\n\nconst /** @type {?} */ DECLARATIONS = [\n    DateTimePickerComponent,\n    DateTimePickerDayViewComponent,\n    DateTimePickerMonthViewComponent,\n    DateTimePickerYearViewComponent,\n    DateTimePickerTimeViewComponent,\n    DateTimePickerHeaderComponent\n];\nexport class DateTimePickerModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        FormsModule,\n        TimepickerModule.forRoot(),\n        ButtonsModule.forRoot()\n    ],\n    exports: DECLARATIONS,\n    declarations: DECLARATIONS,\n    providers: [\n        DateTimePickerConfig\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction DateTimePickerModule_tsickle_Closure_declarations() {\n/** @type {?} */\nDateTimePickerModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDateTimePickerModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Directive } from '@angular/core';\nexport class EboxComponent { static decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-ebox',\n    template: `\n      <div class=\"ux-ebox-header\">\n          <ng-content select=\"ux-ebox-header\"></ng-content>\n      </div>\n\n      <div class=\"ux-ebox-content\">\n          <ng-content select=\"ux-ebox-content\"></ng-content>\n      </div>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction EboxComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nEboxComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nEboxComponent.ctorParameters;\n}\n\nexport class EboxHeaderDirective { static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'ux-ebox-header'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction EboxHeaderDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nEboxHeaderDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nEboxHeaderDirective.ctorParameters;\n}\n\nexport class EboxContentDirective { static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'ux-ebox-content'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction EboxContentDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nEboxContentDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nEboxContentDirective.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\n\nimport { EboxComponent, EboxContentDirective, EboxHeaderDirective } from './ebox.component';\nexport class EboxModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    exports: [EboxComponent, EboxContentDirective, EboxHeaderDirective],\n    declarations: [EboxComponent, EboxContentDirective, EboxHeaderDirective]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction EboxModule_tsickle_Closure_declarations() {\n/** @type {?} */\nEboxModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nEboxModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\n\n/** Default values provider for tooltip */\n\nexport class TooltipConfig {\n  /** tooltip placement, supported positions: 'top', 'bottom', 'left', 'right' */\n  placement = 'top';\n  /** array of event names which triggers tooltip opening */\n  triggers = 'hover focus';\n  /** a selector specifying the element the tooltip should be appended to. Currently only supports \"body\" */\n  container: string;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":["win","document","location","isBs3","window","__theme","guessedVersion","spanEl","createElement","innerText","body","appendChild","classList","add","rect","getBoundingClientRect","removeChild","top","_guessBsVersion","TooltipContainerComponent","config","Object","assign","this","defineProperty","prototype","get","ngAfterViewInit","classMap","in","fade","placement","animation","containerClass","decorators","type","Component","args","selector","changeDetection","ChangeDetectionStrategy","OnPush","host","[class]","[class.show]","role","styles","template","ctorParameters","TooltipConfig","Trigger","open","close","isManual","DEFAULT_ALIASES","hover","focus","parseTriggers","triggers","aliases","trimmedTriggers","trim","length","parsedTriggers","split","map","trigger","triggerPair","alias","manualTriggers","filter","Error","ContentRef","nodes","viewRef","componentRef","ComponentLoader","_viewContainerRef","_renderer","_elementRef","_injector","_componentFactoryResolver","_ngZone","_applicationRef","_posService","onBeforeShow","EventEmitter","onShown","onBeforeHide","onHidden","_providers","_isHiding","_listenOpts","_globalListener","Function","_componentRef","attach","compType","_componentFactory","resolveComponentFactory","to","container","position","opts","attachment","target","provide","provider","push","show","_subscribePositioning","_innerComponent","emit","_contentRef","_getContentRef","content","context","initialState","injector","ReflectiveInjector","resolveAndCreate","create","attachView","hostView","instance","ElementRef","nativeElement","querySelector","parentElement","changeDetectorRef","markForCheck","detectChanges","_registerOutsideClick","hide","componentEl","parentNode","destroy","remove","indexOf","_removeGlobalListener","toggle","isShown","dispose","_unsubscribePositioning","_unregisterListenersFn","listen","listenOpts","_this","outsideClick","registerHide","renderer","options","listeners","_registerHide","forEach","fn","useToggle","showFn","unsubscribeFn","listenToTriggersV2","attachInline","vRef","_inlineViewRef","createEmbeddedView","target_1","setTimeout","targets","event","contains","some","getInnerComponent","_zoneSubscription","onStable","subscribe","element","appendToBody","unsubscribe","TemplateRef","_viewRef","rootNodes","contentCmptFactory","modalContentInjector","slice","createText","positionService","Positioning","round","elPosition","parentOffset","width","height","bottom","left","right","getStyle","bcRect","offsetParentEl","offsetParent","offset","documentElement","clientTop","clientLeft","Math","elBcr","viewportOffset","pageYOffset","pageXOffset","elOffset","offsetHeight","offsetWidth","positionElements","hostElement","targetElement","hostElPosition","targetElStyles","getAllStyles","shiftWidth","center","shiftHeight","targetElBCR","placementPrimary","placementSecondary","targetElPosition","newPlacementPrimary","autoPosition","parseFloat","marginBottom","marginRight","preferredPosition","innerHeight","innerWidth","getComputedStyle","prop","isStaticPositioned","PositioningService","pos","style","_getHtmlElement","Injectable","ComponentLoaderFactory","createLoader","ComponentFactoryResolver","NgZone","Injector","ApplicationRef","_messagesHash","_hideMsg","console","warnOnce","msg","isDevMode","warn","TooltipDirective","cis","tooltipChange","_animation","_fadeDuration","tooltipStateChanged","_tooltip","useValue","set","value","tooltip","isOpen","isDisabled","delay","toString","ngOnInit","_delayTimeoutId","showTooltip","undefined","cancelDelayedTooltipShowing","_tooltipCancelShowFn","timer_1","Observable","timer","clearTimeout","ngOnDestroy","Directive","exportAs","ViewContainerRef","Renderer2","propDecorators","Input","Output","htmlContent","_placement","_isOpen","_enable","_appendToBody","_popupClass","_tooltipContext","_tooltipPopupDelay","_tooltipTrigger","__decorate","propertyKey","_key","prevValue","TooltipModule","forRoot","ngModule","providers","NgModule","imports","CommonModule","declarations","exports","entryComponents","latinMap","Á","Ă","Ắ","Ặ","Ằ","Ẳ","Ẵ","Ǎ","Â","Ấ","Ậ","Ầ","Ẩ","Ẫ","Ä","Ǟ","Ȧ","Ǡ","Ạ","Ȁ","À","Ả","Ȃ","Ā","Ą","Å","Ǻ","Ḁ","Ⱥ","Ã","Ꜳ","Æ","Ǽ","Ǣ","Ꜵ","Ꜷ","Ꜹ","Ꜻ","Ꜽ","Ḃ","Ḅ","Ɓ","Ḇ","Ƀ","Ƃ","Ć","Č","Ç","Ḉ","Ĉ","Ċ","Ƈ","Ȼ","Ď","Ḑ","Ḓ","Ḋ","Ḍ","Ɗ","Ḏ","ǲ","ǅ","Đ","Ƌ","Ǳ","Ǆ","É","Ĕ","Ě","Ȩ","Ḝ","Ê","Ế","Ệ","Ề","Ể","Ễ","Ḙ","Ë","Ė","Ẹ","Ȅ","È","Ẻ","Ȇ","Ē","Ḗ","Ḕ","Ę","Ɇ","Ẽ","Ḛ","Ꝫ","Ḟ","Ƒ","Ǵ","Ğ","Ǧ","Ģ","Ĝ","Ġ","Ɠ","Ḡ","Ǥ","Ḫ","Ȟ","Ḩ","Ĥ","Ⱨ","Ḧ","Ḣ","Ḥ","Ħ","Í","Ĭ","Ǐ","Î","Ï","Ḯ","İ","Ị","Ȉ","Ì","Ỉ","Ȋ","Ī","Į","Ɨ","Ĩ","Ḭ","Ꝺ","Ꝼ","Ᵹ","Ꞃ","Ꞅ","Ꞇ","Ꝭ","Ĵ","Ɉ","Ḱ","Ǩ","Ķ","Ⱪ","Ꝃ","Ḳ","Ƙ","Ḵ","Ꝁ","Ꝅ","Ĺ","Ƚ","Ľ","Ļ","Ḽ","Ḷ","Ḹ","Ⱡ","Ꝉ","Ḻ","Ŀ","Ɫ","ǈ","Ł","Ǉ","Ḿ","Ṁ","Ṃ","Ɱ","Ń","Ň","Ņ","Ṋ","Ṅ","Ṇ","Ǹ","Ɲ","Ṉ","Ƞ","ǋ","Ñ","Ǌ","Ó","Ŏ","Ǒ","Ô","Ố","Ộ","Ồ","Ổ","Ỗ","Ö","Ȫ","Ȯ","Ȱ","Ọ","Ő","Ȍ","Ò","Ỏ","Ơ","Ớ","Ợ","Ờ","Ở","Ỡ","Ȏ","Ꝋ","Ꝍ","Ō","Ṓ","Ṑ","Ɵ","Ǫ","Ǭ","Ø","Ǿ","Õ","Ṍ","Ṏ","Ȭ","Ƣ","Ꝏ","Ɛ","Ɔ","Ȣ","Ṕ","Ṗ","Ꝓ","Ƥ","Ꝕ","Ᵽ","Ꝑ","Ꝙ","Ꝗ","Ŕ","Ř","Ŗ","Ṙ","Ṛ","Ṝ","Ȑ","Ȓ","Ṟ","Ɍ","Ɽ","Ꜿ","Ǝ","Ś","Ṥ","Š","Ṧ","Ş","Ŝ","Ș","Ṡ","Ṣ","Ṩ","Ť","Ţ","Ṱ","Ț","Ⱦ","Ṫ","Ṭ","Ƭ","Ṯ","Ʈ","Ŧ","Ɐ","Ꞁ","Ɯ","Ʌ","Ꜩ","Ú","Ŭ","Ǔ","Û","Ṷ","Ü","Ǘ","Ǚ","Ǜ","Ǖ","Ṳ","Ụ","Ű","Ȕ","Ù","Ủ","Ư","Ứ","Ự","Ừ","Ử","Ữ","Ȗ","Ū","Ṻ","Ų","Ů","Ũ","Ṹ","Ṵ","Ꝟ","Ṿ","Ʋ","Ṽ","Ꝡ","Ẃ","Ŵ","Ẅ","Ẇ","Ẉ","Ẁ","Ⱳ","Ẍ","Ẋ","Ý","Ŷ","Ÿ","Ẏ","Ỵ","Ỳ","Ƴ","Ỷ","Ỿ","Ȳ","Ɏ","Ỹ","Ź","Ž","Ẑ","Ⱬ","Ż","Ẓ","Ȥ","Ẕ","Ƶ","Ĳ","Œ","ᴀ","ᴁ","ʙ","ᴃ","ᴄ","ᴅ","ᴇ","ꜰ","ɢ","ʛ","ʜ","ɪ","ʁ","ᴊ","ᴋ","ʟ","ᴌ","ᴍ","ɴ","ᴏ","ɶ","ᴐ","ᴕ","ᴘ","ʀ","ᴎ","ᴙ","ꜱ","ᴛ","ⱻ","ᴚ","ᴜ","ᴠ","ᴡ","ʏ","ᴢ","á","ă","ắ","ặ","ằ","ẳ","ẵ","ǎ","â","ấ","ậ","ầ","ẩ","ẫ","ä","ǟ","ȧ","ǡ","ạ","ȁ","à","ả","ȃ","ā","ą","ᶏ","ẚ","å","ǻ","ḁ","ⱥ","ã","ꜳ","æ","ǽ","ǣ","ꜵ","ꜷ","ꜹ","ꜻ","ꜽ","ḃ","ḅ","ɓ","ḇ","ᵬ","ᶀ","ƀ","ƃ","ɵ","ć","č","ç","ḉ","ĉ","ɕ","ċ","ƈ","ȼ","ď","ḑ","ḓ","ȡ","ḋ","ḍ","ɗ","ᶑ","ḏ","ᵭ","ᶁ","đ","ɖ","ƌ","ı","ȷ","ɟ","ʄ","ǳ","ǆ","é","ĕ","ě","ȩ","ḝ","ê","ế","ệ","ề","ể","ễ","ḙ","ë","ė","ẹ","ȅ","è","ẻ","ȇ","ē","ḗ","ḕ","ⱸ","ę","ᶒ","ɇ","ẽ","ḛ","ꝫ","ḟ","ƒ","ᵮ","ᶂ","ǵ","ğ","ǧ","ģ","ĝ","ġ","ɠ","ḡ","ᶃ","ǥ","ḫ","ȟ","ḩ","ĥ","ⱨ","ḧ","ḣ","ḥ","ɦ","ẖ","ħ","ƕ","í","ĭ","ǐ","î","ï","ḯ","ị","ȉ","ì","ỉ","ȋ","ī","į","ᶖ","ɨ","ĩ","ḭ","ꝺ","ꝼ","ᵹ","ꞃ","ꞅ","ꞇ","ꝭ","ǰ","ĵ","ʝ","ɉ","ḱ","ǩ","ķ","ⱪ","ꝃ","ḳ","ƙ","ḵ","ᶄ","ꝁ","ꝅ","ĺ","ƚ","ɬ","ľ","ļ","ḽ","ȴ","ḷ","ḹ","ⱡ","ꝉ","ḻ","ŀ","ɫ","ᶅ","ɭ","ł","ǉ","ſ","ẜ","ẛ","ẝ","ḿ","ṁ","ṃ","ɱ","ᵯ","ᶆ","ń","ň","ņ","ṋ","ȵ","ṅ","ṇ","ǹ","ɲ","ṉ","ƞ","ᵰ","ᶇ","ɳ","ñ","ǌ","ó","ŏ","ǒ","ô","ố","ộ","ồ","ổ","ỗ","ö","ȫ","ȯ","ȱ","ọ","ő","ȍ","ò","ỏ","ơ","ớ","ợ","ờ","ở","ỡ","ȏ","ꝋ","ꝍ","ⱺ","ō","ṓ","ṑ","ǫ","ǭ","ø","ǿ","õ","ṍ","ṏ","ȭ","ƣ","ꝏ","ɛ","ᶓ","ɔ","ᶗ","ȣ","ṕ","ṗ","ꝓ","ƥ","ᵱ","ᶈ","ꝕ","ᵽ","ꝑ","ꝙ","ʠ","ɋ","ꝗ","ŕ","ř","ŗ","ṙ","ṛ","ṝ","ȑ","ɾ","ᵳ","ȓ","ṟ","ɼ","ᵲ","ᶉ","ɍ","ɽ","ↄ","ꜿ","ɘ","ɿ","ś","ṥ","š","ṧ","ş","ŝ","ș","ṡ","ṣ","ṩ","ʂ","ᵴ","ᶊ","ȿ","ɡ","ᴑ","ᴓ","ᴝ","ť","ţ","ṱ","ț","ȶ","ẗ","ⱦ","ṫ","ṭ","ƭ","ṯ","ᵵ","ƫ","ʈ","ŧ","ᵺ","ɐ","ᴂ","ǝ","ᵷ","ɥ","ʮ","ʯ","ᴉ","ʞ","ꞁ","ɯ","ɰ","ᴔ","ɹ","ɻ","ɺ","ⱹ","ʇ","ʌ","ʍ","ʎ","ꜩ","ú","ŭ","ǔ","û","ṷ","ü","ǘ","ǚ","ǜ","ǖ","ṳ","ụ","ű","ȕ","ù","ủ","ư","ứ","ự","ừ","ử","ữ","ȗ","ū","ṻ","ų","ᶙ","ů","ũ","ṹ","ṵ","ᵫ","ꝸ","ⱴ","ꝟ","ṿ","ʋ","ᶌ","ⱱ","ṽ","ꝡ","ẃ","ŵ","ẅ","ẇ","ẉ","ẁ","ⱳ","ẘ","ẍ","ẋ","ᶍ","ý","ŷ","ÿ","ẏ","ỵ","ỳ","ƴ","ỷ","ỿ","ȳ","ẙ","ɏ","ỹ","ź","ž","ẑ","ʑ","ⱬ","ż","ẓ","ȥ","ẕ","ᵶ","ᶎ","ʐ","ƶ","ɀ","ﬀ","ﬃ","ﬄ","ﬁ","ﬂ","ĳ","œ","ﬆ","ₐ","ₑ","ᵢ","ⱼ","ₒ","ᵣ","ᵤ","ᵥ","ₓ","TypeaheadMatch","item","header","isHeader","latinize","str","replace","a","tokenize","wordRegexDelimiters","phraseRegexDelimiters","token","regexStr","preTokenized","RegExp","result","preTokenizedLength","replacePhraseDelimiters","i","getValueFromObject","object","option","endsWith","_i","propertiesArray_1","property","Utils","reflow","getStyles","elem","view","ownerDocument","defaultView","opener","TypeaheadContainerComponent","isFocused","_matches","isScrolledIntoView","containerViewTop","ulElement","scrollTop","containerViewBottom","elemTop","offsetTop","_active","needScrollbar","typeaheadScrollable","typeaheadOptionsInScrollableView","matches","setScrollableMode","nextActiveMatch","parent","optionsListTemplate","typeaheadItemTemplate","selectActiveMatch","selectMatch","prevActiveMatch","index","scrollPrevious","scrollNext","selectActive","hightlight","match","query","startIdx","tokenLen","itemStr","itemStrHelper","typeaheadLatinize","toLowerCase","queryLen","substring","repeat","focusLost","isActive","e","stopPropagation","preventDefault","changeModel","typeaheadOnSelect","liElements","first","ulStyles","liStyles","ulPaddingBottom","ulPaddingTop","optionHeight","guiHeight","setStyle","liElement","toArray","scrollToBottom","scrollToTop","scrollHeight","class","[class.dropdown-menu]","[style.overflow-y]","[style.height]","[style.visibility]","[class.dropup]","ViewChild","ViewChildren","HostListener","TypeaheadDirective","ngControl","viewContainerRef","typeaheadMinLength","typeaheadAsync","typeaheadSingleWords","typeaheadWordDelimiters","typeaheadPhraseDelimiters","typeaheadLoading","typeaheadNoResults","typeaheadOnBlur","dropup","isTypeaheadOptionsListActive","keyUpEventEmitter","_subscriptions","_typeahead","typeaheadOptionsLimit","typeaheadWaitMs","typeahead","asyncActions","syncActions","onInput","textContent","onChange","_container","keyCode","onFocus","onBlur","active","onKeydown","valueStr","viewToModelUpdate","setValue","typeaheadRef","_outsideClickListener","onOutsideClick","normalizedQuery","control","_a","debounceTime","mergeMap","finalizeAsyncCall","normalizeQuery","from","testMatch","normalizeOption","optionValue","typeaheadOptionField","test","spaceLength","prepareMatches","hasMatches","limited","typeaheadGroupField","matches_1","v","group","concat","NgControl","ChangeDetectorRef","TypeaheadModule","FacetSelect","facet","FacetDeselect","FacetDeselectAll","FacetContainerComponent","clearTooltip","emptyText","facets","facetsChange","events","selectFacet","triggerEvent","deselectFacet","idx","findIndex","selectedFacet","splice","deselectAllFacets","next","FacetBaseComponent","facetContainer","selected","selectedChange","Subject","find","_","deselectAll","disabled","toggleFacetSelection","isFacetSelected","Host","FacetHeaderComponent","canExpand","expanded","expandedChange","toggleExpand","tabindex","(click)","(keyup.enter)","FacetCheckListComponent","_super","__extends","apply","arguments","scrollbar","FacetTypeaheadListComponent","typeaheadConfig","suggestions","simplified","_nativeElement","_defaultTypeaheadConfig","placeholder","maxResults","minCharacters","typeaheadOptions","title","toUpperCase","includes","searchQuery","of","hasOwnProperty","selectOption","typeaheadOption","scrollToFocused","dropdown","activeElement","elementBounds","dropdownBounds","FacetTypeaheadHighlight","transform","regex","Pipe","name","DECLARATIONS","FacetsModule","FormsModule","CheckboxModule","Facet","data","count","id","BsDropdownConfig","autoClose","BsDropdownState","direction","isOpenChange","isDisabledChange","toggleClick","dropdownMenu","Promise","resolve","resolveDropdownMenu","BsDropdownContainerComponent","_state","cd","_element","_subscription","addClass","BsDropdownDirective","_cis","_config","_isInlineOpen","_isInited","_dropdown","_isDisabled","_showInline","_inlinedMenu","then","viewContainer","templateRef","addBs4Polyfills","catch","_dropup","removeShowClass","addShowClass","checkRightAlignment","checkDropup","removeClass","isRightAligned","[class.open]","BsDropdownMenuDirective","_viewContainer","_templateRef","BsDropdownToggleDirective","onClick","onDocumentClick","button","onEsc","[attr.aria-haspopup]","HostBinding","BsDropdownModule","FilterContainerComponent","filters","filtersChange","addFilter","FilterAddEvent","removeFilter","FilterRemoveEvent","removeAll","FilterRemoveAllEvent","FilterBaseComponent","filtersContainer","bind","initial","FilterDynamicComponent","defaultOptions","showTypeahead","typeaheadItems","getItems","maxIndividualItems","clickOff","hideDropdown","nodeName","call","selectFilter","(document:click)","FilterDropdownComponent","FilterModule","FlippableCardComponent","flipped","flippedChange","setFlipped","state","toggleFlipped","clickTrigger","hoverEnter","hoverExit","[class.horizontal]","[class.vertical]","FlippableCardFrontDirective","FlippableCardBackDirective","FlippableCardModule","FloatingActionButtonsService","open$","BehaviorSubject","getValue","FloatingActionButtonsComponent","fab","pipe","tooltips","preserveWhitespaces","animations","transition","opacity","stagger","animate","ContentChildren","FloatingActionButtonComponent","primary","Attribute","icon","FloatingActionButtonsModule","ItemDisplayPanelContentDirective","ItemDisplayPanelFooterDirective","ItemDisplayPanelComponent","boxShadow","closeVisible","preventClose","inline","shadow","visibleChange","_visible","visible","hidePanel","(document:keyup.escape)","[class.inline-host]","[class.visible-host]","footer","ContentChild","ItemDisplayPanelModule","WizardStepComponent","valid","visitedChange","_visited","visited","WizardComponent","_step","steps","QueryList","orientation","nextText","previousText","cancelText","finishText","nextTooltip","previousTooltip","cancelTooltip","finishTooltip","nextDisabled","previousDisabled","cancelDisabled","finishDisabled","nextVisible","previousVisible","cancelVisible","finishVisible","cancelAlwaysVisible","finishAlwaysVisible","onNext","onPrevious","onCancel","onFinishing","onFinish","stepChanging","stepChange","invalidIndicator","update","step","StepChangingEvent","getCurrentStep","previous","finish","cancel","gotoStep","stepIndex","stp","isLastStep","reset","getStepAtIndex","WizardModule","MarqueeWizardService","valid$","MarqueeWizardStepComponent","_marqueeWizardService","completed","completedChange","_valid","setCompleted","MarqueeWizardComponent","marqueeWizardService","validChange","description","current","MarqueeWizardModule","NavigationComponent","NavigationItemComponent","_parent","_router","_activatedRoute","level","indentWithoutArrow","_navigationEnd","NavigationEnd","hasActiveLink","link","_children","parentListElement","levelClass","getLevelClass","ngAfterContentInit","setIndentWithoutArrow","_childrenChanges","changes","tree","createUrlTree","relativeTo","queryParams","snapshot","fragment","children","every","Optional","SkipSelf","Router","ActivatedRoute","descendants","NavigationModule","RouterModule","ColorService","_colorSet","colorSets","keppel","colorClassSet","setColors","key","colorValueSet","_colors","getColorValueByHex","_html","className","innerHTML","getColorValue","color","hex","r","parseInt","g","b","ThemeColor","rgba","backgroundColor","getColor","themeColor","resolveColorName","getRed","getGreen","getBlue","getAlpha","getColorSet","setColorSet","colorSet","colorName","toRgba","Document","Inject","DOCUMENT","_r","_g","_b","parse","rgbaMatch","shortHexMatch","longHexMatch","toHex","red","green","blue","toRgb","setRed","setGreen","setBlue","setAlpha","alpha","accent","secondary","alternate1","alternate2","alternate3","vibrant1","vibrant2","grey1","grey2","grey3","grey4","grey5","grey6","grey7","grey8","chart1","chart2","chart3","chart4","chart5","chart6","ok","warning","critical","partition1","partition9","partition10","partition11","partition12","partition13","partition14","social-chart-node","social-chart-edge","microFocus","cerulean","aqua","aquamarine","fuchsia","indigo","dark-blue","white","slightly-gray","bright-gray","gray","silver","dim-gray","dark-gray","black","crimson-negative","apricot","yellow","green-positive","ultramarine","skyblue","pale-aqua","pale-green","lime","orange","magenta","pale-purple","dark-ultramarine","steelblue","arctic-blue","emerald","olive","goldenrod","purple","pale-eggplant","pale-amber","pale-lemon","pale-emerald","plum","copper","amber","leaf-green","forest-green","ColorServiceModule","NotificationService","_colorService","duration","spacing","iconColor","notifications$","notificationRef","date","Date","notifications","unshift","dismiss","getHistory","dismissAll","NotificationListComponent","_notificationService","notificationRefs","NotificationModule","NUMBER_PICKER_VALUE_ACCESSOR","NG_VALUE_ACCESSOR","useExisting","forwardRef","NumberPickerComponent","multi","_min","Infinity","_max","_disabled","_value","_propagateChange","valueChange","increment","max","min","decrement","isValid","onScroll","deltaY","wheelDelta","writeValue","registerOnChange","registerOnTouched","setDisabledState","[class.has-error]","NumberPickerModule","AuditSubscriber","destination","durationSelector","hasValue","_next","throttled","tryCatch_1","tryCatch","errorObject_1","errorObject","error","innerSubscription","subscribeToResult_1","subscribeToResult","closed","clearThrottle","notifyNext","outerValue","innerValue","outerIndex","innerIndex","notifyComplete","OuterSubscriber_1","OuterSubscriber","val","isArray_1","isArray","schedule","TimerObservable","dueTime","period","scheduler","isNumeric_1","isNumeric","Number","isScheduler_1","isScheduler","async_1","async","isDate_1","isDate","now","initialDelay","dispatch","subscriber","complete","_subscribe","Observable_1","BufferSubscriber","closingNotifier","buffer","innerSub","BufferCountSubscriber","bufferSize","_complete","Subscriber_1","Subscriber","BufferSkipCountSubscriber","startBufferEvery","buffers","shift","Context","BufferTimeSubscriber","bufferTimeSpan","bufferCreationInterval","maxBufferSize","contexts","openContext","timespanOnly","timeSpanOnlyState","closeAction","dispatchBufferTimeSpanOnly","closeState","creationState","dispatchBufferClose","dispatchBufferCreation","filledBufferContext","len","onBufferFull","_error","err","_unsubscribe","closeContext","prevContext","arg","BufferToggleSubscriber","openings","closingSelector","subscription","closeBuffer","openBuffer","trySubscribe","Subscription_1","Subscription","BufferWhenSubscriber","subscribing","closingSubscription","CatchSubscriber","caught","isStopped","err2","_unsubscribeAndRecycle","ScalarObservable","_isScalar","done","EmptyObservable","ArrayObservable","array","pop","ScalarObservable_1","EmptyObservable_1","none","CombineLatestSubscriber","project","values","observables","observable","toRespond","unused","oldVal","_tryProject","dispatchNext$1","dispatchError","PromiseObservable","promise","root_1","root","dispatchNext","IteratorObservable_2","IteratorObservable","iterator","obj","iterator_1","StringIterator","ArrayIterator","TypeError","getIterator","hasError","return","charAt","arr","o","isNaN","isFinite","valueAsNumber","sign","floor","abs","maxSafeInteger","toLength","pow","ArrayLikeObservable","arrayLike","observeOn_2","source","lift","ObserveOnOperator","ObserveOnSubscriber","ObserveOnOperator_1","notification","observe","scheduleMessage","ObserveOnMessage","Notification_1","Notification","createNext","createError","createComplete","ObserveOnSubscriber_1","FromObservable","ish","observable_1","ArrayObservable_1","isPromise_1","isPromise","PromiseObservable_1","IteratorObservable_1","isArrayLike_1","isArrayLike","ArrayLikeObservable_1","observeOn_1","MergeMapSubscriber","resultSelector","concurrent","POSITIVE_INFINITY","hasCompleted","_tryNext","_innerSub","_notifyResultSelector","CountSubscriber","predicate","_tryPredicate","DebounceSubscriber","durationSubscription","emitValue","DefaultIfEmptySubscriber","defaultValue","isEmpty","SubscriptionDelaySubscriber","DelayWhenSubscriber","delayDurationSelector","delayNotifierSubscriptions","removeSubscription","tryComplete","notifyError","delayNotifier","tryDelay","subscriptionIdx","notifierSubscription","SubscriptionDelayObservable","subscriptionDelay","sourceSubscribed","subscribeToSource","DeMaterializeSubscriber","minimalSetImpl","MinimalSet","_values","has","clear","Set","DistinctSubscriber","keySelector","flushes","Set_1","_useKeySelector","_finalizeNext","ArgumentOutOfRangeError","stack","message","ElementAtSubscriber","x","ArgumentOutOfRangeError_1","EverySubscriber","thisArg","everyValueMatch","SwitchFirstSubscriber","hasSubscription","SwitchFirstMapSubscriber","tryNext","trySelectResult","ExpandSubscriber","subscribeToProjection","FinallySubscriber","callback","FindValueSubscriber","yieldIndex","EmptyError","FirstSubscriber","_emitted","_emit","_tryResultSelector","_emitFinal","EmptyError_1","ObjectUnsubscribedError","SubjectSubscription","subject","observers","subscriberIndex","SubjectSubscriber","SubjectSubscriber_1","Subject$$1","thrownError","rxSubscriber_1","rxSubscriber","operator","AnonymousSubject","ObjectUnsubscribedError_1","copy","_trySubscribe","EMPTY","SubjectSubscription_1","asObservable","Subject_2","MapPolyfill","size","_keys","delete","cb","Map","MapPolyfill_1","FastMap","GroupDurationSubscriber","GroupBySubscriber","elementSelector","subjectSelector","groups","attemptedToUnsubscribe","_group","FastMap_1","Map_1","Subject_1","groupedObservable","GroupedObservable","removeGroup","groupSubject","refCountSubscription","InnerRefCountSubscription","IgnoreElementsSubscriber","noop_1","noop","IsEmptySubscriber","LastSubscriber","lastValue","MapToSubscriber","MaterializeSubscriber","ScanSubscriber","accumulator","_seed","hasSeed","seed","TakeLastSubscriber","total","ring","Array","MergeMapToSubscriber","MergeScanSubscriber","acc","refCount_2","RefCountOperator","connectable","_refCount","refCounter","RefCountSubscriber","connection","connect","refCount","sharedConnection","_connection","ConnectableSubscriber","ConnectableObservable","subjectFactory","_isComplete","getSubject","_subject","refCount_1","OnErrorResumeNextSubscriber","nextSources","subscribeToNextSource","PairwiseSubscriber","hasPrev","prev","BehaviorSubject$$1","AsyncSubject","hasNext","ReplayEvent","ReplaySubject","windowTime","_events","_bufferSize","_windowTime","_getNow","_trimBufferThenGetEvents","queue_1","eventsCount","spliceCount","time","RaceSubscriber","hasFirst","subscriptions","RepeatSubscriber","RepeatWhenSubscriber","notifier","sourceIsBeingSubscribedTo","retries","retriesSubscription","subscribeToRetries","RetrySubscriber","RetryWhenSubscriber","errors","SampleSubscriber","SampleTimeSubscriber","dispatchNotification","SequenceEqualCompareToSubscriber","SequenceEqualSubscriber","compareTo","comparor","_oneComplete","checkValues","areEqual","nextB","SingleSubscriber","seenValue","applySingleValue","singleValue","SkipSubscriber","SkipLastSubscriber","_skipCount","_count","_ring","skipCount","currentIndex","oldValue","SkipUntilSubscriber","isInnerStopped","SkipWhileSubscriber","skipping","tryCallPredicate","Boolean","SwitchMapSubscriber","_tryNotifyNext","SwitchMapToSubscriber","inner","tryResultSelector","TakeSubscriber","TakeWhileSubscriber","nextOrComplete","predicateResult","DoSubscriber","nextOrObserver","safeSubscriber","syncErrorThrowable","syncErrorThrown","syncErrorValue","defaultThrottleConfig","leading","trailing","throttle","ThrottleOperator","ThrottleSubscriber","_leading","_trailing","_hasTrailingValue","_trailingValue","tryDurationSelector","_sendTrailing","ThrottleTimeSubscriber","dispatchNext$2","TimeInterval","interval","TimeIntervalSubscriber","lastTime","span","TimeoutError","TimeoutSubscriber","absoluteTimeout","waitFor","errorInstance","action","scheduleTimeout","dispatchTimeout","TimeoutWithSubscriber","withObservable","WindowSubscriber","openWindow","prevWindow","newWindow","WindowCountSubscriber","windowSize","startWindowEvery","windows","c","window_1","CountedSubject","_numberOfNextedValues","WindowTimeSubscriber","windowTimeSpan","windowCreationInterval","maxWindowSize","dispatchWindowClose","dispatchWindowCreation","dispatchWindowTimeSpanOnly","numberOfNextedValues","closeWindow","window_2","timeSpanState","WindowToggleSubscriber","openSubscription","unsubscribeClosingNotification","closingNotification","WithLatestFromSubscriber","found","StaticIterator","ZipSubscriber","iterators","StaticArrayIterator","ZipBufferIterator","stillUnsubscribed","notifyInactive","checkIterators","shouldComplete","nextResult","isComplete","debounceTime$2","debounceTime_1","distinctUntilChanged$4","distinctUntilChanged_1","distinctUntilChanged","filter$2","filter_1","map$4","map_1","PageHeaderCustomMenuDirective","throttle_1","PageHeaderService","items$","selected$","selectedRoot$","secondary$","getRoot","select","isParentOf","selectParents","deselect","_item","setItems","items","setParent","setSecondaryNavigation","enabled","child","node","PageHeaderComponent","_pageHeaderService","alignment","condensed","backVisible","secondaryNavigationAlignment","secondaryNavigationAutoselect","backClick","_crumbs","crumbs","_familyBackground","_familyForeground","secondaryNavigation","goBack","logo","iconMenus","familyBackground","familyForeground","customMenus","read","PageHeaderIconMenuComponent","menu","PageHeaderNavigationDropdownItemComponent","dropdownOpen","_hover$","hoverStart","hoverLeave","PageHeaderNavigationItemComponent","elementRef","dropdowns","PageHeaderNavigationComponent","resizeService","indicatorVisible","indicatorX","indicatorWidth","addResizeListener","updateSelectedIndicator","menuItems","offsetLeft","getPropertyValue","ResizeService","PageHeaderModule","BreadcrumbsModule","ResizeModule","ProgressBarComponent","indeterminate","trackColor","barColor","ProgressBarModule","RADIOBUTTON_VALUE_ACCESSOR","RadioButtonComponent","clickable","onTouchedCallback","onChangeCallback","checkItem","keyDown","RadioButtonModule","SearchBuilderService","queryChange","validationChange","_componentId","_components","_validation","registerComponent","component","cmp","registerComponents","components","getComponent","setQuery","getQuery","queryHasChanged","setValid","keys","generateComponentId","SearchBuilderGroupService","_searchBuilderService","init","_id","field","SearchBuilderGroupComponent","searchBuilderGroupService","addText","showPlaceholder","removeField","SearchBuilderOutletDirective","componentDefinition","uxSearchBuilderOutlet","componentFactory","createComponent","uxSearchBuilderOutletContext","BaseSearchComponent","_searchBuilderGroupService","validate","validation","SearchTextComponent","label","SearchDateComponent","SearchDateRangeComponent","fromValue","toValue","fromLabel","toLabel","fromPlaceholder","toPlaceholder","setHours","SearchSelectComponent","multiple","dropDirection","allowNull","maxHeight","pageSize","SearchBuilderComponent","_querySubscription","_validSubscription","PopoverConfig","PopoverContainerComponent","PopoverDirective","_popover","addEventListener","popover","popoverContext","popoverTitle","PopoverModule","TypeaheadOptionEvent","TypeaheadKeyService","handleKey","moveHighlight","TypeaheadComponent","typeaheadElement","cdRef","_open","openChange","openOnFilterChange","selectFirst","optionSelected","_highlighted","visibleOptions","loading","optionApi","getKey","getDisplay","getDisplayHtml","loadOptionsCallback","pageNum","originalValue","initOptions","loadingTemplate","_defaultLoadingTemplate","optionTemplate","_defaultOptionTemplate","noOptionsTemplate","_defaultNoOptionsTemplate","ngOnChanges","currentValue","updateOptions","optionMousedownHandler","optionClickHandler","display","displayText","displayHtml","matchIndex","highlight","substr","isInfiniteScroll","disabledOptions","optionKey_1","selectedOption","d","newIndex","indexOfVisibleOption","highlighted","inBounds","isHighlighted","normalisedInput_1","optionKey_2","el","[class.drop-up]","[style.maxHeight]","InfiniteScrollLoadButtonDirective","_template","_load","load","clickTarget","getNextElementSibling","nextSibling","nodeType","InfiniteScrollLoadingDirective","InfiniteScrollDirective","_collection","loadOnInit","loadOnScroll","collectionChange","loadingEvent","loadedEvent","loadErrorEvent","_nextPageNum","_updateRequests","_isLoading","_isExhausted","_loadButtonEnabled","_loadButtonSubscriptions","_canLoadManually","combineLatest","isLoading","isExhausted","loadButtonEnabled","scrollElement","requests","partition","check","auditTime","doRequest","attachEventHandlers","canLoad","_loadButtonQuery","loadButton","_loadingIndicatorQuery","attachLoadButtonEvents","loadNextPage","previousValue","detachEventHandlers","pageNumber","_pages","collection","request","reload","page","reloadPage","onDomChange","_scrollEventSub","fromEvent","_domObserver","MutationObserver","childList","subtree","disconnect","s","needsData","beginLoading","loadResult","subscription_1","setPageItems","endLoading","reason","endLoadingWithError","clientHeight","InfiniteScrollLoadingEvent","defaultPrevented","reduce","InfiniteScrollLoadedEvent","InfiniteScrollLoadErrorEvent","_defaultPrevented","exhausted","InfiniteScrollModule","ScrollIntoViewService","scrollIntoView","scrollParent","offsetBottom","ScrollIntoViewIfDirective","scrollIntoViewService","condition","ScrollIntoViewIfModule","TypeaheadModule$1","SELECT_VALUE_ACCESSOR","SelectComponent","_document","_typeaheadKeyService","_input","inputChange","_dropdownOpen","dropdownOpenChange","propagateChange","input","firstChange","inputClickHandler","selectInputText","inputBlurHandler","inputKeyHandler","singleTypeahead","singleOptionSelected","singleInput","multipleTypeahead","TagInputEvent","tag","TAGINPUT_VALUE_ACCESSOR","TagInputComponent","TAGINPUT_VALIDATOR","NG_VALIDATORS","_tags","tagsChange","addOnPaste","enforceTagLimits","freeInput","maxTags","MAX_VALUE","minTags","showTypeaheadOnClick","tagDelimiters","tagClass","validationErrors","tagAdding","tagAdded","tagInvalidated","tagRemoving","tagRemoved","tagClick","selectedIndex","tagApi","getTagDisplay","removeTagAt","canRemoveTagAt","inputValid","onChangeHandler","onTouchedHandler","tagTemplate","_defaultTagTemplate","connectTypeahead","typeaheadQuery","tags","tagRangeError","given","keyHandler","inputCursorPos","tagInput","selectionStart","hasSelection","selectionEnd","tagSelected","isValidTagIndex","inputLength","canNavigateLeft","canNavigateRight","commitTypeahead","commitInput","backspace","moveSelection","getKeyChar","focusOutHandler","tagClickHandler","tagClickEvent","selectTagAt","inputFocusHandler","selectInput","inputPasteHandler","clipboardData","getData","commit","typeaheadOptionSelectedHandler","addTag","newTags","splitTagInput","allValid","_d","newTags_1","newTag","validateTag","_e","newTags_2","createTag","isValidSelectIndex","isSelected","tagIndex","tagRemovingEvent","isInputVisible","hasFocus","tagValue","inputPattern","tagPattern","pattern","createTagHandler","displayValue","tagAddingEvent","tagValues","escapedDelimiters","delimiterRegex","[class.disabled]","[class.focus]","[class.invalid]","FocusIfDirective","focusIf","FocusIfModule","TagInputModule","SelectModule","SearchBuilderModule","DateTimePickerModule","SliderComponent","colorService","_changeDetectorRef","sliderType","SliderType","sliderStyle","SliderStyle","sliderSize","SliderSize","sliderThumb","SliderThumb","sliderTickType","SliderTickType","sliderThumbEvent","SliderThumbEvent","sliderCalloutTrigger","SliderCalloutTrigger","tracks","lower","middle","upper","thumbs","drag","order","ticks","Value","handles","Button","callout","None","background","formatter","track","Wide","snap","SliderSnap","major","labels","minor","colors","range","higher","updateValues","setThumbState","Lower","Upper","clone","ngDoCheck","detectValueChange","updateTooltipPosition","getFormattedValue","thumb","getThumbState","updateTooltips","thumbEvent","DragStart","DragEnd","MouseOver","MouseLeave","Persistent","Drag","Hover","Dynamic","getTooltip","updateTooltipText","getTooltipElement","lowerTooltip","upperTooltip","thumbWidth","tooltipElement","Narrow","tooltipWidth","tooltipPosition","ceil","Range","preventTooltipOverlap","trackWidth","diff","clamp","updateThumbPosition","eventPosition","MouseEvent","clientX","touches","mouseX","trackBounds","fraction","validateValue","snapToTick","setThumbValue","updateOrder","snapTarget","Minor","tick","Major","lowerLimit","upperLimit","reduceRight","deepMerge","updateTrackColors","updateTicks","lowerValue","low","upperValue","high","toFixed","lowerPosition","upperPosition","majorOptions","minorOptions","majorTicks","getTicks","showTicks","minorTicks","unionTicks","join","getSteps","output","showLabels","tk","sort","t1","t2","value1","value2","isSliderValue","obj1","obj2","Line","All","SliderModule","DragModule","SparkComponent","barHeight","_theme","_barColor","_trackColor","inlineLabel","topLeftLabel","topRightLabel","bottomLeftLabel","bottomRightLabel","theme","SparkModule","TimelineComponent","TimelineEventComponent","badgeColor","badgeTitle","TimelineModule","TOGGLESWITCH_VALUE_ACCESSOR","ToggleSwitchComponent","toggleChecked","keydown","ToggleSwitchModule","KEYS","ToolbarSearchFieldDirective","_ngModel","submit","blur","keydownHandler","text","NgModel","ToolbarSearchButtonDirective","clicked","clickHandler","ToolbarSearchComponent","inverse","search","_expanded","_position","_backgroundColor","_field","params","initialWidth","_button","createPlaceholder","animationStart","toState","enablePlaceholder","animationDone","_placeholder","visibility","insertBefore","_expandedAnimation","ToolbarSearchModule","FrameExtractionService","createVideoPlayer","videoPlayer","preload","src","createCanvas","canvas","goToFrame","currentTime","getThumbnail","observer","getContext","drawImage","image","toDataURL","getFrameThumbnail","frameSubscription","getFrameThumbnails","start","end","skip","frames","frame","FrameExtractionModule","MediaPlayerService","_frameExtractionService","loaded","playing","initEvent","abortEvent","canPlayEvent","canPlayThroughEvent","durationChangeEvent","endedEvent","errorEvent","loadedDataEvent","loadedMetadataEvent","loadStartEvent","pauseEvent","playEvent","playingEvent","rateChangeEvent","seekedEvent","seekingEvent","stalledEvent","suspendEvent","timeUpdateEvent","volumeChangeEvent","waitingEvent","mediaClickEvent","fullscreenEvent","quietModeEvent","progressEvent","setInterval","buffered","_mediaPlayer","clearInterval","_fullscreen","_quietMode","audioTracks","autoplay","TimeRanges","crossOrigin","currentSrc","defaultMuted","defaultPlaybackRate","ended","loop","muted","networkState","paused","playbackRate","played","readyState","seekable","seeking","textTracks","TextTrackList","videoTracks","VideoTrackList","volume","setMediaPlayer","mediaPlayer","_hostElement","togglePlay","play","pause","canPlayType","addTextTrack","kind","language","requestFullscreen","webkitRequestFullscreen","msRequestFullscreen","mozRequestFullScreen","exitFullscreen","webkitExitFullscreen","msExitFullscreen","mozCancelFullScreen","fullscreenChange","fullscreen","webkitIsFullScreen","mozFullScreen","msFullscreenElement","toggleFullscreen","getFrames","AudioService","_http","getAudioFileMetadata","mediaElement","responseType","ResponseContentType","Blob","response","filename","lastIndexOf","extension","blob","getWaveformFromUrl","url","AudioContext","_audioContext","createVolumeNode","createAnalyserNode","ArrayBuffer","getAudioBuffer","arrayBuffer","audioBuffer","createBufferSource","dataPoints","channels","_audioBuffer","numberOfChannels","channelIdx","getChannelData","Float32Array","getWaveformPoints","waveform","_loop_5","points","channel","getOfflineAudioContext","decodeAudioData","OfflineAudioContext","sampleRate","disconnectSource","_audioBufferSource","_analyserNode","_gainNode","createGain","createAnalyser","Http","AudioServiceModule","HttpModule","MediaPlayerComponent","mediaPlayerService","_audioService","hovering","switchMap","quietMode","_playerRef","audioMetadata","_playing$","_paused$","_clicked$","_loading$","(keydown.Space)","[class.standard]","[class.fullscreen]","[class.quiet]","[class.hover]","[class.video]","[class.audio]","(mouseenter)","(mouseleave)","(document:webkitfullscreenchange)","(document:mozfullscreenchange)","(document:MSFullscreenChange)","_trackBarRef","MediaPlayerBaseExtensionDirective","MediaPlayerTimelineExtensionComponent","mouseDown","scrub","mousedown$","mousemove$","mouseup$","_mouseEventSubscription","takeUntil","updateScrub","bounds","timelineRef","offsetX","(document:mouseup)","MediaPlayerControlsExtensionComponent","volumeActive","volumeDragging","_volume","_previousVolume","mouseenter$","volumeIcon","mouseenterContainer$","volumeContainer","mouseleaveContainer$","toggleMute","setFullscreen","goToStart","goToEnd","dragStart","dragMove","volumeSlider","pageX","dragEnd","DurationPipe","seconds","minutes","hours","days","pad","DurationPipeModule","FileSizePipe","log","FileSizePipeModule","MediaPlayerModule","VirtualScrollLoadingDirective","VirtualScrollLoadButtonDirective","VirtualScrollCellDirective","VirtualScrollComponent","cells","loadingComplete","_height","cellHeight","setupObservable","renderCells","isFirstChange","getVisibleCells","startCell","endCell","getTotalHeight","cellTemplate","loadingIndicatorTemplate","loadButtonTemplate","VirtualScrollModule","FixedHeaderTableDirective","tablePaging","_tableHead","_tableBody","setLayout","getTable","clientWidth","tableHeight","FixedHeaderTableModule","HelpCenterService","registerItem","unregisterItem","itm","HelpCenterItemDirective","_helpCenterService","uxHelpCenterItem","HelpCenterModule","HoverActionService","_focused","_hovered","_actions","register","unregister","actn","setContainer","setFocusState","updateVisibility","setHoverState","containerHasFocus","focusActionAtIndex","actionHasFocus","getFocusedActionIndex","getFocusedAction","focused","HoverActionContainerDirective","_hoverActionService","active$","onHover","onLeave","[class.hover-action-container-active]","[tabindex]","HoverActionDirective","[class.hover-action-active]","[class.hover-action-focused]","HoverActionModule","LayoutSwitcherItemDirective","getLayout","getConfig","activate","_embeddedView","deactivate","LayoutSwitcherDirective","_width","updateActiveLayout","getActiveLayout","_layouts","layout","minWidth","maxWidth","_activeLayout","requestAnimationFrame","LayoutSwitcherModule","SelectionStrategy","selectionService","mousedown","click","selectAll","dataset","RowSelectionStrategy","_selection","ctrlKey","shiftKey","multipleSelect","singleSelect","KeyCode","UpArrow","DownArrow","navigate","Spacebar","strategy","setSelectionStart","clearSelection","getSelectedItems","setSelectionEnd","endIdx","sibling","activateSibling","SimpleSelectionStrategy","SelectionService","_rowStrategy","_simpleStrategy","clickEnabled","keyboardEnabled","selection$","selections","selection","selectionHasMutated","setMode","mode","setDisabled","SelectionItemDirective","_selectionService","_selected","uxSelectionItem","SelectionDirective","uxSelectionChange","uxSelection","clickSelection","keyboardSelection","SelectionModule","ReorderableHandleDirective","ReorderableModelDirective","uxReorderableModel","dragula","((dragulaNamespace)).default","dragulaNamespace","ReorderableDirective","reorderableModelChange","reorderStart","reorderCancel","reorderEnd","runOutsideAngular","_instance","moves","canMove","mirrorContainer","on","run","model","getModelFromElement","onDragEnd","onDrop","onClone","reorderableModel","_model","models","setTableCellWidths","handle","_handle","tagName","sourceCells","targetCells","cell","ReorderableModule","StringFilterPipe","it","StringFilterModule","CookieAdapter","getItem","cookie","setItem","removeItem","eqPos","toUTCString","getSupported","LocalStorageAdapter","localStorage","SessionStorageAdapter","sessionStorage","PersistentDataService","PersistentDataStorageType","LocalStorage","getAdapter","Cookie","SessionStorage","PersistentDataModule","StorageAdapter","ContactsNg1Component","overflowClick","UpgradeComponent","contacts","organization","maxContacts","ExpandInputNg1Component","elname","placeHolder","clearTextIcon","closeSearch","expandAlways","onEnter","FloatingActionButtonNg1Component","fabTooltip","fabTooltipPlacement","FlotNg1Component","onPlotClick","onPlotHover","donutLabels","GridNg1Component","columns","plugins","HierarchyBarNg1Component","selectNode","MarqueeWizardNg1Component","wizardStepsChange","wizardIcon","wizardSteps","buttonOptions","onChanging","onFinished","onCanceled","isVisited","sideInfo","NestedDonutNg1Component","OrganizationChartNg1Component","dataChange","optionsChange","PartitionMapNg1Component","chartData","chartOptions","chartLoading","PeityBarChartNg1Component","PeityLineChartNg1Component","PeityPieChartNg1Component","PeityUpdatingLineChartNg1Component","method","updateinterval","SankeyNg1Component","chartSize","SearchToolbarNg1Component","searchTypeahead","onSearch","SelectTableNg1Component","selectKey","searchText","selectHiddenItems","SLIDER_CHART_VALUE_ACCESSOR","SliderChartNg1Component","ngModelChange","sliderOptions","ngModel","SocialChartNg1Component","api","communities","detailStyle","popoverStyle","nodeDetail","edgeDetail","nodePopover","edgePopover","forceAtlasDuration","nodeSizeAttribute","startMaximized","startMaximised","showMaximizeControl","showMaximiseControl","socialChartContainer","fullscreenButtonPosition","localStrings","chartTitle","titleDisplayTime","edgeWeightInfluence","minLabels","SortDirectionToggleNg1Component","sorters","descend","TreeGridNg1Component","currentRowChange","treeDataChange","treeData","currentRow","ThumbnailNg1Component","NavigationMenuService","_navigationMenuService","collapseAtWidth","setCollapseAtWidth","setDefaultCollapseAtWidth","navigationMenuServiceFactory","navigationMenuServiceProvider","useFactory","deps","PdfService","_pdfService","createTable","rows","pdfServiceFactory","pdfServiceProvider","TimeAgoService","_timeAgoService","setStrings","strings","timeSince","past","present","timeSinceNow","moment","timeAgoServiceFactory","timeAgoServiceProvider","HybridModule","BreadcrumbsComponent","clickCrumb","crumb","CHECKBOX_VALUE_ACCESSOR","CheckboxComponent","indeterminateValue","ColumnSortingComponent","stateChange","columnSortingState","ColumnSortingState","initParent","column","NoSort","orderNumber","changeState","Ascending","Descending","toggleColumn","ColumnSortingDirective","singleSort","ColumnSortingModule","tryCatchTarget","tryCatcher","UnsubscriptionError","flattenUnsubscriptionErrors","errs","UnsubscriptionError_1","Subscription$$1","_parents","hasErrors","isFunction_1","isFunction","sub","isObject_1","isObject","teardown","_addParent","tmp","subscriptionIndex","empty","__window","__self","self","WorkerGlobalScope","_root","global","Symbol","for","$$rxSubscriber","destinationOrNext","Observer_1","SafeSubscriber","Subscriber_2","_parentSubscriber","observerOrNext","_context","__tryOrSetError","__tryOrUnsub","wrappedComplete","filter_2","FilterOperator","FilterSubscriber","Action","work","AsyncAction","pending","recycleAsyncId","requestAsyncId","flush","execute","_execute","errored","errorValue","actions","Action_1","Scheduler","SchedulerAction","AsyncScheduler","scheduled","Scheduler_1","AsyncScheduler_1","AsyncAction_1","getSymbolObservable","$$observable","pipeFromArray","fns","Observable$$1","sink","toSubscriber_1","toSubscriber","PromiseCtor","Rx","reject","operations","pipe_1","toPromise","do","accept","toObservable","throw","undefinedValueNotification","completeNotification","delay_2","delayFor","DelayOperator","DelaySubscriber","queue","delay_1","_schedule","scheduleNotification","DelayMessage","map_2","MapOperator","MapSubscriber","MapOperator_1","distinctUntilChanged_2","compare","DistinctUntilChangedOperator","DistinctUntilChangedSubscriber","hasKey","y","DashboardService","_rowHeight","widgets$","options$","dimensions$","height$","dimensions","placeholder$","layout$","stacked$","setLayoutData","stacked","updateWhenStacked","renderDashboard","setDashboard","dashboard","_dashboard","addWidget","widget","removeWidget","_widget","setDimensions","getLayoutData","widgets","col","getColumn","row","getRow","colSpan","getColumnSpan","rowSpan","getRowSpan","setColumn","setRow","setColumnSpan","setRowSpan","rowHeight","columnWidth","setDashboardLayout","_actionWidget","render","setWidgetPosition","setDashboardHeight","getWidgetsByOrder","w1","w2","w1Position","w2Position","success","getPositionAvailable","columnSpan","ignoreWidget","spaces","getOccupiedSpaces","_loop_1","_loop_2","block","state_1","state_2","forEachBlock","onResizeStart","_mouseEvent","bringToFront","onResizeDrag","centerX","centerY","mouseY","ActionDirection","Right","Left","difference","Bottom","Top","minHeight","TopLeft","TopRight","BottomLeft","BottomRight","currentWidth","currentHeight","setBounds","setPlaceholderBounds","updateWidgetPositions","onResizeEnd","commitWidgetChanges","shiftWidgetsUp","onDragStart","setWidgetOrigin","cacheWidgets","_widgetOrigin","onDrag","pageY","restoreWidgets","shiftWidgets","getRowHeight","_cache","ignoreActionWidget","wgt","widgetsToMove","_loop_3","_loop_4","this_1","space","unmovedWidgets","grid","getRequiredSpacesFromPoint","gridSpace","getColumnCount","canWidgetMoveRight","validatePlaceholderPosition","canWidgetMoveLeft","distance","moveWidgetDown","shiftDirection","getWidgetsAtPosition","getColumnWidth","performMove","targetSpaces","moveable","ignoreResizing","Rounding","RoundDownBelowHalf","RoundUpOverHalf","getPlaceholderColumn","getPlaceholderRow","getPlaceholderColumnSpan","getPlaceholderRowSpan","rowCount","padding","getColumnFromPx","Move","RoundDown","overflow","getRowFromPx","rounding","half","RoundUp","getRowCount","emptyRow","sendToBack","stable","DashboardComponent","dashboardService","layoutChange","dashboardElement","onResize","DashboardWidgetComponent","resizable","zIndex","_column","regular","_row","_columnSpan","_rowSpan","random","getStackableValue","setStackableValue","dragstart","dragend","symbolIteratorPonyfill","getOwnPropertyNames","$$iterator","InnerSubscriber","outerSubscriber","InnerSubscriber_1","obs","takeUntil_2","TakeUntilOperator","TakeUntilSubscriber","DragDirective","ngZone","moveevent","DashboardDragHandleDirective","rendererFactory","createRenderer","displayMode","iframe","setAttribute","waitUntilReady","attachListener","contentWindow","contentDocument","RendererFactory2","debounceTime_2","DebounceTimeOperator","DebounceTimeSubscriber","debouncedSubscription","clearDebounce","debouncedNext","ResizeDirective","_resizeService","uxResize","DashboardModule","TimepickerActions","WRITE_VALUE","payload","changeHours","CHANGE_HOURS","changeMinutes","CHANGE_MINUTES","changeSeconds","CHANGE_SECONDS","setTime","SET_TIME_UNIT","updateControls","UPDATE_CONTROLS","dex","hoursPerDay","hoursPerDayHalf","minutesPerHour","secondsPerMinute","isValidDate","getHours","toNumber","parseHours","isPM","hour","NaN","parseMinutes","minute","parseSeconds","parseTime","changeTime","createDate","getMinutes","getSeconds","getFullYear","getMonth","getDate","getMilliseconds","padNumber","isInputValid","canChangeValue","readonlyInput","mousewheel","arrowkeys","getControlsValue","hourStep","minuteStep","secondsStep","showSpinners","showMeridian","showSeconds","meridians","TimepickerConfig","showMinutes","controls","canIncrementHours","canIncrementMinutes","canIncrementSeconds","canDecrementHours","canDecrementMinutes","canDecrementSeconds","timepickerReducer","_newTime","_newControlsState","res","_newHour","_newMinutes","_newSeconds","timepickerControls","_newState","MiniStore","_dispatcher","_reducer","state$","pathOrMapFn","mapped$","store","QueueAction","QueueScheduler","QueueAction_1","MiniState","_initialState","actionsDispatcher$","reducer","actionInQueue$","observeOn","scan","TimepickerStore","TIMEPICKER_CONTROL_VALUE_ACCESSOR","TimepickerComponent","_cd","_store","_timepickerActions","invalidHours","invalidMinutes","invalidSeconds","onTouched","_renderTime","controlsState","meridian","prevDef","$event","wheelSign","updateHours","_updateTime","updateMinutes","updateSeconds","_seconds","_minutes","toggleMeridian","_hours","getUTCSeconds","encapsulation","ViewEncapsulation","TimepickerModule","CHECKBOX_CONTROL_VALUE_ACCESSOR","ButtonCheckboxDirective","btnCheckboxTrue","btnCheckboxFalse","trueValue","falseValue","RADIO_CONTROL_VALUE_ACCESSOR","ButtonRadioGroupDirective","cdr","ButtonRadioDirective","btnRadio","attributes","uncheckable","_onChange","removeAttribute","ButtonsModule","gridify","list","compareDays","day1","day2","months","monthsShort","month","weekdaysShort","weekday","DateTimePickerConfig","showDate","showTime","showTimezone","weekdays","nowBtnText","timezones","DateTimePickerService","activeDate","DatePickerMode","Day","year","getTime","DateTimePickerComponent","dateTimePickerService","dateChange","timezoneChange","_timezone","timezone","zone","setToNow","timePickerComponent","setDefaultTimezone","Month","Year","DateTimePickerDayViewComponent","merge","setDate","getDay","dates","dateRange","week","today","isToday","currentMonth","isCurrentMonth","showMonthPicker","DateTimePickerMonthViewComponent","_dateTimePickerService","currentDate","showDayPicker","getMonthName","showYearPicker","DateTimePickerYearViewComponent","_page","years","currentYear","decade","getDecade","DateTimePickerHeaderComponent","canAscend","ascend","DateTimePickerTimeViewComponent","DatePickerMeridian","AM","getTimezoneOffset","PM","setMeridian","previousTimezone","currentZone","nextTimezone","EboxComponent","EboxHeaderDirective","EboxContentDirective","EboxModule"],"mappings":"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"}
