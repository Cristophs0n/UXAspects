webpackJsonp([0],Array(1337).concat([function(e,t,n){"use strict";var r=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i},o=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(t,"__esModule",{value:!0});var a=n(1),i=n(36),s=n(35),l=n(19),d=n(118),c=n(205),p=n(207),u=n(1430),h=n(1435),m=n(1429),f=n(1431),b=n(1433),g=n(1427),v=n(1432),y=n(1428),w=n(1434),x=n(1436),C=n(1437),T=n(1438),k=n(1444),D=n(1443),S=n(1445),j=n(1446),P=n(1451),O=n(1448),_=n(1449),R=n(1459),A=n(1471),N=n(1447),M=n(1506),I=n(1503),H=n(1504),L=n(1505),z=n(1507),F=n(1508),$=n(1509),q=n(1510),B=n(1511),E=n(1512),J=n(1513),U=n(1514),V=n(1515),W=n(1516),G=n(1518),K=n(1517),Y=n(1519),X=n(1520),Q=n(1521),Z=n(1522),ee=n(1523),te=n(1524),ne=n(1450),re=n(1452),oe=n(1453),ae=n(1454),ie=n(1455),se=n(1456),le=n(1457),de=n(1472),ce=n(1473),pe=n(1475),ue=n(1477),he=n(1474),me=n(1476),fe=n(1482),be=n(1481),ge=n(1480),ve=n(1478),ye=n(1479),we=n(1483),xe=n(1484),Ce=n(1485),Te=n(1486),ke=n(1487),De=n(1488),Se=n(1489),je=n(1490),Pe=n(1492),Oe=n(1491),_e=n(1493),Re=n(1494),Ae=n(1495),Ne=n(1502),Me=n(1500),Ie=n(1499),He=n(1501),Le=n(1528),ze=n(1526),Fe=n(1527),$e=n(1525),qe=n(1529),Be=n(1533),Ee=n(1530),Je=n(1531),Ue=n(1532),Ve=n(1538),We=n(1537),Ge=n(1536),Ke=n(1535),Ye=n(1551),Xe=n(1552),Qe=n(1550),Ze=n(1539),et=n(1542),tt=n(1541),nt=n(1540),rt=n(1544),ot=n(1546),at=n(1545),it=n(1547),st=n(1543),lt=n(1548),dt=n(1549),ct=n(1534),pt=n(1458),ut=n(1460),ht=n(1461),mt=n(1470),ft=n(1439),bt=n(1441),gt=n(1440),vt=n(1442),yt=n(1465),wt=n(1462),xt=n(1463),Ct=n(1464),Tt=n(1466),kt=n(1497),Dt=n(1498),St=n(1496),jt=n(1469),Pt=n(1468),Ot=n(1467),_t=n(206),Rt=n(119),At=[u.ComponentsGroupedButtonsNg1Component,h.ComponentsToggleButtonsNg1Component,m.ComponentsFloatingActionButtonNg1Component,f.ComponentsPaginationNg1Component,b.ComponentsSingleToggleButtonNg1Component,g.ComponentsCheckboxButtonsNg1Component,v.ComponentsRadioButtonsNg1Component,y.ComponentsDropdownNg1Component,w.ComponentsThumbnailNg1Component,x.ComponentsComponentListNg1Component,C.ComponentsContactsNg1Component,T.ComponentsContactsOverflowNg1Component,k.ComponentsDraggableCardsNg1Component,D.ComponentsDraggableCardsListViewNg1Component,S.ComponentsDraggablePanelsNg1Component,j.ComponentsDraggablePanelsViewsNg1Component,P.ComponentsFacetsNg1Component,O.ComponentsCustomFacetsNg1Component,_.ComponentsDynamicFacetsNg1Component,R.ComponentsCheckboxComponent,A.ComponentsToggleSwitchComponent,N.ComponentsEboxComponent,M.ComponentsDetailRowResponsiveNg1Component,I.ComponentsColumnVisibilityNg1Component,H.ComponentsCustomResponsiveTableNg1Component,L.ComponentsDetailRowHeaderNg1Component,z.ComponentsDynamicFiltersNg1Component,F.ComponentsFiltersNg1Component,$.ComponentsFixedHeaderTableNg1Component,q.ComponentsGroupingNg1Component,B.ComponentsHoverActionsNg1Component,E.ComponentsIndicesNg1Component,J.ComponentsLayoutSwitchingNg1Component,U.ComponentsListHoverActionsNg1Component,V.ComponentsMultipleColumnSortingNg1Component,W.ComponentsMultipleSelectActionsNg1Component,K.ComponentsMultipleSelectionRowNg1Component,G.ComponentsPreviewPaneNg1Component,Y.ComponentsPreviewPaneWindowNg1Component,X.ComponentsReorderableTableNg1Component,Q.ComponentsSingleColumnSortingNg1Component,Z.ComponentsSortDirectionToggleNg1Component,ee.ComponentsSortingNg1Component,te.ComponentsTraditionalMultipleSelectActionsNg1Component,ne.ComponentsFacetLineChartNg1Component,re.ComponentsProgrammaticSelectionNg1Component,oe.ComponentsFileUploadNg1Component,ae.ComponentsFlippableCardsNg1Component,ie.ComponentsGridNg1Component,se.ComponentsHelpCenterNg1Component,le.ComponentsHierarchyBarNg1Component,de.ComponentsHotkeysNg1Component,ce.ComponentsKeyboardServiceNg1Component,pe.ComponentsModalNg1Component,ue.ComponentsSquareModalNg1Component,he.ComponentsMarqueeModalNg1Component,me.ComponentsSideModalNg1Component,fe.ComponentsNotificationsNg1Component,be.ComponentsNotificationListNg1Component,ge.ComponentsNotificationDropdownNg1Component,ve.ComponentsAlertStylesNg1Component,ye.ComponentsDismissableStylesNg1Component,we.ComponentsCollapsiblePanelsNg1Component,xe.ComponentsItemDisplayPanelNg1Component,Ce.ComponentsItemDisplayPanelServiceNg1Component,Te.ComponentsModalInsetPanelNg1Component,ke.ComponentsSideInsetPanelNg1Component,De.ComponentsPopoverNg1Component,Se.ComponentsProgressBarNg1Component,je.ComponentsCustomScrollbarNg1Component,Pe.ComponentsInfiniteScrollNg1Component,Oe.ComponentsInfiniteScrollLoadMoreNg1Component,_e.ComponentsSearchBuilderNg1Component,Re.ComponentsSearchHistoryNg1Component,Ae.ComponentsSearchToolbarNg1Component,Ne.ComponentsSplitterNg1Component,Me.ComponentsNestedSplitterNg1Component,Ie.ComponentsLayoutSwitchingSplitterNg1Component,He.ComponentsSideInsetPanelSplitterNg1Component,Le.ComponentsTabsNg1Component,ze.ComponentsDetailedTabExampleNg1Component,Fe.ComponentsStackedTabsNg1Component,$e.ComponentsCardTabsNg1Component,qe.ComponentsTimelineNg1Component,Be.ComponentsTooltipsNg1Component,Ee.ComponentsOverflowTooltipNg1Component,Je.ComponentsSingleLineOverflowTooltipNg1Component,Ue.ComponentsStaticTooltipNg1Component,Ve.ComponentsUiRouterNg1Component,We.ComponentsTreeViewNg1Component,Ge.ComponentsTreeViewCompanionViewNg1Component,Ke.ComponentsTreeGridNg1Component,Ye.ComponentsWizardNg1Component,Xe.ComponentsWizardValidationNg1Component,Qe.ComponentsVerticalWizardNg1Component,Ze.ComponentsColorServiceNg1Component,et.ComponentsForceFocusNg1Component,tt.ComponentsFocusOnShowNg1Component,nt.ComponentsExpandingContentNg1Component,rt.ComponentsPdfServiceNg1Component,ot.ComponentsSafeTimeoutNg1Component,at.ComponentsSafeIntervalNg1Component,it.ComponentsTimeAgoServiceNg1Component,st.ComponentsListItemFilterNg1Component,lt.ComponentsWindowCommunicationServiceNg1Component,dt.ComponentsMarqueeWizardNg1Component,ct.ComponentsTreeGridAsynchronousLoadingNg1Component,pt.ComponentsCheckboxNg1Component,ut.ComponentsCustomDropdownNg1Component,ht.ComponentsExpandingTextAreaNg1Component,mt.ComponentsToggleSwitchNg1Component,ft.ComponentsDatePickerNg1Component,bt.ComponentsIntegratedDatePickerNg1Component,gt.ComponentsDateRangePickerNg1Component,vt.ComponentsTimePickerNg1Component,yt.ComponentsNumberPickerNg1Component,wt.ComponentsInlineDropdownNg1Component,xt.ComponentsInputExpandNg1Component,Ct.ComponentsInputMaskNg1Component,Tt.ComponentsRadioButtonNg1Component,kt.ComponentsSelectNg1Component,Dt.ComponentsSingleSelectTableNg1Component,St.ComponentsMultipleSelectTableNg1Component,jt.ComponentsTagsNg1Component,Pt.ComponentsSlidersNg1Component,Ot.ComponentsSliderChartsNg1Component],Nt=function(){function e(e,t){t.registerResolver(e)}return e}();Nt=r([a.NgModule({imports:[c.DocumentationComponentsModule,p.TabsModule,i.CommonModule,s.FormsModule,_t.WrappersModule,d.CheckboxModule,d.ToggleSwitchModule,l.RouterModule.forChild(Rt.ResolverService.resolveRouteComponents(n(121)))],exports:At,declarations:At,providers:[],entryComponents:At}),o("design:paramtypes",[a.ComponentFactoryResolver,Rt.ResolverService])],Nt),t.ComponentsPageModule=Nt},,function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t,n,r,o){this.snippets={compiled:{},raw:{}},this.loadSnippetsFromRequireContext(this.snippets.raw,o),this.snippets.compiled=this.snippets.raw}return e.prototype.loadSnippetsFromRequireContext=function(e,t){t&&t.keys().forEach(function(n){var r=n.replace("./","").replace(/\W+(\w)/g,function(e){return e[1].toUpperCase()});e[r]=t(n)})},e}();t.BaseDocumentationSection=r},function(e,t,n){function r(e){return n(o(e))}function o(e){var t=a[e];if(!(t+1))throw new Error("Cannot find module '"+e+"'.");return t}var a={"./contacts-contacts.js":1997,"./contacts-labels.js":1998,"./contacts-popover.html":215,"./contacts.css":1999,"./contacts.html":2e3,"./contacts.js":2001};r.keys=function(){return Object.keys(a)},r.resolve=o,e.exports=r,r.id=1340},function(e,t,n){function r(e){return n(o(e))}function o(e){var t=a[e];if(!(t+1))throw new Error("Cannot find module '"+e+"'.");return t}var a={"./sample.html":2006,"./sample.js":2007};r.keys=function(){return Object.keys(a)},r.resolve=o,e.exports=r,r.id=1341},function(e,t,n){function r(e){return n(o(e))}function o(e){var t=a[e];if(!(t+1))throw new Error("Cannot find module '"+e+"'.");return t}var a={"./sample.css":2008,"./sample.html":2009,"./sample.js":2010};r.keys=function(){return Object.keys(a)},r.resolve=o,e.exports=r,r.id=1342},function(e,t,n){function r(e){return n(o(e))}function o(e){var t=a[e];if(!(t+1))throw new Error("Cannot find module '"+e+"'.");return t}var a={"./sample.html":2011,"./sample.js":2012};r.keys=function(){return Object.keys(a)},r.resolve=o,e.exports=r,r.id=1343},function(e,t,n){function r(e){return n(o(e))}function o(e){var t=a[e];if(!(t+1))throw new Error("Cannot find module '"+e+"'.");return t}var a={"./sample.html":2013,"./sample.js":2014};r.keys=function(){return Object.keys(a)},r.resolve=o,e.exports=r,r.id=1344},function(e,t,n){function r(e){return n(o(e))}function o(e){var t=a[e];if(!(t+1))throw new Error("Cannot find module '"+e+"'.");return t}var a={"./sample.html":2054,"./sample.js":2055};r.keys=function(){return Object.keys(a)},r.resolve=o,e.exports=r,r.id=1345},function(e,t,n){function r(e){return n(o(e))}function o(e){var t=a[e];if(!(t+1))throw new Error("Cannot find module '"+e+"'.");return t}var a={"./sample.css":2058,"./sample.html":2059,"./sample.js":2060,"./template.html":2061};r.keys=function(){return Object.keys(a)},r.resolve=o,e.exports=r,r.id=1346},function(e,t,n){function r(e){return n(o(e))}function o(e){var t=a[e];if(!(t+1))throw new Error("Cannot find module '"+e+"'.");return t}var a={"./sample.html":2062};r.keys=function(){return Object.keys(a)},r.resolve=o,e.exports=r,r.id=1347},function(e,t,n){function r(e){return n(o(e))}function o(e){var t=a[e];if(!(t+1))throw new Error("Cannot find module '"+e+"'.");return t}var a={"./sample.html":2063,"./sample.js":2064};r.keys=function(){return Object.keys(a)},r.resolve=o,e.exports=r,r.id=1348},function(e,t,n){function r(e){return n(o(e))}function o(e){var t=a[e];if(!(t+1))throw new Error("Cannot find module '"+e+"'.");return t}var a={"./sample.html":2065,"./sample.js":2066};r.keys=function(){return Object.keys(a)},r.resolve=o,e.exports=r,r.id=1349},function(e,t,n){function r(e){return n(o(e))}function o(e){var t=a[e];if(!(t+1))throw new Error("Cannot find module '"+e+"'.");return t}var a={"./sample.html":2067,"./sample.js":2068};r.keys=function(){return Object.keys(a)},r.resolve=o,e.exports=r,r.id=1350},function(e,t,n){function r(e){return n(o(e))}function o(e){var t=a[e];if(!(t+1))throw new Error("Cannot find module '"+e+"'.");return t}var a={"./sample.css":2069,"./sample.html":2070,"./sample.js":2071};r.keys=function(){return Object.keys(a)},r.resolve=o,e.exports=r,r.id=1351},function(e,t,n){function r(e){return n(o(e))}function o(e){var t=a[e];if(!(t+1))throw new Error("Cannot find module '"+e+"'.");return t}var a={"./sample.html":2072,"./sample.js":2073};r.keys=function(){return Object.keys(a)},r.resolve=o,e.exports=r,r.id=1352},function(e,t,n){function r(e){return n(o(e))}function o(e){var t=a[e];if(!(t+1))throw new Error("Cannot find module '"+e+"'.");return t}var a={"./codepen.html":2074,"./codepen.js":2075,"./sample.html":2076};r.keys=function(){return Object.keys(a)},r.resolve=o,e.exports=r,r.id=1353},function(e,t,n){function r(e){return n(o(e))}function o(e){var t=a[e];if(!(t+1))throw new Error("Cannot find module '"+e+"'.");return t}var a={"./codepen.html":2077,"./codepen.js":2078,"./sample1.html":2079,"./sample1.js":2080,"./sample2.html":2081,"./sample2.js":2082,"./sample3.js":2083};r.keys=function(){return Object.keys(a)},r.resolve=o,e.exports=r,r.id=1354},function(e,t,n){function r(e){return n(o(e))}function o(e){var t=a[e];if(!(t+1))throw new Error("Cannot find module '"+e+"'.");return t}var a={"./autocomplete.html":2084,"./autocomplete.js":2085,"./codepen.html":2086,"./codepen.js":2087,"./custom.html":2088,"./custom.js":2089,"./sample.html":2090,"./sample.js":2091};r.keys=function(){return Object.keys(a)},r.resolve=o,e.exports=r,r.id=1355},function(e,t,n){function r(e){return n(o(e))}function o(e){var t=a[e];if(!(t+1))throw new Error("Cannot find module '"+e+"'.");return t}var a={"./sample.css":2092,"./sample.html":2093,"./sample.js":2094,"./sample1.html":2095,"./sample2.html":2096,"./sample3.html":2097};r.keys=function(){return Object.keys(a)},r.resolve=o,e.exports=r,r.id=1356},function(e,t,n){function r(e){return n(o(e))}function o(e){var t=a[e];if(!(t+1))throw new Error("Cannot find module '"+e+"'.");return t}var a={"./callback.js":2098,"./controller.js":2099,"./layout.html":2100,"./styles.css":2101};r.keys=function(){return Object.keys(a)},r.resolve=o,e.exports=r,r.id=1357},function(e,t,n){function r(e){return n(o(e))}function o(e){var t=a[e];if(!(t+1))throw new Error("Cannot find module '"+e+"'.");return t}var a={"./controller.js":2102,"./layout.html":2103};r.keys=function(){return Object.keys(a)},r.resolve=o,e.exports=r,r.id=1358},function(e,t,n){function r(e){return n(o(e))}function o(e){var t=a[e];if(!(t+1))throw new Error("Cannot find module '"+e+"'.");return t}var a={"./controller.js":2104,"./layout.html":2105,"./modalController.js":2106,"./modalLayout.example.html":2107,"./modalLayout.html":217,"./styles.css":2108};r.keys=function(){return Object.keys(a)},r.resolve=o,e.exports=r,r.id=1359},function(e,t,n){function r(e){return n(o(e))}function o(e){var t=a[e];if(!(t+1))throw new Error("Cannot find module '"+e+"'.");return t}var a={"./controller.js":2109,"./layout.html":2110,"./modalController.js":2111,"./modalLayout.html":218};r.keys=function(){return Object.keys(a)},r.resolve=o,e.exports=r,r.id=1360},function(e,t,n){function r(e){return n(o(e))}function o(e){var t=a[e];if(!(t+1))throw new Error("Cannot find module '"+e+"'.");return t}var a={"./controller.js":2112,"./layout.html":2113,"./modalContent.html":219,"./modalFooter.html":220,"./styles.css":2114};r.keys=function(){return Object.keys(a)},r.resolve=o,e.exports=r,r.id=1361},function(e,t,n){function r(e){return n(o(e))}function o(e){var t=a[e];if(!(t+1))throw new Error("Cannot find module '"+e+"'.");return t}var a={"./controller.js":2115,"./layout.html":2116,"./modalController.js":2117,"./modalLayout.example.html":2118,"./modalLayout.html":221};r.keys=function(){return Object.keys(a)},r.resolve=o,e.exports=r,r.id=1362},function(e,t,n){function r(e){return n(o(e))}function o(e){var t=a[e];if(!(t+1))throw new Error("Cannot find module '"+e+"'.");return t}var a={"./controller.js":2119,"./layout.html":2120};r.keys=function(){return Object.keys(a)},r.resolve=o,e.exports=r,r.id=1363},function(e,t,n){function r(e){return n(o(e))}function o(e){var t=a[e];if(!(t+1))throw new Error("Cannot find module '"+e+"'.");return t}var a={"./controller.js":2121,"./layout.html":2122};r.keys=function(){return Object.keys(a)},r.resolve=o,e.exports=r,r.id=1364},function(e,t,n){function r(e){return n(o(e))}function o(e){var t=a[e];if(!(t+1))throw new Error("Cannot find module '"+e+"'.");return t}var a={"./button.example.html":2123,"./controller.js":2124,"./dropdown.example.html":2125,"./layout.html":2126,"./modalController.js":2127,"./modalLayout.html":222,"./notification.html":223,"./styles.css":2128};r.keys=function(){return Object.keys(a)},r.resolve=o,e.exports=r,r.id=1365},function(e,t,n){function r(e){return n(o(e))}function o(e){var t=a[e];if(!(t+1))throw new Error("Cannot find module '"+e+"'.");return t}var a={"./controller.js":2129,"./layout.html":2130,"./modalController.js":2131,"./modalLayout.html":224,"./modalOptions.example.js":2132,"./notification.html":225,"./styles.css":2133};r.keys=function(){return Object.keys(a)},r.resolve=o,e.exports=r,r.id=1366},function(e,t,n){function r(e){return n(o(e))}function o(e){var t=a[e];if(!(t+1))throw new Error("Cannot find module '"+e+"'.");return t}var a={"./controller.example.js":2134,"./controller.js":2135,"./layout.example.html":2136,"./layout.html":2137,"./styles.css":2138};r.keys=function(){return Object.keys(a)},r.resolve=o,e.exports=r,r.id=1367},function(e,t,n){function r(e){return n(o(e))}function o(e){var t=a[e];if(!(t+1))throw new Error("Cannot find module '"+e+"'.");return t}var a={"./controller.js":2139,"./layout.html":2140};r.keys=function(){return Object.keys(a)},r.resolve=o,e.exports=r,r.id=1368},function(e,t,n){function r(e){return n(o(e))}function o(e){var t=a[e];if(!(t+1))throw new Error("Cannot find module '"+e+"'.");return t}var a={"./controller.example.js":2141,"./controller.js":2142,"./layout.html":2143,"./modalDOC.html":226,"./modalFooter.html":227,"./modalPDF.html":228,"./modalPPT.html":229,"./styles.css":2144};r.keys=function(){return Object.keys(a)},r.resolve=o,e.exports=r,r.id=1369},function(e,t,n){function r(e){return n(o(e))}function o(e){var t=a[e];if(!(t+1))throw new Error("Cannot find module '"+e+"'.");return t}var a={"./controller.js":2145,"./layout.html":2146,"./modalController.js":2147,"./modalLayout.html":230,"./styles.css":2148};r.keys=function(){return Object.keys(a)},r.resolve=o,e.exports=r,r.id=1370},function(e,t,n){function r(e){return n(o(e))}function o(e){var t=a[e];if(!(t+1))throw new Error("Cannot find module '"+e+"'.");return t}var a={"./layout.example.html":2149,"./layout.html":2150,"./panel.example.html":2151,"./styles.css":2152};r.keys=function(){return Object.keys(a)},r.resolve=o,e.exports=r,r.id=1371},function(e,t,n){function r(e){return n(o(e))}function o(e){var t=a[e];if(!(t+1))throw new Error("Cannot find module '"+e+"'.");return t}var a={"./controller.js":2153,"./layout.html":2154,"./nestedPopoverLayout.html":231,"./popoverLayout.html":232,"./styles.css":2155};r.keys=function(){return Object.keys(a)},r.resolve=o,e.exports=r,r.id=1372},function(e,t,n){function r(e){return n(o(e))}function o(e){var t=a[e];if(!(t+1))throw new Error("Cannot find module '"+e+"'.");return t}var a={"./controller.js":2156,"./layout.html":2157};r.keys=function(){return Object.keys(a)},r.resolve=o,e.exports=r,r.id=1373},function(e,t,n){function r(e){return n(o(e))}function o(e){var t=a[e];if(!(t+1))throw new Error("Cannot find module '"+e+"'.");return t}var a={"./controller.js":2158,"./layout.example.html":2159,"./layout.html":2160,"./styles.css":2161};r.keys=function(){return Object.keys(a)},r.resolve=o,e.exports=r,r.id=1374},function(e,t,n){function r(e){return n(o(e))}function o(e){var t=a[e];if(!(t+1))throw new Error("Cannot find module '"+e+"'.");return t}var a={"./controller.js":2162,"./itemTemplate.html":233,"./layout.html":2163,"./styles.css":2164};r.keys=function(){return Object.keys(a)},r.resolve=o,e.exports=r,r.id=1375},function(e,t,n){function r(e){return n(o(e))}function o(e){var t=a[e];if(!(t+1))throw new Error("Cannot find module '"+e+"'.");return t}var a={"./controller.js":2165,"./itemTemplate.html":234,"./layout.html":2166,"./styles.css":2167};r.keys=function(){return Object.keys(a)},r.resolve=o,e.exports=r,r.id=1376},function(e,t,n){function r(e){return n(o(e))}function o(e){var t=a[e];if(!(t+1))throw new Error("Cannot find module '"+e+"'.");return t}var a={"./addFieldPanel.html":235,"./addFieldPanel.js":2168,"./authorComponent.html":236,"./componentArray.example.js":2169,"./controller.js":2170,"./custodianComponent.html":124,"./custodianComponent.js":2171,"./custodianPanel.html":237,"./custodianPanel.js":2172,"./dateRangeComponent.html":238,"./dateRangeComponent.js":2173,"./fileNameComponent.html":239,"./fileTypesComponent.html":240,"./fileTypesComponent.js":2174,"./fileTypesPanel.html":241,"./fileTypesPanel.js":2175,"./keywordComponent.html":242,"./layout.html":2176,"./modalController.js":2177,"./modalLayout.example.html":2178,"./modalLayout.html":243,"./repositoryComponent.html":244,"./repositoryComponent.js":2179,"./repositoryPanel.html":245,"./repositoryPanel.js":2180,"./searchBuilderIdService.js":2181,"./searchBuilderPanelService.js":2182,"./searchGroup.example.html":2183,"./searchQuery.example.js":2184,"./styles.css":2185,"./textComponent.html":246};r.keys=function(){return Object.keys(a)},r.resolve=o,e.exports=r,r.id=1377},function(e,t,n){function r(e){return n(o(e))}function o(e){var t=a[e];if(!(t+1))throw new Error("Cannot find module '"+e+"'.");return t}var a={"./controller.js":2186,"./layout.html":2187,"./modalController.js":2188,"./modalLayout.html":247,"./styles.css":2189};r.keys=function(){return Object.keys(a)},r.resolve=o,e.exports=r,r.id=1378},function(e,t,n){function r(e){return n(o(e))}function o(e){var t=a[e];if(!(t+1))throw new Error("Cannot find module '"+e+"'.");return t}var a={"./controller.js":2190,"./layout.html":2191};r.keys=function(){return Object.keys(a)},r.resolve=o,e.exports=r,r.id=1379},function(e,t,n){function r(e){return n(o(e))}function o(e){var t=a[e];if(!(t+1))throw new Error("Cannot find module '"+e+"'.");return t}var a={"./sample.html":2192,"./sample.js":2193,"./sampleFull.js":2194,"./snippet.js":2195};r.keys=function(){return Object.keys(a)},r.resolve=o,e.exports=r,r.id=1380},function(e,t,n){function r(e){return n(o(e))}function o(e){var t=a[e];if(!(t+1))throw new Error("Cannot find module '"+e+"'.");return t}var a={"./sample.html":2196,"./sample.js":2197,"./sampleFull.js":2198};r.keys=function(){return Object.keys(a)},r.resolve=o,e.exports=r,r.id=1381},function(e,t,n){function r(e){return n(o(e))}function o(e){var t=a[e];if(!(t+1))throw new Error("Cannot find module '"+e+"'.");return t}var a={"./sample.html":2199,"./sample.js":2200,"./sampleFull.js":2201};r.keys=function(){return Object.keys(a)},r.resolve=o,e.exports=r,r.id=1382},function(e,t,n){function r(e){return n(o(e))}function o(e){var t=a[e];if(!(t+1))throw new Error("Cannot find module '"+e+"'.");return t}var a={"./controller.js":2202,"./layout.html":2203,"./styles.css":2204};r.keys=function(){return Object.keys(a)},r.resolve=o,e.exports=r,r.id=1383},function(e,t,n){function r(e){return n(o(e))}function o(e){var t=a[e];if(!(t+1))throw new Error("Cannot find module '"+e+"'.");return t}var a={"./layout.example.html":2205,"./layout.html":2206,"./styles.css":2207};r.keys=function(){return Object.keys(a)},r.resolve=o,e.exports=r,r.id=1384},function(e,t,n){function r(e){return n(o(e))}function o(e){var t=a[e];if(!(t+1))throw new Error("Cannot find module '"+e+"'.");return t}var a={"./controller.js":2208,"./layout.example.html":2209,"./layout.html":2210,"./styles.css":2211};r.keys=function(){return Object.keys(a)},r.resolve=o,e.exports=r,r.id=1385},function(e,t,n){function r(e){return n(o(e))}function o(e){var t=a[e];if(!(t+1))throw new Error("Cannot find module '"+e+"'.");return t}var a={"./controller.js":2212,"./fullHeight.example.css":2213,"./layout.example.html":2214,"./layout.html":2215,"./styles.css":2216};r.keys=function(){return Object.keys(a)},r.resolve=o,e.exports=r,r.id=1386},function(e,t,n){function r(e){return n(o(e))}function o(e){var t=a[e];if(!(t+1))throw new Error("Cannot find module '"+e+"'.");return t}var a={"./controller.js":2217,"./layout.html":2218};r.keys=function(){return Object.keys(a)},r.resolve=o,e.exports=r,r.id=1387},function(e,t,n){function r(e){return n(o(e))}function o(e){var t=a[e];if(!(t+1))throw new Error("Cannot find module '"+e+"'.");return t}var a={"./sample.css":2219,"./sample.html":2220,"./sample.js":2221};r.keys=function(){return Object.keys(a)},r.resolve=o,e.exports=r,r.id=1388},function(e,t,n){function r(e){return n(o(e))}function o(e){var t=a[e];if(!(t+1))throw new Error("Cannot find module '"+e+"'.");return t}var a={"./controller.js":2222,"./layout.html":2223,"./popover.controller.js":2224,"./popover.html":2225,"./service.js":2226,"./styles.css":2227};r.keys=function(){return Object.keys(a)},r.resolve=o,e.exports=r,r.id=1389},function(e,t,n){function r(e){return n(o(e))}function o(e){var t=a[e];if(!(t+1))throw new Error("Cannot find module '"+e+"'.");return t}var a={"./codepen.html":2228,"./codepen.js":2229,"./controller.js":2230,"./layout.html":2231,"./styles.css":2232};r.keys=function(){return Object.keys(a)},r.resolve=o,e.exports=r,r.id=1390},function(e,t){function n(e){throw new Error("Cannot find module '"+e+"'.")}n.keys=function(){return[]},n.resolve=n,e.exports=n,n.id=1391},function(e,t){function n(e){throw new Error("Cannot find module '"+e+"'.")}n.keys=function(){return[]},n.resolve=n,e.exports=n,n.id=1392},function(e,t,n){function r(e){return n(o(e))}function o(e){var t=a[e];if(!(t+1))throw new Error("Cannot find module '"+e+"'.");return t}var a={"./codepen.js":2233,"./controller.js":2234,"./layout.html":2235};r.keys=function(){return Object.keys(a)},r.resolve=o,e.exports=r,r.id=1393},function(e,t){function n(e){throw new Error("Cannot find module '"+e+"'.")}n.keys=function(){return[]},n.resolve=n,e.exports=n,n.id=1394},function(e,t,n){function r(e){return n(o(e))}function o(e){var t=a[e];if(!(t+1))throw new Error("Cannot find module '"+e+"'.");return t}var a={"./controller.js":2236,"./layout.html":2237,"./styles.css":2238};r.keys=function(){return Object.keys(a)},r.resolve=o,e.exports=r,r.id=1395},function(e,t){function n(e){throw new Error("Cannot find module '"+e+"'.")}n.keys=function(){return[]},n.resolve=n,e.exports=n,n.id=1396},function(e,t,n){function r(e){return n(o(e))}function o(e){var t=a[e];if(!(t+1))throw new Error("Cannot find module '"+e+"'.");return t}var a={"./sample.html":2239};r.keys=function(){return Object.keys(a)},r.resolve=o,e.exports=r,r.id=1397},function(e,t,n){function r(e){return n(o(e))}function o(e){var t=a[e];if(!(t+1))throw new Error("Cannot find module '"+e+"'.");return t}var a={"./sample.html":2240};r.keys=function(){return Object.keys(a)},r.resolve=o,e.exports=r,r.id=1398},function(e,t,n){function r(e){return n(o(e))}function o(e){var t=a[e];if(!(t+1))throw new Error("Cannot find module '"+e+"'.");return t}var a={"./sample.html":2241,"./sample.js":2242};r.keys=function(){return Object.keys(a)},r.resolve=o,e.exports=r,r.id=1399},function(e,t){function n(e){throw new Error("Cannot find module '"+e+"'.")}n.keys=function(){return[]},n.resolve=n,e.exports=n,n.id=1400},function(e,t){function n(e){throw new Error("Cannot find module '"+e+"'.")}n.keys=function(){return[]},n.resolve=n,e.exports=n,n.id=1401},function(e,t){function n(e){throw new Error("Cannot find module '"+e+"'.")}n.keys=function(){return[]},n.resolve=n,e.exports=n,n.id=1402},function(e,t,n){function r(e){return n(o(e))}function o(e){var t=a[e];if(!(t+1))throw new Error("Cannot find module '"+e+"'.");return t}var a={"./controller.js":2243,"./footer.html":2244,"./layout.html":2245,"./sample.html":2246,"./styles.css":2247};r.keys=function(){return Object.keys(a)},r.resolve=o,e.exports=r,r.id=1403},function(e,t,n){function r(e){return n(o(e))}function o(e){var t=a[e];if(!(t+1))throw new Error("Cannot find module '"+e+"'.");return t}var a={"./controller.js":2248,"./controls.html":2249,"./layout.html":2250,"./remove-row.html":2251,"./remove-row.js":2252,"./styles.css":2253,"./table-data.html":2254};r.keys=function(){return Object.keys(a)},r.resolve=o,e.exports=r,r.id=1404},function(e,t,n){function r(e){return n(o(e))}function o(e){var t=a[e];if(!(t+1))throw new Error("Cannot find module '"+e+"'.");return t}var a={"./sample.html":2255,"./sample.js":2256};r.keys=function(){return Object.keys(a)},r.resolve=o,e.exports=r,r.id=1405},function(e,t,n){function r(e){return n(o(e))}function o(e){var t=a[e];if(!(t+1))throw new Error("Cannot find module '"+e+"'.");return t}var a={"./sample.html":2257,"./sample.js":2258};r.keys=function(){return Object.keys(a)},r.resolve=o,e.exports=r,r.id=1406},function(e,t){function n(e){throw new Error("Cannot find module '"+e+"'.")}n.keys=function(){return[]},n.resolve=n,e.exports=n,n.id=1407},function(e,t){function n(e){throw new Error("Cannot find module '"+e+"'.")}n.keys=function(){return[]},n.resolve=n,e.exports=n,n.id=1408},,,,,,,,,,,,,,,,,,,function(e,t,n){"use strict";var r=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i};Object.defineProperty(t,"__esModule",{value:!0});var o=n(1),a=n(117),i=function(){function e(){this.htmlCode=n(1971),this.javascriptCode=n(1972),this.codepen={html:this.htmlCode,htmlAttributes:{"ng-controller":"CheckboxButtonsCtrl as vm"},js:[this.javascriptCode]}}return e}();i=r([o.Component({selector:"uxd-checkbox-buttons-ng1",template:n(1665)}),a.DocumentationSectionComponent("ComponentsCheckboxButtonsNg1Component")],i),t.ComponentsCheckboxButtonsNg1Component=i},function(e,t,n){"use strict";var r=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i};Object.defineProperty(t,"__esModule",{value:!0});var o=n(1),a=n(117),i=function(){function e(){this.htmlCode=n(1975),this.htmlMenuCode=n(1973),this.cssCode=n(1974),this.javascriptCode=n(1976),this.codepen={html:this.htmlCode+"\n"+this.htmlMenuCode,htmlAttributes:{"ng-controller":"DropdownCtrl as vm"},css:[this.cssCode],js:[this.javascriptCode]}}return e}();i=r([o.Component({selector:"uxd-dropdown-ng1",template:n(1666),styles:[n(2453)],encapsulation:o.ViewEncapsulation.None}),a.DocumentationSectionComponent("ComponentsDropdownNg1Component")],i),t.ComponentsDropdownNg1Component=i},function(e,t,n){"use strict";var r=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i};Object.defineProperty(t,"__esModule",{value:!0});var o=n(1),a=n(117),i=function(){function e(){this.htmlCode=n(1977),this.javascriptCode=n(1978),this.codepen={html:this.htmlCode,htmlAttributes:{"ng-controller":"FloatingActionButtonCtrl as vm"},js:[this.javascriptCode]}}return e}();i=r([o.Component({selector:"uxd-floating-action-button-ng1",template:n(1667)}),a.DocumentationSectionComponent("ComponentsFloatingActionButtonNg1Component")],i),t.ComponentsFloatingActionButtonNg1Component=i},function(e,t,n){"use strict";var r=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i};Object.defineProperty(t,"__esModule",{value:!0});var o=n(1),a=n(117),i=function(){function e(){this.htmlCodeTop=n(1980),this.htmlCodeBottom=n(1979),this.codepen={html:this.htmlCodeTop+"\n"+this.htmlCodeBottom,htmlAttributes:{"ng-controller":"GroupedButtonsCtrl as vm"},js:[n(1981)]}}return e}();i=r([o.Component({selector:"uxd-components-grouped-buttons-ng1",template:n(1668)}),a.DocumentationSectionComponent("ComponentsGroupedButtonsNg1Component")],i),t.ComponentsGroupedButtonsNg1Component=i},function(e,t,n){"use strict";var r=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i};Object.defineProperty(t,"__esModule",{value:!0});var o=n(1),a=n(117),i=function(){function e(){this.htmlCode=n(1982),this.javascriptCode=n(1983),this.codepen={html:this.htmlCode,htmlAttributes:{"ng-controller":"PaginationCtrl as vm"},js:[this.javascriptCode]}}return e}();i=r([o.Component({selector:"uxd-pagination-ng1",template:n(1669)}),a.DocumentationSectionComponent("ComponentsPaginationNg1Component")],i),t.ComponentsPaginationNg1Component=i},function(e,t,n){"use strict";var r=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i};Object.defineProperty(t,"__esModule",{value:!0});var o=n(1),a=n(117),i=function(){function e(){this.htmlCode=n(1984),this.javascriptCode=n(1985),this.codepen={html:this.htmlCode,htmlAttributes:{"ng-controller":"RadioButtonsCtrl as vm"},js:[this.javascriptCode]}}return e}();i=r([o.Component({selector:"uxd-radio-buttons-ng1",template:n(1670)}),a.DocumentationSectionComponent("ComponentsRadioButtonsNg1Component")],i),t.ComponentsRadioButtonsNg1Component=i},function(e,t,n){"use strict";var r=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i};Object.defineProperty(t,"__esModule",{value:!0});var o=n(1),a=n(117),i=function(){function e(){this.htmlCode=n(1986),this.javascriptCode=n(1987),this.codepen={html:this.htmlCode,htmlAttributes:{"ng-controller":"SingleToggleButtonCtrl as vm"},js:[this.javascriptCode]}}return e}();i=r([o.Component({selector:"uxd-single-toggle-button-ng1",template:n(1671)}),a.DocumentationSectionComponent("ComponentsSingleToggleButtonNg1Component")],i),t.ComponentsSingleToggleButtonNg1Component=i},function(e,t,n){"use strict";var r=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i};Object.defineProperty(t,"__esModule",{value:!0});var o=n(1),a=n(117),i=function(){function e(){this.htmlCode=n(1991),this.cssCode=n(1990),this.javascriptCode=n(1992),this.codepen={html:this.htmlCode,htmlAttributes:{"ng-controller":"ThumbnailDemoCtrl as vm"},css:[n(1988)],js:[n(1989)]}}return e}();i=r([o.Component({selector:"uxd-thumbnail-ng1",template:n(1672),styles:[n(2454)],encapsulation:o.ViewEncapsulation.None}),a.DocumentationSectionComponent("ComponentsThumbnailNg1Component")],i),t.ComponentsThumbnailNg1Component=i},function(e,t,n){"use strict";var r=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i};Object.defineProperty(t,"__esModule",{value:!0});var o=n(1),a=n(117),i=function(){function e(){this.htmlCodeTop=n(1994),this.htmlCodeBottom=n(1993),this.codepen={html:this.htmlCodeTop+"\n"+this.htmlCodeBottom}}return e}();i=r([o.Component({selector:"uxd-components-toggle-buttons-ng1",template:n(1673)}),a.DocumentationSectionComponent("ComponentsToggleButtonsNg1Component")],i),t.ComponentsToggleButtonsNg1Component=i},function(e,t,n){"use strict";var r=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i};Object.defineProperty(t,"__esModule",{value:!0});var o=n(1),a=n(117),i=function(){function e(){this.htmlCode=n(1995),this.javascriptCode=n(1996),this.codepen={html:this.htmlCode,htmlAttributes:{"ng-controller":"ComponentListDemoCtrl as vm"},js:[this.javascriptCode]}}return e}();i=r([o.Component({selector:"uxd-component-list-ng1",template:n(1674)}),a.DocumentationSectionComponent("ComponentsComponentListNg1Component")],i),t.ComponentsComponentListNg1Component=i},function(e,t,n){"use strict";var r=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}(),o=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i},a=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(t,"__esModule",{value:!0});var i=n(1),s=n(1339),l=n(117),d=function(e){function t(){var t=e.call(this,null,null,null,null,n(1340))||this;return t.codepen={html:t.snippets.raw.contactsHtml,htmlAttributes:{"ng-controller":"ContactsDemoCtrl as vm"},htmlTemplates:[{id:"contacts-popover.html",content:t.snippets.raw.contactsPopoverHtml}],css:[t.snippets.raw.contactsCss],js:[t.snippets.raw.contactsJs]},t}return r(t,e),t}(s.BaseDocumentationSection);d=o([i.Component({selector:"uxd-contacts-ng1",template:n(1675)}),l.DocumentationSectionComponent("ComponentsContactsNg1Component"),a("design:paramtypes",[])],d),t.ComponentsContactsNg1Component=d},function(e,t,n){"use strict";var r=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i};Object.defineProperty(t,"__esModule",{value:!0});var o=n(1),a=n(117),i=function(){function e(){this.htmlCode=n(2004),this.cssCode=n(2003),this.javascriptCode=n(2005),this.modalHtmlCode=n(123),this.modalJavascriptCode=n(2002),this.modalItemHtmlCode=n(216),this.codepen={html:this.htmlCode,htmlAttributes:{"ng-controller":"ContactsOverflowDemoCtrl as vm"},htmlTemplates:[{id:"contacts-overflow-modal.html",content:this.modalHtmlCode},{id:"contacts-overflow-modal-item.html",content:this.modalItemHtmlCode}],css:[this.cssCode],js:[this.javascriptCode,this.modalJavascriptCode]}}return e}();i=r([o.Component({selector:"uxd-contacts-overflow-ng1",template:n(1676),styles:[n(2455)],encapsulation:o.ViewEncapsulation.None}),a.DocumentationSectionComponent("ComponentsContactsOverflowNg1Component")],i),t.ComponentsContactsOverflowNg1Component=i},function(e,t,n){"use strict";var r=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}(),o=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i},a=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(t,"__esModule",{value:!0});var i=n(1),s=n(117),l=n(1339),d=function(e){function t(){var t=e.call(this,null,null,null,null,n(1341))||this;return t.codepen={html:t.snippets.raw.sampleHtml,htmlAttributes:{"ng-controller":"DatePickerCtrl as vm"},js:[t.snippets.raw.sampleJs]},t}return r(t,e),t}(l.BaseDocumentationSection);d=o([i.Component({selector:"uxd-components-date-picker-ng1",template:n(1677),changeDetection:i.ChangeDetectionStrategy.OnPush}),s.DocumentationSectionComponent("ComponentsDatePickerNg1Component"),a("design:paramtypes",[])],d),t.ComponentsDatePickerNg1Component=d},function(e,t,n){"use strict";var r=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}(),o=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i},a=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(t,"__esModule",{value:!0});var i=n(1),s=n(117),l=n(1339),d=function(e){function t(){var t=e.call(this,null,null,null,null,n(1342))||this;return t.codepen={html:t.snippets.raw.sampleHtml,htmlAttributes:{"ng-controller":"DateRangePickerCtrl as vm"},js:[t.snippets.raw.sampleJs],css:[t.snippets.raw.sampleCss]},t}return r(t,e),t}(l.BaseDocumentationSection);d=o([i.Component({selector:"uxd-components-date-range-picker-ng1",template:n(1678),changeDetection:i.ChangeDetectionStrategy.OnPush}),s.DocumentationSectionComponent("ComponentsDateRangePickerNg1Component"),a("design:paramtypes",[])],d),t.ComponentsDateRangePickerNg1Component=d},function(e,t,n){"use strict";var r=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}(),o=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i},a=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(t,"__esModule",{value:!0});var i=n(1),s=n(117),l=n(1339),d=function(e){function t(){var t=e.call(this,null,null,null,null,n(1343))||this;return t.codepen={html:t.snippets.raw.sampleHtml,htmlAttributes:{"ng-controller":"IntegratedDatePickerCtrl as vm"},js:[t.snippets.raw.sampleJs]},t}return r(t,e),t}(l.BaseDocumentationSection);d=o([i.Component({selector:"uxd-components-integrated-date-picker-ng1",template:n(1679),changeDetection:i.ChangeDetectionStrategy.OnPush}),s.DocumentationSectionComponent("ComponentsIntegratedDatePickerNg1Component"),a("design:paramtypes",[])],d),t.ComponentsIntegratedDatePickerNg1Component=d},function(e,t,n){"use strict";var r=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}(),o=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i},a=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(t,"__esModule",{value:!0});var i=n(1),s=n(117),l=n(1339),d=function(e){function t(){var t=e.call(this,null,null,null,null,n(1344))||this;return t.codepen={html:t.snippets.raw.sampleHtml,htmlAttributes:{"ng-controller":"TimePickerCtrl as vm"},js:[t.snippets.raw.sampleJs]},t}return r(t,e),t}(l.BaseDocumentationSection);d=o([i.Component({selector:"uxd-components-time-picket-ng1",template:n(1680),changeDetection:i.ChangeDetectionStrategy.OnPush}),s.DocumentationSectionComponent("ComponentsTimePickerNg1Component"),a("design:paramtypes",[])],d),t.ComponentsTimePickerNg1Component=d},function(e,t,n){"use strict";var r=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i};Object.defineProperty(t,"__esModule",{value:!0});var o=n(1),a=n(117),i=function(){function e(){this.htmlCode=n(2016),this.cssCode=n(2015),this.javascriptCode=n(2017),this.codepen={html:this.htmlCode,htmlAttributes:{"ng-controller":"DraggableCardsListViewDemoCtrl as vm"},css:[this.cssCode],js:[this.javascriptCode]}}return e}();i=r([o.Component({selector:"uxd-draggable-cards-list-view-ng1",template:n(1681),styles:[n(2456)],encapsulation:o.ViewEncapsulation.None}),a.DocumentationSectionComponent("ComponentsDraggableCardsListViewNg1Component")],i),t.ComponentsDraggableCardsListViewNg1Component=i},function(e,t,n){"use strict";var r=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i};Object.defineProperty(t,"__esModule",{value:!0});var o=n(1),a=n(117),i=function(){function e(){this.htmlCode=n(2019),this.cssCode=n(2018),this.javascriptCode=n(2020),this.codepen={html:this.htmlCode,htmlAttributes:{"ng-controller":"DraggableCardsDemoCtrl as vm"},css:[this.cssCode],js:[this.javascriptCode]}}return e}();i=r([o.Component({selector:"uxd-draggable-cards-ng1",template:n(1682),styles:[n(2457)],encapsulation:o.ViewEncapsulation.None}),a.DocumentationSectionComponent("ComponentsDraggableCardsNg1Component")],i),t.ComponentsDraggableCardsNg1Component=i},function(e,t,n){"use strict";var r=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i};Object.defineProperty(t,"__esModule",{value:!0});var o=n(1),a=n(117),i=function(){function e(){this.htmlCode=n(2023),this.containerHtmlCode=n(2021),this.panelHtmlCode=n(2022),this.codepen={html:this.htmlCode}}return e}();i=r([o.Component({selector:"uxd-draggable-panels-ng1",template:n(1683)}),a.DocumentationSectionComponent("ComponentsDraggablePanelsNg1Component")],i),t.ComponentsDraggablePanelsNg1Component=i},function(e,t,n){"use strict";var r=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i};Object.defineProperty(t,"__esModule",{value:!0});var o=n(1),a=n(117),i=function(){function e(){this.htmlCode=n(2025),this.cssCode=n(2024),this.javascriptCode=n(2026),this.codepen={html:this.htmlCode,htmlAttributes:{"ng-controller":"DraggablePanelsViewsDemoCtrl as vm"},css:[this.cssCode],js:[this.javascriptCode]}}return e}();i=r([o.Component({selector:"uxd-draggable-panels-views-ng1",template:n(1684),styles:[n(2458)],encapsulation:o.ViewEncapsulation.None}),a.DocumentationSectionComponent("ComponentsDraggablePanelsViewsNg1Component")],i),t.ComponentsDraggablePanelsViewsNg1Component=i},function(e,t,n){"use strict";var r=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i};Object.defineProperty(t,"__esModule",{value:!0});var o=n(1),a=n(117),i=function(){function e(){}return e}();i=r([o.Component({selector:"uxd-components-ebox",template:n(1685)}),a.DocumentationSectionComponent("ComponentsEboxComponent")],i),t.ComponentsEboxComponent=i},function(e,t,n){"use strict";var r=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i};Object.defineProperty(t,"__esModule",{value:!0});var o=n(1),a=n(117),i=function(){function e(){this.htmlCode=n(2029),this.customFacetHtmlCode=n(2027),this.customFacetJsCode=n(2028)}return e}();i=r([o.Component({selector:"uxd-components-custom-facets-ng1",template:n(1686)}),a.DocumentationSectionComponent("ComponentsCustomFacetsNg1Component")],i),t.ComponentsCustomFacetsNg1Component=i},function(e,t,n){"use strict";var r=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i};Object.defineProperty(t,"__esModule",{value:!0});var o=n(1),a=n(117),i=function(){function e(){this.htmlCode=n(2030),this.jsCode=n(2031)}return e}();i=r([o.Component({selector:"uxd-components-dynamic-facets-ng1",template:n(1687)}),a.DocumentationSectionComponent("ComponentsDynamicFacetsNg1Component")],i),t.ComponentsDynamicFacetsNg1Component=i},function(e,t,n){"use strict";var r=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i};Object.defineProperty(t,"__esModule",{value:!0});var o=n(1),a=n(117),i=function(){function e(){this.htmlCode=n(2033),this.jsCode=n(2034),this.cssCode=n(2032),this.codepen={html:this.htmlCode,js:[this.jsCode],css:[this.cssCode]}}return e}();i=r([o.Component({selector:"uxd-components-facet-line-chart-ng1",template:n(1688)}),a.DocumentationSectionComponent("ComponentsFacetLineChartNg1Component")],i),t.ComponentsFacetLineChartNg1Component=i},function(e,t,n){"use strict";var r=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i};Object.defineProperty(t,"__esModule",{value:!0});var o=n(1),a=n(117),i=function(){function e(){this.facetContainerCode=n(2035),this.facetCode=n(2039),this.facetOptionHtmlCode=n(2036),this.facetOptionJsCode=n(2037),this.facetVisibility=n(2038)}return e}();i=r([o.Component({selector:"uxd-components-facets-ng1",template:n(1689)}),a.DocumentationSectionComponent("ComponentsFacetsNg1Component")],i),t.ComponentsFacetsNg1Component=i},function(e,t,n){"use strict";var r=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i};Object.defineProperty(t,"__esModule",{value:!0});var o=n(1),a=n(117),i=function(){function e(){}return e}();i=r([o.Component({selector:"uxd-components-programmatic-selection",template:n(1690)}),a.DocumentationSectionComponent("ComponentsProgrammaticSelectionNg1Component")],i),t.ComponentsProgrammaticSelectionNg1Component=i},function(e,t,n){"use strict";var r=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i};Object.defineProperty(t,"__esModule",{value:!0});var o=n(1),a=n(117),i=function(){function e(){this.sampleCode=n(2043),this.htmlCode=n(2041),this.jsCode=n(2042),this.cssCode=n(2040),this.codepen={html:this.htmlCode,js:[this.jsCode],css:[this.cssCode]}}return e}();i=r([o.Component({selector:"uxd-components-file-upload-ng1",template:n(1691)}),a.DocumentationSectionComponent("ComponentsFileUploadNg1Component")],i),t.ComponentsFileUploadNg1Component=i},function(e,t,n){"use strict";var r=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i};Object.defineProperty(t,"__esModule",{value:!0});var o=n(1),a=n(117),i=function(){function e(){this.htmlCode=n(2045),this.jsCode=n(2046),this.cssCode=n(2044),this.codepen={html:this.htmlCode,htmlAttributes:{"ng-controller":"FlippableCardCtrl as vm"},js:[this.jsCode],css:[this.cssCode]}}return e}();i=r([o.Component({selector:"uxd-components-flippable-cards-ng1",template:n(1692)}),a.DocumentationSectionComponent("ComponentsFlippableCardsNg1Component")],i),t.ComponentsFlippableCardsNg1Component=i},function(e,t,n){"use strict";var r=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i};Object.defineProperty(t,"__esModule",{value:!0});var o=n(1),a=n(117),i=function(){function e(){this.htmlCode=n(2047),this.jsCode=n(2048),this.codepen={html:this.htmlCode,htmlAttributes:{"ng-controller":"GridDemoCtrl as vm"},js:[this.jsCode]}}return e}();i=r([o.Component({selector:"uxd-components-grid-ng1",template:n(1693)}),a.DocumentationSectionComponent("ComponentsGridNg1Component")],i),t.ComponentsGridNg1Component=i},function(e,t,n){"use strict";var r=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i};Object.defineProperty(t,"__esModule",{value:!0});var o=n(1),a=n(117),i=function(){function e(){this.htmlCode=n(2050),this.exampleHtmlCode=n(2049),this.exampleJsCode=n(2051)}return e}();i=r([o.Component({selector:"uxd-components-help-center-ng1",template:n(1694)}),a.DocumentationSectionComponent("ComponentsHelpCenterNg1Component")],i),t.ComponentsHelpCenterNg1Component=i},function(e,t,n){"use strict";var r=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i};Object.defineProperty(t,"__esModule",{value:!0});var o=n(1),a=n(117),i=function(){function e(){this.htmlCode=n(2052),this.jsCode=n(2053),this.codepen={html:this.htmlCode,htmlAttributes:{"ng-controller":"HierarchyBarDemoCtrl as vm"},js:[this.jsCode]}}return e}();i=r([o.Component({selector:"uxd-components-hierarchy-bar-ng1",template:n(1695)}),a.DocumentationSectionComponent("ComponentsHierarchyBarNg1Component")],i),t.ComponentsHierarchyBarNg1Component=i},function(e,t,n){"use strict";var r=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}(),o=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i},a=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(t,"__esModule",{value:!0});var i=n(1),s=n(117),l=n(1339),d=function(e){function t(){var t=e.call(this,null,null,null,null,n(1345))||this;return t.codepen={html:t.snippets.raw.sampleHtml,htmlAttributes:{"ng-controller":"CheckboxDemoCtrl as vm"},js:[t.snippets.raw.sampleJs]},t}return r(t,e),t}(l.BaseDocumentationSection);d=o([i.Component({selector:"uxd-components-checkbox-ng1",template:n(1696),changeDetection:i.ChangeDetectionStrategy.OnPush}),s.DocumentationSectionComponent("ComponentsCheckboxNg1Component"),a("design:paramtypes",[])],d),t.ComponentsCheckboxNg1Component=d},function(e,t,n){"use strict";var r=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i},o=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(t,"__esModule",{value:!0});var a=n(1),i=n(117),s=function(){function e(){this.sliderValue=50,this.sliderOptions={type:"value",handles:{style:"button",callout:{trigger:"none",background:"#464646",color:"#fff",formatter:function(e){return e}}},track:{height:"wide",min:0,max:100,ticks:{snap:"none",major:{show:!0,steps:10,labels:!0,formatter:function(e){return e}},minor:{show:!0,steps:5,labels:!1,formatter:function(e){return e}}},colors:{lower:"#f2f2f2",range:"rgba(96,121,141, 0.75)",higher:"#f2f2f2"}}},this.plunk={"app.ts":n(2057),"app.html":n(2056)},this.checkModel={option1:!0,option2:!1,option3:!1,option4:!1},this.simplified=!1,this.indeterminateValue=-1,this.disableCheck=!1}return e}();s=r([a.Component({selector:"uxd-components-checkbox",template:n(1697)}),i.DocumentationSectionComponent("ComponentsCheckboxComponent"),o("design:paramtypes",[])],s),t.ComponentsCheckboxComponent=s},function(e,t,n){"use strict";var r=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}(),o=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i},a=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(t,"__esModule",{value:!0});var i=n(1),s=n(117),l=n(1339),d=function(e){function t(){var t=e.call(this,null,null,null,null,n(1346))||this;return t.codepen={html:t.snippets.raw.sampleHtml,htmlTemplates:[{id:"template.html",content:t.snippets.raw.templateHtml}],css:[t.snippets.raw.sampleCss],js:[t.snippets.raw.sampleJs]},t}return r(t,e),t}(l.BaseDocumentationSection);d=o([i.Component({selector:"uxd-custom-dropdown-ng1",template:n(1698),changeDetection:i.ChangeDetectionStrategy.OnPush}),s.DocumentationSectionComponent("ComponentsCustomDropdownNg1Component"),a("design:paramtypes",[])],d),t.ComponentsCustomDropdownNg1Component=d},function(e,t,n){"use strict";var r=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}(),o=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i},a=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(t,"__esModule",{value:!0});var i=n(1),s=n(117),l=n(1339),d=function(e){function t(){var t=e.call(this,null,null,null,null,n(1347))||this;return t.codepen={html:t.snippets.raw.sampleHtml},t}return r(t,e),t}(l.BaseDocumentationSection);d=o([i.Component({selector:"uxd-expanding-text-area-ng1",template:n(1699),changeDetection:i.ChangeDetectionStrategy.OnPush}),s.DocumentationSectionComponent("ComponentsExpandingTextAreaNg1Component"),a("design:paramtypes",[])],d),t.ComponentsExpandingTextAreaNg1Component=d},function(e,t,n){"use strict";var r=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}(),o=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i},a=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(t,"__esModule",{value:!0});var i=n(1),s=n(117),l=n(1339),d=function(e){function t(){var t=e.call(this,null,null,null,null,n(1348))||this;return t.codepen={html:t.snippets.raw.sampleHtml,htmlAttributes:{"ng-controller":"InlineDropDownCtrl as vm"},js:[t.snippets.raw.sampleJs]},t}return r(t,e),t}(l.BaseDocumentationSection);d=o([i.Component({selector:"uxd-components-inline-dropdown-ng1",template:n(1700),changeDetection:i.ChangeDetectionStrategy.OnPush}),s.DocumentationSectionComponent("ComponentsInlineDropdownNg1Component"),a("design:paramtypes",[])],d),t.ComponentsInlineDropdownNg1Component=d},function(e,t,n){"use strict";var r=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}(),o=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i},a=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(t,"__esModule",{value:!0});var i=n(1),s=n(117),l=n(1339),d=function(e){function t(){var t=e.call(this,null,null,null,null,n(1349))||this;return t.codepen={html:t.snippets.raw.sampleHtml,htmlAttributes:{"ng-controller":"InputExpandCtrl as vm"},js:[t.snippets.raw.sampleJs]},t}return r(t,e),t}(l.BaseDocumentationSection);d=o([i.Component({selector:"uxd-components-input-expand-ng1",template:n(1701),changeDetection:i.ChangeDetectionStrategy.OnPush}),s.DocumentationSectionComponent("ComponentsInputExpandNg1Component"),a("design:paramtypes",[])],d),t.ComponentsInputExpandNg1Component=d},function(e,t,n){"use strict";var r=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}(),o=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i},a=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(t,"__esModule",{value:!0});var i=n(1),s=n(117),l=n(1339),d=function(e){function t(){var t=e.call(this,null,null,null,null,n(1350))||this;return t.codepen={html:t.snippets.raw.sampleHtml,htmlAttributes:{"ng-controller":"InputMaskCtrl as vm"},js:[t.snippets.raw.sampleJs]},t}return r(t,e),t}(l.BaseDocumentationSection);d=o([i.Component({selector:"uxd-components-input-mask-ng1",template:n(1702),changeDetection:i.ChangeDetectionStrategy.OnPush}),s.DocumentationSectionComponent("ComponentsInputMaskNg1Component"),a("design:paramtypes",[])],d),t.ComponentsInputMaskNg1Component=d},function(e,t,n){"use strict";var r=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}(),o=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i},a=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(t,"__esModule",{value:!0});var i=n(1),s=n(117),l=n(1339),d=function(e){function t(){var t=e.call(this,null,null,null,null,n(1351))||this;return t.codepen={html:t.snippets.raw.sampleHtml,htmlAttributes:{"ng-controller":"NumberPickerCtrl as vm"},js:[t.snippets.raw.sampleJs],css:[t.snippets.raw.sampleCss]},t}return r(t,e),t}(l.BaseDocumentationSection);d=o([i.Component({selector:"uxd-components-number-picker-ng1",template:n(1703),changeDetection:i.ChangeDetectionStrategy.OnPush}),s.DocumentationSectionComponent("ComponentsNumberPickerNg1Component"),a("design:paramtypes",[])],d),t.ComponentsNumberPickerNg1Component=d},function(e,t,n){"use strict";var r=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}(),o=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i},a=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(t,"__esModule",{value:!0});var i=n(1),s=n(117),l=n(1339),d=function(e){function t(){var t=e.call(this,null,null,null,null,n(1352))||this;return t.codepen={html:t.snippets.raw.sampleHtml,htmlAttributes:{"ng-controller":"RadioButtonCtrl as vm"},js:[t.snippets.raw.sampleJs]},t}return r(t,e),t}(l.BaseDocumentationSection);d=o([i.Component({selector:"uxd-components-radio-button-ng1",template:n(1704),changeDetection:i.ChangeDetectionStrategy.OnPush}),s.DocumentationSectionComponent("ComponentsRadioButtonNg1Component"),a("design:paramtypes",[])],d),t.ComponentsRadioButtonNg1Component=d},function(e,t,n){"use strict";var r=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}(),o=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i},a=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(t,"__esModule",{value:!0});var i=n(1),s=n(117),l=n(1339),d=function(e){function t(){var t=e.call(this,null,null,null,null,n(1353))||this;return t.codepen={html:t.snippets.raw.codepenHtml,htmlAttributes:{"ng-controller":"SlidersChartsCtrl as vm"},js:[t.snippets.raw.codepenJs]},t}return r(t,e),t}(l.BaseDocumentationSection);d=o([i.Component({selector:"uxd-components-slider-charts-ng1",template:n(1705)}),s.DocumentationSectionComponent("ComponentsSliderChartsNg1Component"),a("design:paramtypes",[])],d),t.ComponentsSliderChartsNg1Component=d},function(e,t,n){"use strict";var r=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}(),o=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i},a=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(t,"__esModule",{value:!0});var i=n(1),s=n(117),l=n(1339),d=function(e){function t(){var t=e.call(this,null,null,null,null,n(1354))||this;return t.codepen={html:t.snippets.raw.codepenHtml,htmlAttributes:{"ng-controller":"SlidersCtrl as vm"},js:[t.snippets.raw.codepenJs]},t}return r(t,e),t}(l.BaseDocumentationSection);d=o([i.Component({selector:"uxd-components-sliders-ng1",template:n(1706),changeDetection:i.ChangeDetectionStrategy.OnPush}),s.DocumentationSectionComponent("ComponentsSlidersNg1Component"),a("design:paramtypes",[])],d),t.ComponentsSlidersNg1Component=d},function(e,t,n){"use strict";var r=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}(),o=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i},a=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(t,"__esModule",{value:!0});var i=n(1),s=n(117),l=n(1339),d=function(e){function t(){var t=e.call(this,null,null,null,null,n(1355))||this;return t.codepen={html:t.snippets.raw.codepenHtml,htmlAttributes:{"ng-controller":"TagsCtrl as vm"},js:[t.snippets.raw.codepenJs]},t}return r(t,e),t}(l.BaseDocumentationSection);d=o([i.Component({selector:"uxd-components-tags-ng1",template:n(1707),changeDetection:i.ChangeDetectionStrategy.OnPush}),s.DocumentationSectionComponent("ComponentsTagsNg1Component"),a("design:paramtypes",[])],d),t.ComponentsTagsNg1Component=d},function(e,t,n){"use strict";var r=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}(),o=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i},a=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(t,"__esModule",{value:!0});var i=n(1),s=n(117),l=n(1339),d=function(e){function t(){var t=e.call(this,null,null,null,null,n(1356))||this;return t.codepen={html:t.snippets.raw.sampleHtml,htmlAttributes:{"ng-controller":"ToggleSwitchDemoCtrl as vm"},css:[t.snippets.raw.sampleCss],js:[t.snippets.raw.sampleJs]},t}return r(t,e),t}(l.BaseDocumentationSection);d=o([i.Component({selector:"uxd-toggle-switch-ng1",template:n(1708),changeDetection:i.ChangeDetectionStrategy.OnPush}),s.DocumentationSectionComponent("ComponentsToggleSwitchNg1Component"),a("design:paramtypes",[])],d),t.ComponentsToggleSwitchNg1Component=d},function(e,t,n){"use strict";var r=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i},o=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(t,"__esModule",{value:!0});var a=n(1),i=n(117),s=function(){function e(){this.toggleSwitches={option1:!0,option2:!1,option3:!1,option4:!1},this.toggleSwitchDisable=!1}return e}();s=r([a.Component({selector:"uxd-components-toggleswitch",template:n(1709)}),i.DocumentationSectionComponent("ComponentsToggleSwitchComponent"),o("design:paramtypes",[])],s),t.ComponentsToggleSwitchComponent=s},function(e,t,n){"use strict";var r=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}(),o=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i},a=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(t,"__esModule",{value:!0});var i=n(1),s=n(1339),l=n(117),d=function(e){function t(){var t=e.call(this,null,null,null,null,n(1357))||this;return t.codepen={html:t.snippets.raw.layoutHtml,htmlAttributes:{"ng-controller":"HotkeysDemoCtrl as vm"},css:[t.snippets.raw.stylesCss],js:[t.snippets.raw.controllerJs]},t}return r(t,e),t}(s.BaseDocumentationSection);d=o([i.Component({selector:"uxd-hotkeys-ng1",template:n(1710),styles:[n(2459)],encapsulation:i.ViewEncapsulation.None,changeDetection:i.ChangeDetectionStrategy.OnPush}),l.DocumentationSectionComponent("ComponentsHotkeysNg1Component"),a("design:paramtypes",[])],d),t.ComponentsHotkeysNg1Component=d},function(e,t,n){"use strict";var r=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}(),o=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i},a=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(t,"__esModule",{value:!0});var i=n(1),s=n(1339),l=n(117),d=function(e){function t(){var t=e.call(this,null,null,null,null,n(1358))||this;return t.codepen={html:t.snippets.raw.layoutHtml,htmlAttributes:{"ng-controller":"KeyboardServiceDemoCtrl as vm"},js:[t.snippets.raw.controllerJs]},t}return r(t,e),t}(s.BaseDocumentationSection);d=o([i.Component({selector:"uxd-keyboard-service-ng1",template:n(1711),changeDetection:i.ChangeDetectionStrategy.OnPush}),l.DocumentationSectionComponent("ComponentsKeyboardServiceNg1Component"),a("design:paramtypes",[])],d),t.ComponentsKeyboardServiceNg1Component=d},function(e,t,n){"use strict";var r=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}(),o=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i},a=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(t,"__esModule",{value:!0});var i=n(1),s=n(1339),l=n(117),d=function(e){function t(){var t=e.call(this,null,null,null,null,n(1359))||this;return t.codepen={html:t.snippets.raw.layoutHtml,htmlAttributes:{"ng-controller":"MarqueeModalDemoCtrl as vm"},htmlTemplates:[{id:"modalLayout.html",content:t.snippets.raw.modalLayoutHtml}],css:[t.snippets.raw.stylesCss],js:[t.snippets.raw.controllerJs,t.snippets.raw.modalControllerJs]},t}return r(t,e),t}(s.BaseDocumentationSection);d=o([i.Component({selector:"uxd-marquee-modal-ng1",template:n(1712),styles:[n(2460)],encapsulation:i.ViewEncapsulation.None,changeDetection:i.ChangeDetectionStrategy.OnPush}),l.DocumentationSectionComponent("ComponentsMarqueeModalNg1Component"),a("design:paramtypes",[])],d),t.ComponentsMarqueeModalNg1Component=d},function(e,t,n){"use strict";var r=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}(),o=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i},a=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(t,"__esModule",{value:!0});var i=n(1),s=n(1339),l=n(117),d=function(e){function t(){var t=e.call(this,null,null,null,null,n(1360))||this;return t.codepen={html:t.snippets.raw.layoutHtml,htmlAttributes:{"ng-controller":"ModalDemoCtrl as vm"},htmlTemplates:[{id:"modalLayout.html",content:t.snippets.raw.modalLayoutHtml}],js:[t.snippets.raw.controllerJs,t.snippets.raw.modalControllerJs]},t}return r(t,e),t}(s.BaseDocumentationSection);d=o([i.Component({selector:"uxd-modal-ng1",template:n(1713),changeDetection:i.ChangeDetectionStrategy.OnPush}),l.DocumentationSectionComponent("ComponentsModalNg1Component"),a("design:paramtypes",[])],d),t.ComponentsModalNg1Component=d},function(e,t,n){"use strict";var r=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}(),o=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i},a=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(t,"__esModule",{value:!0});var i=n(1),s=n(1339),l=n(117),d=function(e){function t(){var t=e.call(this,null,null,null,null,n(1361))||this;return t.codepen={html:t.snippets.raw.layoutHtml,htmlAttributes:{"ng-controller":"SideModalDemoCtrl as vm"},htmlTemplates:[{id:"modalContent.html",content:t.snippets.raw.modalContentHtml},{id:"modalFooter.html",content:t.snippets.raw.modalFooterHtml}],css:[t.snippets.raw.stylesCss],js:[t.snippets.raw.controllerJs,t.snippets.raw.modalControllerJs]},t}return r(t,e),t}(s.BaseDocumentationSection);d=o([i.Component({selector:"uxd-side-modal-ng1",template:n(1714),styles:[n(2461)],encapsulation:i.ViewEncapsulation.None,changeDetection:i.ChangeDetectionStrategy.OnPush}),l.DocumentationSectionComponent("ComponentsSideModalNg1Component"),a("design:paramtypes",[])],d),t.ComponentsSideModalNg1Component=d},function(e,t,n){"use strict";var r=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}(),o=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i},a=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(t,"__esModule",{value:!0});var i=n(1),s=n(1339),l=n(117),d=function(e){function t(){var t=e.call(this,null,null,null,null,n(1362))||this;return t.codepen={html:t.snippets.raw.layoutHtml,htmlAttributes:{"ng-controller":"SquareModalDemoCtrl as vm"},htmlTemplates:[{id:"modalLayout.html",content:t.snippets.raw.modalLayoutHtml}],js:[t.snippets.raw.controllerJs,t.snippets.raw.modalControllerJs]},t}return r(t,e),t}(s.BaseDocumentationSection);d=o([i.Component({selector:"uxd-square-modal-ng1",template:n(1715),changeDetection:i.ChangeDetectionStrategy.OnPush}),l.DocumentationSectionComponent("ComponentsSquareModalNg1Component"),a("design:paramtypes",[])],d),t.ComponentsSquareModalNg1Component=d},function(e,t,n){"use strict";var r=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}(),o=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i},a=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(t,"__esModule",{value:!0});var i=n(1),s=n(1339),l=n(117),d=function(e){function t(){var t=e.call(this,null,null,null,null,n(1363))||this;return t.codepen={html:t.snippets.raw.layoutHtml,htmlAttributes:{"ng-controller":"AlertStylesDemoCtrl as vm"},js:[t.snippets.raw.controllerJs]},t}return r(t,e),t}(s.BaseDocumentationSection);d=o([i.Component({selector:"uxd-alert-styles-ng1",template:n(1716),changeDetection:i.ChangeDetectionStrategy.OnPush}),l.DocumentationSectionComponent("ComponentsAlertStylesNg1Component"),a("design:paramtypes",[])],d),t.ComponentsAlertStylesNg1Component=d},function(e,t,n){"use strict";var r=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}(),o=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i},a=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(t,"__esModule",{value:!0});var i=n(1),s=n(1339),l=n(117),d=function(e){function t(){var t=e.call(this,null,null,null,null,n(1364))||this;return t.codepen={html:t.snippets.raw.layoutHtml,htmlAttributes:{"ng-controller":"DismissableStylesDemoCtrl as vm"},js:[t.snippets.raw.controllerJs]},t}return r(t,e),t}(s.BaseDocumentationSection);d=o([i.Component({selector:"uxd-dismissable-styles-ng1",template:n(1717),changeDetection:i.ChangeDetectionStrategy.OnPush}),l.DocumentationSectionComponent("ComponentsDismissableStylesNg1Component"),a("design:paramtypes",[])],d),t.ComponentsDismissableStylesNg1Component=d},function(e,t,n){"use strict";var r=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}(),o=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i},a=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(t,"__esModule",{value:!0});var i=n(1),s=n(1339),l=n(117),d=function(e){function t(){var t=e.call(this,null,null,null,null,n(1365))||this;return t.codepen={html:t.snippets.raw.layoutHtml,htmlAttributes:{"ng-controller":"NotificationDropdownDemoCtrl as vm"},htmlTemplates:[{id:"modalLayout.html",content:t.snippets.raw.modalLayoutHtml},{id:"notification.html",content:t.snippets.raw.notificationHtml}],css:[t.snippets.raw.stylesCss],js:[t.snippets.raw.controllerJs,t.snippets.raw.modalControllerJs]},t}return r(t,e),t}(s.BaseDocumentationSection);d=o([i.Component({selector:"uxd-notification-dropdown-ng1",template:n(1718),changeDetection:i.ChangeDetectionStrategy.OnPush}),l.DocumentationSectionComponent("ComponentsNotificationDropdownNg1Component"),a("design:paramtypes",[])],d),t.ComponentsNotificationDropdownNg1Component=d},function(e,t,n){"use strict";var r=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}(),o=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i},a=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(t,"__esModule",{value:!0});var i=n(1),s=n(1339),l=n(117),d=function(e){function t(){var t=e.call(this,null,null,null,null,n(1366))||this;return t.codepen={html:t.snippets.raw.layoutHtml,htmlAttributes:{"ng-controller":"NotificationListDemoCtrl as vm"},htmlTemplates:[{id:"modalLayout.html",content:t.snippets.raw.modalLayoutHtml},{id:"notification.html",content:t.snippets.raw.notificationHtml}],css:[t.snippets.raw.stylesCss],js:[t.snippets.raw.controllerJs,t.snippets.raw.modalControllerJs]},t}return r(t,e),t}(s.BaseDocumentationSection);d=o([i.Component({selector:"uxd-notification-list-ng1",template:n(1719),styles:[n(2462)],encapsulation:i.ViewEncapsulation.None,changeDetection:i.ChangeDetectionStrategy.OnPush}),l.DocumentationSectionComponent("ComponentsNotificationListNg1Component"),a("design:paramtypes",[])],d),t.ComponentsNotificationListNg1Component=d},function(e,t,n){"use strict";var r=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}(),o=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i},a=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(t,"__esModule",{value:!0});var i=n(1),s=n(1339),l=n(117),d=function(e){function t(){var t=e.call(this,null,null,null,null,n(1367))||this;return t.codepen={html:t.snippets.raw.layoutHtml,htmlAttributes:{"ng-controller":"NotificationsDemoCtrl as vm"},css:[t.snippets.raw.stylesCss],js:[t.snippets.raw.controllerJs,t.snippets.raw.modalControllerJs]},t}return r(t,e),t}(s.BaseDocumentationSection);d=o([i.Component({selector:"uxd-notifications-ng1",template:n(1720),styles:[n(2463)],encapsulation:i.ViewEncapsulation.None,changeDetection:i.ChangeDetectionStrategy.OnPush}),l.DocumentationSectionComponent("ComponentsNotificationsNg1Component"),a("design:paramtypes",[])],d),t.ComponentsNotificationsNg1Component=d},function(e,t,n){"use strict";var r=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}(),o=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i},a=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(t,"__esModule",{value:!0});var i=n(1),s=n(1339),l=n(117),d=function(e){function t(){var t=e.call(this,null,null,null,null,n(1368))||this;return t.codepen={html:t.snippets.raw.layoutHtml,htmlAttributes:{"ng-controller":"CollapsiblePanelsDemoCtrl as vm"},js:[t.snippets.raw.controllerJs]},t}return r(t,e),t}(s.BaseDocumentationSection);d=o([i.Component({selector:"uxd-collapsible-panels-ng1",template:n(1721),changeDetection:i.ChangeDetectionStrategy.OnPush}),l.DocumentationSectionComponent("ComponentsCollapsiblePanelsNg1Component"),a("design:paramtypes",[])],d),t.ComponentsCollapsiblePanelsNg1Component=d},function(e,t,n){"use strict";var r=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}(),o=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i},a=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(t,"__esModule",{value:!0});var i=n(1),s=n(1339),l=n(117),d=function(e){function t(){var t=e.call(this,null,null,null,null,n(1369))||this;return t.codepen={html:t.snippets.raw.layoutHtml,htmlAttributes:{"ng-controller":"ItemDisplayPanelDemoCtrl as vm"},htmlTemplates:[{id:"modalDOC.html",content:t.snippets.raw.modalDOCHtml},{id:"modalPDF.html",content:t.snippets.raw.modalPDFHtml},{id:"modalPPT.html",content:t.snippets.raw.modalPPTHtml},{id:"modalFooter.html",content:t.snippets.raw.modalFooterHtml}],css:[t.snippets.raw.stylesCss],js:[t.snippets.raw.controllerJs]},t}return r(t,e),t}(s.BaseDocumentationSection);d=o([i.Component({selector:"uxd-item-display-panel-ng1",template:n(1722),changeDetection:i.ChangeDetectionStrategy.OnPush}),l.DocumentationSectionComponent("ComponentsItemDisplayPanelNg1Component"),a("design:paramtypes",[])],d),t.ComponentsItemDisplayPanelNg1Component=d},function(e,t,n){"use strict";var r=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i};Object.defineProperty(t,"__esModule",{value:!0});var o=n(1),a=n(117),i=function(){function e(){}return e}();i=r([o.Component({selector:"uxd-item-display-panel-service-ng1",template:n(1723),changeDetection:o.ChangeDetectionStrategy.OnPush}),a.DocumentationSectionComponent("ComponentsItemDisplayPanelServiceNg1Component")],i),t.ComponentsItemDisplayPanelServiceNg1Component=i},function(e,t,n){"use strict";var r=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}(),o=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i},a=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(t,"__esModule",{value:!0});var i=n(1),s=n(1339),l=n(117),d=function(e){function t(){var t=e.call(this,null,null,null,null,n(1370))||this;return t.codepen={html:t.snippets.raw.layoutHtml,htmlAttributes:{"ng-controller":"ModalInsetPanelDemoCtrl as vm"},htmlTemplates:[{id:"modalLayout.html",content:t.snippets.raw.modalLayoutHtml}],css:[t.snippets.raw.stylesCss],js:[t.snippets.raw.controllerJs,t.snippets.raw.modalControllerJs]},t}return r(t,e),t}(s.BaseDocumentationSection);d=o([i.Component({selector:"uxd-modal-inset-panel-ng1",template:n(1724),styles:[n(2464)],encapsulation:i.ViewEncapsulation.None,changeDetection:i.ChangeDetectionStrategy.OnPush}),l.DocumentationSectionComponent("ComponentsModalInsetPanelNg1Component"),a("design:paramtypes",[])],d),t.ComponentsModalInsetPanelNg1Component=d},function(e,t,n){"use strict";var r=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}(),o=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i},a=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(t,"__esModule",{value:!0});var i=n(1),s=n(1339),l=n(117),d=function(e){function t(){var t=e.call(this,null,null,null,null,n(1371))||this;return t.codepen={html:t.snippets.raw.layoutHtml,htmlAttributes:{id:"ux-codepen-container-ns"},css:[t.snippets.raw.stylesCss]},t}return r(t,e),t}(s.BaseDocumentationSection);d=o([i.Component({selector:"uxd-side-inset-panel-ng1",template:n(1725),changeDetection:i.ChangeDetectionStrategy.OnPush}),l.DocumentationSectionComponent("ComponentsSideInsetPanelNg1Component"),a("design:paramtypes",[])],d),t.ComponentsSideInsetPanelNg1Component=d},function(e,t,n){"use strict";var r=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}(),o=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i},a=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(t,"__esModule",{value:!0});var i=n(1),s=n(1339),l=n(117),d=function(e){function t(){var t=e.call(this,null,null,null,null,n(1372))||this;return t.codepen={html:t.snippets.raw.layoutHtml,htmlAttributes:{"ng-controller":"PopoverDemoCtrl as vm"},htmlTemplates:[{id:"popoverLayout.html",content:t.snippets.raw.popoverLayoutHtml},{id:"nestedPopoverLayout.html",content:t.snippets.raw.nestedPopoverLayoutHtml}],css:[t.snippets.raw.stylesCss],js:[t.snippets.raw.controllerJs]},t}return r(t,e),t}(s.BaseDocumentationSection);d=o([i.Component({selector:"uxd-popover-ng1",template:n(1726),styles:[n(2465)],encapsulation:i.ViewEncapsulation.None,changeDetection:i.ChangeDetectionStrategy.OnPush}),l.DocumentationSectionComponent("ComponentsPopoverNg1Component"),a("design:paramtypes",[])],d),t.ComponentsPopoverNg1Component=d},function(e,t,n){"use strict";var r=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}(),o=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i},a=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(t,"__esModule",{value:!0});var i=n(1),s=n(1339),l=n(117),d=function(e){function t(){var t=e.call(this,null,null,null,null,n(1373))||this;return t.codepen={html:t.snippets.raw.layoutHtml,htmlAttributes:{"ng-controller":"ProgressBarDemoCtrl as vm"},js:[t.snippets.raw.controllerJs]},t}return r(t,e),t}(s.BaseDocumentationSection);d=o([i.Component({selector:"uxd-progress-bar-ng1",template:n(1727),changeDetection:i.ChangeDetectionStrategy.OnPush}),l.DocumentationSectionComponent("ComponentsProgressBarNg1Component"),a("design:paramtypes",[])],d),t.ComponentsProgressBarNg1Component=d},function(e,t,n){"use strict";var r=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}(),o=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i},a=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(t,"__esModule",{value:!0});var i=n(1),s=n(1339),l=n(117),d=function(e){function t(){var t=e.call(this,null,null,null,null,n(1374))||this;return t.codepen={html:t.snippets.raw.layoutHtml,htmlAttributes:{"ng-controller":"CustomScrollbarDemoCtrl as vm"},css:[t.snippets.raw.stylesCss],js:[t.snippets.raw.controllerJs]},t}return r(t,e),t}(s.BaseDocumentationSection);d=o([i.Component({selector:"uxd-custom-scrollbar-ng1",template:n(1728),styles:[n(2466)],encapsulation:i.ViewEncapsulation.None,changeDetection:i.ChangeDetectionStrategy.OnPush}),l.DocumentationSectionComponent("ComponentsCustomScrollbarNg1Component"),a("design:paramtypes",[])],d),t.ComponentsCustomScrollbarNg1Component=d},function(e,t,n){"use strict";var r=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}(),o=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i},a=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(t,"__esModule",{value:!0});var i=n(1),s=n(1339),l=n(117),d=function(e){function t(){var t=e.call(this,null,null,null,null,n(1375))||this;return t.codepen={html:t.snippets.raw.layoutHtml,htmlAttributes:{"ng-controller":"InfiniteScrollLoadMoreDemoCtrl as vm"},htmlTemplates:[{id:"itemTemplate.html",content:t.snippets.raw.itemTemplateHtml}],css:[t.snippets.raw.stylesCss],js:[t.snippets.raw.controllerJs]},t}return r(t,e),t}(s.BaseDocumentationSection);d=o([i.Component({selector:"uxd-infinite-scroll-load-more-ng1",template:n(1729),styles:[n(2467)],encapsulation:i.ViewEncapsulation.None,changeDetection:i.ChangeDetectionStrategy.OnPush}),l.DocumentationSectionComponent("ComponentsInfiniteScrollLoadMoreNg1Component"),a("design:paramtypes",[])],d),t.ComponentsInfiniteScrollLoadMoreNg1Component=d},function(e,t,n){"use strict";var r=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}(),o=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i},a=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(t,"__esModule",{value:!0});var i=n(1),s=n(1339),l=n(117),d=function(e){function t(){var t=e.call(this,null,null,null,null,n(1376))||this;return t.codepen={html:t.snippets.raw.layoutHtml,htmlAttributes:{"ng-controller":"InfiniteScrollDemoCtrl as vm"},htmlTemplates:[{id:"itemTemplate.html",content:t.snippets.raw.itemTemplateHtml}],css:[t.snippets.raw.stylesCss],js:[t.snippets.raw.controllerJs]},t}return r(t,e),t}(s.BaseDocumentationSection);d=o([i.Component({selector:"uxd-infinite-scroll-ng1",template:n(1730),styles:[n(2468)],encapsulation:i.ViewEncapsulation.None,changeDetection:i.ChangeDetectionStrategy.OnPush}),l.DocumentationSectionComponent("ComponentsInfiniteScrollNg1Component"),a("design:paramtypes",[])],d),t.ComponentsInfiniteScrollNg1Component=d},function(e,t,n){"use strict";var r=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}(),o=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i},a=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(t,"__esModule",{value:!0});var i=n(1),s=n(1339),l=n(117),d=function(e){function t(){return e.call(this,null,null,null,null,n(1377))||this}return r(t,e),t}(s.BaseDocumentationSection);d=o([i.Component({selector:"uxd-search-builder-ng1",template:n(1731),styles:[n(2469)],encapsulation:i.ViewEncapsulation.None,changeDetection:i.ChangeDetectionStrategy.OnPush}),l.DocumentationSectionComponent("ComponentsSearchBuilderNg1Component"),a("design:paramtypes",[])],d),t.ComponentsSearchBuilderNg1Component=d},function(e,t,n){"use strict";var r=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}(),o=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i},a=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(t,"__esModule",{value:!0});var i=n(1),s=n(1339),l=n(117),d=function(e){function t(){var t=e.call(this,null,null,null,null,n(1378))||this;return t.codepen={html:t.snippets.raw.layoutHtml,htmlAttributes:{"ng-controller":"SearchHistoryDemoCtrl as vm"},htmlTemplates:[{id:"modalLayout.html",content:t.snippets.raw.modalLayoutHtml}],css:[t.snippets.raw.stylesCss],js:[t.snippets.raw.controllerJs,t.snippets.raw.modalControllerJs]},t}return r(t,e),t}(s.BaseDocumentationSection);d=o([i.Component({selector:"uxd-search-history-ng1",template:n(1732),styles:[n(2470)],encapsulation:i.ViewEncapsulation.None,changeDetection:i.ChangeDetectionStrategy.OnPush}),l.DocumentationSectionComponent("ComponentsSearchHistoryNg1Component"),a("design:paramtypes",[])],d),t.ComponentsSearchHistoryNg1Component=d},function(e,t,n){"use strict";var r=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}(),o=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i},a=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(t,"__esModule",{value:!0});var i=n(1),s=n(1339),l=n(117),d=function(e){function t(){var t=e.call(this,null,null,null,null,n(1379))||this;return t.codepen={html:t.snippets.raw.layoutHtml,htmlAttributes:{"ng-controller":"SearchToolbarDemoCtrl as vm"},js:[t.snippets.raw.controllerJs,t.snippets.raw.modalControllerJs]},t}return r(t,e),t}(s.BaseDocumentationSection);d=o([i.Component({selector:"uxd-search-toolbar-ng1",template:n(1733),changeDetection:i.ChangeDetectionStrategy.OnPush}),l.DocumentationSectionComponent("ComponentsSearchToolbarNg1Component"),a("design:paramtypes",[])],d),t.ComponentsSearchToolbarNg1Component=d},function(e,t,n){"use strict";var r=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}(),o=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i},a=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(t,"__esModule",{value:!0});var i=n(1),s=n(117),l=n(1339),d=function(e){function t(){var t=e.call(this,null,null,null,null,n(1380))||this;return t.codeSnippet='{ id: 1, name: "Eric Carpenter" }',t.codepen={html:t.snippets.raw.sampleHtml,htmlAttributes:{"ng-controller":"MultipleSelectTableCtrl as vm"},js:[t.snippets.raw.sampleFullJs]},t}return r(t,e),t}(l.BaseDocumentationSection);d=o([i.Component({selector:"uxd-components-multiple-select-table-ng1",template:n(1734),changeDetection:i.ChangeDetectionStrategy.OnPush}),s.DocumentationSectionComponent("ComponentsMultipleSelectTableNg1Component"),a("design:paramtypes",[])],d),t.ComponentsMultipleSelectTableNg1Component=d},function(e,t,n){"use strict";var r=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}(),o=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i},a=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(t,"__esModule",{value:!0});var i=n(1),s=n(117),l=n(1339),d=function(e){function t(){var t=e.call(this,null,null,null,null,n(1381))||this;return t.codepen={html:t.snippets.raw.sampleHtml,htmlAttributes:{"ng-controller":"SelectDemoCtrl as vm"},js:[t.snippets.raw.sampleFullJs]},t}return r(t,e),t}(l.BaseDocumentationSection);d=o([i.Component({selector:"uxd-components-select-ng1",template:n(1735),changeDetection:i.ChangeDetectionStrategy.OnPush}),s.DocumentationSectionComponent("ComponentsSelectNg1Component"),a("design:paramtypes",[])],d),t.ComponentsSelectNg1Component=d},function(e,t,n){"use strict";var r=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}(),o=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i},a=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(t,"__esModule",{value:!0});var i=n(1),s=n(117),l=n(1339),d=function(e){function t(){var t=e.call(this,null,null,null,null,n(1382))||this;return t.codepen={html:t.snippets.raw.sampleHtml,htmlAttributes:{"ng-controller":"SingleSelectTableCtrl as vm"},js:[t.snippets.raw.sampleFullJs]},t}return r(t,e),t}(l.BaseDocumentationSection);d=o([i.Component({selector:"uxd-components-single-select-table-ng1",template:n(1736),changeDetection:i.ChangeDetectionStrategy.OnPush}),s.DocumentationSectionComponent("ComponentsSingleSelectTableNg1Component"),a("design:paramtypes",[])],d),t.ComponentsSingleSelectTableNg1Component=d},function(e,t,n){"use strict";var r=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}(),o=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i},a=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(t,"__esModule",{value:!0});var i=n(1),s=n(1339),l=n(117),d=function(e){function t(){var t=e.call(this,null,null,null,null,n(1383))||this;return t.codepen={html:t.snippets.raw.layoutHtml,htmlAttributes:{"ng-controller":"LayoutSwitchingSplitterDemoCtrl as vm"},css:[t.snippets.raw.stylesCss],js:[t.snippets.raw.controllerJs]},t}return r(t,e),t}(s.BaseDocumentationSection);d=o([i.Component({selector:"uxd-layout-switching-splitter-ng1",template:n(1737),styles:[n(2471)],encapsulation:i.ViewEncapsulation.None,changeDetection:i.ChangeDetectionStrategy.OnPush}),l.DocumentationSectionComponent("ComponentsLayoutSwitchingSplitterNg1Component"),a("design:paramtypes",[])],d),t.ComponentsLayoutSwitchingSplitterNg1Component=d},function(e,t,n){"use strict";var r=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}(),o=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i},a=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(t,"__esModule",{value:!0});var i=n(1),s=n(1339),l=n(117),d=function(e){function t(){var t=e.call(this,null,null,null,null,n(1384))||this;return t.codepen={html:t.snippets.raw.layoutHtml,css:[t.snippets.raw.stylesCss]},t}return r(t,e),t}(s.BaseDocumentationSection);d=o([i.Component({selector:"uxd-nested-splitter-ng1",template:n(1738),styles:[n(2472)],encapsulation:i.ViewEncapsulation.None,changeDetection:i.ChangeDetectionStrategy.OnPush}),l.DocumentationSectionComponent("ComponentsNestedSplitterNg1Component"),a("design:paramtypes",[])],d),t.ComponentsNestedSplitterNg1Component=d},function(e,t,n){"use strict";var r=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}(),o=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i},a=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(t,"__esModule",{value:!0});var i=n(1),s=n(1339),l=n(117),d=function(e){function t(){var t=e.call(this,null,null,null,null,n(1385))||this;return t.codepen={html:t.snippets.raw.layoutHtml,htmlAttributes:{"ng-controller":"SideInsetPanelSplitterDemoCtrl as vm"},css:[t.snippets.raw.stylesCss],js:[t.snippets.raw.controllerJs]},t}return r(t,e),t}(s.BaseDocumentationSection);d=o([i.Component({selector:"uxd-side-inset-panel-splitter-ng1",template:n(1739),styles:[n(2473)],encapsulation:i.ViewEncapsulation.None,changeDetection:i.ChangeDetectionStrategy.OnPush}),l.DocumentationSectionComponent("ComponentsSideInsetPanelSplitterNg1Component"),a("design:paramtypes",[])],d),t.ComponentsSideInsetPanelSplitterNg1Component=d},function(e,t,n){"use strict";var r=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}(),o=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i},a=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(t,"__esModule",{value:!0});var i=n(1),s=n(1339),l=n(117),d=function(e){function t(){var t=e.call(this,null,null,null,null,n(1386))||this;return t.codepen={html:t.snippets.raw.layoutHtml,htmlAttributes:{"ng-controller":"SplitterDemoCtrl as vm"},css:[t.snippets.raw.stylesCss],js:[t.snippets.raw.controllerJs]},t}return r(t,e),t}(s.BaseDocumentationSection);d=o([i.Component({selector:"uxd-splitter-ng1",template:n(1740),styles:[n(2474)],encapsulation:i.ViewEncapsulation.None,changeDetection:i.ChangeDetectionStrategy.OnPush}),l.DocumentationSectionComponent("ComponentsSplitterNg1Component"),a("design:paramtypes",[])],d),t.ComponentsSplitterNg1Component=d},function(e,t,n){"use strict";var r=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}(),o=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i},a=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(t,"__esModule",{value:!0});var i=n(1),s=n(117),l=n(1339),d=function(e){function t(){var t=e.call(this,null,null,null,null,n(1387))||this;t.codepen={html:t.snippets.raw.layoutHtml,htmlAttributes:{"ng-controller":"ColumnVisibilityCtrl as vm"},js:[t.snippets.raw.controllerJs]};var r=n(8).Chance();return t.columns={id:!0,data:!0,user:!0,value:!0},t.tableData=[{data:156,user:r.name(),value:40},{data:226,user:r.name(),value:-20},{data:52,user:r.name(),value:26},{data:461,user:r.name(),value:-23},{data:119,user:r.name(),value:16}],t}return r(t,e),t}(l.BaseDocumentationSection);d=o([i.Component({selector:"uxd-components-column-visibility",template:n(1741)}),s.DocumentationSectionComponent("ComponentsColumnVisibilityNg1Component"),a("design:paramtypes",[])],d),t.ComponentsColumnVisibilityNg1Component=d},function(e,t,n){"use strict";var r=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}(),o=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i},a=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(t,"__esModule",{value:!0});var i=n(1),s=n(117),l=n(1339),d=function(e){function t(){var t=e.call(this,null,null,null,null,n(1388))||this;return t.codepen={html:t.snippets.raw.sampleHtml,htmlAttributes:{"ng-controller":"CustomResponsiveTableCtrl as vm"},js:[t.snippets.raw.sampleJs],css:[t.snippets.raw.sampleCss]},t}return r(t,e),t}(l.BaseDocumentationSection);d=o([i.Component({selector:"uxd-components-custom-reposonsive-table",template:n(1742)}),s.DocumentationSectionComponent("ComponentsCustomResponsiveTableNg1Component"),a("design:paramtypes",[])],d),t.ComponentsCustomResponsiveTableNg1Component=d},function(e,t,n){"use strict";var r=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}(),o=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i},a=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(t,"__esModule",{value:!0});var i=n(1),s=n(117),l=n(1339),d=function(e){function t(){var t=e.call(this,null,null,null,null,n(1389))||this;return t.htmlCode=t.snippets.compiled.layoutHtml,t.controllerCode=t.snippets.compiled.controllerJs,t.popoverHtmlCode=t.snippets.compiled.popoverHtml,t.popoverControllerCode=t.snippets.compiled.popoverControllerJs,t.styleCode=t.snippets.compiled.stylesCss,t.serviceCode=t.snippets.compiled.serviceJs,t.codepen={html:t.snippets.raw.layoutHtml,htmlAttributes:{"ng-controller":"DetailRowResponsiveTableCtrl as vm"},htmlTemplates:[{id:"detailRowHeaderPopover.html",content:t.snippets.raw.popoverHtml}],js:[t.snippets.raw.controllerJs,t.snippets.raw.popoverControllerJs,t.snippets.raw.serviceJs],css:[t.snippets.raw.styleCss]},t}return r(t,e),t}(l.BaseDocumentationSection);d=o([i.Component({selector:"uxd-components-detail-row-header",template:n(1743)}),s.DocumentationSectionComponent("ComponentsDetailRowHeaderNg1Component"),a("design:paramtypes",[])],d),t.ComponentsDetailRowHeaderNg1Component=d},function(e,t,n){"use strict";var r=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}(),o=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i},a=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(t,"__esModule",{value:!0});var i=n(1),s=n(117),l=n(1339),d=function(e){function t(){var t=e.call(this,null,null,null,null,n(1390))||this;return t.htmlCode=t.snippets.compiled.layoutHtml,t.jsCode=t.snippets.compiled.controllerJs,t.cssCode=t.snippets.compiled.stylesCss,t.codepen={html:t.snippets.raw.codepenHtml,htmlAttributes:{"ng-controller":"DetailRowResponsiveTableCtrl as vm"},js:[t.snippets.raw.codepenJs],css:[t.snippets.raw.stylesCss]},t}return r(t,e),t}(l.BaseDocumentationSection);d=o([i.Component({selector:"uxd-components-detail-row-responsive",template:n(1744)}),s.DocumentationSectionComponent("ComponentsDetailRowResponsiveNg1Component"),a("design:paramtypes",[])],d),t.ComponentsDetailRowResponsiveNg1Component=d},function(e,t,n){"use strict";var r=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}(),o=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i},a=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(t,"__esModule",{value:!0});var i=n(1),s=n(117),l=n(1339),d=function(e){function t(){var t=e.call(this,null,null,null,n(1391))||this;return t.filterContainerCode=t.snippets.compiled.filterContainerHtml,t.filterControllerCode=t.snippets.compiled.filterContainerJs,t.filterOptionsCode=t.snippets.compiled.filterOptionsJs,t.filterCode=t.snippets.compiled.filterHtml,t}return r(t,e),t}(l.BaseDocumentationSection);d=o([i.Component({selector:"uxd-components-dynamic-filters",template:n(1745)}),s.DocumentationSectionComponent("ComponentsDynamicFiltersNg1Component"),a("design:paramtypes",[])],d),t.ComponentsDynamicFiltersNg1Component=d},function(e,t,n){"use strict";var r=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}(),o=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i},a=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(t,"__esModule",{value:!0});var i=n(1),s=n(117),l=n(1339),d=function(e){function t(){var t=e.call(this,null,null,null,n(1392))||this;return t.filterContainerCode=t.snippets.compiled.filterContainerHtml,t.filterCode=t.snippets.compiled.filterHtml,t.filterOptionsCode=t.snippets.compiled.filterOptionsHtml,t}return r(t,e),t}(l.BaseDocumentationSection);d=o([i.Component({selector:"uxd-components-filters",template:n(1746)}),s.DocumentationSectionComponent("ComponentsFiltersNg1Component"),a("design:paramtypes",[])],d),t.ComponentsFiltersNg1Component=d},function(e,t,n){"use strict";var r=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}(),o=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i},a=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(t,"__esModule",{value:!0});var i=n(1),s=n(117),l=n(1339),d=function(e){function t(){var t=e.call(this,null,null,null,null,n(1393))||this;return t.htmlCode=t.snippets.compiled.layoutHtml,t.jsCode=t.snippets.compiled.controllerJs,t.codepen={html:t.snippets.raw.layoutHtml,htmlAttributes:{"ng-controller":"FixedHeaderCtrl"},js:[t.snippets.raw.codepenJs]},t}return r(t,e),t}(l.BaseDocumentationSection);d=o([i.Component({selector:"uxd-components-fixed-header-table",template:n(1747)}),s.DocumentationSectionComponent("ComponentsFixedHeaderTableNg1Component"),a("design:paramtypes",[])],d),t.ComponentsFixedHeaderTableNg1Component=d},function(e,t,n){"use strict";var r=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}(),o=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i},a=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(t,"__esModule",{value:!0});var i=n(1),s=n(117),l=n(1339),d=function(e){function t(){var t=e.call(this,null,null,null,n(1394))||this;return t.idsCode=t.snippets.compiled.idsJs,t.rootCode=t.snippets.compiled.rootJs,t.hierarchyCode=t.snippets.compiled.hierarchyJs,t}return r(t,e),t}(l.BaseDocumentationSection);d=o([i.Component({selector:"uxd-components-grouping",template:n(1748)}),s.DocumentationSectionComponent("ComponentsGroupingNg1Component"),a("design:paramtypes",[])],d),t.ComponentsGroupingNg1Component=d},function(e,t,n){"use strict";var r=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}(),o=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i},a=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(t,"__esModule",{value:!0});var i=n(1),s=n(117),l=n(1339),d=function(e){function t(){var t=e.call(this,null,null,null,null,n(1395))||this;return t.htmlCode=t.snippets.compiled.layoutHtml,t.jsCode=t.snippets.compiled.controllerJs,t.cssCode=t.snippets.compiled.stylesCss,t.codepen={html:t.snippets.raw.layoutHtml,htmlAttributes:{"ng-controller":"HoverActionCtrl"},js:[t.snippets.raw.controllerJs],css:[t.snippets.raw.stylesCss]},t}return r(t,e),t}(l.BaseDocumentationSection);d=o([i.Component({selector:"uxd-components-hover-actions",template:n(1749)}),s.DocumentationSectionComponent("ComponentsHoverActionsNg1Component"),a("design:paramtypes",[])],d),t.ComponentsHoverActionsNg1Component=d},function(e,t,n){"use strict";var r=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}(),o=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i},a=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(t,"__esModule",{value:!0});var i=n(1),s=n(117),l=n(1339),d=function(e){function t(){var t=e.call(this,null,null,null,n(1396))||this;return t.htmlCode=t.snippets.compiled.sampleHtml,t}return r(t,e),t}(l.BaseDocumentationSection);d=o([i.Component({selector:"uxd-components-indices",template:n(1750)}),s.DocumentationSectionComponent("ComponentsIndicesNg1Component"),a("design:paramtypes",[])],d),t.ComponentsIndicesNg1Component=d},function(e,t,n){"use strict";var r=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}(),o=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i},a=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(t,"__esModule",{value:!0});var i=n(1),s=n(117),l=n(1339),d=function(e){function t(){var t=e.call(this,null,null,null,null,n(1397))||this;return t.htmlCode=t.snippets.compiled.sampleHtml,t}return r(t,e),t}(l.BaseDocumentationSection);d=o([i.Component({selector:"uxd-components-layout-switching",template:n(1751)}),s.DocumentationSectionComponent("ComponentsLayoutSwitchingNg1Component"),a("design:paramtypes",[])],d),t.ComponentsLayoutSwitchingNg1Component=d},function(e,t,n){"use strict";var r=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}(),o=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i},a=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(t,"__esModule",{value:!0});var i=n(1),s=n(117),l=n(1339),d=function(e){function t(){var t=e.call(this,null,null,null,null,n(1398))||this;return t.htmlCode=t.snippets.compiled.sampleHtml,t}return r(t,e),t}(l.BaseDocumentationSection);d=o([i.Component({selector:"uxd-components-list-hover-actions",template:n(1752)}),s.DocumentationSectionComponent("ComponentsListHoverActionsNg1Component"),a("design:paramtypes",[])],d),t.ComponentsListHoverActionsNg1Component=d},function(e,t,n){"use strict";var r=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}(),o=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i},a=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(t,"__esModule",{value:!0});var i=n(1),s=n(117),l=n(1339),d=function(e){function t(){var t=e.call(this,null,null,null,null,n(1399))||this;return t.htmlCode=t.snippets.compiled.sampleHtml,t.jsCode=t.snippets.compiled.sampleJs,t.codepen={html:t.snippets.raw.sampleHtml,htmlAttributes:{"ng-controller":"MultipleColumnSortingCtrl as vm"},js:[t.snippets.raw.sampleJs]},t}return r(t,e),t}(l.BaseDocumentationSection);d=o([i.Component({selector:"uxd-components-multiple-column-sorting",template:n(1753)}),s.DocumentationSectionComponent("ComponentsMultipleColumnSortingNg1Component"),a("design:paramtypes",[])],d),t.ComponentsMultipleColumnSortingNg1Component=d},function(e,t,n){"use strict";var r=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}(),o=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i},a=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(t,"__esModule",{value:!0});var i=n(1),s=n(117),l=n(1339),d=function(e){function t(){var t=e.call(this,null,null,null,n(1400))||this;return t.htmlCode=t.snippets.compiled.layoutHtml,t.selectionCode=t.snippets.compiled.selectionHtml,t}return r(t,e),t}(l.BaseDocumentationSection);d=o([i.Component({selector:"uxd-components-multiple-select-actions",template:n(1754)}),s.DocumentationSectionComponent("ComponentsMultipleSelectActionsNg1Component"),a("design:paramtypes",[])],d),t.ComponentsMultipleSelectActionsNg1Component=d},function(e,t,n){"use strict";var r=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}(),o=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i},a=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(t,"__esModule",{value:!0});var i=n(1),s=n(117),l=n(1339),d=function(e){function t(){var t=e.call(this,null,null,null,n(1401))||this;return t.htmlCode=t.snippets.compiled.layoutHtml,t}return r(t,e),t}(l.BaseDocumentationSection);d=o([i.Component({selector:"uxd-components-multiple-selection-row",template:n(1755)}),s.DocumentationSectionComponent("ComponentsMultipleSelectionRowNg1Component"),a("design:paramtypes",[])],d),t.ComponentsMultipleSelectionRowNg1Component=d},function(e,t,n){"use strict";var r=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}(),o=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i},a=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(t,"__esModule",{value:!0});var i=n(1),s=n(117),l=n(1339),d=function(e){function t(){var t=e.call(this,null,null,null,n(1402))||this;return t.toggleCode=t.snippets.compiled.toggleHtml,t.previewItemCode=t.snippets.compiled.previewPaneItemHtml,t}return r(t,e),t}(l.BaseDocumentationSection);d=o([i.Component({selector:"uxd-components-preview-pane",template:n(1756)}),s.DocumentationSectionComponent("ComponentsPreviewPaneNg1Component"),a("design:paramtypes",[])],d),t.ComponentsPreviewPaneNg1Component=d},function(e,t,n){"use strict";var r=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}(),o=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i},a=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(t,"__esModule",{value:!0});var i=n(1),s=n(117),l=n(1339),d=function(e){function t(){var t=e.call(this,null,null,null,null,n(1403))||this;return t.sampleCode=t.snippets.compiled.sampleHtml,t.htmlCode=t.snippets.compiled.layoutHtml,t.jsCode=t.snippets.compiled.controllerJs,t.cssCode=t.snippets.compiled.stylesCss,t.footerCode=t.snippets.compiled.footerHtml,t.codepen={html:t.snippets.raw.layoutHtml,htmlAttributes:{"ng-controller":"PreviewPaneWindowCtrl as vm"},htmlTemplates:[{id:"Preview.html",content:n(210)},{id:"PreviewDOC.html",content:n(211)},{id:"PreviewPDF.html",content:n(212)},{id:"PreviewPPT.html",content:n(213)},{id:"PreviewXLS.html",content:n(214)}],js:[t.snippets.raw.controllerJs],css:[t.snippets.raw.stylesCss]},t}return r(t,e),t}(l.BaseDocumentationSection);d=o([i.Component({selector:"uxd-components-preview-pane-window",template:n(1757)}),s.DocumentationSectionComponent("ComponentsPreviewPaneWindowNg1Component"),a("design:paramtypes",[])],d),t.ComponentsPreviewPaneWindowNg1Component=d},function(e,t,n){"use strict";var r=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}(),o=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i},a=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(t,"__esModule",{value:!0});var i=n(1),s=n(117),l=n(1339),d=function(e){function t(){var t=e.call(this,null,null,null,null,n(1404))||this;return t.htmlCode=t.snippets.compiled.layoutHtml,t.jsCode=t.snippets.compiled.controllerJs,t.cssCode=t.snippets.compiled.stylesCss,t.tableDataCode=t.snippets.compiled.tableDataHtml,t.controlsCode=t.snippets.compiled.controlsHtml,t.removeRowHtmlCode=t.snippets.compiled.removeRowHtml,t.removeRowJsCode=t.snippets.compiled.removeRowJs,t.codepen={html:t.snippets.raw.layoutHtml,htmlAttributes:{"ng-controller":"ReorderableCtrl as vm"},js:[t.snippets.raw.controllerJs],css:[t.snippets.raw.stylesCss]},t}return r(t,e),t}(l.BaseDocumentationSection);d=o([i.Component({selector:"uxd-components-reorderable-table",template:n(1758)}),s.DocumentationSectionComponent("ComponentsReorderableTableNg1Component"),a("design:paramtypes",[])],d),t.ComponentsReorderableTableNg1Component=d},function(e,t,n){"use strict";var r=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}(),o=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i},a=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(t,"__esModule",{value:!0});var i=n(1),s=n(117),l=n(1339),d=function(e){function t(){var t=e.call(this,null,null,null,null,n(1405))||this;return t.htmlCode=t.snippets.compiled.sampleHtml,t.jsCode=t.snippets.compiled.sampleJs,t.codepen={html:t.snippets.raw.sampleHtml,htmlAttributes:{"ng-controller":"SingleColumnSortingCtrl as vm"},js:[t.snippets.raw.sampleJs]},t}return r(t,e),t}(l.BaseDocumentationSection);d=o([i.Component({selector:"uxd-components-single-column-sorting",template:n(1759)}),s.DocumentationSectionComponent("ComponentsSingleColumnSortingNg1Component"),a("design:paramtypes",[])],d),t.ComponentsSingleColumnSortingNg1Component=d},function(e,t,n){"use strict";var r=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}(),o=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i},a=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(t,"__esModule",{value:!0});var i=n(1),s=n(117),l=n(1339),d=function(e){function t(){var t=e.call(this,null,null,null,null,n(1406))||this;return t.htmlCode=t.snippets.compiled.sampleHtml,t.jsCode=t.snippets.compiled.sampleJs,t.codepen={html:t.snippets.raw.sampleHtml,htmlAttributes:{"ng-controller":"SortToggleCtrl as vm"},js:[t.snippets.raw.sampleJs]},t}return r(t,e),t}(l.BaseDocumentationSection);d=o([i.Component({selector:"uxd-components-sort-direction-toggle",template:n(1760)}),s.DocumentationSectionComponent("ComponentsSortDirectionToggleNg1Component"),a("design:paramtypes",[])],d),t.ComponentsSortDirectionToggleNg1Component=d},function(e,t,n){"use strict";var r=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}(),o=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i},a=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(t,"__esModule",{value:!0});var i=n(1),s=n(117),l=n(1339),d=function(e){function t(){var t=e.call(this,null,null,null,n(1407))||this;return t.sortingCode=t.snippets.compiled.layoutHtml,t.htmlCode=t.snippets.compiled.sampleHtml,t.jsCode=t.snippets.compiled.sampleJs,t}return r(t,e),t}(l.BaseDocumentationSection);d=o([i.Component({selector:"uxd-components-sorting",template:n(1761)}),s.DocumentationSectionComponent("ComponentsSortingNg1Component"),a("design:paramtypes",[])],d),t.ComponentsSortingNg1Component=d},function(e,t,n){"use strict";var r=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}(),o=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i},a=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(t,"__esModule",{value:!0});var i=n(1),s=n(117),l=n(1339),d=function(e){function t(){var t=e.call(this,null,null,null,n(1408))||this;return t.htmlCode=t.snippets.compiled.layoutHtml,t.selectionCode=t.snippets.compiled.selectionHtml,t}return r(t,e),t}(l.BaseDocumentationSection);d=o([i.Component({selector:"uxd-components-traditional-multiple-select-actions",template:n(1762)}),s.DocumentationSectionComponent("ComponentsTraditionalMultipleSelectActionsNg1Component"),a("design:paramtypes",[])],d),t.ComponentsTraditionalMultipleSelectActionsNg1Component=d},function(e,t,n){"use strict";var r=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i};Object.defineProperty(t,"__esModule",{value:!0});var o=n(1),a=n(117),i=function(){function e(){this.htmlCode=n(2260),this.jsCode=n(2261),this.cssCode=n(2259),this.codepen={html:this.htmlCode,htmlAttributes:{"ng-controller":"TabsCtrl as vm"},js:[this.jsCode],css:[this.cssCode]}}return e}();i=r([o.Component({selector:"uxd-components-card-tabs-ng1",template:n(1763),changeDetection:o.ChangeDetectionStrategy.OnPush}),a.DocumentationSectionComponent("ComponentsCardTabsNg1Component")],i),t.ComponentsCardTabsNg1Component=i},function(e,t,n){"use strict";var r=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i};Object.defineProperty(t,"__esModule",{value:!0});var o=n(1),a=n(117),i=function(){function e(){this.htmlCode=n(2262),this.jsCode=n(2263),this.barHtml=n(1765),this.barCtrl=n(2264),this.sankeyHtml=n(1766),this.sankeyCtrl=n(2265),this.tableHtml=n(1767),this.tableCtrl=n(2266),this.codepen={html:this.htmlCode,htmlAttributes:{"ng-controller":"TabsCtrl as vm"},htmlTemplates:[{id:"tab-bar.html",content:this.barHtml},{id:"tab-sankey.html",content:this.sankeyHtml},{id:"tab-table.html",content:this.tableHtml}],js:[this.jsCode,this.barCtrl,this.sankeyCtrl,this.tableCtrl]}}return e}();i=r([o.Component({selector:"uxd-components-detailed-tab-example-ng1",template:n(1764),changeDetection:o.ChangeDetectionStrategy.OnPush}),a.DocumentationSectionComponent("ComponentsDetailedTabExampleNg1Component")],i),t.ComponentsDetailedTabExampleNg1Component=i},function(e,t,n){"use strict";var r=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i};Object.defineProperty(t,"__esModule",{value:!0});var o=n(1),a=n(117),i=function(){function e(){this.htmlCode=n(2268),this.jsCode=n(2269),this.cssCode=n(2267),this.codepen={html:this.htmlCode,htmlAttributes:{"ng-controller":"TabsCtrl as vm"},js:[this.jsCode],css:[this.cssCode]}}return e}();i=r([o.Component({selector:"uxd-components-stacked-tabs-ng1",template:n(1768),changeDetection:o.ChangeDetectionStrategy.OnPush}),a.DocumentationSectionComponent("ComponentsStackedTabsNg1Component")],i),t.ComponentsStackedTabsNg1Component=i},function(e,t,n){"use strict";var r=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i};Object.defineProperty(t,"__esModule",{value:!0});var o=n(1),a=n(117),i=function(){function e(){this.htmlCode=n(2270),this.jsCode=n(2271),this.tabContent=n(1770),this.codepen={html:this.htmlCode,htmlAttributes:{"ng-controller":"TabsCtrl as vm"},htmlTemplates:[{id:"tab.html",content:this.tabContent}],js:[this.jsCode]}}return e}();i=r([o.Component({selector:"uxd-components-tabs-ng1",template:n(1769),changeDetection:o.ChangeDetectionStrategy.OnPush}),a.DocumentationSectionComponent("ComponentsTabsNg1Component")],i),t.ComponentsTabsNg1Component=i},function(e,t,n){"use strict";var r=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i};Object.defineProperty(t,"__esModule",{value:!0});var o=n(1),a=n(117),i=function(){function e(){this.htmlCode=n(2272),this.jsCode=n(2273),this.codepen={html:this.htmlCode,htmlAttributes:{"ng-controller":"TimelineCtrl as vm"},js:[this.jsCode]}}return e}();i=r([o.Component({selector:"uxd-components-timline-ng1",template:n(1771),changeDetection:o.ChangeDetectionStrategy.OnPush}),a.DocumentationSectionComponent("ComponentsTimelineNg1Component")],i),t.ComponentsTimelineNg1Component=i},function(e,t,n){"use strict";var r=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i};Object.defineProperty(t,"__esModule",{value:!0});var o=n(1),a=n(117),i=function(){function e(){this.htmlCode=n(2275),this.cssCode=n(2274),this.codepen={html:this.htmlCode,css:[this.cssCode]}}return e}();i=r([o.Component({selector:"uxd-components-overflow-tooltip-ng1",template:n(1772),changeDetection:o.ChangeDetectionStrategy.OnPush}),a.DocumentationSectionComponent("ComponentsOverflowTooltipNg1Component")],i),t.ComponentsOverflowTooltipNg1Component=i},function(e,t,n){"use strict";var r=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i};Object.defineProperty(t,"__esModule",{value:!0});var o=n(1),a=n(117),i=function(){function e(){this.htmlCode=n(2277),this.cssCode=n(2276),this.codepen={html:this.htmlCode,css:[this.cssCode]}}return e}();i=r([o.Component({selector:"uxd-components-single-line-overflow-tooltip-ng1",template:n(1773),changeDetection:o.ChangeDetectionStrategy.OnPush}),a.DocumentationSectionComponent("ComponentsSingleLineOverflowTooltipNg1Component")],i),t.ComponentsSingleLineOverflowTooltipNg1Component=i},function(e,t,n){"use strict";var r=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i};Object.defineProperty(t,"__esModule",{value:!0});var o=n(1),a=n(117),i=function(){function e(){this.htmlCode=n(2278),this.jsCode=n(2279),this.codepen={html:this.htmlCode,htmlAttributes:{"ng-controller":"StaticTooltipDemoCtrl as vm"},js:[this.jsCode]}}return e}();i=r([o.Component({selector:"uxd-components-static-tooltip-ng1",template:n(1774),changeDetection:o.ChangeDetectionStrategy.OnPush}),a.DocumentationSectionComponent("ComponentsStaticTooltipNg1Component")],i),t.ComponentsStaticTooltipNg1Component=i},function(e,t,n){"use strict";var r=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i};Object.defineProperty(t,"__esModule",{value:!0});var o=n(1),a=n(117),i=function(){function e(){this.htmlCode=n(2280),this.jsCode=n(2281),this.codepen={html:this.htmlCode,htmlAttributes:{"ng-controller":"TooltipsCtrl as vm"},js:[this.jsCode]}}return e}();i=r([o.Component({selector:"uxd-components-tooltips-ng1",template:n(1775),changeDetection:o.ChangeDetectionStrategy.OnPush}),a.DocumentationSectionComponent("ComponentsTooltipsNg1Component")],i),t.ComponentsTooltipsNg1Component=i},function(e,t,n){"use strict";var r=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i};Object.defineProperty(t,"__esModule",{value:!0});var o=n(1),a=n(117),i=function(){function e(){this.htmlCode=n(2283),this.jsCodeShort=n(2282),this.jsCode=n(2284),this.template=n(2285),this.codepen={html:this.htmlCode,htmlAttributes:{"ng-controller":"TreeGridAsyncDemoCtrl as vm"},htmlTemplates:[{id:"template.html",content:this.template}],js:[this.jsCode]}}return e}();i=r([o.Component({selector:"uxd-components-tree-grid-asynchronous-loading",template:n(1776),changeDetection:o.ChangeDetectionStrategy.OnPush}),a.DocumentationSectionComponent("ComponentsTreeGridAsynchronousLoadingNg1Component")],i),t.ComponentsTreeGridAsynchronousLoadingNg1Component=i},function(e,t,n){"use strict";var r=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i};Object.defineProperty(t,"__esModule",{value:!0});var o=n(1),a=n(117),i=function(){function e(){this.sampleHtml=n(2291),this.sampleJs=n(2292),this.jsCode1=n(2287),this.jsCode2=n(2288),this.jsCode3=n(2289),this.jsCode4=n(2290),this.actionsJs=n(2286),this.actionsHtml=n(1778),this.displayPanel=n(1779),this.displayPanelFooter=n(1780),this.codepen={html:this.sampleHtml,htmlAttributes:{"ng-controller":"TreeGridCtrl as vm"},htmlTemplates:[{id:"actions.html",content:this.actionsHtml},{id:"displayPanel.html",content:this.displayPanel},{id:"displayPanelFooter.html",content:this.displayPanelFooter}],js:[this.sampleJs,this.actionsJs]}}return e}();i=r([o.Component({selector:"uxd-components-tree-grid-ng1",template:n(1777),changeDetection:o.ChangeDetectionStrategy.OnPush}),a.DocumentationSectionComponent("ComponentsTreeGridNg1Component")],i),t.ComponentsTreeGridNg1Component=i},function(e,t,n){"use strict";var r=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i};Object.defineProperty(t,"__esModule",{value:!0});var o=n(1),a=n(117),i=function(){function e(){this.htmlCode=n(2293),this.jsCode=n(2294),this.codepen={html:this.htmlCode,htmlAttributes:{"ng-controller":"TreeViewCompanionViewCtrl as vm"},js:[this.jsCode]}}return e}();i=r([o.Component({selector:"uxd-components-tree-view-companion-view-ng1",template:n(1781),changeDetection:o.ChangeDetectionStrategy.OnPush}),a.DocumentationSectionComponent("ComponentsTreeViewCompanionViewNg1Component")],i),t.ComponentsTreeViewCompanionViewNg1Component=i},function(e,t,n){"use strict";var r=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i};Object.defineProperty(t,"__esModule",{value:!0});var o=n(1),a=n(117),i=function(){function e(){this.htmlCode=n(2295),this.jsCode=n(2296),this.snippet=n(2297),this.codepen={html:this.htmlCode,htmlAttributes:{"ng-controller":"TreeViewDocumentationCtrl as vm"},js:[this.jsCode]}}return e}();i=r([o.Component({selector:"uxd-components-tree-view-ng1",template:n(1782),changeDetection:o.ChangeDetectionStrategy.OnPush}),a.DocumentationSectionComponent("ComponentsTreeViewNg1Component")],i),t.ComponentsTreeViewNg1Component=i},function(e,t,n){"use strict";var r=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i};Object.defineProperty(t,"__esModule",{value:!0});var o=n(1),a=n(117),i=function(){function e(){this.htmlCode1=n(2298),this.htmlCode2=n(2299),this.jsCode=n(2300)}return e}();i=r([o.Component({selector:"uxd-components-ui-router-ng1",template:n(1783),changeDetection:o.ChangeDetectionStrategy.OnPush}),a.DocumentationSectionComponent("ComponentsUiRouterNg1Component")],i),t.ComponentsUiRouterNg1Component=i},function(e,t,n){"use strict";var r=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i};Object.defineProperty(t,"__esModule",{value:!0});var o=n(1),a=n(117),i=function(){function e(){this.jsCode=n(2301)}return e}();i=r([o.Component({selector:"uxd-components-color-service-ng1",template:n(1784),changeDetection:o.ChangeDetectionStrategy.OnPush}),a.DocumentationSectionComponent("ComponentsColorServiceNg1Component")],i),t.ComponentsColorServiceNg1Component=i},function(e,t,n){"use strict";var r=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i};Object.defineProperty(t,"__esModule",{value:!0});var o=n(1),a=n(117),i=function(){function e(){this.htmlCode=n(2302),this.jsCode=n(2303)}return e}();i=r([o.Component({selector:"uxd-components-expanding-content-ng1",template:n(1785),changeDetection:o.ChangeDetectionStrategy.OnPush}),a.DocumentationSectionComponent("ComponentsExpandingContentNg1Component")],i),t.ComponentsExpandingContentNg1Component=i},function(e,t,n){"use strict";var r=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i};Object.defineProperty(t,"__esModule",{value:!0});var o=n(1),a=n(117),i=function(){function e(){this.htmlCode=n(2304),this.codepen={html:this.htmlCode}}return e}();i=r([o.Component({selector:"uxd-components-focus-on-show-ng1",template:n(1786),changeDetection:o.ChangeDetectionStrategy.OnPush}),a.DocumentationSectionComponent("ComponentsFocusOnShowNg1Component")],i),t.ComponentsFocusOnShowNg1Component=i},function(e,t,n){"use strict";var r=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i};Object.defineProperty(t,"__esModule",{value:!0});var o=n(1),a=n(117),i=function(){function e(){this.htmlCode=n(2305)}return e}();i=r([o.Component({selector:"uxd-components-force-focus-ng1",template:n(1787),changeDetection:o.ChangeDetectionStrategy.OnPush}),a.DocumentationSectionComponent("ComponentsForceFocusNg1Component")],i),t.ComponentsForceFocusNg1Component=i},function(e,t,n){"use strict";var r=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i};Object.defineProperty(t,"__esModule",{value:!0});var o=n(1),a=n(117),i=function(){function e(){this.htmlCode=n(2306),this.jsCode=n(2307),this.codepen={html:this.htmlCode,htmlAttributes:{"ng-controller":"ListItemFilterCtrl as vm"},js:[this.jsCode]}}return e}();i=r([o.Component({selector:"uxd-components-list-item-filter-ng1",template:n(1788),changeDetection:o.ChangeDetectionStrategy.OnPush}),a.DocumentationSectionComponent("ComponentsListItemFilterNg1Component")],i),t.ComponentsListItemFilterNg1Component=i},function(e,t,n){"use strict";var r=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i};Object.defineProperty(t,"__esModule",{value:!0});var o=n(1),a=n(117),i=function(){function e(){this.htmlCode=n(2308),this.jsCode=n(2309),this.snippet=n(2310),this.codepen={html:this.htmlCode,htmlAttributes:{"ng-controller":"PdfServiceCtrl as vm"},js:[this.jsCode]}}return e}();i=r([o.Component({selector:"uxd-components-pdf-service-ng1",template:n(1789),changeDetection:o.ChangeDetectionStrategy.OnPush}),a.DocumentationSectionComponent("ComponentsPdfServiceNg1Component")],i),t.ComponentsPdfServiceNg1Component=i},function(e,t,n){"use strict";var r=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i};Object.defineProperty(t,"__esModule",{value:!0});var o=n(1),a=n(117),i=function(){function e(){this.jsCode1=n(2311),this.jsCode2=n(2312),this.jsCode3=n(2313)}return e}();i=r([o.Component({selector:"uxd-components-safe-interval-ng1",template:n(1790),changeDetection:o.ChangeDetectionStrategy.OnPush}),a.DocumentationSectionComponent("ComponentsSafeIntervalNg1Component")],i),t.ComponentsSafeIntervalNg1Component=i},function(e,t,n){"use strict";var r=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i};Object.defineProperty(t,"__esModule",{value:!0});var o=n(1),a=n(117),i=function(){function e(){this.jsCode1=n(2314),this.jsCode2=n(2315),this.jsCode3=n(2316)}return e}();i=r([o.Component({selector:"uxd-components-safe-timeout-ng1",template:n(1791),changeDetection:o.ChangeDetectionStrategy.OnPush}),a.DocumentationSectionComponent("ComponentsSafeTimeoutNg1Component")],i),t.ComponentsSafeTimeoutNg1Component=i},function(e,t,n){"use strict";var r=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i};Object.defineProperty(t,"__esModule",{value:!0});var o=n(1),a=n(117),i=function(){function e(){this.htmlCode=n(2317),this.jsCode=n(2318),this.snippet1=n(2319),this.snippet2=n(2320),this.codepen={html:this.htmlCode,htmlAttributes:{"ng-controller":"TimeAgoCtrl as vm"},js:[this.jsCode]}}return e}();i=r([o.Component({selector:"uxd-components-time-ago-service-ng1",template:n(1792),changeDetection:o.ChangeDetectionStrategy.OnPush}),a.DocumentationSectionComponent("ComponentsTimeAgoServiceNg1Component")],i),t.ComponentsTimeAgoServiceNg1Component=i},function(e,t,n){"use strict";var r=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i};Object.defineProperty(t,"__esModule",{value:!0});var o=n(1),a=n(117),i=function(){function e(){this.jsCode=n(2321)}return e}();i=r([o.Component({selector:"uxd-components-window-communication-service-ng1",template:n(1793),changeDetection:o.ChangeDetectionStrategy.OnPush}),a.DocumentationSectionComponent("ComponentsWindowCommunicationServiceNg1Component")],i),t.ComponentsWindowCommunicationServiceNg1Component=i},function(e,t,n){"use strict";var r=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i};Object.defineProperty(t,"__esModule",{value:!0});var o=n(1),a=n(117),i=function(){function e(){this.htmlCode=n(248),this.jsCode=n(2327),this.cssCode=n(2326),this.modalHtml=n(2324),this.modalJs=n(2325),this.first=n(2322),this.second=n(2328),this.third=n(2329),this.fourth=n(2323),this.codepen={html:this.modalHtml,htmlAttributes:{"ng-controller":"MarqueeModalCtrl as vm"},htmlTemplates:[{id:"sample.html",content:this.htmlCode},{id:"first.html",content:this.first},{id:"second.html",content:this.second},{id:"third.html",content:this.third},{id:"fourth.html",content:this.fourth}],css:[this.cssCode],js:[this.modalJs,this.jsCode]}}return e}();i=r([o.Component({selector:"uxd-components-marquee-wizard-ng1",template:n(1794),changeDetection:o.ChangeDetectionStrategy.OnPush}),a.DocumentationSectionComponent("ComponentsMarqueeWizardNg1Component")],i),t.ComponentsMarqueeWizardNg1Component=i},function(e,t,n){"use strict";var r=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i};Object.defineProperty(t,"__esModule",{value:!0});var o=n(1),a=n(117),i=function(){function e(){this.htmlCode=n(2330),this.jsCode=n(2331),this.codepen={html:this.htmlCode,htmlAttributes:{"ng-controller":"VerticalWizardCtrl as vm"},js:[this.jsCode]}}return e}();i=r([o.Component({selector:"uxd-components-vertical-wizard-ng1",template:n(1795),changeDetection:o.ChangeDetectionStrategy.OnPush}),a.DocumentationSectionComponent("ComponentsVerticalWizardNg1Component")],i),t.ComponentsVerticalWizardNg1Component=i},function(e,t,n){"use strict";var r=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i};Object.defineProperty(t,"__esModule",{value:!0});var o=n(1),a=n(117),i=function(){function e(){this.htmlCode=n(2332),this.jsCode=n(2333),this.codepen={html:this.htmlCode,htmlAttributes:{"ng-controller":"WizardCtrl as vm"},js:[this.jsCode]}}return e}();i=r([o.Component({selector:"uxd-components-wizard-ng1",template:n(1796),changeDetection:o.ChangeDetectionStrategy.OnPush}),a.DocumentationSectionComponent("ComponentsWizardNg1Component")],i),t.ComponentsWizardNg1Component=i},function(e,t,n){"use strict";var r=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i};Object.defineProperty(t,"__esModule",{value:!0});var o=n(1),a=n(117),i=function(){function e(){this.htmlCode=n(2334),this.jsCode=n(2335),this.codepen={html:this.htmlCode,htmlAttributes:{"ng-controller":"WizardValidationCtrl as vm"},js:[this.jsCode]}}return e}();i=r([o.Component({selector:"uxd-components-wizard-validation-ng1",template:n(1797),changeDetection:o.ChangeDetectionStrategy.OnPush}),a.DocumentationSectionComponent("ComponentsWizardValidationNg1Component")],i),t.ComponentsWizardValidationNg1Component=i},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,function(e,t,n){e.exports=n.p+"assets/indexExample.png"},,,,,,,,,,,,,,,,,,,,,,,function(e,t){e.exports='<uxd-checkbox-buttons-wrapper></uxd-checkbox-buttons-wrapper>\r\n\r\n<hr>\r\n\r\n<p>To create checkbox buttons create a <code>.btn-group</code> with the required <code>.btns</code> &amp; including <code>button-toggle-primary</code> or <code>button-toggle-accent</code> class inside.</p>\r\n\r\n<p>On each <code>.btn</code> set <code>ng-model</code> to the property required and specify the<code> btn-checkbox</code> attribute. \r\nUse the <code>btn-checkbox-true</code> and <code>btn-checkbox-false</code> attributes to specify <code>true</code> and <code>false</code> values on a per button basis.</p>\r\n\r\n<p>For assistive technologies you should use the <code>role="checkbox"</code> attribute, together with the <code>aria-checked</code> attribute. \r\nThe <code>aria-checked</code> attribute should be bound to the same property you use for the checked state.</p>\r\n\r\n<p>Additionally you can include a <code>span</code> with the <code>sr-only</code> class to convey additional information on the state of the buttons. \r\nThis information will be read by screen-readers but not visible on the page.</p>\r\n\r\n<tabset>\r\n    <tab heading="HTML">\r\n        <uxd-snippet [code]="htmlCode" language="html"></uxd-snippet>\r\n    </tab>\r\n    <tab heading="JavaScript">\r\n        <uxd-snippet [code]="javascriptCode" language="javascript"></uxd-snippet>\r\n    </tab>\r\n</tabset>\r\n'},function(e,t){e.exports='<uxd-dropdown-wrapper display="main"></uxd-dropdown-wrapper>\r\n\r\n<hr>\r\n\r\n<p>On the <code>div.btn-group</code> set the dropdown attribute. The dropdown can either be opened by using the <code>is-open</code> attribute, or assigning the <code>dropdown-toggle</code> attribute to the desired <code>.btn</code>.</p>\r\n\r\n<p>Set <code>on-toggle="yourFunction(open)"</code> for <code>yourFunction</code> to be executed every time the dropdown changes state.</p>\r\n\r\n<p>It is possible to add interactive items to the dropdown. If the dropdown should remain open when clicking on an item, add <code>ng-click="$event.stopPropagation()"</code> to the anchor element. The <code>dropdown-indent</code> class is provided to visually distinguish subordinate controls within the dropdown, as seen in the first example.</p>\r\n\r\n<tabset>\r\n    <tab heading="HTML">\r\n        <uxd-snippet [code]="htmlCode" language="html"></uxd-snippet>\r\n    </tab>\r\n    <tab heading="JavaScript">\r\n        <uxd-snippet [code]="javascriptCode" language="javascript"></uxd-snippet>\r\n    </tab>\r\n</tabset>\r\n\r\n<h4 id="menu-features">Menu Features</h4>\r\n\r\n<uxd-dropdown-wrapper display="menu"></uxd-dropdown-wrapper>\r\n\r\n<hr>\r\n\r\n<p>Styles are provided to create menus with common features including gutter icons, keyboard shortcut hints, and submenus.</p>\r\n\r\n<p>To style menu items as above, apply the <code>dropdown-menu-item</code> class to the <code>a</code> element of the menu item. This will contain up to three <code>span</code> elements with classes as follows:</p>\r\n\r\n<ul>\r\n  <li><code>dropdown-menu-icon</code> - This contains the icon, which may be one of the <a routerLink="/css/icons" fragment="ux-icons">UX Aspects Icons</a> or an image. If no icon is required, leave this empty to ensure a consistent gutter for other items with icons.</li>\r\n  <li><code>dropdown-menu-text</code> - This contains the menu text.</li>\r\n  <li><code>dropdown-menu-right</code> - Optionally, this may contain right aligned text or icons. <code>dropdown-menu-hint</code> provides a default text style for keyboard shortcut hints here.</li>\r\n</ul>\r\n\r\n<blockquote>\r\n  <p>See <a routerLink="/components/keyboard" fragment="keyboard-service-ng1">Keyboard Service</a> for information on binding keyboard shortcuts.</p>\r\n</blockquote>\r\n\r\n<p>Set the width on the <code>ul</code> element to ensure that the menu contents will fit.</p>\r\n\r\n<p>To create a menu item which opens a submenu, set the <code>dropdown-submenu</code> class on the <code>li</code> element, and insert the menu contents below the <code>a</code> element. The above example demonstrates both a standard and a custom submenu; see the example code for details.</p>\r\n\r\n<tabset>\r\n    <tab heading="HTML">\r\n        <uxd-snippet [code]="htmlMenuCode" language="html"></uxd-snippet>\r\n    </tab>\r\n    <tab heading="JavaScript">\r\n        <uxd-snippet [code]="javascriptCode" language="javascript"></uxd-snippet>\r\n    </tab>\r\n    <tab heading="CSS">\r\n        <uxd-snippet [code]="cssCode" language="css"></uxd-snippet>\r\n    </tab>\r\n</tabset>\r\n'},function(e,t){e.exports='<p>Floating Action Button can be opened in any of the 4 directions (top, bottom, left or right).</p>\r\n\r\n<br>\r\n\r\n<uxd-floating-action-button-wrapper></uxd-floating-action-button-wrapper>\r\n\r\n<p>Floating Action Button is contained in <code>floating-action-button</code> directive.</p>\r\n\r\n<uxd-snippet [code]="this.htmlCode" language="html"></uxd-snippet>\r\n\r\n<p>The attributes defining this directive are:</p>\r\n<div class="demo-attributes table-responsive">\r\n<table class="table">\r\n  <tbody><tr>\r\n    <th>Name</th>\r\n    <th>Type</th>\r\n    <th>Binding</th>\r\n    <th>Description</th>\r\n    <th>Optional</th>\r\n  </tr>\r\n  <tr>\r\n    <td class="attribute">items</td>\r\n    <td>array</td>\r\n    <td>variable</td>\r\n    <td>\r\n    Array of icons and events, that defines the child buttons shown when the primary button is expanded.<br><br>\r\n    Each element of the array should contain an <code>icon</code> property which should be the name of an icon from the icon set.<br><br>\r\n    There should also be an <code>event</code> property which should reference a function that will be called when a button is clicked.\r\n    </td>\r\n    <td>false</td>\r\n  </tr>\r\n  <tr>\r\n    <td class="attribute">direction</td>\r\n    <td>string</td>\r\n    <td>variable</td>\r\n    <td>Defines the direction in which the child button should expand (top, bottom, left, right).</td>\r\n    <td>false</td>\r\n  </tr>\r\n</tbody></table>\r\n</div>\r\n<p>The controller logic for the floating action buttons is as follows:</p>\r\n\r\n<uxd-snippet [code]="this.javascriptCode" language="javascript"></uxd-snippet>\r\n'},function(e,t){e.exports='<uxd-grouped-buttons-wrapper></uxd-grouped-buttons-wrapper>\r\n\r\n<hr>\r\n\r\n<p>This is a group of buttons ideal when many actions are related to an element. Grouped Buttons implement the <code>.btn-group</code> class.</p>\r\n\r\n<p>The <code>role</code> attribute should be specified for assistive technology users. For button groups it should be <code>role="group"</code>.</p>\r\n\r\n<p>The <code>.btn-grouped</code> and <code>.btn-align</code> classes should be added to any buttons within the group along with the <code>grouped-selected</code> attribute. The <code>.active</code> class can be added to a button to have it initially selected.</p>\r\n\r\n<uxd-snippet [code]="htmlCodeTop" language="html"></uxd-snippet>\r\n\r\n<p>The <code>grouped-previous</code> and <code>grouped-next</code> attributes should be added to the previous and next buttons in grouped buttons with pagination. The buttons indicating the pages within the pagination group should be given the <code>.btn-grouped</code> and <code>.btn-nav</code> classes along with the <code>grouped-clear</code> attribute. The <code>.active</code> class can be added to a button to have it initially selected.</p>\r\n\r\n<uxd-snippet [code]="htmlCodeBottom" language="html"></uxd-snippet>\r\n\r\n<p>The <code>aria-label</code> attribute should be specified so that assistive technology knows to announce the group. The <code>aria-label</code> attribute should also be used for icons that convey meaning such as the chevron buttons on the pagination control.</p>\r\n'},function(e,t){e.exports='<uxd-pagination-wrapper></uxd-pagination-wrapper>\r\n\r\n<hr>\r\n\r\n<p>Create a <code>pagination</code> element and set the <code>total-items</code> to the total number of items and set <code>ng-model</code> to the current page being displayed.</p>\r\n\r\n<p>To trigger a function call when the page is changed set <code>ng-change</code> to the function e.g. <code>ng-change="pageChanged()"</code>.</p>\r\n\r\n<p>We recommend accompanying the pagination control with a label like “Page X of Y”.</p>\r\n\r\n<tabset>\r\n    <tab heading="HTML">\r\n        <uxd-snippet [code]="htmlCode" language="html"></uxd-snippet>\r\n    </tab>\r\n    <tab heading="JavaScript">\r\n        <uxd-snippet [code]="javascriptCode" language="javascript"></uxd-snippet>\r\n    </tab>\r\n</tabset>\r\n\r\n<div class="demo-attributes table-responsive">\r\n<table class="table m-t">\r\n  <tbody><tr>\r\n    <th>Name</th>\r\n    <th>Type</th>\r\n    <th>Binding</th>\r\n    <th>Description</th>\r\n    <th>Optional</th>\r\n  </tr>\r\n  <tr>\r\n    <td class="attribute">total-items</td>\r\n    <td>number</td>\r\n    <td>variable</td>\r\n    <td>The total number of items in all pages.</td>\r\n    <td>false</td>\r\n  </tr>\r\n  <tr>\r\n    <td class="attribute">items-per-page</td>\r\n    <td>number</td>\r\n    <td>variable</td>\r\n    <td>Maximum number of items per page. A value less than one indicates all items on one page. Defaults to 10 if not set.</td>\r\n    <td>true</td>\r\n  </tr>\r\n  <tr>\r\n    <td class="attribute">current-page</td>\r\n    <td>number</td>\r\n    <td>variable</td>\r\n    <td>The currently selected page.</td>\r\n    <td>false</td>\r\n  </tr>\r\n  <tr>\r\n    <td class="attribute">num-pages</td>\r\n    <td>number</td>\r\n    <td>variable</td>\r\n    <td>The total number of pages, this is a read only property which can be used for displaying the total number of pages.</td>\r\n    <td>true</td>\r\n  </tr>\r\n</tbody></table>\r\n</div>\r\n\r\n<blockquote>\r\n  <p><strong>Note</strong>: Refer to <a href="http://angular-ui.github.io/bootstrap/">UI Bootstrap</a> pagination for more options.</p>\r\n</blockquote>\r\n'},function(e,t){e.exports='<uxd-radio-buttons-wrapper></uxd-radio-buttons-wrapper>\r\n\r\n<hr>\r\n\r\n<p>To create radio buttons create a <code>.btn-group</code> with the required <code>.btns</code> &amp; including <code>button-toggle-primary</code> or <code>button-toggle-accent</code> class inside.\r\nOn each <code>.btn</code> set <code>ng-model</code> to the property required and specify the <code>btn-radio</code> attribute with the value the button should have.</p>\r\n\r\n<tabset>\r\n    <tab heading="HTML">\r\n        <uxd-snippet [code]="htmlCode" language="html"></uxd-snippet>\r\n    </tab>\r\n    <tab heading="JavaScript">\r\n        <uxd-snippet [code]="javascriptCode" language="javascript"></uxd-snippet>\r\n    </tab>\r\n</tabset>\r\n'},function(e,t){e.exports='<uxd-single-toggle-button-wrapper></uxd-single-toggle-button-wrapper>\r\n\r\n<hr>\r\n\r\n<p>To create a single toggle button create a <code>button</code> with <code>button-toggle-primary</code> or <code>button-toggle-accent</code> class , set <code>ng-model</code> to the property required, and specify the <code>btn-checkbox</code> attribute.</p>\r\n\r\n<p>Use the <code>btn-checkbox-true</code> and <code>btn-checkbox-false</code> attributes to specify <code>true</code> and <code>false</code> values.</p>\r\n\r\n<p>Include a hidden label with the <code>sr-only</code> class to convey the toggle state to users using assistive technologies.</p>\r\n\r\n<tabset>\r\n    <tab heading="HTML">\r\n        <uxd-snippet [code]="htmlCode" language="html"></uxd-snippet>\r\n    </tab>\r\n    <tab heading="JavaScript">\r\n        <uxd-snippet [code]="javascriptCode" language="javascript"></uxd-snippet>\r\n    </tab>\r\n</tabset>\r\n'},function(e,t){e.exports='<uxd-thumbnail-wrapper></uxd-thumbnail-wrapper>\r\n\r\n<hr>\r\n\r\n<p>Thumbnails are a useful way of showing a concise description or preview of something (such as a file). It allows the user to catch a glimpse of the whole file without actually downloading or opening it.</p>\r\n\r\n<p>Thumbnails can be easily implemented with the use of our <code>thumbnail</code> directive. This allows you to specify a thumbnail for an element and dynamically update the visibility of the thumbnail. There are some attributes you can specify on the <code>thumbnail</code> directive to customize it to suit your needs. These include:</p>\r\n\r\n<div class="demo-attributes table-responsive">\r\n<table class="table m-t">\r\n  <tbody><tr>\r\n    <th>Name</th>\r\n    <th>Type</th>\r\n    <th>Binding</th>\r\n    <th>Description</th>\r\n    <th>Optional</th>\r\n  </tr>\r\n  <tr>\r\n    <td class="attribute">url</td>\r\n    <td>string</td>\r\n    <td>variable</td>\r\n    <td>Specifies the url of the image to be used as the thumbnail. If no url is defined the <code>hpe-document</code> icon will appear instead.</td>\r\n    <td>true</td>\r\n  </tr>\r\n  <tr>\r\n    <td class="attribute">show</td>\r\n    <td>boolean</td>\r\n    <td>variable</td>\r\n    <td>Specifies whether or not the thumbnail should be visible. Defaults to <code>true</code>.</td>\r\n    <td>true</td>\r\n  </tr>\r\n  <tr>\r\n    <td class="attribute">width</td>\r\n    <td>string</td>\r\n    <td>variable</td>\r\n    <td>Defines the width of the thumbnail and the directive element. Takes <code>%</code> and <code>px</code> values. Defaults to <code>220px</code>.</td>\r\n    <td>true</td>\r\n  </tr>\r\n  <tr>\r\n    <td class="attribute">height</td>\r\n    <td>string</td>\r\n    <td>variable</td>\r\n    <td>Defines the height of the thumbnail. Takes <code>%</code> and <code>px</code> values. Defaults to <code>120px</code>.</td>\r\n    <td>true</td>\r\n  </tr>\r\n</tbody></table>\r\n</div>\r\n\r\n<p>You can see the code used in our example by selecting the appropriate tabs below:</p>\r\n\r\n<tabset>\r\n    <tab heading="HTML">\r\n        <uxd-snippet [code]="htmlCode" language="html"></uxd-snippet>\r\n    </tab>\r\n    <tab heading="JavaScript">\r\n        <uxd-snippet [code]="javascriptCode" language="javascript"></uxd-snippet>\r\n    </tab>\r\n    <tab heading="CSS">\r\n        <uxd-snippet [code]="cssCode" language="css"></uxd-snippet>\r\n    </tab>\r\n</tabset>'},function(e,t){e.exports='<uxd-toggle-buttons-wrapper></uxd-toggle-buttons-wrapper>\r\n\r\n<hr>\r\n\r\n<p>The <code>aria-pressed</code> attribute should be used to describe the button state to users using assistive technologies.</p>\r\n\r\n<p>When using multiple toggle buttons, include the <code>role="checkbox"</code> and <code>aria-checked</code> attributes to convey the button state instead.\r\nThe <code>aria-checked</code> property should be set programatically.</p>\r\n\r\n<p>Single toggle buttons.</p>\r\n\r\n<uxd-snippet [code]="htmlCodeTop" language="html"></uxd-snippet>\r\n\r\n<p>Button groups can act as a radio or a switch or even a single toggle.</p>\r\n\r\n<uxd-snippet [code]="htmlCodeBottom" language="html"></uxd-snippet>\r\n'},function(e,t){e.exports='<uxd-component-list-wrapper></uxd-component-list-wrapper>\r\n\r\n<hr>\r\n\r\n<p>The <code>component-list</code> directive allows you to add or remove instances of the same component. \r\nIt should be given an <code>ng-model</code> containing an array. If the array has any items components will initially be created for those values.\r\nThis array will be updated when a new field is added or when a component changes its model.</p>\r\n\r\n<p>You should provide the html for the component you want to duplicate in a <code>component</code> tag inside the <code>component-list</code> directive. \r\nEach component will have a property called <code>model</code> available in its scope. \r\nYour component should update this property which will update the <code>ng-model</code> on the <code>component-list</code>.</p>\r\n\r\n<tabset>\r\n    <tab heading="HTML">\r\n        <uxd-snippet [code]="htmlCode" language="html"></uxd-snippet>\r\n    </tab>\r\n    <tab heading="JavaScript">\r\n        <uxd-snippet [code]="javascriptCode" language="javascript"></uxd-snippet>\r\n    </tab>\r\n</tabset>\r\n\r\n<p>Use the following attributes to customize the behavior of the component:</p>\r\n\r\n<div class="demo-attributes table-responsive">\r\n<table class="table m-t">\r\n  <tbody><tr>\r\n    <th>Name</th>\r\n    <th>Type</th>\r\n    <th>Binding</th>\r\n    <th>Description</th>\r\n    <th>Optional</th>\r\n  </tr>\r\n  <tr>\r\n    <td class="attribute">min-components</td>\r\n    <td>number</td>\r\n    <td>variable</td>\r\n    <td>Specifies the minimum number of components that will be displayed. If no values have been set for these components in the <code>ng-model</code> then the default value they will be given is null. The default value is 0.</td>\r\n    <td>true</td>\r\n  </tr>\r\n  <tr>\r\n    <td class="attribute">max-components</td>\r\n    <td>number</td>\r\n    <td>variable</td>\r\n    <td>Specifies the maximum number of components that will be displayed. The add button will be disabled when the limit has been reached. By default there is no limit.</td>\r\n    <td>true</td>\r\n  </tr>\r\n  <tr>\r\n    <td class="attribute">button-text</td>\r\n    <td>string</td>\r\n    <td>literal</td>\r\n    <td>Specifies the text to be displayed beside the add button. The default text is \'Add a field\'.</td>\r\n    <td>true</td>\r\n  </tr>\r\n  <tr>\r\n    <td class="attribute">on-add</td>\r\n    <td>function</td>\r\n    <td>variable</td>\r\n    <td>If specified the function will be called when a new item is being added to the list.</td>\r\n    <td>true</td>\r\n  </tr>\r\n  <tr>\r\n    <td class="attribute">on-remove</td>\r\n    <td>function</td>\r\n    <td>variable</td>\r\n    <td>If specified the function will be called when an item is being removed from the list.</td>\r\n    <td>true</td>\r\n  </tr>\r\n</tbody>\r\n</table>\r\n</div>'},function(e,t){e.exports='<uxd-contacts-wrapper></uxd-contacts-wrapper>\r\n\r\n<hr>\r\n\r\n<p>The Contacts control can be used to display a shorthand notation for the participants in a communication. The participant’s name, short name or initials can be shown, along with an organization, and individuals belonging to the same organization can be grouped together. The status of a contact, active or passive, can be displayed to indicate their involvement in a conversation. Organizations can be labelled as “External” or “Risk”.</p>\r\n\r\n<p>To use the Contacts control use the <code>contact-group</code> directive. The full list of configuration attributes for this control is defined below:</p>\r\n\r\n<div class="demo-attributes table-responsive">\r\n<table class="table m-t">\r\n  <tbody><tr>\r\n    <th>Name</th>\r\n    <th>Type</th>\r\n    <th>Binding</th>\r\n    <th>Description</th>\r\n    <th>Optional</th>\r\n  </tr>\r\n  <tr>\r\n    <td class="attribute">contacts</td>\r\n    <td>array</td>\r\n    <td>variable</td>\r\n    <td>An array of contacts to display (format defined below) or a single contact object.</td>\r\n    <td>false</td>\r\n  </tr>\r\n  <tr>\r\n    <td class="attribute">organization</td>\r\n    <td>object</td>\r\n    <td>variable</td>\r\n    <td>An object defining the organization (format defined below).</td>\r\n    <td>false</td>\r\n  </tr>\r\n  <tr>\r\n    <td class="attribute">size</td>\r\n    <td>string</td>\r\n    <td>variable</td>\r\n    <td>The size of the control, either <code>medium</code> or <code>small</code>.</td>\r\n    <td>false</td>\r\n  </tr>\r\n  <tr>\r\n    <td class="attribute">colors</td>\r\n    <td>object</td>\r\n    <td>variable</td>\r\n    <td>An object mapping the <code>primary</code> and <code>secondary</code> colors in #HTML format. The primary color will be used as the background for the contact. We recommend you use colors from the <a routerLink="/css/color-palette" fragment="color-palette">Color Palette</a>.</td>\r\n    <td>false</td>\r\n  </tr>\r\n  <tr>\r\n    <td class="attribute">max-contacts</td>\r\n    <td>number</td>\r\n    <td>literal</td>\r\n    <td>The maximum number of contacts to display. The remainder will be condensed into an overflow segment.</td>\r\n    <td>true</td>\r\n  </tr>\r\n  <tr>\r\n    <td class="attribute">overflow-click</td>\r\n    <td>function</td>\r\n    <td>variable</td>\r\n    <td>Handler for the click event in the overflow segment.</td>\r\n    <td>true</td>\r\n  </tr>\r\n</tbody></table>\r\n</div>\r\n\r\n<h4>Contact Object</h4>\r\n\r\n<p>Contacts can be supplied either as a single object, or more typically as an array of objects.</p>\r\n<div class="demo-attributes table-responsive">\r\n<table class="table m-t">\r\n  <tbody><tr>\r\n    <th>Name</th>\r\n    <th>Description</th>\r\n    <th>Optional</th>\r\n  </tr>\r\n  <tr>\r\n    <td class="attribute">text</td>\r\n    <td>The name to be displayed for the contact.</td>\r\n    <td>false</td>\r\n  </tr>\r\n  <tr>\r\n    <td class="attribute">status</td>\r\n    <td>Either "active" or "passive".</td>\r\n    <td>true</td>\r\n  </tr>\r\n  <tr>\r\n    <td class="attribute">tooltip</td>\r\n    <td>Simple tooltip to show text or HTML for the contact on hover.</td>\r\n    <td>true</td>\r\n  </tr>\r\n  <tr>\r\n    <td class="attribute">customTooltip</td>\r\n    <td>\r\n      This can be used to design a complex tooltip which appears on hover. The <code>customTooltip</code> object can have the following attributes :\r\n      <ul>\r\n        <li><code>template</code>: (required) The relative path to the HTML template to be displayed for the contact on hover.\r\n        </li>\r\n        <li><code>tooltipPosition</code>: (optional) either "top" or "bottom" - default value is "bottom".\r\n        </li>\r\n        <li><code>data</code>: (optional) The data attribute can be defined as an object to contain information for the tooltip. The values in the data object can be displayed accordingly through the template HTML.\r\n        </li>\r\n      </ul>\r\n    </td>\r\n    <td>true</td>\r\n  </tr>\r\n</tbody></table>\r\n</div>\r\n<p>The example at the top of the page shows usage of the ‘active’ status, the ‘passive’ status, and no status.</p>\r\n\r\n<uxd-snippet [content]="snippets.compiled.contactsContactsJs" language="javascript"></uxd-snippet>\r\n\r\n<h4>Organization Object</h4>\r\n\r\n<p>Organizations should be objects with the following properties:</p>\r\n<div class="demo-attributes table-responsive">\r\n<table class="table m-t">\r\n  <tbody><tr>\r\n    <th>Name</th>\r\n    <th>Description</th>\r\n    <th>Optional</th>\r\n  </tr>\r\n  <tr>\r\n    <td class="attribute">text</td>\r\n    <td>The name to be displayed for the organization.</td>\r\n    <td>false</td>\r\n  </tr>\r\n  <tr>\r\n    <td class="attribute">label</td>\r\n    <td>String, either <code>external</code> or <code>risk</code>.</td>\r\n    <td>true</td>\r\n  </tr>\r\n  <tr>\r\n    <td class="attribute">tooltip</td>\r\n    <td>Simple tooltip to show text or HTML for the organization on hover</td>\r\n    <td>true</td>\r\n  </tr>\r\n  <tr>\r\n    <td class="attribute">customTooltip</td>\r\n    <td>\r\n      This can be used to design a complex tooltip which appears on hover. The <code>customTooltip</code> object can have the following attributes :\r\n      <ul>\r\n      <li><code>template</code>: (required) The relative path to the HTML template to be displayed for the contact on hover.\r\n      </li>\r\n      <li><code>tooltipPosition</code>: (optional) either "top" or "bottom" - default value is "bottom".\r\n      </li>\r\n      <li><code>data</code>: (optional) The data attribute can be defined as an object to contain information for the tooltip. The values in the data object can be displayed accordingly through the template HTML.\r\n      </li>\r\n      </ul>\r\n    </td>\r\n    <td>true</td>\r\n  </tr>\r\n</tbody></table>\r\n</div>\r\n<p>The example at the top of the page shows usage of both the “risk” and “external” labels.</p>\r\n\r\n<uxd-snippet [content]="snippets.compiled.contactsLabelsJs" language="javascript"></uxd-snippet>\r\n\r\n<p>The following code was used to create the example at the top of this page:</p>\r\n\r\n<tabset>\r\n    <tab heading="HTML">\r\n        <uxd-snippet [content]="snippets.compiled.contactsHtml" language="html"></uxd-snippet>\r\n    </tab>\r\n    <tab heading="JavaScript">\r\n        <uxd-snippet [content]="snippets.compiled.contactsJs" language="javascript"></uxd-snippet>\r\n    </tab>\r\n    <tab heading="Tooltip HTML">\r\n        <uxd-snippet [content]="snippets.compiled.contactsPopoverHtml" language="html"></uxd-snippet>\r\n    </tab>\r\n</tabset>'},function(e,t){e.exports='<uxd-contacts-overflow-wrapper></uxd-contacts-overflow-wrapper>\r\n\r\n<hr>\r\n\r\n<p>When there are many contacts to show, you may wish to truncate the display. To do this you can configure the overflow behaviour\r\n    for the Contacts Group control.</p>\r\n\r\n<p>Above is an example of the overflow segment, configured using the <code>max-contacts</code> and\r\n    <code>overflow-click</code> attributes. The <code>overflow-click</code>    handler in this example opens a modal dialog containing a scrolling view of the full list of contacts, but can be configured\r\n    as per application requirement.</p>\r\n\r\n<p>The following code was used to create this example:</p>\r\n\r\n<tabset>\r\n    <tab heading="HTML">\r\n        <uxd-snippet [code]="htmlCode" language="html"></uxd-snippet>\r\n    </tab>\r\n    <tab heading="Javascript">\r\n        <uxd-snippet [code]="javascriptCode" language="javascript"></uxd-snippet>\r\n    </tab>\r\n    <tab heading="CSS">\r\n        <uxd-snippet [code]="cssCode" language="css"></uxd-snippet>\r\n    </tab>\r\n    <tab heading="Modal HTML">\r\n        <uxd-snippet [code]="modalHtmlCode" language="html"></uxd-snippet>\r\n    </tab>\r\n    <tab heading="Modal Javascript">\r\n        <uxd-snippet [code]="modalJavascriptCode" language="javascript"></uxd-snippet>\r\n    </tab>\r\n    <tab heading="Template HTML">\r\n        <uxd-snippet [code]="modalItemHtmlCode" language="html"></uxd-snippet>\r\n    </tab>\r\n</tabset>'},function(e,t){e.exports='<uxd-date-picker-wrapper></uxd-date-picker-wrapper>\r\n\r\n<hr>\r\n\r\n<p>Create an <code>div.input-group</code> with the <code>span.input-group-addon</code> containing the <code>.hpe-icon.hpe-calendar</code>    icon. On the <code>span.input-group-addon</code> you must set <code>ng-click="vm.open($event)"</code>.</p>\r\n\r\n<p>To add keyboard functionality you must set <code>ng-keypress="vm.openKey($event)"</code> on the <code>span.input-group-addon</code>.\r\n    The open and openKey functions are set on the controller and are responsible for opening the datepicker popup.</p>\r\n\r\n<p>On the <code>input</code> you must specify <code>ng-model</code> with the date value, <code>datepicker-popup</code> which\r\n    can have the format string for the <code>input</code> specified or left blank. Like the <code>span.input-group-addon</code>    the <code>input</code> requires <code>ng-click="vm.open($event)"</code> as well as <code>is-open="vm.opened"</code>.</p>\r\n\r\n<p>The datepicker requires an explicit date validator and is defined as <code>ng-blur="vm.change()"</code>. The “change” method\r\n    is defined in the controller and is responsible for validating the date.</p>\r\n\r\n<p>When there is no label for the control, include an <code>aria-label</code> on the <code>input</code> element to describe\r\n    the date for assistive technologies.</p>\r\n\r\n<p>Example code for a “change” method has been provided to show how to format this function.</p>\r\n\r\n<tabset>\r\n    <tab heading="HTML">\r\n        <uxd-snippet [content]="snippets.compiled.sampleHtml"></uxd-snippet>\r\n    </tab>\r\n    <tab heading="JavaScript">\r\n        <uxd-snippet [content]="snippets.compiled.sampleJs" language="javascript"></uxd-snippet>\r\n    </tab>\r\n</tabset>\r\n\r\n<p>Here are some more attribute options you can specify for the datepicker:</p>\r\n\r\n<div class="demo-attributes table-responsive">\r\n    <table class="table">\r\n        <tr>\r\n            <th>Name</th>\r\n            <th>Type</th>\r\n            <th>Binding</th>\r\n            <th>Description</th>\r\n            <th>Optional</th>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">min-date</td>\r\n            <td>date</td>\r\n            <td>literal</td>\r\n            <td>The minimum date that can be chosen. By default there is no limitations.</td>\r\n            <td>true</td>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">max-date</td>\r\n            <td>date</td>\r\n            <td>literal</td>\r\n            <td>The maximum date that can be chosen. By default there is no limitations.</td>\r\n            <td>true</td>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">datepicker-mode</td>\r\n            <td>string</td>\r\n            <td>literal</td>\r\n            <td>The current mode of the date picker (day|month|year). The default mode is day.</td>\r\n            <td>true</td>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">date-disabled</td>\r\n            <td>function</td>\r\n            <td>variable</td>\r\n            <td>A function thats returns a boolean as to whether a date is disabled or not. Function is passed in the date then\r\n                the mode e.g. &lt;code&gt;date-disabled="isDateDisabled(date,mode)"&lt;/code&gt;.</td>\r\n            <td>true</td>\r\n        </tr>\r\n    </table>\r\n</div>'},function(e,t){e.exports='<uxd-date-range-picker-wrapper></uxd-date-range-picker-wrapper>\r\n\r\n<hr>\r\n\r\n<p>The integrated date/time picker can be used to create a date range picker as shown above. This example also includes a demonstration of date input validation, and timezone interpretation.</p>\r\n\r\n<tabset>\r\n    <tab heading="HTML">\r\n        <uxd-snippet [content]="snippets.compiled.sampleHtml"></uxd-snippet>\r\n    </tab>\r\n    <tab heading="JavaScript">\r\n        <uxd-snippet [content]="snippets.compiled.sampleJs" language="javascript"></uxd-snippet>\r\n    </tab>\r\n    <tab heading="CSS">\r\n        <uxd-snippet [content]="snippets.compiled.sampleCss" language="css"></uxd-snippet>\r\n    </tab>\r\n</tabset>'},function(e,t){e.exports='<uxd-integrated-date-picker-wrapper></uxd-integrated-date-picker-wrapper>\r\n\r\n<hr>\r\n\r\n<p>The integrated date picker can be used to pick date, time and timezone within a single component. This is defined as an <code>input</code>    element having the <code>date-time-picker-popup</code> attribute.</p>\r\n\r\n<p>The <code>ng-model</code> attribute should contain an object with date and time values. The timezones are passed as an array\r\n    to the <code>timezones</code> attribute, with the default index given to the <code>timezone-default-index</code> attribute.\r\n    The resulting date, time and timezone will be set to the object passed to the <code>ng-model</code>.</p>\r\n\r\n<p>The component can be configured with the following options provided as attributes:</p>\r\n\r\n<div class="demo-attributes table-responsive">\r\n    <table class="table">\r\n        <tr>\r\n            <th>Name</th>\r\n            <th>Type</th>\r\n            <th>Binding</th>\r\n            <th>Description</th>\r\n            <th>Optional</th>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">ng-model</td>\r\n            <td>object</td>\r\n            <td>variable</td>\r\n            <td>Should contain a json object with date, time and timezone values.</td>\r\n            <td>false</td>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">is-meridian</td>\r\n            <td>boolean</td>\r\n            <td>variable</td>\r\n            <td>Indicating whether the time picker should work in 12 hour mode or 24 hour mode. The 12 hour mode is selected\r\n                when is-meridian is set to true and the 24 hour mode is selected when is-meridian is set to false.</td>\r\n            <td>true</td>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">timezones</td>\r\n            <td>array</td>\r\n            <td>variable</td>\r\n            <td>An array of values containing the timezones.</td>\r\n            <td>true</td>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">timezone-default-index</td>\r\n            <td>number</td>\r\n            <td>variable</td>\r\n            <td>The array index of the default timezone to be selected.</td>\r\n            <td>true</td>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">choose-time</td>\r\n            <td>boolean</td>\r\n            <td>variable</td>\r\n            <td>Indicates whether time picker should be displayed.</td>\r\n            <td>true</td>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">choose-date</td>\r\n            <td>boolean</td>\r\n            <td>variable</td>\r\n            <td>Indicates whether date picker should be displayed.</td>\r\n            <td>true</td>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">choose-seconds</td>\r\n            <td>boolean</td>\r\n            <td>variable</td>\r\n            <td>Indicates whether the seconds field in the time picker should be displayed.</td>\r\n            <td>true</td>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">choose-timezone</td>\r\n            <td>boolean</td>\r\n            <td>variable</td>\r\n            <td>Indicates whether timezone picker should be displayed.</td>\r\n            <td>true</td>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">default-day-time</td>\r\n            <td>string</td>\r\n            <td>literal</td>\r\n            <td>Choose whether the default time should be the start or end of the day. Valid values are <code>start</code> (default)\r\n                and <code>end</code>.</td>\r\n            <td>true</td>\r\n        </tr>\r\n    </table>\r\n</div>\r\n\r\n<p>The time picker only mode is created by setting the <code>choose-time</code> attribute to <code>true</code> and the <code>choose-date</code>    and <code>choose-timezone</code> attributes to <code>false</code> in the integrated date picker. The <code>hpe-alarm</code>    class can be used to set the clock icon.</p>\r\n\r\n<p>The code for the integrated datepicker shown above is:</p>\r\n\r\n<tabset>\r\n    <tab heading="HTML">\r\n        <uxd-snippet [content]="snippets.compiled.sampleHtml"></uxd-snippet>\r\n    </tab>\r\n    <tab heading="JavaScript">\r\n        <uxd-snippet [content]="snippets.compiled.sampleJs" language="javascript"></uxd-snippet>\r\n    </tab>\r\n</tabset>'},function(e,t){e.exports='<uxd-time-picker-wrapper></uxd-time-picker-wrapper>\r\n\r\n<hr>\r\n\r\n<p>The timepicker can be created using the <code>timepicker</code> element. The <code>ng-model</code> should be set to the <code>Date</code>    object that provides the time state. The <code>hour-step</code> and <code>minute-step</code> attributes indicate the\r\n    number of hours or minutes to increase or decrease when using a button respectively. The <code>change-total-time</code>    attribute can be provided a boolean value which decides whether or not to update the entire clock when an individual\r\n    parameter is updated. A callback function can be provided to the <code>ng-change</code> attribute which will be called\r\n    when the model changes. <code>ng-disabled</code> can be used to control the disabled state of the time picker.</p>\r\n\r\n<p>The sample code is given below:</p>\r\n\r\n<tabset>\r\n    <tab heading="HTML">\r\n        <uxd-snippet [content]="snippets.compiled.sampleHtml"></uxd-snippet>\r\n    </tab>\r\n    <tab heading="JavaScript">\r\n        <uxd-snippet [content]="snippets.compiled.sampleJs" language="javascript"></uxd-snippet>\r\n    </tab>\r\n</tabset>\r\n\r\n<blockquote>\r\n    <p><strong>Note</strong>: Refer to <a href="http://angular-ui.github.io/bootstrap/">UI Bootstrap</a> timepicker for more\r\n        options.</p>\r\n</blockquote>'},function(e,t){e.exports='<uxd-draggable-cards-list-view-wrapper></uxd-draggable-cards-list-view-wrapper>\r\n\r\n<hr>\r\n\r\n<p>The above example shows how the draggable cards control can be used to interact with another control such as a List View. \r\nThe code below was used to produce the above example.</p>\r\n\r\n<tabset>\r\n    <tab heading="HTML">\r\n        <uxd-snippet [code]="htmlCode" language="html"></uxd-snippet>\r\n    </tab>\r\n    <tab heading="JavaScript">\r\n        <uxd-snippet [code]="javascriptCode" language="javascript"></uxd-snippet>\r\n    </tab>\r\n    <tab heading="CSS">\r\n        <uxd-snippet [code]="cssCode" language="css"></uxd-snippet>\r\n    </tab>\r\n</tabset>'},function(e,t){e.exports='<uxd-draggable-cards-wrapper></uxd-draggable-cards-wrapper>\r\n\r\n<hr>\r\n\r\n<p>The Draggable Cards control is created using the <code>draggable-cards</code> directive.\r\nIt allows a series of panels to be displayed in a vertical list. \r\nPanels can be selected or reordered, with the ability to add edit or remove functionality.</p>\r\n\r\n<tabset>\r\n    <tab heading="HTML">\r\n        <uxd-snippet [code]="htmlCode" language="html"></uxd-snippet>\r\n    </tab>\r\n    <tab heading="JavaScript">\r\n        <uxd-snippet [code]="javascriptCode" language="javascript"></uxd-snippet>\r\n    </tab>\r\n    <tab heading="CSS">\r\n        <uxd-snippet [code]="cssCode" language="css"></uxd-snippet>\r\n    </tab>\r\n</tabset>\r\n\r\n<p>The <code>draggable-cards</code> directive should contain card elements. There are two types of card element: <code>fixed-card</code> and <code>draggable-card</code>.</p>\r\n\r\n<p>A <code>fixed-card</code> can have a title and a subtitle only and cannot be moved. The <code>fixed-card</code> elements are grouped together at the top of the list.</p>\r\n\r\n<p>A <code>draggable-card</code> can have also have a title and a subtitle. Additionally, they will have reorder controls on the left side of the card. \r\nEdit and remove buttons will also be added if functions are specified for these events. \r\nThe main content of the card should be specified inside the <code>draggable-card</code> element.</p>\r\n\r\n<h4 id="options">Options</h4>\r\n\r\n<p>The <code>draggable-cards</code> directive can have the following attributes to configure it:</p>\r\n<div class="demo-attributes table-responsive">\r\n<table class="table m-t">\r\n  <tbody><tr>\r\n    <th>Name</th>\r\n    <th>Type</th>\r\n    <th>Binding</th>\r\n    <th>Description</th>\r\n    <th>Optional</th>\r\n  </tr>\r\n  <tr>\r\n    <td class="attribute">direction</td>\r\n    <td>string</td>\r\n    <td>literal</td>\r\n    <td>Can be set to \'left\' or \'right\'. This will change the side the callout will display on a selected card.</td>\r\n    <td>true</td>\r\n  </tr>\r\n  <tr>\r\n    <td class="attribute">allow-reordering</td>\r\n    <td>boolean</td>\r\n    <td>variable</td>\r\n    <td>If specified, this will show or hide the reordering controls on the card. If this option is not specified the default value is true</td>\r\n    <td>true</td>\r\n  </tr>\r\n  <tr>\r\n    <td class="attribute">allow-editing</td>\r\n    <td>boolean</td>\r\n    <td>variable</td>\r\n    <td>If specified, this will show or hide the edit button on a card. Note, the edit button will not appear if an edit function has not been specified. If this option is not specified the default value is true.</td>\r\n    <td>true</td>\r\n  </tr>\r\n  <tr>\r\n    <td class="attribute">allow-removing</td>\r\n    <td>boolean</td>\r\n    <td>variable</td>\r\n    <td>If specified, this will show or hide the remove button on a card. Note, the remove button will not appear if a remove function has not been specified. If this option is not specified the default value is true.</td>\r\n    <td>true</td>\r\n  </tr>\r\n  <tr>\r\n    <td class="attribute">on-select</td>\r\n    <td>function</td>\r\n    <td>variable</td>\r\n    <td>If specified, this function will be called when a card is clicked. The function should accept one parameter which will contain the scope of the selected card.</td>\r\n    <td>true</td>\r\n  </tr>\r\n  <tr>\r\n    <td class="attribute">on-remove</td>\r\n    <td>function</td>\r\n    <td>variable</td>\r\n    <td>If specified, this function will be called when the remove button is clicked on a card. The function should accept one parameter which will contain the scope of the card. In this function you should remove the item from the array of draggable cards in the controller (see sample code). The remove button will not appear on any cards if this has not been set.</td>\r\n    <td>true</td>\r\n  </tr>\r\n  <tr>\r\n    <td class="attribute">on-edit</td>\r\n    <td>function</td>\r\n    <td>variable</td>\r\n    <td>If specified, this function will be called when the edit button is clicked on a card. The function should accept one parameter which will contain the scope of the card. The edit button will not appear on any cards if this has not been set.</td>\r\n    <td>true</td>\r\n  </tr>\r\n  <tr>\r\n    <td class="attribute">on-reorder</td>\r\n    <td>function</td>\r\n    <td>variable</td>\r\n    <td>If specified, this function will be called when a card is moved. The function should accept one parameter which will contain an array of the card scopes in their new order.</td>\r\n    <td>true</td>\r\n  </tr>\r\n</tbody></table>\r\n</div>\r\n<p><br></p>\r\n\r\n<p>The <code>fixed-card</code> and <code>draggable-card</code> elements can have the following attributes to configure it:</p>\r\n<div class="demo-attributes table-responsive">\r\n<table class="table m-t">\r\n  <tbody><tr>\r\n    <th>Name</th>\r\n    <th>Type</th>\r\n    <th>Binding</th>\r\n    <th>Description</th>\r\n    <th>Optional</th>\r\n  </tr>\r\n  <tr>\r\n    <td class="attribute">card-title</td>\r\n    <td>string</td>\r\n    <td>variable</td>\r\n    <td>This will set the title text on the card.</td>\r\n    <td>true</td>\r\n  </tr>\r\n  <tr>\r\n    <td class="attribute">card-subtitle</td>\r\n    <td>string</td>\r\n    <td>variable</td>\r\n    <td>This will set the text to the right of the title on the card.</td>\r\n    <td>true</td>\r\n  </tr>\r\n  <tr>\r\n    <td class="attribute">card-selected</td>\r\n    <td>boolean</td>\r\n    <td>variable</td>\r\n    <td>If set to true this card will be selected by default. Only one card should have this set to true.</td>\r\n    <td>true</td>\r\n  </tr>\r\n  <tr>\r\n    <td class="attribute">disable-remove</td>\r\n    <td>boolean</td>\r\n    <td>variable</td>\r\n    <td>If set to true the remove button will be greyed out and unclickable.</td>\r\n    <td>true</td>\r\n  </tr>\r\n  <tr>\r\n    <td class="attribute">disable-edit</td>\r\n    <td>boolean</td>\r\n    <td>variable</td>\r\n    <td>If set to true the edit button will be greyed out and unclickable.</td>\r\n    <td>true</td>\r\n  </tr>\r\n  <tr>\r\n    <td class="attribute">card-icons</td>\r\n    <td>object</td>\r\n    <td>variable</td>\r\n    <td>Contains the attributes to add additional icons and functions alongside the card title.</td>\r\n    <td>true</td>\r\n  </tr>\r\n</tbody></table>\r\n</div>\r\n\r\n<p>The following attributes are contained in the <code>card-icons</code> object.</p>\r\n<div class="demo-attributes table-responsive">\r\n<table class="table m-t">\r\n  <tbody><tr>\r\n    <th>Name</th>\r\n    <th>Type</th>\r\n    <th>Binding</th>\r\n    <th>Description</th>\r\n    <th>Optional</th>\r\n  </tr>\r\n  <tr>\r\n    <td class="attribute">icon</td>\r\n    <td>string</td>\r\n    <td>variable</td>\r\n    <td>The icon class to display the icon.</td>\r\n    <td>false</td>\r\n  </tr>\r\n  <tr>\r\n    <td class="attribute">tooltip</td>\r\n    <td>string</td>\r\n    <td>variable</td>\r\n    <td>This will be displayed in the tooltip when the icon is hovered.</td>\r\n    <td>true</td>\r\n  </tr>\r\n  <tr>\r\n    <td class="attribute">tooltipPlacement</td>\r\n    <td>string</td>\r\n    <td>variable</td>\r\n    <td>Can be set to <code>top</code>, <code>bottom</code>, <code>right</code> or <code>left</code> with top set as default.</td>\r\n    <td>true</td>\r\n  </tr>\r\n  <tr>\r\n    <td class="attribute">click</td>\r\n    <td>function</td>\r\n    <td>variable</td>\r\n    <td>This will be called when the icon is clicked.</td>\r\n    <td>false</td>\r\n  </tr>\r\n  <tr>\r\n    <td class="attribute">disabled</td>\r\n    <td>boolean</td>\r\n    <td>variable</td>\r\n    <td>If set to true the icon will be greyed out and unclickable.</td>\r\n    <td>true</td>\r\n  </tr>\r\n</tbody></table>\r\n</div>\r\n'},function(e,t){e.exports='<uxd-draggable-panels-wrapper></uxd-draggable-panels-wrapper>\r\n\r\n<hr>\r\n\r\n<h4 id="draggable-panel-container">Draggable Panel Container</h4>\r\n\r\n<p>Draggable functionality can be implemented by adding a <code>draggable-panel-container</code> directive to the page. \r\nThis will act as a container for any <code>draggable-panel</code> directives.</p>\r\n\r\n<uxd-snippet [code]="containerHtmlCode" language="html"></uxd-snippet>\r\n\r\n<p>To specify the size of the <code>draggable-panel-container</code> you can apply a class that will set the width and height, such as <code>.col-xs-6</code> as in the sample code above.</p>\r\n\r\n<p>It is possible to have multiple <code>draggable-panel-container</code> elements on one page. \r\nBy default any <code>draggable-panel</code> can be moved to any <code>draggable-panel-container</code>, however this can be restricted.</p>\r\n\r\n<p>If a <code>draggable-group</code> attribute has been added this will limit which <code>draggable-panel</code> elements can be moved to which <code>draggable-panel-container</code>. \r\nAny <code>draggable-panel-container</code> elements that share the same <code>draggable-group</code> can move <code>draggable-panel</code> elements between each other.</p>\r\n\r\n<h4 id="events">Events</h4>\r\n\r\n<p>You can also add the following attributes to a <code>draggable-panel-container</code> directive to specify which function to be called when certain events occur.</p>\r\n<div class="demo-attributes table-responsive">\r\n<table class="table">\r\n  <tbody><tr>\r\n    <th>Name</th>\r\n    <th>Type</th>\r\n    <th>Binding</th>\r\n    <th>Description</th>\r\n    <th>Optional</th>\r\n  </tr>\r\n  <tr>\r\n    <td class="attribute">on-drag-start</td>\r\n    <td>function</td>\r\n    <td>variable</td>\r\n    <td>Will be called when the user first begins to move a panel.</td>\r\n    <td>true</td>\r\n  </tr>\r\n  <tr>\r\n    <td class="attribute">on-drag-over</td>\r\n    <td>function</td>\r\n    <td>variable</td>\r\n    <td>Will be called when the user moves a panel over a <code>draggable-panel-container</code>.</td>\r\n    <td>true</td>\r\n  </tr>\r\n  <tr>\r\n    <td class="attribute">on-drag-end</td>\r\n    <td>function</td>\r\n    <td>variable</td>\r\n    <td>Will be called when the user finishes dragging a panel.</td>\r\n    <td>true</td>\r\n  </tr>\r\n</tbody></table>\r\n</div>\r\n<p>Each function should expect two arguments:</p>\r\n\r\n<ul>\r\n  <li><code>event</code> - event, contains the mouse event that was triggered.</li>\r\n  <li><code>ui</code> - object, contains information about the panel being dragged.\r\n    <ul>\r\n      <li><code>item</code> - object, represents the current dragged element.</li>\r\n      <li><code>offset</code> - object, absolute position represented as {{\'{\'}} top, left }.</li>\r\n      <li><code>position</code> - object, current position represented as {{\'{\'}} top, left }.</li>\r\n      <li><code>originalPosition</code> - object, original position represented as {{\'{\'}} top, left }.</li>\r\n      <li><code>sender</code> - object, the source <code>draggable-panel-container</code> if moving a <code>draggable-panel</code> from one <code>draggable-panel-container</code> to another.</li>\r\n      <li><code>placeholder</code> - object, the element being used as a placeholder.</li>\r\n    </ul>\r\n  </li>\r\n</ul>\r\n\r\n<h4 id="draggable-panels">Draggable Panels</h4>\r\n\r\n<p>To identify which elements should be draggable use the <code>draggable-panel</code> directive. \r\nThe <code>draggable-panel</code> directives should be placed within the <code>draggable-card-container</code> they will begin in.</p>\r\n\r\n<uxd-snippet [code]="panelHtmlCode" language="html"></uxd-snippet>\r\n\r\n<p>The <code>draggable-panel</code> directive should contain a single <code>div</code> element which will become the draggable panel. \r\nThis <code>div</code> can be styled in any way and have child elements.</p>\r\n\r\n<h4 id="drag-handle">Drag Handle</h4>\r\n\r\n<p>An element within the <code>draggable-panel</code> directive should be given the <code>drag-handle</code> attribute. \r\nThis will identify the element that the user must mouse down on to drag the panel. \r\nIf the user should be allowed to drag anywhere within the panel simply apply the attribute to the <code>div</code> immediately inside the <code>draggable-panel</code>.</p>\r\n\r\n<h4 id="sample-code">Sample Code</h4>\r\n\r\n<p>The following code is used to produce the example displayed at the top of the page. \r\nThis example uses two different <code>draggable-panel-container</code> elements, both with the same <code>draggable-group</code> so cards can be moved between them.</p>\r\n\r\n<uxd-snippet [code]="htmlCode" language="html"></uxd-snippet>'},function(e,t){e.exports='<uxd-draggable-panels-views-wrapper></uxd-draggable-panels-views-wrapper>\r\n\r\n<hr>\r\n\r\n<p>Above is an example of the draggable panels using the <code>draggable-view</code> attribute. The sample code to re-create this has been supplied below and the classes used to style the demo can be used or replaced with custom styling.</p>\r\n\r\n<tabset>\r\n    <tab heading="HTML">\r\n        <uxd-snippet [code]="htmlCode" language="html"></uxd-snippet>\r\n    </tab>\r\n    <tab heading="JavaScript">\r\n        <uxd-snippet [code]="javascriptCode" language="javascript"></uxd-snippet>\r\n    </tab>\r\n    <tab heading="CSS">\r\n        <uxd-snippet [code]="cssCode" language="css"></uxd-snippet>\r\n    </tab>\r\n</tabset>'},function(e,t){e.exports="<h1>Ebox</h1>"},function(e,t){e.exports='<p>Custom Facets allow for any control, such as a Date Picker, to be used as part of a faceted search.</p>\r\n\r\n<p>To include a Custom Facet in a <code>facet-container</code>, use the <code>facet-custom</code> directive in place of a <code>facet</code>    directive. The required attributes are:</p>\r\n\r\n<div class="demo-attributes table-responsive">\r\n    <table class="table m-t">\r\n        <tbody>\r\n            <tr>\r\n                <th>Name</th>\r\n                <th>Type</th>\r\n                <th>Binding</th>\r\n                <th>Description</th>\r\n                <th>Optional</th>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">name</td>\r\n                <td>string</td>\r\n                <td>variable</td>\r\n                <td>A string name for the facet.</td>\r\n                <td>false</td>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">model</td>\r\n                <td>object</td>\r\n                <td>variable</td>\r\n                <td>An object in the controller context which contains the computed value of the custom facet.</td>\r\n                <td>false</td>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">select</td>\r\n                <td>function</td>\r\n                <td>variable</td>\r\n                <td>A function called when the value of <code>model</code> changes.</td>\r\n                <td>false</td>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">deselect</td>\r\n                <td>function</td>\r\n                <td>variable</td>\r\n                <td>A function called when the facet is deselected.</td>\r\n                <td>false</td>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">display</td>\r\n                <td>function</td>\r\n                <td>variable</td>\r\n                <td>A function which computes a display name for the facet when selected.</td>\r\n                <td>false</td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n</div>\r\n\r\n<p>\r\n    The <code>select</code> and <code>deselect</code> functions are not called with parameters, so should be defined from\r\n    the parent context to read either the value of the property passed as\r\n    <code>model</code> or another property as appropriate.\r\n</p>\r\n\r\n<uxd-snippet language="html" [code]="htmlCode"></uxd-snippet>\r\n\r\n<p>\r\n    Inside this directive, define the required control. The key feature is to ensure the computed value of the control is set\r\n    to the same property as was passed as the <code>model</code> attribute for the directive. This means the custom facet\r\n    is single select, and should implement its own clearing functionality if required.\r\n</p>\r\n\r\n<p>\r\n    Below is an example of how this directive can be used to implement a Date Picker facet (using the Date Picker directive).\r\n    Note that the <code>vm.date</code> property is shared between the custom facet and the datepicker.\r\n</p>\r\n\r\n<tabset>\r\n    <tab heading="HTML">\r\n        <uxd-snippet language="html" [code]="customFacetHtmlCode"></uxd-snippet>\r\n    </tab>\r\n\r\n    <tab heading="Javascript">\r\n        <uxd-snippet language="javascript" [code]="customFacetJsCode"></uxd-snippet>\r\n    </tab>\r\n</tabset>'},function(e,t){e.exports='<p>\r\n    When there are a large number of facet options, the Dynamic Facet can be used to replace the regular scrollable list with\r\n    a text search, supporting dropdown typeahead. This is configurable to fallback to the standard scrollable list, when\r\n    the number of items in the list falls beneath a certain threshold.\r\n</p>\r\n\r\n<p>\r\n    To use the Dynamic Facet, use the <code>facet-dynamic</code> directive instead of the <code>facet</code> directive. Set\r\n    the\r\n    <code>facet-options</code> attribute with an object containing a <code>title</code> attribute, and an <code>options</code>    property containing collection of objects that follow the interface for the <code>facet-option</code> defined above.\r\n    The Dynamic Facet can be used in the same <code>facet-container</code> as the standard <code>facet</code> directive.\r\n</p>\r\n\r\n<p>\r\n    To configure the behaviour of the control, set the <code>display-configuration</code> attribute, which expects an object\r\n    of the following format:\r\n</p>\r\n\r\n<div class="demo-attributes table-responsive">\r\n    <table class="table">\r\n        <tbody>\r\n            <tr>\r\n                <th>Property</th>\r\n                <th>Description</th>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">minCharacters</td>\r\n                <td>How many characters should be typed before a dropdown is shown (default: 3)</td>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">maxDisplayableItems</td>\r\n                <td>How many entries to show in the typeahead dropdown (default: show all matches)</td>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">minIndividualItems</td>\r\n                <td>How many Facet Options should be displayed regardless of whether a typeahead is visible (default: 0). Items\r\n                    shown as Facet Options will not be listed in the typeahead dropdown.</td>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">maxIndividualItems</td>\r\n                <td>When there are fewer than this many items, a list of Facet Options will be shown instead of a text input\r\n                    (default: 0).</td>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">showZero</td>\r\n                <td>When true any Facet Options with a count of zero will be visible (default: false).</td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n</div>\r\n\r\n<p>The maximum number of characters expected by this text area is defined by the <code>max-length</code>directive.</p>\r\n\r\n<p>The maximum number of lines the text input is allowed to grow to can be set using the <code>max-lines</code> attribute. If\r\n    the number of lines exceeds this value then a scrollbar will appear.</p>\r\n\r\n<p>To prevent the user from taking a new line using the return key set the <code>disable-return</code> attribute to false.</p>\r\n\r\n<p>The values presented in the dropdown can also be changed dynamically. This is optional behaviour, but useful if you wish\r\n    to perform additional server requests on demand. The function supplied to <code>update-callback</code> will be triggered\r\n    every time the contents of the text input are modified. The function will be called with:</p>\r\n\r\n<ul>\r\n    <li><code>textInput</code> - the text value in the search control.</li>\r\n    <li><code>optionList</code> - the array of options the control can filter from.</li>\r\n</ul>\r\n\r\n<p>The function must return:</p>\r\n\r\n<ul>\r\n    <li><code>optionList</code> - the array of options, with the contents modified, added or removed as required.</li>\r\n</ul>\r\n\r\n<p>Set the <code>placeholder</code> attribute to a string property to set the placeholder text that will be shown in the text\r\n    search input control.</p>\r\n\r\n<p>Below is an example for the use of this directive:</p>\r\n\r\n<tabset>\r\n    <tab heading="HTML">\r\n        <uxd-snippet language="html" [code]="htmlCode"></uxd-snippet>\r\n    </tab>\r\n    <tab heading="Javascript">\r\n        <uxd-snippet language="javascript" [code]="jsCode"></uxd-snippet>\r\n    </tab>\r\n</tabset>'},function(e,t){e.exports='<uxd-facet-line-chart-wrapper></uxd-facet-line-chart-wrapper>\r\n\r\n<hr>\r\n\r\n<p>A flot chart can be manipulated by other controls as seen in the example above which uses a facet to change the dataset displayed and another facet to change the date range.</p>\r\n\r\n<p>When the date range is changed the chart will only show points on the chart that fall between those dates. It will also recalculate the ticks on the Y axis to show a more appropriate scale based on the visible points. This may also be desired when using a Timeline Chart. In the sample code below the function <code>updateChartYAxis</code> is responsible for calculating a new Y axis scale. This function should be used as a basis to provide such functionality for any chart that needs to rescale its Y axis.</p>\r\n\r\n<tabset>\r\n    <tab heading="HTML">\r\n        <uxd-snippet language="html" [code]="htmlCode"></uxd-snippet>\r\n    </tab>\r\n    <tab heading="Javascript">\r\n        <uxd-snippet language="javascript" [code]="jsCode"></uxd-snippet>\r\n    </tab>\r\n    <tab heading="CSS">\r\n        <uxd-snippet language="css" [code]="cssCode"></uxd-snippet>        \r\n    </tab>\r\n</tabset>'},function(e,t){e.exports='<p>\r\n    Facets are contained inside a <code>facet-container</code> element. A <code>facet-container</code> element can have many\r\n    <code>facet</code> elements underneath it. The <code>facet-container</code> must have the <code>select-title</code> and\r\n    <code>clear-text</code> attributes set. <code>select-title</code> should be set to the value which appears above the\r\n    selected facets. <code>clear-text</code> should be set to the value which appears in the clear all link. In addition\r\n    to these options the <code>no-items-text</code> attribute can be set which will display the specified text when no facet\r\n    options have been selected. <code>no-items-text</code> is an optional attribute.\r\n</p>\r\n\r\n<p>\r\n    The <code>clear-all-fn</code> is an optional attribute in this directive that defines a function expression called when\r\n    the clearAll is clicked. This option will override the default function expression provided in UX Aspects and can be used\r\n    to define a user method.\r\n</p>\r\n\r\n<uxd-snippet language="html" [code]="facetContainerCode"></uxd-snippet>\r\n\r\n<p>A <code>facet</code> element may have the following attributes:</p>\r\n\r\n<div class="demo-attributes table-responsive">\r\n    <table class="table m-t">\r\n        <tbody>\r\n            <tr>\r\n                <th>Name</th>\r\n                <th>Type</th>\r\n                <th>Binding</th>\r\n                <th>Description</th>\r\n                <th>Optional</th>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">name</td>\r\n                <td>string</td>\r\n                <td>variable</td>\r\n                <td>The facet title.</td>\r\n                <td>false</td>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">facet-scroll</td>\r\n                <td>string</td>\r\n                <td>literal</td>\r\n                <td>Set to "on" to enable a scrollbar for the facet options, or "off" to disable it. Default: on.</td>\r\n                <td>true</td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n</div>\r\n\r\n<uxd-snippet language="html" [code]="facetCode"></uxd-snippet>\r\n\r\n<p>\r\n    A <code>facet</code> element can contain many <code>facet-option</code> elements. <code>facet-option</code> elements\r\n    can have the following attributes:\r\n</p>\r\n\r\n<div class="demo-attributes table-responsive">\r\n    <table class="table m-t">\r\n        <tbody>\r\n            <tr>\r\n                <th>Name</th>\r\n                <th>Type</th>\r\n                <th>Binding</th>\r\n                <th>Description</th>\r\n                <th>Optional</th>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">name</td>\r\n                <td>string</td>\r\n                <td>variable</td>\r\n                <td>A bindable property which will be displayed as the option.</td>\r\n                <td>false</td>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">count</td>\r\n                <td>number</td>\r\n                <td>variable</td>\r\n                <td>An optional bindable property which will appear alongside the name in braces. Note that the count should\r\n                    update as facets are applied.</td>\r\n                <td>true</td>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">select</td>\r\n                <td>function</td>\r\n                <td>variable</td>\r\n                <td>A function expression which will be called when the option is selected. This function should perform any\r\n                    filtering that is required and update counts as necessary. The select count should update as facets are\r\n                    applied, based on the number of items selected which will be displayed on the toolbar in selection mode.</td>\r\n                <td>false</td>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">deselect</td>\r\n                <td>function</td>\r\n                <td>variable</td>\r\n                <td>a function expression which will be called when the option is deselected. This function should perform any\r\n                    filtering that is required and update counts as necessary. The select count should update as facets are\r\n                    applied, based on the number of items selected which will be displayed on the toolbar in selection mode.</td>\r\n                <td>false</td>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">load-delay</td>\r\n                <td>number</td>\r\n                <td>variable</td>\r\n                <td>An optional property to specify a delay in milliseconds to load the facets.</td>\r\n                <td>true</td>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">disabled</td>\r\n                <td>boolean</td>\r\n                <td>variable</td>\r\n                <td>If true the <code>facet-option</code> will appear disabled and clicking on it will have no effect (default:\r\n                    false).\r\n                </td>\r\n                <td>true</td>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">show-zero</td>\r\n                <td>boolean</td>\r\n                <td>variable</td>\r\n                <td>If true the <code>facet-option</code> will be visible even if the count is 0 (default: false).</td>\r\n                <td>true</td>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">selected-aria-label</td>\r\n                <td>boolean</td>\r\n                <td>variable</td>\r\n                <td>A property which accepts a string used in assistive technologies to indicate whether the facet option is\r\n                    selected.\r\n                </td>\r\n                <td>true</td>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">simplified</td>\r\n                <td>boolean</td>\r\n                <td>variable</td>\r\n                <td>By default the style of the checkboxes will be simplified, setting this to false will use the standard checkbox\r\n                    style.\r\n                </td>\r\n                <td>true</td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n</div>\r\n\r\n<tabset>\r\n    <tab heading="HTML">\r\n        <uxd-snippet language="html" [code]="facetOptionHtmlCode"></uxd-snippet>\r\n    </tab>\r\n\r\n    <tab heading="Javascript">\r\n        <uxd-snippet language="javascript" [code]="facetOptionJsCode"></uxd-snippet>\r\n    </tab>\r\n</tabset>\r\n\r\n<div class="demo-attributes table-responsive">\r\n    <table class="table">\r\n        <tbody>\r\n            <tr>\r\n                <th>Property</th>\r\n                <th>Description</th>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">updateSelectCounts()</td>\r\n                <td>A function expression which will be called when facet option is selected (<code>select</code>) or deselected\r\n                    (\r\n                    <code>deselect</code>). This will update the count based on the number of items that are selected in\r\n                    selection mode when the filtering is done on facets.</td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n</div>\r\n\r\n<h4 id="showing-and-hiding">Showing and Hiding</h4>\r\n\r\n<p>\r\n    If the visibility of the facet container can be toggled, then the <code>facet-reinitialise</code> event may be broadcast\r\n    by the controller in order to prevent display issues with the facet options when they become visible. For example, if\r\n    visibility of the facets is controlled by a boolean variable, the following code will broadcast the event at the appropriate\r\n    time.\r\n</p>\r\n\r\n<uxd-snippet language="javascript" [code]="facetVisibility"></uxd-snippet>'},function(e,t){e.exports='<p>\r\n    To enable programmatic selection of facets, pass an empty object to the <code>api</code> attribute of the <code>facet-container</code>    element. This object will be populated with a list of objects representing the facets in the container, allowing access\r\n    to the <code>select</code> and <code>deselect</code> methods of their facet-options.\r\n</p>\r\n\r\n<p>\r\n    This is compatible with standard Facets, Dynamic Facets, and Custom Facets. Note that when using Custom Facets, the value\r\n    of the <code>model</code> needs to be changed independently of these functions.\r\n</p>\r\n\r\n<blockquote>\r\n    <p>\r\n        An example of the use of programmatic selection can be seen in the Filter Popover Controller in the \r\n        <a routerLink="/components/tables" fragment="detail-row-header-ng1">Detail Row Header</a> documentation.\r\n    </p>\r\n</blockquote>'},function(e,t){e.exports='<uxd-file-upload-wrapper></uxd-file-upload-wrapper>\r\n\r\n<hr>\r\n\r\n\r\n<blockquote>\r\n  <p><strong>Note</strong>: Files will not be uploaded to the server by the demo control. Application teams must implement server\r\n    code.\r\n  </p>\r\n</blockquote>\r\n\r\n<p>Angular File Upload provides a control for uploading files. It supports native HTML5 uploads and degrades to an iframe target\r\n  implementation for legacy browsers.</p>\r\n\r\n<p>To create an area where files can be dragged for upload, use the <code>nv-file-drop</code> directive.</p>\r\n\r\n<p>If the <code>nv-file-over</code> directive is placed on an element, it will have a class added to it when a file is about\r\n  to be placed into the drop area. By default this class is <code>nv-file-over</code> but can be set with the parameter attribute\r\n  <code>over-class="className"</code>.</p>\r\n\r\n<p>Alternatively the <code>nv-file-select</code> attribute can be added to an <code>&lt;input type="file"&gt;</code> element\r\n  to create a button which will open a standard file browsing dialogue.</p>\r\n\r\n<p>When creating a control with <code>nv-file-drop</code> or <code>nv-file-select</code>, you must also pass an instance of\r\n  FileUploader to the uploader attribute. FileUploader at minimum should be instantiated with the url to upload to, but can\r\n  take additional parameters including formData for POST requests and filters to be applied to files before they are added\r\n  to the upload queue.</p>\r\n\r\n<p>Attributes are defined in the controller: <code>uploader</code> - mandatory, instance of FileUploader.</p>\r\n\r\n<uxd-snippet language="javascript" [code]="sampleCode"></uxd-snippet>\r\n\r\n<p>The FileUploader object has the following callbacks for adding custom logic:</p>\r\n\r\n<div class="demo-attributes table-responsive">\r\n  <table class="table">\r\n    <tbody>\r\n      <tr>\r\n        <th>Property</th>\r\n        <th>Description</th>\r\n      </tr>\r\n      <tr>\r\n        <td class="attribute">onWhenAddingFileFailed</td>\r\n        <td>Is called with the parameters <code>(item, filter, options)</code>.</td>\r\n      </tr>\r\n      <tr>\r\n        <td class="attribute">onAfterAddingFile</td>\r\n        <td>Is called with the parameter <code>(item)</code>.</td>\r\n      </tr>\r\n      <tr>\r\n        <td class="attribute">onAfterAddingAll</td>\r\n        <td>Is called with the parameter <code>(addedFileItems)</code>.</td>\r\n      </tr>\r\n      <tr>\r\n        <td class="attribute">onBeforeUploadItem</td>\r\n        <td>Is called with the parameter <code>(item)</code>.</td>\r\n      </tr>\r\n      <tr>\r\n        <td class="attribute">onProgressItem</td>\r\n        <td>Is called with the parameters <code>(item, progress)</code>.</td>\r\n      </tr>\r\n      <tr>\r\n        <td class="attribute">onProgressAll</td>\r\n        <td>Is called with the parameter <code>(progress)</code>.</td>\r\n      </tr>\r\n      <tr>\r\n        <td class="attribute">onSuccessItem</td>\r\n        <td>Is called with the parameters <code>(item, response, status, headers)</code>.</td>\r\n      </tr>\r\n      <tr>\r\n        <td class="attribute">onErrorItem</td>\r\n        <td>Is called with the parameters <code>(item, response, status, headers)</code>.</td>\r\n      </tr>\r\n      <tr>\r\n        <td class="attribute">onCancelItem</td>\r\n        <td>Is called with the parameters <code>(item, response, status, headers)</code>.</td>\r\n      </tr>\r\n      <tr>\r\n        <td class="attribute">onCompleteItem</td>\r\n        <td>Is called with the parameters <code>(item, response, status, headers)</code>.</td>\r\n      </tr>\r\n      <tr>\r\n        <td class="attribute">onSuccessAll</td>\r\n        <td>Does not take any parameters.</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n\r\n<p>Below you can see the methods available on the FileUploader object.</p>\r\n\r\n<div class="demo-attributes table-responsive">\r\n  <table class="table">\r\n    <tbody>\r\n      <tr>\r\n        <th>Property</th>\r\n        <th>Description</th>\r\n      </tr>\r\n      <tr>\r\n        <td class="attribute">addToQueue</td>\r\n        <td>Adds items to the queue. Takes parameters <code>(files, options, filters)</code> where files is a <code>FileList|File|HTMLInputElement</code>,\r\n          options is an object and filters is a string.</td>\r\n      </tr>\r\n      <tr>\r\n        <td class="attribute">removeFromQueue</td>\r\n        <td>Removes an item from the queue. Takes a parameter where the value is a <code>FileItem</code> or index of item.</td>\r\n      </tr>\r\n      <tr>\r\n        <td class="attribute">clearQueue</td>\r\n        <td>Removes all elements from the queue.</td>\r\n      </tr>\r\n      <tr>\r\n        <td class="attribute">uploadItem</td>\r\n        <td>Uploads an item. Takes a parameter where the value is a <code>FileItem</code> or index of item.</td>\r\n      </tr>\r\n      <tr>\r\n        <td class="attribute">cancelItem</td>\r\n        <td>Cancels uploading of item. Takes a parameter where the value is a <code>FileItem</code> or index of item.</td>\r\n      </tr>\r\n      <tr>\r\n        <td class="attribute">uploadAll</td>\r\n        <td>Uploads all pending items on the queue.</td>\r\n      </tr>\r\n      <tr>\r\n        <td class="attribute">cancelAll</td>\r\n        <td>Cancels all current uploads.</td>\r\n      </tr>\r\n      <tr>\r\n        <td class="attribute">getNotUploadedItems</td>\r\n        <td>Returns an array of all pending items on the queue</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n\r\n<p>Below is a brief description of the parameters:</p>\r\n\r\n<div class="demo-attributes table-responsive">\r\n  <table class="table">\r\n    <tbody>\r\n      <tr>\r\n        <th>Property</th>\r\n        <th>Description</th>\r\n      </tr>\r\n      <tr>\r\n        <td class="attribute">item</td>\r\n        <td>The file to be uploaded.</td>\r\n      </tr>\r\n      <tr>\r\n        <td class="attribute">filter</td>\r\n        <td>Filters to be applied to the files before adding them to the queue. If the filter returns true the file will be added\r\n          to the queue.</td>\r\n      </tr>\r\n      <tr>\r\n        <td class="attribute">options</td>\r\n        <td>Custom properties added to the file uploader.</td>\r\n      </tr>\r\n      <tr>\r\n        <td class="attribute">addedFileItems</td>\r\n        <td>The list of files to be uploaded.</td>\r\n      </tr>\r\n      <tr>\r\n        <td class="attribute">progress</td>\r\n        <td>Upload queue progress percentage.</td>\r\n      </tr>\r\n      <tr>\r\n        <td class="attribute">response</td>\r\n        <td>The response from the server.</td>\r\n      </tr>\r\n      <tr>\r\n        <td class="attribute">status</td>\r\n        <td>The status code from the server.</td>\r\n      </tr>\r\n      <tr>\r\n        <td class="attribute">headers</td>\r\n        <td>Headers to be sent along with the files.</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n\r\n<p>These callbacks return FileItem objects, which contain the data of your uploaded file. You can then apply your own processing\r\n  or use the upload method on the FileItem object to send the file to the url you previously set.</p>\r\n\r\n<p>If creating a file drop zone, hide the file input with the <code>sr-only</code> class, as this will allow users of assistive\r\n  technologies to access it via the keyboard.</p>\r\n\r\n<p>File upload on click is also available in this drop area by adding the <code>&lt;input type="file"&gt;</code> element. The\r\n  <code>for</code> attribute of the <code>label</code> should refer to the <code>id</code> of the <code>input</code> element.</p>\r\n\r\n<p>Below you can see the sample code used in our example:</p>\r\n\r\n<tabset>\r\n  <tab heading="HTML">\r\n    <uxd-snippet language="html" [code]="htmlCode"></uxd-snippet>\r\n  </tab>\r\n  <tab heading="Javascript">\r\n    <uxd-snippet language="javascript" [code]="jsCode"></uxd-snippet>    \r\n  </tab>\r\n  <tab heading="CSS">\r\n    <uxd-snippet language="css" [code]="cssCode"></uxd-snippet>    \r\n  </tab>\r\n</tabset>\r\n\r\n<blockquote>\r\n  <p>Refer to <a href="https://github.com/nervgh/angular-file-upload/">AngularFileUpload</a> for further details on methods\r\n    and options available.</p>\r\n</blockquote>'},function(e,t){e.exports='<uxd-flippable-cards-wrapper></uxd-flippable-cards-wrapper>\r\n\r\n<hr>\r\n\r\n<p>Flippable Cards are a neat and tidy way to show more information about something, without taking up screen space.</p>\r\n\r\n<p>To create a Flippable Card you must use the <code>flippable-card</code> directive. \r\nWithin this directive you will also make use of 2 other directives; <code>card-front</code> and <code>card-back</code>.</p>\r\n\r\n<p>Once you have set up the directives, all you have to do is insert the content/HTML you wish to have on each side of the card. \r\nThis content will be placed within the <code>card-front</code> and <code>card-back</code> tags.</p>\r\n\r\n<p>There are some optional attributes you can specify on the <code>flippable-card</code> directive to customize it to suit your needs. These include:</p>\r\n\r\n<div class="demo-attributes table-responsive">\r\n<table class="table">\r\n  <tbody><tr>\r\n    <th>Name</th>\r\n    <th>Type</th>\r\n    <th>Binding</th>\r\n    <th>Description</th>\r\n    <th>Optional</th>\r\n  </tr>\r\n  <tr>\r\n    <td class="attribute">flip-style</td>\r\n    <td>string</td>\r\n    <td>literal</td>\r\n    <td>Describes whether the card should flip horizontally or vertically. Defaulted to <code>horizontal</code> unless set to <code>vertical</code>.</td>\r\n    <td>true</td>\r\n  </tr>\r\n  <tr>\r\n    <td class="attribute">flip-on</td>\r\n    <td>string</td>\r\n    <td>literal</td>\r\n    <td>Describes the event which will cause the card to flip. Options are <code>hover</code> and <code>click</code>, defaulted to <code>hover</code>. \r\n    <br>\r\n    <br>\r\n    If you specify <code>click</code> then you can also set a <code>flip-on-click</code> attribute on the element you wish to flip the card when clicked, \r\n    otherwise it will flip when the card is clicked.\r\n    </td>\r\n    <td>true</td>\r\n  </tr>\r\n  <tr>\r\n    <td class="attribute">card-width</td>\r\n    <td>number</td>\r\n    <td>literal</td>\r\n    <td>Describes the width (in pixels) of the card. The default value for this is <code>280</code>.</td>\r\n    <td>true</td>\r\n  </tr>\r\n  <tr>\r\n    <td class="attribute">card-height</td>\r\n    <td>number</td>\r\n    <td>literal</td>\r\n    <td>Describes the height (in pixels) of the card. The default value for this is <code>200</code>.</td>\r\n    <td>true</td>\r\n  </tr>\r\n</tbody></table>\r\n</div>\r\n\r\n<p>The following code was used in the example above:</p>\r\n\r\n<tabset>\r\n    <tab heading="HTML">\r\n        <uxd-snippet language="html" [code]="htmlCode"></uxd-snippet>\r\n    </tab>\r\n    <tab heading="Javascript">\r\n        <uxd-snippet language="javascript" [code]="jsCode"></uxd-snippet>\r\n    </tab>\r\n    <tab heading="CSS">\r\n        <uxd-snippet language="css" [code]="cssCode"></uxd-snippet>\r\n    </tab>\r\n</tabset>'},function(e,t){e.exports='<uxd-grid-wrapper></uxd-grid-wrapper>\r\n\r\n<hr>\r\n\r\n<p>The <code>grid</code> component can be used to create tables automatically from a dataset.\r\nEach available column should be configured with header text and a template.</p>\r\n\r\n<p>To add a <code>grid</code> use the following HTML and controller logic:</p>\r\n\r\n<tabset>\r\n    <tab heading="HTML">\r\n        <uxd-snippet language="html" [code]="htmlCode"></uxd-snippet>\r\n    </tab>\r\n    <tab heading="Javascript">\r\n        <uxd-snippet language="javascript" [code]="jsCode"></uxd-snippet>\r\n    </tab>\r\n</tabset>\r\n\r\n<br>\r\n\r\n<p>The data source can also be a function that returns an array. \r\nWhen using a function as the source it may be necessary to manually tell the grid to update with the latest data. \r\nTo do this you can broadcast the <code>$gridReload</code> event, e.g.:</p>\r\n\r\n<uxd-snippet language="javascript" code="$scope.$broadcast(\'$gridReload\');"></uxd-snippet>\r\n\r\n<p>The following properties can be set on columns to customize their appearance:</p>\r\n\r\n<div class="demo-attributes table-responsive">\r\n<table class="table">\r\n    <tbody><tr>\r\n        <th>Property</th>\r\n        <th>Type</th>\r\n        <th>Description</th>\r\n        <th>Optional</th>\r\n    </tr>\r\n    <tr>\r\n        <td class="attribute">title</td>\r\n        <td>string</td>\r\n        <td>This defines the title to be displayed in the column header.</td>\r\n        <td>false</td>\r\n    </tr>\r\n    <tr>\r\n        <td class="attribute">template</td>\r\n        <td>string</td>\r\n        <td>This defines the HTML to be used in the cells in this column. This property is required if the <code>templateUrl</code> property is not defined.</td>\r\n        <td>true</td>\r\n    </tr>\r\n    <tr>\r\n        <td class="attribute">templateUrl</td>\r\n        <td>string</td>\r\n        <td>This defines a path to an HTML file to be used in the cells in this column. This property is required if the <code>template</code> property is not defined.</td>\r\n        <td>true</td>\r\n    </tr>\r\n    <tr>\r\n        <td class="attribute">width</td>\r\n        <td>number</td>\r\n        <td>This defines the width of the column. If not specified the column will be automatically sized.</td>\r\n        <td>true</td>\r\n    </tr>\r\n</tbody></table>\r\n</div>'},function(e,t){e.exports='<p>\r\n    Help Center Menu is displayed on the right side of the standard header. The Help Center menu icon drops down to a provide\r\n    a general help center and page specific help.\r\n</p>\r\n\r\n<p>It is contained in the <code>help-center-menu</code> directive. The attributes of this directive are:</p>\r\n\r\n<div class="demo-attributes table-responsive">\r\n    <table class="table m-t">\r\n        <tbody>\r\n            <tr>\r\n                <th>Name</th>\r\n                <th>Type</th>\r\n                <th>Binding</th>\r\n                <th>Description</th>\r\n                <th>Optional</th>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">url</td>\r\n                <td>string</td>\r\n                <td>literal</td>\r\n                <td>Defines the Help Center URL.</td>\r\n                <td>false</td>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">help-text</td>\r\n                <td>string</td>\r\n                <td>literal</td>\r\n                <td>Defines the Help Center text for the general Help Center.</td>\r\n                <td>false</td>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">icon</td>\r\n                <td>string</td>\r\n                <td>variable</td>\r\n                <td>Defines the icon that should be displayed to represent the help Center.</td>\r\n                <td>false</td>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">target</td>\r\n                <td>string</td>\r\n                <td>literal</td>\r\n                <td>Defines where to open the URL. The available options are: <code>_self</code> (default), <code>_blank</code>,\r\n                    <code>_parent</code>, <code>_top</code>, <code>framename</code>.</td>\r\n                <td>true</td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n</div>\r\n\r\n<uxd-snippet language="html" [code]="htmlCode"></uxd-snippet>\r\n\r\n<p>\r\n    Help Center Menu consists of items that can be populated using the <code>help-center-item</code> attribute in each element.\r\n    Any element with this attribute can define three attributes:\r\n</p>\r\n\r\n<div class="demo-attributes table-responsive">\r\n    <table class="table m-t">\r\n        <tbody>\r\n            <tr>\r\n                <th>Name</th>\r\n                <th>Type</th>\r\n                <th>Binding</th>\r\n                <th>Description</th>\r\n                <th>Optional</th>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">help-center-title</td>\r\n                <td>string</td>\r\n                <td>literal</td>\r\n                <td>Defines the title of the menu item for a specific page.</td>\r\n                <td>false</td>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">help-center-url</td>\r\n                <td>string</td>\r\n                <td>literal</td>\r\n                <td>Defines the url to which the page navigates when this menu item is clicked.</td>\r\n                <td>false</td>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">sort-fn</td>\r\n                <td>function</td>\r\n                <td>literal</td>\r\n                <td>Defines a sort function (similar to sort function in JS Array.prototype) based on which the menu items are\r\n                    displayed.\r\n                </td>\r\n                <td>true</td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n</div>\r\n\r\n<p>For example, if a colored button was a help center menu item which can be directly searched, the code would be as below:</p>\r\n\r\n<tabset>\r\n    <tab heading="HTML">\r\n        <uxd-snippet language="html" [code]="exampleHtmlCode"></uxd-snippet>\r\n    </tab>\r\n    <tab heading="Javascript">\r\n        <uxd-snippet language="javascript" [code]="exampleJsCode"></uxd-snippet>\r\n    </tab>\r\n</tabset>\r\n\r\n'},function(e,t){e.exports='<uxd-hierarchy-bar-wrapper></uxd-hierarchy-bar-wrapper>\r\n\r\n<hr>\r\n\r\n<p>Hierarchy Bar defines a hierarchy of nodes in any component which are contained inside a <code>hierarchy-bar</code> element.\r\n    The popover in the hierarchy bar lists the child nodes and when clicked will highlight that node.</p>\r\n\r\n<tabset>\r\n    <tab heading="HTML">\r\n        <uxd-snippet language="html" [code]="htmlCode"></uxd-snippet>\r\n    </tab>\r\n\r\n    <tab heading="Javascript">\r\n        <uxd-snippet language="javascript" [code]="jsCode"></uxd-snippet>\r\n    </tab>\r\n</tabset>\r\n\r\n<p>A <code>hierarchy-bar</code> element has the following attributes:</p>\r\n\r\n<div class="demo-attributes table-responsive">\r\n    <table class="table m-t">\r\n        <tbody>\r\n            <tr>\r\n                <th>Property</th>\r\n                <th>Type</th>\r\n                <th>Binding</th>\r\n                <th>Description</th>\r\n                <th>Optional</th>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">data</td>\r\n                <td>array of objects</td>\r\n                <td>variable</td>\r\n                <td>The data the hierarchy bar should display. This array of objects contains a node and its parent and can contain\r\n                    any properties, however all possible child items should be listed in an array under a <code>children</code>                    property. The first item in the array should be the root node with the selected child node as the next\r\n                    item in the array.</td>\r\n                <td>false</td>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">options</td>\r\n                <td>object</td>\r\n                <td>variable</td>\r\n                <td>Allows you to configure the appearance and behavior of the hierarchy bar. All available options can be found\r\n                    in the table below.</td>\r\n                <td>false</td>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">select-node</td>\r\n                <td>function</td>\r\n                <td>variable</td>\r\n                <td>A function expression with parameters (function signature is sufficient) which is called when a hierarchy\r\n                    item (node) in the hierarchy bar is clicked. This could be used to update the hierarchy bar or perform\r\n                    actions on the element.</td>\r\n                <td>false</td>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">container-class</td>\r\n                <td>string</td>\r\n                <td>literal</td>\r\n                <td>Provides the container class name. The hierarchy bar will clip/overflow based on the container dimensions\r\n                    (re-size).\r\n                </td>\r\n                <td>true</td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n</div>\r\n\r\n<h4 id="hierarchybar-options">HierarchyBar Options</h4>\r\n\r\n<div class="demo-attributes table-responsive">\r\n    <table class="table">\r\n        <tbody>\r\n            <tr>\r\n                <th>Property</th>\r\n                <th>Type</th>\r\n                <th>Description</th>\r\n            </tr>\r\n\r\n            <tr>\r\n                <td class="attribute">enabled</td>\r\n                <td>boolean</td>\r\n                <td>Specifies whether or not the hierarchy bar will be shown (default: true).</td>\r\n            </tr>\r\n\r\n            <tr>\r\n                <td class="attribute">overview</td>\r\n                <td>function</td>\r\n                <td>If specified, a button on the left of the hierarchy bar will be shown. When clicked this function will be\r\n                    called. The purpose of this would be to allow you to present more information regarding the tree or a\r\n                    list of all items in the chart.</td>\r\n            </tr>\r\n\r\n\r\n            <tr>\r\n                <td class="attribute">image</td>\r\n                <td>function</td>\r\n                <td>If specified, this function will be called and passed a node. It should return the url to an image if one\r\n                    should be shown beside the hierarchy bar.</td>\r\n            </tr>\r\n\r\n            <tr>\r\n                <td class="attribute">valueFormatter</td>\r\n                <td>function</td>\r\n                <td>If specified, this function will be called and passed a node. It should return the text to display in the\r\n                    hierarchy bar. By default it looks for a <code>name</code> property.</td>\r\n            </tr>\r\n\r\n        </tbody>\r\n    </table>\r\n</div>\r\n\r\n<h4 id="action">Action</h4>\r\n\r\n<div class="demo-attributes table-responsive">\r\n    <table class="table">\r\n        <tbody>\r\n            <tr>\r\n                <th>Property</th>\r\n                <th>Type</th>\r\n                <th>Description</th>\r\n            </tr>\r\n\r\n            <tr>\r\n                <td class="attribute">title</td>\r\n                <td>string</td>\r\n                <td>Text to display along side the activity indicator displayed when data is loading.</td>\r\n            </tr>\r\n\r\n            <tr>\r\n                <td class="attribute">event</td>\r\n                <td>function</td>\r\n                <td>A function that is called when an arrow is clicked. It will be passed the associated breadcrumb as a parameter.\r\n                    To display a loading indicator in the dropdown have the function return a <code>$q.defer().promise</code>.\r\n                    The loading indicator will be displayed until the promise is resolved.</td>\r\n            </tr>\r\n\r\n        </tbody>\r\n    </table>\r\n</div>\r\n\r\n\r\n<blockquote>\r\n    <p>\r\n        <strong>Note</strong>: Refer to the <a routerLink="/charts/organization-chart" fragment="organization-chart-ng1">Organization Chart</a> page for an example of the hierarchy bar with popovers on top of the chart.\r\n    </p>\r\n</blockquote>'},function(e,t){e.exports='<uxd-checkbox-wrapper></uxd-checkbox-wrapper>\r\n\r\n<hr>\r\n\r\n<p>To create a checkbox use the <code>checkbox</code> directive with an <code>ng-model</code> to set and store the value.</p>\r\n\r\n<tabset>\r\n    <tab heading="HTML">\r\n        <uxd-snippet [content]="snippets.compiled.sampleHtml"></uxd-snippet>\r\n    </tab>\r\n    <tab heading="JavaScript">\r\n        <uxd-snippet [content]="snippets.compiled.sampleJs" language="javascript"></uxd-snippet>\r\n    </tab>\r\n</tabset>\r\n\r\n<p>The following attributes can be set to customize the behavior of the control.</p>\r\n\r\n<div class="demo-attributes table-responsive">\r\n    <table class="table m-t">\r\n        <tr>\r\n            <th>Name</th>\r\n            <th>Type</th>\r\n            <th>Binding</th>\r\n            <th>Description</th>\r\n            <th>Optional</th>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">ng-model</td>\r\n            <td>boolean</td>\r\n            <td>variable</td>\r\n            <td>Initially sets the value of the checkbox and will be updated to contain the current value if a user toggles the\r\n                checkbox.</td>\r\n            <td>false</td>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">indeterminate-value</td>\r\n            <td>value</td>\r\n            <td>variable</td>\r\n            <td>If <code>ng-model</code> is set to the indeterminate value specified using this attribute, it will neither display\r\n                the checkbox as checked or unchecked, and will instead show the indeterminate variation.</td>\r\n            <td>true</td>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">simplified</td>\r\n            <td>boolean</td>\r\n            <td>variable</td>\r\n            <td>If set to <code>true</code> the checkbox will be displayed without a border and background.</td>\r\n            <td>true</td>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">clickable</td>\r\n            <td>boolean</td>\r\n            <td>variable</td>\r\n            <td>If set to <code>false</code> the checkbox will not be updated when clicking on it, can be used if something else\r\n                is updating the state of the checkbox.</td>\r\n            <td>true</td>\r\n        </tr>\r\n    </table>\r\n</div>'},function(e,t){e.exports='<div>\r\n    <ux-checkbox [(value)]="checkModel.option1" [disabled]="disableCheck" [simplified]="simplified">Option1</ux-checkbox>\r\n</div>\r\n\r\n<div>\r\n    <ux-checkbox [(value)]="checkModel.option2" [indeterminateValue]="indeterminateValue" [simplified]="simplified">Option2</ux-checkbox>\r\n</div>\r\n\r\n<div>\r\n    <ux-checkbox [(value)]="checkModel.option3" [simplified]="simplified">Option3</ux-checkbox>\r\n</div>\r\n\r\n<div>\r\n    <ux-checkbox [(value)]="checkModel.option4" [simplified]="simplified">Onsectetur adipiscing elit. Inte adipiscing elit onsectetur adipiscing elit. Inte adipiscing elit onsectetur adipiscing elit. Inte adipiscing elit onsectetur adipiscing elit. Inte adipiscing elit onsectetur adipiscing elit. Inte adipiscing elit onsectetur adipiscing elit.</ux-checkbox>\r\n</div>\r\n\r\n<br>\r\n\r\n<p class="m-t-xl">\r\n    <code>checkModel.option1</code> is <em>{{ checkModel.option1 }}</em>.\r\n    <code>checkModel.option2</code> is <em>{{ checkModel.option2 }}</em>.\r\n    <code>checkModel.option3</code> is <em>{{ checkModel.option3 }}</em>.\r\n    <code>checkModel.option4</code> is <em>{{ checkModel.option4 }}</em>.\r\n</p>\r\n\r\n<br>\r\n\r\n<div>\r\n    <button class="btn button-primary m-r-xs" \r\n            (click)="disableCheck = !disableCheck">\r\n            {{ disableCheck ? \'Click to enable Option1\' : \'Click to disable Option1\' }}\r\n    </button>\r\n\r\n    <button class="btn button-secondary m-r-xs" \r\n            (click)="checkModel.option2 = indeterminateValue">\r\n            Set Option2 to indeterminate state\r\n    </button>\r\n\r\n    <button class="btn button-accent" \r\n            (click)="simplified = !simplified">\r\n            {{ simplified ? \'Disable Simplified Style\' : \'Enable Simplified Style\' }}\r\n    </button>\r\n</div>\r\n\r\n<br>\r\n\r\n<p>The following attributes can be set to customize the behavior of the control.</p>\r\n\r\n<p>In an Angular application, <code>ngModel</code> may be used to bind the control to a form.</p>\r\n\r\n<table class="table">\r\n\r\n    <thead>\r\n        <tr>\r\n            <th>Name</th>\r\n            <th>Type</th>\r\n            <th>Description</th>\r\n        </tr>\r\n    </thead>\r\n\r\n    <tbody>\r\n\r\n        <tr>\r\n            <td><b>@Input @Output</b> value</td>\r\n            <td><b>any</b></td>\r\n            <td>Determines if the checkbox should be checked, unchecked or indeterminate. The default value is <code>false</code>.</td>\r\n        </tr>\r\n\r\n        <tr>\r\n            <td><b>@Input</b> indeterminateValue</td>\r\n            <td><b>any</b></td>\r\n            <td>If <code>value</code> is set to the indeterminate value specified using this attribute, it will neither display the checkbox as checked or unchecked, and will instead show the indeterminate variation. The default value is <code>-1</code>.</td>\r\n        </tr>\r\n\r\n        <tr>\r\n            <td><b>@Input</b> simplified</td>\r\n            <td><b>boolean</b></td>\r\n            <td>If set to <code>true</code> the checkbox will be displayed without a border and background. The default value is <code>false</code>.</td>\r\n        </tr>\r\n\r\n        <tr>\r\n            <td><b>@Input</b> clickable</td>\r\n            <td><b>boolean</b></td>\r\n            <td>If set to <code>true</code> the checkbox will not toggle state when clicked. The default value is <code>false</code>.</td>\r\n        </tr>\r\n\r\n    </tbody>\r\n</table>\r\n'},function(e,t){e.exports='<uxd-custom-dropdown-wrapper></uxd-custom-dropdown-wrapper>\r\n\r\n<hr>\r\n\r\n<p>The custom dropdown can be added to a component as a popover. The contents of the custom dropdown can be defined in a template\r\n    and the path can be provided to the <code>popover-template</code> attribute. The example shows a custom dropdown with\r\n    an option to search. Additional buttons and components can be added and the callbacks should be implemented accordingly.</p>\r\n\r\n<p>The code used for the above example is shown below:</p>\r\n\r\n<tabset>\r\n    <tab heading="HTML">\r\n        <uxd-snippet [content]="snippets.compiled.sampleHtml"></uxd-snippet>\r\n    </tab>\r\n    <tab heading="Template HTML">\r\n        <uxd-snippet [content]="snippets.compiled.templateHtml"></uxd-snippet>\r\n    </tab>\r\n    <tab heading="JavaScript">\r\n        <uxd-snippet [content]="snippets.compiled.sampleJs" language="javascript"></uxd-snippet>\r\n    </tab>\r\n    <tab heading="CSS">\r\n        <uxd-snippet [content]="snippets.compiled.sampleCss" language="css"></uxd-snippet>\r\n    </tab>\r\n</tabset>'},function(e,t){e.exports='<div class="row">\r\n    <div class="col-md-6 col-xs-12 m-t-md">\r\n        <uxd-expanding-text-area-wrapper></uxd-expanding-text-area-wrapper>\r\n    </div>\r\n</div>\r\n\r\n<hr>\r\n\r\n<p>Expanding textareas provide the same functionality as regular textareas however with the additional feature that they can\r\n    grow in height as more content is added to them.</p>\r\n\r\n<p>To create an expanding textarea use the <code>expanding-textarea</code> directive.</p>\r\n\r\n<uxd-snippet [content]="this.snippets.compiled.sampleHtml"></uxd-snippet>\r\n\r\n<p>Additional attributes can be specified to configure the behavior of the textarea:</p>\r\n\r\n<div class="demo-attributes table-responsive">\r\n    <table class="table">\r\n        <tr>\r\n            <th>Name</th>\r\n            <th>Type</th>\r\n            <th>Binding</th>\r\n            <th>Description</th>\r\n            <th>Optional</th>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">disable-return</td>\r\n            <td>boolean</td>\r\n            <td>literal</td>\r\n            <td>If true this will prevent the user from being able to take a new line by pressing the return key.</td>\r\n            <td>true</td>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">max-visible-lines</td>\r\n            <td>number</td>\r\n            <td>literal</td>\r\n            <td>Once the textarea has this many lines it will no longer grow and instead show a scrollbar. A value of 0 will\r\n                grow the textarea regardless of the number of lines.</td>\r\n            <td>true</td>\r\n        </tr>\r\n    </table>\r\n</div>'},function(e,t){e.exports='<uxd-inline-dropdown-wrapper></uxd-inline-dropdown-wrapper>\r\n\r\n<hr>\r\n\r\n<p>Inline dropdowns adjust their width according to the length of the selected item. \r\nThe text preceding the dropdown can be provided using a span with the <code>.inline-dropdown-text</code> class.</p>\r\n\r\n<p>On the <code>div.btn-group</code> set the <code>dropdown</code> attribute. The button should have the <code>.btn</code>, <code>.inline-dropdown</code> and <code>.dropdown-toggle</code> classes.</p>\r\n\r\n<p>If you do not require the dotted line under the selected dropdown you can add the <code>.no-line</code> class to the button.</p>\r\n\r\n<p>The dropdown can either be opened by setting the <code>is-open</code> attribute, or by setting the dropdown-toggle attribute on the <code>.btn</code>. \r\nSet <code>on-toggle="yourFunction(open)"</code> for <code>yourFunction</code> to be executed every time the dropdown changes state.</p>\r\n\r\n<p>An example code for inline dropdowns is provided below:</p>\r\n\r\n<tabset>\r\n    <tab heading="HTML">\r\n        <uxd-snippet [content]="snippets.compiled.sampleHtml"></uxd-snippet>\r\n    </tab>\r\n    <tab heading="JavaScript">\r\n        <uxd-snippet [content]="snippets.compiled.sampleJs" language="javascript"></uxd-snippet>\r\n    </tab>\r\n</tabset>'},function(e,t){e.exports='<uxd-input-expand-wrapper></uxd-input-expand-wrapper>\r\n\r\n<hr>\r\n\r\n<p>Input Expand is contained in the <code>expand-input</code> directive and the <code>.expand-input</code> class.</p>\r\n\r\n<p>Input Expand takes the following attributes:</p>\r\n\r\n<div class="demo-attributes table-responsive">\r\n    <table class="table">\r\n        <tr>\r\n            <th>Name</th>\r\n            <th>Type</th>\r\n            <th>Binding</th>\r\n            <th>Description</th>\r\n            <th>Optional</th>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">elname</td>\r\n            <td>string</td>\r\n            <td>literal</td>\r\n            <td>Name of the input element.</td>\r\n            <td>false</td>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">place-holder</td>\r\n            <td>string</td>\r\n            <td>literal</td>\r\n            <td>Placeholder text for an input.<br></td>\r\n            <td>false</td>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">class-name</td>\r\n            <td>string</td>\r\n            <td>literal</td>\r\n            <td>Defines the classes for the input.</td>\r\n            <td>false</td>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">focus</td>\r\n            <td>function</td>\r\n            <td>expression</td>\r\n            <td>A method that defines a boolean value to indicate whether an input is expanded. Can be used to display or hide\r\n                other elements.</td>\r\n            <td>false</td>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">clear-text-icon</td>\r\n            <td>string</td>\r\n            <td>literal</td>\r\n            <td>Icon used in the clear input text button.</td>\r\n            <td>false</td>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">close-search</td>\r\n            <td>string</td>\r\n            <td>literal</td>\r\n            <td>Should be set to a value which when clicked closes the input text</td>\r\n            <td>false</td>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">expand-always</td>\r\n            <td>boolean</td>\r\n            <td>variable</td>\r\n            <td>Indicates whether the search should always expand or only on a larger viewport.</td>\r\n            <td>false</td>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">on-enter</td>\r\n            <td>function</td>\r\n            <td>variable</td>\r\n            <td>Defines the function to be called when the enter key is pressed. The function will be called with the current\r\n                text entered in the field as an argument.</td>\r\n            <td>true</td>\r\n        </tr>\r\n    </table>\r\n</div>\r\n\r\n<p>The HTML used in the example above can be found below:</p>\r\n\r\n<uxd-snippet [content]="snippets.compiled.sampleHtml"></uxd-snippet>'},function(e,t){e.exports='<p>An input mask can be useful when you want to restrict the format of the string a user can input. To create an input mask\r\n    add a <code>data-mask</code> attribute with a valid format string.</p>\r\n\r\n<p>Add the <code>placeholder</code> attribute with the value you want to be displayed as a placeholder. Add the <code>data-placeholder</code>    attribute with the character you want to be displayed when a character needs to be typed, by default it is ‘_’.</p>\r\n\r\n<p>The format string can take the following values:</p>\r\n\r\n<ul>\r\n    <li>9 - represents a number</li>\r\n    <li>a - represents a letter</li>\r\n    <li>* - represents an alphanumeric</li>\r\n    <li>[] - optional - any characters within the sqaure braces will become optional.</li>\r\n</ul>\r\n\r\n<p>Include an <code>aria-label</code> attribute that describes the restrictions of the input mask to provide accessibility to\r\n    users using assistive technologies.</p>\r\n\r\n<hr>\r\n\r\n<uxd-input-mask-wrapper></uxd-input-mask-wrapper>\r\n\r\n<hr>\r\n\r\n<p>The code to create the input masks in the example above is as follows:</p>\r\n\r\n<tabset>\r\n    <tab heading="HTML">\r\n        <uxd-snippet [content]="snippets.compiled.sampleHtml"></uxd-snippet>\r\n    </tab>\r\n    <tab heading="JavaScript">\r\n        <uxd-snippet [content]="snippets.compiled.sampleJs" language="javascript"></uxd-snippet>\r\n    </tab>\r\n</tabset>\r\n\r\n<blockquote>\r\n    <p>Refer to <a href="https://github.com/RobinHerbots/jquery.inputmask">Inputmask</a> for more options.</p>\r\n</blockquote>'},function(e,t){e.exports='<uxd-number-picker-wrapper></uxd-number-picker-wrapper>\r\n\r\n<hr>\r\n\r\n<p>The Number Picker provides a way in which users can easily select a number value from a specified range by clicking the up\r\n    and down buttons or by using the up/down arrow keys on their keyboard.</p>\r\n\r\n<p>To implement the Number Picker you must use the <code>number-picker</code> directive. There are some attributes you may specify\r\n    on the <code>number-picker</code> directive to obtain the functionality you desire:</p>\r\n\r\n<div class="demo-attributes table-responsive">\r\n    <table class="table">\r\n        <tr>\r\n            <th>Name</th>\r\n            <th>Type</th>\r\n            <th>Binding</th>\r\n            <th>Description</th>\r\n            <th>Optional</th>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">ng-model</td>\r\n            <td>number</td>\r\n            <td>variable</td>\r\n            <td>Describes the value the Number Picker is initialised with. It should be a value within the <code>max</code> and\r\n                <code>min</code> range and must be declared</td>\r\n            <td>false</td>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">step</td>\r\n            <td>number</td>\r\n            <td>variable</td>\r\n            <td>Describes the value the Number Picker is incremeted/decremented by each time. The default value is <code>1</code></td>\r\n            <td>true</td>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">max</td>\r\n            <td>number</td>\r\n            <td>variable</td>\r\n            <td>Describes the upper limit value</td>\r\n            <td>true</td>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">min</td>\r\n            <td>number</td>\r\n            <td>variable</td>\r\n            <td>Describes the lower limit value</td>\r\n            <td>true</td>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">validate</td>\r\n            <td>function</td>\r\n            <td>variable</td>\r\n            <td>Describes the function that will validate the input value. It should return <code>true</code> if the input is\r\n                invalid, <code>false</code> otherwise</td>\r\n            <td>true</td>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">ng-disabled</td>\r\n            <td>boolean</td>\r\n            <td>variable</td>\r\n            <td>Determines the disabled state of the Number Picker.</td>\r\n            <td>true</td>\r\n        </tr>\r\n    </table>\r\n</div>\r\n\r\n<p>The Number Picker contains validation that will show if an input value is invalid which can occur for a number of reasons:</p>\r\n\r\n<ol>\r\n    <li>The value doesn\'t fall between the specified range (<code>max</code> and <code>min</code>)</li>\r\n    <li>The value is not a number</li>\r\n</ol>\r\n\r\n<p>You can see the code used in our example above by selecting the appropriate tabs below:</p>\r\n\r\n<tabset>\r\n    <tab heading="HTML">\r\n        <uxd-snippet [content]="snippets.compiled.sampleHtml"></uxd-snippet>\r\n    </tab>\r\n    <tab heading="JavaScript">\r\n        <uxd-snippet [content]="snippets.compiled.sampleJs" language="javascript"></uxd-snippet>\r\n    </tab>\r\n    <tab heading="CSS">\r\n        <uxd-snippet [content]="snippets.compiled.sampleCss" language="css"></uxd-snippet>\r\n    </tab>\r\n</tabset>'},function(e,t){e.exports='<uxd-radio-button-wrapper></uxd-radio-button-wrapper>\r\n\r\n<hr>\r\n\r\n<p>To create a radio button use the <code>radiobutton</code> directive with an <code>ng-model</code> to set and store the value.</p>\r\n\r\n<tabset>\r\n    <tab heading="HTML">\r\n        <uxd-snippet [content]="snippets.compiled.sampleHtml"></uxd-snippet>\r\n    </tab>\r\n    <tab heading="JavaScript">\r\n        <uxd-snippet [content]="snippets.compiled.sampleJs" language="javascript"></uxd-snippet>\r\n    </tab>\r\n</tabset>\r\n\r\n<p>The following attributes can be set to customize the behavior of the control.</p>\r\n\r\n<div class="demo-attributes table-responsive">\r\n    <table class="table m-t">\r\n        <tr>\r\n            <th>Name</th>\r\n            <th>Type</th>\r\n            <th>Binding</th>\r\n            <th>Description</th>\r\n            <th>Optional</th>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">ng-model</td>\r\n            <td>boolean</td>\r\n            <td>variable</td>\r\n            <td>Initially sets the value of the radio button and will be updated to contain the current value if a user toggles\r\n                the radio button.</td>\r\n            <td>false</td>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">ng-value</td>\r\n            <td>value</td>\r\n            <td>variable</td>\r\n            <td>If this value equals the value in <code>ng-model</code> then the radio button will appear selected. If a user\r\n                clicks the radio button <code>ng-model</code> will be given the value specified by this attribute.</td>\r\n            <td>false</td>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">simplified</td>\r\n            <td>boolean</td>\r\n            <td>variable</td>\r\n            <td>If set to <code>true</code> the radio button will be displayed without a border and background.</td>\r\n            <td>true</td>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">clickable</td>\r\n            <td>boolean</td>\r\n            <td>variable</td>\r\n            <td>If set to <code>false</code> the radio button will not be updated when clicking on it, can be used if something\r\n                else is updating the state of the radio button.</td>\r\n            <td>true</td>\r\n        </tr>\r\n    </table>\r\n</div>\r\n\r\n<p>Use the <code>name</code> attribute to indicate which radio buttons are part of the same group.</p>'},function(e,t){e.exports='<uxd-slider-charts-wrapper></uxd-slider-charts-wrapper>\r\n\r\n<hr>\r\n\r\n<h4>Slider Chart Directive</h4>\r\n\r\n<p>The component can be added to a page by using the following HTML:</p>\r\n\r\n<uxd-snippet [content]="snippets.compiled.sampleHtml"></uxd-snippet>\r\n\r\n<p>The slider chart has been primarily designed for use for filtering by date eg. within facets and should have the following\r\n    attributes:</p>\r\n\r\n<div class="demo-attributes table-responsive">\r\n    <table class="table">\r\n        <tr>\r\n            <th>Property</th>\r\n            <th>Type</th>\r\n            <th>Binding</th>\r\n            <th>Description</th>\r\n            <th>Optional</th>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">ng-model</td>\r\n            <td>Object</td>\r\n            <td>Variable</td>\r\n            <td>The range of values for the slider.</td>\r\n            <td>false</td>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">slider-options</td>\r\n            <td>Object</td>\r\n            <td>Variable</td>\r\n            <td>The options for the slider.</td>\r\n            <td>false</td>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">chart-data</td>\r\n            <td>Object</td>\r\n            <td>Variable</td>\r\n            <td>The data to populate the chart.</td>\r\n            <td>false</td>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">chart-options</td>\r\n            <td>Object</td>\r\n            <td>Variable</td>\r\n            <td>The options for the chart.</td>\r\n            <td>false</td>\r\n        </tr>\r\n    </table>\r\n</div>\r\n\r\n<blockquote>\r\n    <p><strong>Note</strong>: Refer to the <a href="charts.html#flot-options">Flot Options</a> page for details of chart options.</p>\r\n</blockquote>\r\n\r\n<blockquote>\r\n    <p><strong>Note</strong>: Refer to the <a href="components.html#input-controls-sliders">Sliders</a> page for details of\r\n        sliders.</p>\r\n</blockquote>'},function(e,t){e.exports='<uxd-sliders-wrapper></uxd-sliders-wrapper>\r\n\r\n<hr>\r\n\r\n<p>The slider component can be used to allow a user to select a single value or a range of values. It can easily be customized\r\n    to match the desired appearance and behavior.</p>\r\n\r\n<h4>Slider Directive</h4>\r\n\r\n<p>The component can be added to a page by using the following HTML:</p>\r\n\r\n<uxd-snippet [content]="snippets.compiled.sample1Html"></uxd-snippet>\r\n\r\n<blockquote>\r\n    <p>Reference the CodePen for the code used in all examples above</p>\r\n</blockquote>\r\n\r\n<h4>Values</h4>\r\n\r\n<p>The value or range should be specified by adding an <code>ng-model</code> attribute to the directive. This should reference\r\n    either a value or an object in your controller, depending on the slider type specified in the chart options.</p>\r\n\r\n<p>For single value selection, an example of the data in the controller may be:</p>\r\n\r\n<uxd-snippet [content]="snippets.compiled.sample1Js"></uxd-snippet>\r\n\r\n<p>For range selection, an example of the data in the controller may be:</p>\r\n\r\n<uxd-snippet [content]="snippets.compiled.sample2Js"></uxd-snippet>\r\n\r\n<p>The variable in the controller will be updated with the correct value, or values, when the slider is dragged.</p>\r\n\r\n<h4>Options</h4>\r\n\r\n<p>A wide ranges of options can be configured to customize the control. These options should be stored in the controller and\r\n    passed to the control by adding an <code>options</code> attribute to the directive.</p>\r\n\r\n<p>The default options for each chart are as follows:</p>\r\n\r\n<uxd-snippet [content]="snippets.compiled.sample3Js"></uxd-snippet>\r\n\r\n<p>Full details on each property and the possible values for each can be found below. All properties are optional, if they are\r\n    not specified the default value will be used.</p>\r\n\r\n<div class="demo-attributes table-responsive">\r\n    <table class="table">\r\n        <tr>\r\n            <th>Property</th>\r\n            <th>Description</th>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">type</td>\r\n            <td>Defines whether the slider should allow selection of a single value or a range of values. The two valid values\r\n                are <code>value</code> and <code>range</code>. The default value for this property is <code>value</code>.</td>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">handles</td>\r\n            <td>This should be an object that contains properties configuring the appearance and behavior of the draggable handles\r\n                on the slider. If not specified the default options will be used.</td>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">track</td>\r\n            <td>This should be an object that contains properties configuring the appearance and behavior of the track on the\r\n                slider. If not specified the default options will be used.</td>\r\n        </tr>\r\n    </table>\r\n</div>\r\n\r\n<h4>Handle Options</h4>\r\n\r\n<div class="demo-attributes table-responsive">\r\n    <table class="table">\r\n        <tr>\r\n            <th>Property</th>\r\n            <th>Description</th>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">style</td>\r\n            <td>This allows you to choose the appearance of the drag handles. The two available options are <code>button</code>                and <code>line</code>. The default option is <code>button</code>.</td>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">callout</td>\r\n            <td>This should be an object that configures the appearance and behavior of the drag handle callout. If not specified\r\n                no callout will be shown.</td>\r\n        </tr>\r\n    </table>\r\n</div>\r\n\r\n<h4>Callout Options</h4>\r\n\r\n<div class="demo-attributes table-responsive">\r\n    <table class="table">\r\n        <tr>\r\n            <th>Property</th>\r\n            <th>Description</th>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">trigger</td>\r\n            <td>This option will specify when the callout should appear. The available options are:\r\n                <br>\r\n                <ul>\r\n                    <li><code>none</code> - The callout will never appear. This is the default option.</li>\r\n                    <li><code>hover</code> - The callout will appear when the mouse is over the handle and will remain visible\r\n                        when dragging the handle.</li>\r\n                    <li><code>drag</code> - The callout will appear only when the handle is being dragged.</li>\r\n                    <li><code>persistent</code> - The callout will always be visible.</li>\r\n                </ul>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">background</td>\r\n            <td>Specified the background color of the callout. The default value is <code>#464646</code>.</td>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">color</td>\r\n            <td>Specified the text color of the callout. The default value is <code>#fff</code>.</td>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">formatter</td>\r\n            <td>This allows you to specify a function that will format the value in the callout. The function should accept the\r\n                value as a parameter and return the modified value. By default the value will not be modified.</td>\r\n        </tr>\r\n    </table>\r\n</div>\r\n\r\n<h4>Track Options</h4>\r\n\r\n<div class="demo-attributes table-responsive">\r\n    <table class="table">\r\n        <tr>\r\n            <th>Property</th>\r\n            <th>Description</th>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">height</td>\r\n            <td>This specifies the height of the track. There are two available values, <code>wide</code> and <code>narrow</code>.\r\n                The default value is <code>wide</code>.</td>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">min</td>\r\n            <td>Specifies the minimum value shown on the slider. The default is <code>0</code>.</td>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">max</td>\r\n            <td>Specifies the maximum value shown on the slider. The default is <code>100</code>.</td>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">ticks</td>\r\n            <td>Should be an object containing properties to customize the ticks shown beneath the chart. By default major ticks\r\n                are shown on every 10th value with labels, minor ticks are shown every 5 values with no labels.</td>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">colors</td>\r\n            <td>Specifies the colors that should be used on different parts of the track. This should be an object that can contain\r\n                the following properties:\r\n                <br>\r\n                <br>\r\n                <ul>\r\n                    <li><code>lower</code> - Specifies the color or colors to be shown in the area before the first drag handle.\r\n                        This can be a string containing a color value or an array of strings which will result in a gradient.</li>\r\n                    <li><code>range</code> - Specifies the color or colors to be shown in the area between the first and second\r\n                        drag handle (the selected range of values). This only applies when a range of values can be selected.\r\n                        This can be a string containing a color value or an array of strings which will result in a gradient.</li>\r\n                    <li><code>higher</code> - Specifies the color or colors to be shown in the area after the last drag handle.\r\n                        This can be a string containing a color value or an array of strings which will result in a gradient.</li>\r\n                </ul>\r\n            </td>\r\n        </tr>\r\n    </table>\r\n</div>\r\n\r\n<h4>Tick Options</h4>\r\n\r\n<div class="demo-attributes table-responsive">\r\n    <table class="table">\r\n        <tr>\r\n            <th>Property</th>\r\n            <th>Description</th>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">snap</td>\r\n            <td>Specifies if the slider should snap to the ticks. There are several available options:\r\n                <br>\r\n                <br>\r\n                <ul>\r\n                    <li><code>none</code> - No snapping will occur. This is the default value.</li>\r\n                    <li><code>major</code> - Will snap to the major ticks.</li>\r\n                    <li><code>minor</code> - Will snap to the minor ticks.</li>\r\n                    <li><code>all</code> - Will snap to both the major and minor ticks.</li>\r\n                </ul>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">major</td>\r\n            <td>Should be an object containing properties that configure the major ticks. Major ticks will be more prominent\r\n                that minor ticks and tend to be less frequent.</td>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">minor</td>\r\n            <td>Should be an object containing properties that configure the minor ticks. Minor ticks will be less prominent\r\n                that major ticks and tend to be more frequent.</td>\r\n        </tr>\r\n    </table>\r\n</div>\r\n\r\n<h4>Major & Minor Tick Options</h4>\r\n\r\n<div class="demo-attributes table-responsive">\r\n    <table class="table">\r\n        <tr>\r\n            <th>Property</th>\r\n            <th>Description</th>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">show</td>\r\n            <td>Specifies whether this variety of ticks should be shown. The available options are <code>true</code> or <code>false</code>.\r\n                By default both major and minor ticks will be shown.</td>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">steps</td>\r\n            <td>Specifies at what interval this variety of tick should appear. Default for major ticks is <code>10</code>, the\r\n                default for minor ticks is <code>5</code>. Additionally this can be an array containing precise values of\r\n                when ticks should appear. This can be useful when ticks should not appear at regular intervals.\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">labels</td>\r\n            <td>Specifies whether or not this variety of ticks should display labels. The available options are <code>true</code>                or <code>false</code>. By default major ticks will show labels, minor ticks will not.</td>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">formatter</td>\r\n            <td>This allows you to specify a function that will format the value in the tick label. This should accept a value\r\n                as a parameter and return a modified value. By default the value will not be modified.</td>\r\n        </tr>\r\n    </table>\r\n</div>\r\n\r\n<h4>Adding Text Input Controls</h4>\r\n\r\n<p>Text inputs, or other controls can be used to allow users to change the value shown on the slider or to display the value\r\n    the slider has selected. These controls are not part of the slider component but can be easily combined by using the\r\n    <code>ng-model</code> directive. Adding this directive to a text input control and binding to the same value as the slider\r\n    will result in both controls displaying the same value, and if one is updated the other will update also. It may also\r\n    be useful to debounce the update in text controls to allow users to finish typing before updating the slider. For example:</p>\r\n\r\n<uxd-snippet [content]="snippets.compiled.sample2Html"></uxd-snippet>'},function(e,t){e.exports='<uxd-tags-wrapper></uxd-tags-wrapper>\r\n\r\n<hr>\r\n\r\n<p>The tag input is set with the <code class="highlighter-rouge">tag-input</code> directive. It accepts the following attributes:</p>\r\n\r\n<div class="demo-attributes table-responsive">\r\n<table class="table">\r\n  <tr>\r\n    <th>Name</th>\r\n    <th>Type</th>\r\n    <th>Binding</th>\r\n    <th>Description</th>\r\n    <th>Optional</th>\r\n  </tr>\r\n  <tr>\r\n    <td class="attribute">tags</td>\r\n    <td>array</td>\r\n    <td>variable</td>\r\n    <td>An initial set of tags to be displayed</td>\r\n    <td>false</td>\r\n  </tr>\r\n  <tr>\r\n    <td class="attribute">full-tag-set</td>\r\n    <td>array</td>\r\n    <td>variable</td>\r\n    <td>A set of tags to be used for autocompletion</td>\r\n    <td>true</td>\r\n  </tr>\r\n  <tr>\r\n    <td class="attribute">api</td>\r\n    <td>object</td>\r\n    <td>variable</td>\r\n    <td>A set of callback functions for events and validation</td>\r\n    <td>true</td>\r\n  </tr>\r\n  <tr>\r\n    <td class="attribute">options</td>\r\n    <td>object</td>\r\n    <td>variable</td>\r\n    <td>An object allowing configuration of the control\'s behaviour</td>\r\n    <td>true</td>\r\n  </tr>\r\n  <tr>\r\n    <td class="attribute">ng-disabled</td>\r\n    <td>boolean</td>\r\n    <td>variable</td>\r\n    <td>Determines whether the control is disabled. Default is false.</td>\r\n    <td>true</td>\r\n  </tr>\r\n</table>\r\n</div>\r\n\r\n<h4>Tags</h4>\r\n\r\n<p>Tags can be specified in a number of formats. \r\nThe simplest format is to provide tags as an array of strings; these will be internally converted to an array of objects holding a <code class="highlighter-rouge">text</code> property. \r\nTags can also be supplied as an array of objects, where the <code class="highlighter-rouge">text</code> property of each member will be used for the tag control.</p>\r\n\r\n<p>Alternatively, you can specify a <code class="highlighter-rouge">format</code> property in the options for the control, and map the display properties to arbitrary values. \r\nSee the Options section below for more details.</p>\r\n\r\n<p>By default, tags will be added when the user presses the enter key.</p>\r\n\r\n<p>Configuration options are available for extending this to cover the space and comma keys, as well as options for the blur event of the control \r\nand how to handle text pasted from the clipboard. When the backspace key is pressed after a tag has been entered, the tag will be highlighted. \r\nThe highlighted tag can be changed with the arrow keys, and pressing backspace again will delete the tag.</p>\r\n\r\n<h4>Autocomplete</h4>\r\n\r\n<p>The tag control supports free-form typing, autocomplete assisted free-form typing, and inputs limited to autocomplete values. \r\nThe Options section below describes how to configure the autocomplete behaviour.</p>\r\n\r\n<p>The set of tags should be an array of strings.</p>\r\n\r\n<blockquote>\r\n  <p><strong>Note</strong>: that for autocomplete functionality, you must provide a value for the <code class="highlighter-rouge">full-tag-set</code> attribute, and the <code class="highlighter-rouge">autocomplete</code> configuration block must be supplied.</p>\r\n</blockquote>\r\n\r\n<h4>API</h4>\r\n\r\n<p>The <code class="highlighter-rouge">API</code> attribute allows you to provide an object hosting functions, which will be invoked when the corresponding internal behaviour is executed. \r\nAll of these functions will be called with the tag available as <code class="highlighter-rouge">$tag</code>.</p>\r\n\r\n<br>\r\n\r\n<div class="demo-attributes table-responsive">\r\n<table class="table">\r\n  <tr>\r\n    <th>Property</th>\r\n    <th>Description</th>\r\n  </tr>\r\n  <tr>\r\n    <td class="attribute">onTagAdding</td>\r\n    <td>Called before a new tag is added. This method must return `true` or `false`, with a return value of `false` preventing the tag from being added</td>\r\n  </tr>\r\n  <tr>\r\n    <td class="attribute">onTagAdded</td>\r\n    <td>Called after a new tag is added</td>\r\n  </tr>\r\n  <tr>\r\n    <td class="attribute">onInvalidTag</td>\r\n    <td>Called when a tag is invalid</td>\r\n  </tr>\r\n  <tr>\r\n    <td class="attribute">onTagRemoving</td>\r\n    <td>Called before removing a tag. This method must return `true` or `false`, with a return value of `false` preventing the tag from being removed</td>\r\n  </tr>\r\n  <tr>\r\n    <td class="attribute">onTagRemoved</td>\r\n    <td>Called after a tag is removed</td>\r\n  </tr>\r\n  <tr>\r\n    <td class="attribute">onTagClicked</td>\r\n    <td>Called when the user clicks on an existing tag</td>\r\n  </tr>\r\n</table>\r\n</div>\r\n\r\n<h4>Options</h4>\r\n\r\n<p>The <code class="highlighter-rouge">options</code> attribute allows you to provide an object which will configure the behaviour of the control. The following options are available:</p>\r\n\r\n<div class="demo-attributes table-responsive">\r\n<table class="table">\r\n  <tr>\r\n    <th>Property</th>\r\n    <th>Description</th>\r\n  </tr>\r\n  <tr>\r\n    <td class="attribute">placeholder</td>\r\n    <td>Placeholder text for the input control</td>\r\n  </tr>\r\n  <tr>\r\n    <td class="attribute">minTagLength</td>\r\n    <td>Minimum length for a new tag (Default: 1)</td>\r\n  </tr>\r\n  <tr>\r\n    <td class="attribute">maxTagLength</td>\r\n    <td>Maximum length for a new tag (Default: Max Int)</td>\r\n  </tr>\r\n  <tr>\r\n    <td class="attribute">minNumberTags</td>\r\n    <td>Minimum valid number of tags (Default: 0)</td>\r\n  </tr>\r\n  <tr>\r\n    <td class="attribute">maxNumberTags</td>\r\n    <td>Maximum valid number of tags (Default: Max Int)</td>\r\n  </tr>\r\n  <tr>\r\n    <td class="attribute">addOnSpace</td>\r\n    <td>Flag for if new tags should be added when the space key is pressed (Default: false)</td>\r\n  </tr>\r\n  <tr>\r\n    <td class="attribute">addOnComma</td>\r\n    <td>Flag for if new tags should be added when the comma key is pressed (Default: false)</td>\r\n  </tr>\r\n  <tr>\r\n    <td class="attribute">addOnBlur</td>\r\n    <td>Flag for if new tags should be added when the control loses focus (Default: true)</td>\r\n  </tr>\r\n  <tr>\r\n    <td class="attribute">addOnPaste</td>\r\n    <td>Flag for if new tags should be added when pasting from the clipboard (Default: true)</td>\r\n  </tr>\r\n  <tr>\r\n    <td class="attribute">pasteSplitPattern</td>\r\n    <td>When pasting from the clipboard, string delimiter for parsing input into tags (Default: \',\' )</td>\r\n  </tr>\r\n  <tr>\r\n    <td class="attribute">tabIndex</td>\r\n    <td>Tabindex for the control (Default: Undefined )</td>\r\n  </tr>\r\n  <tr>\r\n    <td class="attribute">template</td>\r\n    <td>HTML for custom tag style (optional)</td>\r\n  </tr>\r\n  <tr>\r\n    <td class="attribute">maxTagsMessage</td>\r\n    <td>String for the message which will be displayed if the user exceeds the maximum number of tags (optional)</td>\r\n  </tr>\r\n  <tr>\r\n    <td class="attribute">maxTagsHidden</td>\r\n    <td>Boolean value to hide the placeholder and autocomplete dropdown if the maximum number of tags has been reached (Default: false)</td>\r\n  </tr>\r\n  <tr>\r\n    <td class="attribute">format</td>\r\n    <td>\r\n        Object with the following properties:\r\n        <ul>\r\n            <li><code>key</code> - property name in your object format for uniquely identifying tags (Default: \'text\')</li>\r\n            <li><code>display</code> - property name in your object format for displaying as the tag\'s text (Default: \'text\')</li>\r\n        </ul>\r\n    </td>\r\n  </tr>\r\n  <tr>\r\n    <td class="attribute">autocomplete</td>\r\n    <td>\r\n        Object with the following properties:\r\n        <ul>\r\n            <li><code>addFromAutocompleteOnly</code> - flag for allowing only autocomplete values (Default: \'false\')</li>\r\n            <li><code>delay</code> - delay in ms before the autocomplete will open (Default: 100)</li>\r\n            <li><code>minLength</code> - number of characters the user should type before the autocomplete will open (Default: 3)</li>\r\n            <li><code>template</code> - html for custom autocomplete style (optional)</li>\r\n            <li><code>source</code> - expression to evaluate upon changing the input content (optional)</li>\r\n        </ul>\r\n    </td>\r\n  </tr>\r\n</table>\r\n</div>\r\n\r\n<p>The code for the above example is as follows:</p>\r\n\r\n<tabset>\r\n    <tab heading="HTML">\r\n        <uxd-snippet [content]="snippets.compiled.sampleHtml"></uxd-snippet>\r\n    </tab>\r\n    <tab heading="JavaScript">\r\n        <uxd-snippet [content]="snippets.compiled.sampleJs" language="javascript"></uxd-snippet>\r\n    </tab>\r\n</tabset>\r\n\r\n<hr>\r\n\r\n<p>The following example demonstrates how to use the autocomplete behaviour. Try typing the names of colours.</p>\r\n\r\n<uxd-tags-autocomplete-wrapper></uxd-tags-autocomplete-wrapper>\r\n\r\n<hr>\r\n\r\n<p>The code for the above example is as follows:</p>\r\n\r\n<tabset>\r\n    <tab heading="HTML">\r\n        <uxd-snippet [content]="snippets.compiled.autocompleteHtml"></uxd-snippet>\r\n    </tab>\r\n    <tab heading="JavaScript">\r\n        <uxd-snippet [content]="snippets.compiled.autocompleteJs" language="javascript"></uxd-snippet>\r\n    </tab>\r\n</tabset>\r\n\r\n<hr>\r\n\r\n<uxd-tags-custom-wrapper></uxd-tags-custom-wrapper>\r\n\r\n<p>The code for the above example is as follows:</p>\r\n\r\n<tabset>\r\n    <tab heading="HTML">\r\n        <uxd-snippet [content]="snippets.compiled.customHtml"></uxd-snippet>\r\n    </tab>\r\n    <tab heading="JavaScript">\r\n        <uxd-snippet [content]="snippets.compiled.customJs" language="javascript"></uxd-snippet>\r\n    </tab>\r\n</tabset>'},function(e,t){e.exports='<uxd-toggle-switch-wrapper></uxd-toggle-switch-wrapper>\r\n\r\n<hr>\r\n\r\n<p>To create a toggle switch use the <code>toggleswitch</code> directive with an <code>ng-model</code> attribute to set and\r\n    store the value. Use <code>ng-disabled</code> to control the disabled state.</p>\r\n\r\n<uxd-snippet [content]="snippets.compiled.sample1Html"></uxd-snippet>\r\n\r\n<p>Add the class <code>toggleswitch-lg</code> to use the large variant of the toggle switch.</p>\r\n\r\n<uxd-snippet [content]="snippets.compiled.sample2Html"></uxd-snippet>\r\n\r\n<p>The following attributes can be set to customize the behavior of the control.</p>\r\n\r\n<div class="demo-attributes table-responsive">\r\n    <table class="table m-t">\r\n        <tr>\r\n            <th>Name</th>\r\n            <th>Type</th>\r\n            <th>Binding</th>\r\n            <th>Description</th>\r\n            <th>Optional</th>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">ng-model</td>\r\n            <td>boolean</td>\r\n            <td>variable</td>\r\n            <td>Initially sets the value of the swtich and will be updated to contain the current value if a user toggles the\r\n                switch.</td>\r\n            <td>false</td>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">ng-disabled</td>\r\n            <td>value</td>\r\n            <td>variable</td>\r\n            <td>If this value is set to <code>true</code> the toggle switch will be disabled.</td>\r\n            <td>true</td>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">clickable</td>\r\n            <td>boolean</td>\r\n            <td>variable</td>\r\n            <td>If set to <code>false</code> the switch will not be updated when clicking on it, can be used if something else\r\n                is updating the state of the switch.</td>\r\n            <td>true</td>\r\n        </tr>\r\n    </table>\r\n</div>\r\n\r\n<h4>Custom Styling</h4>\r\n\r\n<uxd-custom-toggle-switch-wrapper></uxd-custom-toggle-switch-wrapper>\r\n\r\n<hr>\r\n\r\n<p>Above is an example of a custom style applied to the toggle switch using CSS. Using the classes described below, one may\r\n    modify the appearance, size, and animations associated with the toggle switch.</p>\r\n\r\n<p>The control consists of the following components that may be styled.</p>\r\n\r\n<ul>\r\n    <li><code>.el-toggleswitch-label</code> is the container of both the toggle switch and the associated label.\r\n        <ul>\r\n            <li><code>.el-toggleswitch</code> contains the toggle switch components. It will also have additional classes based\r\n                on the state of the control. <code>.checked</code> will be present when the control is in the checked state.\r\n                <code>.disabled</code> will be present if the <code>ng-disabled</code> expression evaluates to true.\r\n                <ul>\r\n                    <li><code>.el-toggleswitch-bg</code> is the visible backdrop of the toggle switch.</li>\r\n                    <li><code>.el-toggleswitch-nub</code> is the switch component which moves when changing state.</li>\r\n                </ul>\r\n            </li>\r\n            <li><code>.el-toggleswitch-content</code> contains the text label.</li>\r\n        </ul>\r\n    </li>\r\n</ul>\r\n\r\n<p>The CSS used to create the custom appearance above is as follows. Note that a custom parent class has been applied to each\r\n    style rule.</p>\r\n\r\n<uxd-snippet [content]="snippets.compiled.sampleCss" language="css"></uxd-snippet>\r\n\r\n<p>To ensure that the styles override the default, create the toggle switch with the custom class applied.</p>\r\n\r\n<uxd-snippet [content]="snippets.compiled.sample3Html"></uxd-snippet>'},function(e,t){e.exports='<div>\r\n  <ux-toggleswitch [(value)]="toggleSwitches.option1" [disabled]="toggleSwitchDisable">Toggle 1</ux-toggleswitch>\r\n</div>\r\n<div>\r\n  <ux-toggleswitch [(value)]="toggleSwitches.option2">Toggle 2</ux-toggleswitch>\r\n</div>\r\n<div>\r\n  <ux-toggleswitch [(value)]="toggleSwitches.option3">Toggle 3</ux-toggleswitch>\r\n</div>\r\n<div class="m-t-sm">\r\n  <ux-toggleswitch class="toggleswitch-lg" [(value)]="toggleSwitches.option4">Large Toggle</ux-toggleswitch>\r\n</div>\r\n<p class="m-t">\r\n  <code>toggleSwitches.option1</code> is <em>{{toggleSwitches.option1}}</em>.\r\n  <code>toggleSwitches.option2</code> is <em>{{toggleSwitches.option2}}</em>.\r\n  <code>toggleSwitches.option3</code> is <em>{{toggleSwitches.option3}}</em>.\r\n  <code>toggleSwitches.option4</code> is <em>{{toggleSwitches.option4}}</em>.\r\n</p>\r\n<button class="btn button-primary m-r-xs" (click)="toggleSwitchDisable = !toggleSwitchDisable">{{toggleSwitchDisable ? \'Click to enable Toggle 1\' : \'Click to disable Toggle 1\'}}</button>\r\n\r\n<p class="p-t-lg">To create a toggle switch, use the <code>toggleswitch</code> component with the <code>value</code> attribute to bind the value. Use <code>disabled</code>\r\nto control the disabled state.</p>\r\n\r\n<p>In an Angular application, <code>ngModel</code> may be used to bind the control to a form.</p>\r\n\r\n<table class="table">\r\n  <thead>\r\n    <tr>\r\n      <th>Name</th>\r\n      <th>Type</th>\r\n      <th>Description</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr>\r\n      <td><b>@Input @Output</b> value</td>\r\n      <td><b>boolean</b></td>\r\n      <td>Binding for the state of the switch; <code>true</code> for "on" and <code>false</code> for "off."</td>\r\n    </tr>\r\n    <tr>\r\n      <td><b>@Input</b> disabled</td>\r\n      <td><b>boolean</b></td>\r\n      <td>If this value is set to <code>true</code> then the toggle switch will be disabled. The default value is <code>false</code>.</td>\r\n    </tr>\r\n    <tr>\r\n      <td><b>@Input</b> clickable</td>\r\n      <td><b>boolean</b></td>\r\n      <td>If set to <code>false</code> the switch will not be updated when clicking on it, can be used if something else is updating\r\nthe state of the switch. The default value is <code>true</code>.</td>\r\n    </tr>\r\n  </tbody>\r\n</table>'},function(e,t){e.exports='<uxd-hotkeys-wrapper></uxd-hotkeys-wrapper>\r\n\r\n<hr>\r\n\r\n<p>Hotkeys in UX Aspects can be configured in a number of ways. The above example shows two default behaviours - on the left,\r\n  the hotkey tabs between each item in the group, including the group itself. In this case the user can ‘press’ the button\r\n  using the spacebar or associated default keybinding for the control - this will be unchanged.</p>\r\n\r\n<p>In the example on the right, the hotkey tabs between each item in the group and also immediately invokes the behaviour associated\r\n  with that button.</p>\r\n\r\n<p>Both groups display the ‘hotkey hint’ in their upper-left corner. This can be used to inform the user of available keys and\r\n  is optional.</p>\r\n\r\n<p>In order to create a group of hotkeys, use the <code>hotkey</code> directive. This is an attribute directive so should be\r\n  placed as an attribute on another element. The value set to this attribute should be the key you want to bind your hotkey\r\n  functionality to. If you are making a group of items, this attribute should be placed on the outermost container. To associate\r\n  child elements as being part of that hotkey group, give them the <code>hotkey-item</code> attribute.</p>\r\n\r\n<p>The container element can take two additional attribute parameters:</p>\r\n<div class="demo-attributes table-responsive">\r\n  <table class="table m-t">\r\n    <tbody>\r\n      <tr>\r\n        <th>Name</th>\r\n        <th>Type</th>\r\n        <th>Binding</th>\r\n        <th>Description</th>\r\n        <th>Optional</th>\r\n      </tr>\r\n      <tr>\r\n        <td class="attribute">hotkey-action</td>\r\n        <td>function</td>\r\n        <td>variable</td>\r\n        <td>A function which will be called every time your hotkey is pressed, in addition to the tabbing/focusing logic. This\r\n          function is called with the focused element as an argument, so you can configure different behaviour for each child\r\n          element.\r\n        </td>\r\n        <td>true</td>\r\n      </tr>\r\n      <tr>\r\n        <td class="attribute">hotkey-hint</td>\r\n        <td>boolean</td>\r\n        <td>literal</td>\r\n        <td>This attribute will place the hotkey hint graphic in the top-left corner.</td>\r\n        <td>true</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n<p>When using the <code>hotkey-hint</code>, the precise styling can be controlled using the\r\n  <code>hotkey-group-hint</code> class. This class exists in UX Aspects and will show a hotkey hint in the style shown in this\r\n  page. To customise the appearance of the hotkey hint, you can override this class with your own values. As an example of\r\n  this - on this page, the default styling has been extended to provide a top and left margin of <code>-2px</code> on the\r\n  hotkey hint, because the example button panels above use a <code>2px</code> width border and we want them to appear flush.\r\n  This also allows you to change the appearance of the hotkey hint depending on the component. For example, the demo above\r\n  is wrapped with a\r\n  <code>hotkey-demo-only</code> class, so defining a CSS class <code>.hotkey-demo-only .hotkey-group-hint</code> allows us\r\n  to override the CSS for just this instance.</p>\r\n\r\n<h4>Hotkey Action</h4>\r\n\r\n<p>This directive will allow your users to focus a set of controls using the keyboard and navigate around them using the same\r\n  key. Each time that key is pressed, the function you have supplied to the <code>hotkey-action</code> attribute will be\r\n  invoked. This function will be called with the highlighted element as the argument. This allows your callback to check\r\n  which item the user currently has selected, and perform logic accordingly. For instance, if you want the hotkey to also\r\n  trigger the “click” event of that button as if the user had clicked it, your code might look like this:</p>\r\n\r\n<uxd-snippet [content]="snippets.compiled.callbackJs" language="javascript"></uxd-snippet>\r\n\r\n<h4>Usage Notes</h4>\r\n\r\n<p>This example uses some styles which are purely for illustrative purposes; however the ‘focus’ style is important to provide.\r\n  UX Aspects supplies the <code>aspects-focus-outline</code> class which you may place on your container element; this will apply\r\n  the same ‘focus’ style as other controls in UX Aspects. If required you may write your own class to change the styling of\r\n  your element using the <code>:focus</code> CSS pseudo-selector.</p>\r\n\r\n<p>In order to allow the elements within your hotkey group to receive keyboard focus, the directive will assign them a\r\n  <code>tabindex</code> if one is not already present. This is related to expected browser behaviour and is not a requirement\r\n  of UX Aspects itself.</p>\r\n\r\n<p>Hotkeys created by this directive will be bound to the <code>document</code> node; this means they should trigger when the\r\n  key is pressed anywhere on your page. The exception to this is <code>input</code>,\r\n  <code>textarea</code>, <code>select</code> and <code>contenteditable</code> elements, which will <em>not</em> invoke hotkeys\r\n  (so that the user can type). If you wish to disable hotkey triggering on additional elements, add the <code>hotkey-ignore</code>  attribute to that element. Hotkey events will no longer trigger when that event is focused.</p>\r\n\r\n<p>Hotkeys created by this directive will be deleted when the element is destroyed. In practical terms this means that users\r\n  navigating to other pages of your application will not continue to have unwanted hotkey events - however the developer\r\n  is responsible for ensuring their application is structured as per Angular recommendations so that the <code>$destroy</code>  event for each element <code>$scope</code> is guaranteed to execute: refer to the <a href="https://docs.angularjs.org/api/ng/type/$rootScope.Scope#$destroy">Angular JS $scope documentation</a>  for more details.</p>\r\n\r\n<p>See below for information on manually unbinding hotkeys and having hotkeys which exist across an entire application.</p>\r\n\r\n<h4>Sample Code</h4>\r\n\r\n<p>The sample code for both examples above is presented below. Note that the example-specific styling has been removed for the\r\n  sake of clarity.</p>\r\n\r\n  <tabset>\r\n      <tab heading="HTML">\r\n          <uxd-snippet [content]="snippets.compiled.layoutHtml" language="html"></uxd-snippet>\r\n      </tab>\r\n      <tab heading="JavaScript">\r\n          <uxd-snippet [content]="snippets.compiled.controllerJs" language="javascript"></uxd-snippet>\r\n      </tab>\r\n  </tabset>'},function(e,t){e.exports='<p>The Keyboard Service, <code>keyboardService</code>, allows you to bind a key event to any element in your application. For\r\n  example, it can be used to enable navigation on a list of items using selected keys from the keyboard (such as the\r\n  <a routerLink="/components/panels" fragment="item-display-panel-ng1">Item Display Panel</a>). The <a routerLink="/components/keyboard"\r\n    fragment="hotkeys-ng1">Hotkey</a> directive also uses this service.</p>\r\n\r\n<p>Hotkeys bound to individual elements will be life-cycle bound to that element. If you wish to have a hotkey which works across\r\n  your entire application, you can directly use the <code>keyboardService</code>. Note that “target” here refers to the element\r\n  against which the key event is registered by the browser. The full API for this service is as follows:</p>\r\n\r\n<div class="demo-attributes table-responsive">\r\n  <table class="table">\r\n    <tbody>\r\n      <tr>\r\n        <th>Name</th>\r\n        <th>Description</th>\r\n      </tr>\r\n      <tr>\r\n        <td class="attribute">keydown</td>\r\n        <td>\r\n          Arguments:\r\n          <ul>\r\n            <li><code>element</code> - (DOM element), specifies the element you wish to attach the keydown event listener to.</li>\r\n            <li><code>keyCode</code> - (integer), specifies the key the event listener will listen for.</li>\r\n            <li><code>callback</code> - (function), specifies the function which will be executed when the correct key is pressed.\r\n              Takes the <code>event</code> as a parameter.</li>\r\n            <li><code>priority</code> - (integer: optional), specifies the priority of the attached event. If multiple events\r\n              are attached to a single element, then the highest priority event callback will be executed first (default:\r\n              <code>1</code>).</li>\r\n            <li><code>stopPropagation</code> - (boolean: optional), specifies whether or not to stop event propagation when the\r\n              key is pressed (default: <code>false</code>).</li>\r\n          </ul>\r\n          <p>This function allows the user to attach a keydown event listener to an element. The user can then supply a callback\r\n            they wish to be executed when the correct key is pressed.</p>\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <td class="attribute">getCharCode</td>\r\n        <td>\r\n          Arguments:\r\n          <ul>\r\n            <li><code>character</code> - string</li>\r\n          </ul>\r\n          <p>Returns the integer keycode for a single character on the keyboard - also accepts the following special strings\r\n            for non-printing characters: <em>backspace, tab, clear, enter, return, escape, space, left, right, up, down, delete, home, end, pageup, pagedown</em>.</p>\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <td class="attribute">bindKey</td>\r\n        <td>\r\n          Arguments:\r\n          <ul>\r\n            <li><code>key</code> - integer or keycode object (see below)</li>\r\n            <li><code>callback</code> - function</li>\r\n            <li><code>element</code> - DOMElement, optional</li>\r\n            <li><code>target</code> - DOMElement, optional</li>\r\n          </ul>\r\n          <p>The function <code>callback</code> will be invoked with no arguments when the key defined by <code>key</code> is\r\n            pressed, when the element <code>target</code> has focus. If no target is provided, the hotkey will bind to the\r\n            <code>document</code>. If an <code>element</code> is provided, the hotkey binding will be removed when that element\r\n            is <code>$destroyed</code>.</p>\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <td class="attribute">unbindKey</td>\r\n        <td>\r\n          Arguments:\r\n          <ul>\r\n            <li><code>key</code> - integer or keycode object (see below)</li>\r\n            <li><code>target</code> - DOMElement, optional</li>\r\n          </ul>\r\n          <p>Removes a previously bound <code>key</code> hotkey from a <code>target</code>. If no target is provided, the binding\r\n            will be removed from the <code>document</code>.</p>\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <td class="attribute">createHotkeyHint</td>\r\n        <td>\r\n          Arguments:\r\n          <ul>\r\n            <li><code>element</code> - DOMElement</li>\r\n            <li><code>text</code> - string</li>\r\n          </ul>\r\n          <p>Creates a small hotkey hint graphic in the style of those seen in the above examples. The supplied <code>text</code> will be used, and will be added to the top-left of the <code>element</code>.</p>\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n\r\n<p>As noted above, the <code>key</code> parameter may be either an integer or an object. As an integer it specifies a keycode\r\n  and will bind to a key press without any modifiers. Using an object as described below, a hotkey event may be bound with\r\n  one or more modifiers.</p>\r\n\r\n<div class="demo-attributes table-responsive">\r\n  <table class="table m-t">\r\n    <tbody>\r\n      <tr>\r\n        <th>Name</th>\r\n        <th>Type</th>\r\n        <th>Description</th>\r\n        <th>Optional</th>\r\n      </tr>\r\n      <tr>\r\n        <td class="attribute">code</td>\r\n        <td>numeric</td>\r\n        <td>The keycode to bind the event to. The <code>getCharCode</code> API function may be used to convert many characters\r\n          into keycodes.</td>\r\n        <td>false</td>\r\n      </tr>\r\n      <tr>\r\n        <td class="attribute">shiftKey</td>\r\n        <td>boolean</td>\r\n        <td>Specifies whether the shift key must be pressed in combination with the hotkey. Default is false.</td>\r\n        <td>true</td>\r\n      </tr>\r\n      <tr>\r\n        <td class="attribute">ctrlKey</td>\r\n        <td>boolean</td>\r\n        <td>Specifies whether the control key must be pressed in combination with the hotkey. Default is false.</td>\r\n        <td>true</td>\r\n      </tr>\r\n      <tr>\r\n        <td class="attribute">altKey</td>\r\n        <td>boolean</td>\r\n        <td>Specifies whether the alt key must be pressed in combination with the hotkey. Default is false.</td>\r\n        <td>true</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n\r\n<h4>Using the Service</h4>\r\n\r\n<p>To use this service, inject it as you would any other dependency using its full name, <code>keyboardService</code>. You can\r\n  then call its methods as shown below:</p>\r\n\r\n<uxd-snippet [content]="snippets.compiled.controllerJs" language="javascript"></uxd-snippet>\r\n\r\n<h4>Demonstration</h4>\r\n\r\n<p>Set up a keybind using the fields below, and press it to test.</p>\r\n\r\n<uxd-keyboard-service-wrapper></uxd-keyboard-service-wrapper>'},function(e,t){e.exports='<uxd-marquee-modal-wrapper></uxd-marquee-modal-wrapper>\r\n\r\n<hr>\r\n\r\n<p>A marquee modal consists of two sections. The first is a panel on the left side and the second is the main content area to the right.</p>\r\n\r\n<h4>Side Panel</h4>\r\n\r\n<p>A side panel can be added using a <code>div.side-panel</code>. It can have an icon or image which should be contained in a <code>div.marquee-logo</code>.\r\nAny text to be displayed should be contained within a <code>div.marquee-info-panel</code>. If there is header text use an <code>h1.header</code>. For regular text use a <code>p.description</code>. \r\nOn very small displays the side panel may be hidden to provide sufficient room for the primary modal content.</p>\r\n\r\n<h4>Main Panel</h4>\r\n\r\n<p>The main panel can be added using a <code>div.main-panel</code>. It can have a header using a <code>div.marquee-header</code> with a child <code>h1.marquee-title</code> that will contain the header text.\r\nThe primary content of the modal should be contained within a <code>div.marquee-body</code>.\r\nTo add a footer to the modal add a <code>div.marquee-footer</code>. Add any modal buttons to this footer element.\r\nThe height of the modal is set based on the height of the contents of the main panel.</p>\r\n\r\n<tabset>\r\n    <tab heading="HTML">\r\n        <uxd-snippet [content]="snippets.compiled.modalLayoutHtml" language="html"></uxd-snippet>\r\n    </tab>\r\n    <tab heading="JavaScript">\r\n        <uxd-snippet [content]="snippets.compiled.controllerJs + snippets.compiled.modalControllerJs" language="javascript"></uxd-snippet>\r\n    </tab>\r\n    <tab heading="CSS">\r\n        <uxd-snippet [content]="snippets.compiled.stylesCss" language="css"></uxd-snippet>\r\n    </tab>\r\n</tabset>\r\n\r\n<p>The marquee modal can be initialized using a controller which internally uses the <code>$modal</code> service. \r\nThe <code>$modal</code> service provides an open method with the following options:</p>\r\n\r\n<div class="demo-attributes table-responsive">\r\n<table class="table">\r\n  <tbody><tr>\r\n    <th>Name</th>\r\n    <th>Type</th>\r\n    <th>Description</th>\r\n    <th>Optional</th>\r\n  </tr>\r\n  <tr>\r\n    <td class="attribute">animation</td>\r\n    <td>boolean</td>\r\n    <td>Set to false to disable animation on new modal/backdrop. If we don\'t specify the animation option by default animation is enabled</td>\r\n    <td>true</td>\r\n  </tr>\r\n  <tr>\r\n    <td class="attribute">templateUrl</td>\r\n    <td>string</td>\r\n    <td>Path to the modal template.</td>\r\n    <td>false</td>\r\n  </tr>\r\n  <tr>\r\n    <td class="attribute">controller</td>\r\n    <td>string</td>\r\n    <td>Controller for the modal instance</td>\r\n    <td>true</td>\r\n  </tr>\r\n  <tr>\r\n    <td class="attribute">controllerAs</td>\r\n    <td>string</td>\r\n    <td>Alternative to controller-as syntax. Name of property controller will be instantiated into.</td>\r\n    <td>true</td>\r\n  </tr>\r\n  <tr>\r\n    <td class="attribute">keyboard</td>\r\n    <td>boolean</td>\r\n    <td>Indicates whether a dialog should close on \'Esc\'. Defaults to \'true\'.</td>\r\n    <td>true</td>\r\n  </tr>\r\n  <tr>\r\n    <td class="attribute">size</td>\r\n    <td>string</td>\r\n    <td>Will set the width of the modal. Available options are \'sm\', \'md\' or \'lg\'. Default is \'md\'.</td>\r\n    <td>true</td>\r\n  </tr>\r\n</tbody></table>\r\n</div>\r\n\r\n<p>The open method returns a modal instance with the following options:</p>\r\n\r\n<div class="demo-attributes table-responsive">\r\n<table class="table">\r\n  <tbody><tr>\r\n    <th>Name</th>\r\n    <th>Description</th>\r\n  </tr>\r\n  <tr>\r\n    <td class="attribute">close(result)</td>\r\n    <td>Closes the modal, passing the result.</td>\r\n  </tr>\r\n  <tr>\r\n    <td class="attribute">dismiss(reason)</td>\r\n    <td>Dismisses the modal, with a reason.</td>\r\n  </tr>\r\n  <tr>\r\n    <td class="attribute">result</td>\r\n    <td>A promise that is resolved when the modal is closed and rejected when it is dismissed.</td>\r\n  </tr>\r\n  <tr>\r\n    <td class="attribute">opened</td>\r\n    <td>A promise that is resolved when a modal gets opened after downloading content\'s templates and resolving all variables.</td>\r\n  </tr>\r\n</tbody></table>\r\n</div>\r\n\r\n<p>The below HTML is used in the above example to launch the modal.</p>\r\n\r\n<uxd-snippet [content]="snippets.compiled.layoutHtml" language="html"></uxd-snippet>\r\n'},function(e,t){e.exports='<uxd-modal-wrapper></uxd-modal-wrapper>\r\n\r\n<hr>\r\n\r\n<p>The title of the Modal window is contained in the <code>modal-header</code> and <code>modal-title</code> classes. \r\nA dark modal header can be provided by using the <code>modal-header-dark</code> class along with the <code>modal-header</code> class and adding the <code>modal-window-dark-header</code> \r\nclass as the value to the <code>windowClass</code> attribute of the modal.</p>\r\n\r\n<p>The content and the buttons (footer) of the modal window are contained in the <code>modal-body</code> and <code>modal-footer</code> classes respectively.</p>\r\n\r\n<p>The modal content height can be set in the <code>modal-content</code> class.</p>\r\n\r\n<p>Modal View can be initialized using a controller which internally uses the <code>$modal</code> service.</p>\r\n\r\n<p>The <code>$modal</code> service provides an open method with the following options:</p>\r\n\r\n<p><br></p>\r\n<div class="demo-attributes table-responsive">\r\n<table class="table">\r\n  <tbody><tr>\r\n    <th>Name</th>\r\n    <th>Type</th>\r\n    <th>Description</th>\r\n    <th>Optional</th>\r\n  </tr>\r\n  <tr>\r\n    <td class="attribute">animation</td>\r\n    <td>boolean</td>\r\n    <td>Set to false to disable animation on new modal/backdrop. If we don\'t specify the animation option by default animation is enabled</td>\r\n    <td>true</td>\r\n  </tr>\r\n  <tr>\r\n    <td class="attribute">template</td>\r\n    <td>string</td>\r\n    <td>Inline template representing modal content.</td>\r\n    <td>true</td>\r\n  </tr>\r\n  <tr>\r\n    <td class="attribute">templateUrl</td>\r\n    <td>string</td>\r\n    <td>Path to the modal template.</td>\r\n    <td>true</td>\r\n  </tr>\r\n  <tr>\r\n    <td class="attribute">controller</td>\r\n    <td>string</td>\r\n    <td>Controller for the modal instance</td>\r\n    <td>true</td>\r\n  </tr>\r\n  <tr>\r\n    <td class="attribute">controllerAs</td>\r\n    <td>string</td>\r\n    <td>Alternative to controller-as syntax. Name of property controller will be instantiated into.</td>\r\n    <td>true</td>\r\n  </tr>\r\n  <tr>\r\n    <td class="attribute">keyboard</td>\r\n    <td>boolean</td>\r\n    <td>Indicates whether a dialog should close on \'Esc\'. Defaults to \'true\'.</td>\r\n    <td>true</td>\r\n  </tr>\r\n  <tr>\r\n    <td class="attribute">size</td>\r\n    <td>string</td>\r\n    <td>Will set the width of the modal. Available options are \'sm\', \'md\' or \'lg\'. Default is \'md\'.</td>\r\n    <td>true</td>\r\n  </tr>\r\n</tbody></table>\r\n</div>\r\n\r\n<tabset>\r\n    <tab heading="HTML">\r\n        <uxd-snippet [content]="snippets.compiled.modalLayoutHtml" language="html"></uxd-snippet>\r\n    </tab>\r\n    <tab heading="JavaScript">\r\n        <uxd-snippet [content]="snippets.compiled.controllerJs" language="javascript"></uxd-snippet>\r\n    </tab>\r\n</tabset>\r\n\r\n<div class="demo-attributes table-responsive">\r\n<table class="table">\r\n  <tbody><tr>\r\n    <th>Name</th>\r\n    <th>Description</th>\r\n  </tr>\r\n  <tr>\r\n    <td class="attribute">close(result)</td>\r\n    <td>Closes the modal, passing the result.</td>\r\n  </tr>\r\n  <tr>\r\n    <td class="attribute">dismiss(reason)</td>\r\n    <td>Dismisses the modal, with a reason.</td>\r\n  </tr>\r\n  <tr>\r\n    <td class="attribute">result</td>\r\n    <td>A promise that is resolved when the modal is closed and rejected when it is dismissed.</td>\r\n  </tr>\r\n  <tr>\r\n    <td class="attribute">opened</td>\r\n    <td>A promise that is resolved when a modal gets opened after downloading content\'s templates and resolving all variables.</td>\r\n  </tr>\r\n</tbody></table>\r\n</div>\r\n\r\n<p>The OK and Cancel buttons in the modal view call these methods respectively.</p>\r\n\r\n<uxd-snippet [content]="snippets.compiled.modalControllerJs" language="javascript"></uxd-snippet>\r\n\r\n<p>The below HTML is used in the above example to launch the modal.</p>\r\n\r\n<uxd-snippet [content]="snippets.compiled.layoutHtml" language="html"></uxd-snippet>'},function(e,t){e.exports='<uxd-side-modal-wrapper></uxd-side-modal-wrapper>\r\n\r\n<hr>\r\n\r\n<p>The side modal view is defined by the <code>side-modal-window</code> directive. The input value of the directive is an <code>object</code>.\r\n  It is defined by the <code>vm.sideModalOptions</code> object which in turn defines the modal options in the example provided.</p>\r\n\r\n<tabset>\r\n  <tab heading="HTML">\r\n    <uxd-snippet [content]="snippets.compiled.layoutHtml" language="html"></uxd-snippet>\r\n  </tab>\r\n  <tab heading="JavaScript">\r\n    <uxd-snippet [content]="snippets.compiled.controllerJs" language="javascript"></uxd-snippet>\r\n  </tab>\r\n  <tab heading="CSS">\r\n    <uxd-snippet [content]="snippets.compiled.stylesCss" language="css"></uxd-snippet>\r\n  </tab>\r\n</tabset>\r\n\r\n<p>The following defining the modal are set in the <code>vm.sideModalOptions</code>.</p>\r\n<div class="demo-attributes table-responsive">\r\n  <table class="table m-t">\r\n    <tbody>\r\n      <tr>\r\n        <th>Name</th>\r\n        <th>Description</th>\r\n      </tr>\r\n      <tr>\r\n        <td class="attribute">title</td>\r\n        <td>Defines the Header title of the modal view.</td>\r\n      </tr>\r\n      <tr>\r\n        <td class="attribute">main</td>\r\n        <td>Provides a path to a template representing modal content.</td>\r\n      </tr>\r\n      <tr>\r\n        <td class="attribute">footer</td>\r\n        <td>Provides a path to a template representing modal footer content.</td>\r\n      </tr>\r\n      <tr>\r\n        <td class="attribute">modalColumns</td>\r\n        <td>Classes defining the number of columns as per the grid system for a responsive modal.</td>\r\n      </tr>\r\n      <tr>\r\n        <td class="attribute">affixHeader</td>\r\n        <td>Boolean, defines whether header should be latched.</td>\r\n      </tr>\r\n      <tr>\r\n        <td class="attribute">animate</td>\r\n        <td>Boolean, defines whether the modal should open and close with an animation.</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n\r\n<p>The modal can be closed or dismissed using the <code>closeModal()</code> and <code>dismissModal()</code> methods respectively.</p>\r\n\r\n<uxd-snippet [content]="snippets.compiled.modalFooterHtml" language="html"></uxd-snippet>'},function(e,t){e.exports='<uxd-square-modal-wrapper></uxd-square-modal-wrapper>\r\n\r\n<hr>\r\n\r\n<p>Square corner modal is contained in the <code>square-modal-window</code> class - additional class added to a modal window template using the controller.</p>\r\n\r\n<p>The title of the Modal window is contained in the <code>modal-header</code> and <code>modal-title</code> classes. \r\nA dark modal header can be provided by using the <code>modal-header-dark</code> class along with the <code>modal-header</code> class.</p>\r\n\r\n<p>The content and the buttons (footer) of the modal window are contained in the <code>modal-body</code> and <code>modal-footer</code> classes respectively.</p>\r\n\r\n<p>The modal content height can be set in the <code>modal-content</code> class.</p>\r\n\r\n<p>This modal has a fixed circular dismiss button which is contained in the <code>btn-close</code> class defined inside a window template with a <code>square-modal-window</code> class.</p>\r\n\r\n<p>Modal View can be initialized using a controller which internally uses the <code>$modal</code> service.</p>\r\n\r\n<p>The <code>$modal</code> service provides an <code>open</code> method with the following options:</p>\r\n<div class="demo-attributes table-responsive">\r\n<table class="table">\r\n  <tbody><tr>\r\n    <th>Name</th>\r\n    <th>Type</th>\r\n    <th>Description</th>\r\n    <th>Optional</th>\r\n  </tr>\r\n  <tr>\r\n    <td class="attribute">animation</td>\r\n    <td>boolean</td>\r\n    <td>Set to false to disable animation on new modal/backdrop. If we don\'t specify the animation option by default animation is enabled</td>\r\n    <td>true</td>\r\n  </tr>\r\n  <tr>\r\n    <td class="attribute">template</td>\r\n    <td>string</td>\r\n    <td>Inline template representing modal content.</td>\r\n    <td>true</td>\r\n  </tr>\r\n  <tr>\r\n    <td class="attribute">templateUrl</td>\r\n    <td>string</td>\r\n    <td>Path to the modal template.</td>\r\n    <td>true</td>\r\n  </tr>\r\n  <tr>\r\n    <td class="attribute">controller</td>\r\n    <td>string</td>\r\n    <td>Controller for the modal instance</td>\r\n    <td>true</td>\r\n  </tr>\r\n  <tr>\r\n    <td class="attribute">controllerAs</td>\r\n    <td>string</td>\r\n    <td>Alternative to controller-as syntax. Name of property controller will be instantiated into.</td>\r\n    <td>true</td>\r\n  </tr>\r\n  <tr>\r\n    <td class="attribute">keyboard</td>\r\n    <td>boolean</td>\r\n    <td>Indicates whether a dialog should close on \'Esc\'. Defaults to \'true\'.</td>\r\n    <td>true</td>\r\n  </tr>\r\n  <tr>\r\n    <td class="attribute">size</td>\r\n    <td>string</td>\r\n    <td>Will set the width of the modal. Available options are \'sm\', \'md\' or \'lg\'. Default is \'md\'.</td>\r\n    <td>true</td>\r\n  </tr>\r\n  <tr>\r\n    <td class="attribute">windowClass</td>\r\n    <td>string</td>\r\n    <td>Additional class added to a modal window template. For square modal, it is the <code>square-modal-window</code> class.</td>\r\n    <td>true</td>\r\n  </tr>\r\n</tbody></table>\r\n</div>\r\n\r\n<tabset>\r\n    <tab heading="HTML">\r\n        <uxd-snippet [content]="snippets.compiled.modalLayoutExampleHtml" language="html"></uxd-snippet>\r\n    </tab>\r\n    <tab heading="JavaScript">\r\n        <uxd-snippet [content]="snippets.compiled.controllerJs" language="javascript"></uxd-snippet>\r\n    </tab>\r\n</tabset>\r\n\r\n<p>The <code>open</code> method returns a modal instance with the following options:</p>\r\n<div class="demo-attributes table-responsive">\r\n<table class="table">\r\n  <tbody><tr>\r\n    <th>Name</th>\r\n    <th>Description</th>\r\n  </tr>\r\n  <tr>\r\n    <td class="attribute">close(result)</td>\r\n    <td>Closes the modal, passing the result.</td>\r\n  </tr>\r\n  <tr>\r\n    <td class="attribute">dismiss(reason)</td>\r\n    <td>Dismisses the modal, with a reason.</td>\r\n  </tr>\r\n  <tr>\r\n    <td class="attribute">result</td>\r\n    <td>A promise that is resolved when the modal is closed and rejected when it is dismissed.</td>\r\n  </tr>\r\n  <tr>\r\n    <td class="attribute">opened</td>\r\n    <td>A promise that is resolved when a modal gets opened after downloading content\'s templates and resolving all variables.</td>\r\n  </tr>\r\n</tbody></table>\r\n</div>\r\n<p>The OK and Cancel buttons in the modal view call these methods respectively.</p>\r\n\r\n<uxd-snippet [content]="snippets.compiled.modalControllerJs" language="javascript"></uxd-snippet>\r\n\r\n<p>The below HTML is used in the above example to launch the modal.</p>\r\n\r\n<uxd-snippet [content]="snippets.compiled.layoutHtml" language="html"></uxd-snippet>'},function(e,t){e.exports='<uxd-alert-styles-wrapper></uxd-alert-styles-wrapper>\r\n\r\n<hr>\r\n\r\n<p>Alerts are used to notify the result of an activity. Info alert is used to convey information and error alert shows failure. Specify the <code class="highlighter-rouge">type</code> attribute on <code class="highlighter-rouge">alert</code> element.</p>\r\n\r\n<p>The <code class="highlighter-rouge">info</code> and <code class="highlighter-rouge">error</code> types depict info and error alerts respectively.</p>\r\n\r\n<tabset>\r\n    <tab heading="HTML">\r\n        <uxd-snippet [content]="snippets.compiled.layoutHtml" language="html"></uxd-snippet>\r\n    </tab>\r\n    <tab heading="JavaScript">\r\n        <uxd-snippet [content]="snippets.compiled.controllerJs" language="javascript"></uxd-snippet>\r\n    </tab>\r\n</tabset>'},function(e,t){e.exports='<uxd-dismissable-styles-wrapper></uxd-dismissable-styles-wrapper>\r\n\r\n<hr>\r\n\r\n<p>Alerts can be made dismissible by specifying the <code class="highlighter-rouge">close</code> attribute.</p>\r\n\r\n<tabset>\r\n    <tab heading="HTML">\r\n        <uxd-snippet [content]="snippets.compiled.layoutHtml" language="html"></uxd-snippet>\r\n    </tab>\r\n    <tab heading="JavaScript">\r\n        <uxd-snippet [content]="snippets.compiled.controllerJs" language="javascript"></uxd-snippet>\r\n    </tab>\r\n</tabset>'},function(e,t){e.exports='<p>The recommended way of presenting notifications is as a dropdown menu that appears by clicking the notification button (\r\n  <span\r\n    class="hpe-icon hpe-notification"></span>) in the page header. This should display a few of the most recent notifications, with an optional link at the bottom\r\n    of the list that will launch the side modal containing a more complete history of all notifications. See below for an\r\n    example of how to use a dropdown menu to launch to the notification modal:</p>\r\n\r\n<div class="m-b-lg">\r\n  <uxd-notification-dropdown-wrapper></uxd-notification-dropdown-wrapper>\r\n</div>\r\n\r\n<tabset>\r\n  <tab heading="HTML">\r\n    <uxd-snippet [content]="snippets.compiled.dropdownExampleHtml" language="html"></uxd-snippet>\r\n  </tab>\r\n  <tab heading="JavaScript">\r\n    <uxd-snippet [content]="snippets.compiled.controllerJs" language="javascript"></uxd-snippet>\r\n  </tab>\r\n  <tab heading="CSS">\r\n    <uxd-snippet [content]="snippets.compiled.stylesCss" language="css"></uxd-snippet>\r\n  </tab>\r\n</tabset>\r\n\r\n<p>The following code was used to add the button that will display notifications:</p>\r\n\r\n<uxd-snippet [content]="snippets.compiled.buttonExampleHtml" language="html"></uxd-snippet>\r\n\r\n<blockquote>\r\n  <p>Refer to the <a routerLink="/components/modals" fragment="side-modal-ng1">Side Modal</a> page for more information on how to use the side modal.</p>\r\n</blockquote>\r\n\r\n<blockquote>\r\n  <p>Refer to the <a routerLink="/components/scrollbar">Scrollbar</a> page for more information on how to use the custom scrollbar control and implement\r\n    paging.</p>\r\n</blockquote>\r\n\r\n<blockquote>\r\n  <p>Refer to the <a routerLink="/components/utilities" fragment="time-ago-service-ng1">Time Ago Service</a> page for more information on how to use the time ago service and directive.</p>\r\n</blockquote>\r\n\r\n<blockquote>\r\n  <p>Refer to the <a routerLink="/css/page-header" fragment="standard-header">Standard Header</a> page for more information on how to create the page header.</p>\r\n</blockquote>'},function(e,t){e.exports='<uxd-notification-list-wrapper></uxd-notification-list-wrapper>\r\n\r\n<hr>\r\n\r\n<p>Notifications are often used to display information based on events that are occurring at a specific time, however to display the full history of any past notifications consider using a side modal.</p>\r\n\r\n<p>The button above was created using the following code:</p>\r\n\r\n<uxd-snippet [content]="snippets.compiled.layoutHtml" language="html"></uxd-snippet>\r\n\r\n<p>The modal options in the example are as follows:</p>\r\n\r\n<uxd-snippet [content]="snippets.compiled.modalOptionsExampleJs" language="javascript"></uxd-snippet>\r\n\r\n<p>The content of the side modal is simply a list of notifications that uses a custom scrollbar and has paging. The notifications in this list are randomly generated. For use in production notifications should be loaded from a data store.</p>\r\n\r\n<tabset>\r\n    <tab heading="HTML">\r\n        <uxd-snippet [content]="snippets.compiled.modalLayoutHtml" language="html"></uxd-snippet>\r\n    </tab>\r\n    <tab heading="JavaScript">\r\n        <uxd-snippet [content]="snippets.compiled.modalControllerJs" language="javascript"></uxd-snippet>\r\n    </tab>\r\n    <tab heading="CSS">\r\n        <uxd-snippet [content]="snippets.compiled.stylesCss" language="css"></uxd-snippet>\r\n    </tab>\r\n    <tab heading="Notification Template">\r\n        <uxd-snippet [content]="snippets.compiled.notificationHtml" language="html"></uxd-snippet>\r\n    </tab>\r\n</tabset>'},function(e,t){e.exports='<uxd-notifications-wrapper></uxd-notifications-wrapper>\r\n\r\n<hr>\r\n\r\n<p>Notifications can be used to inform the user of occurring events or to alert the user of something that may require their\r\n  attention. Notifications will appear in the top right corner of the browser window and can be dismissed by the user by\r\n  clicking the close button.</p>\r\n\r\n<p>Notifications are controlled by the <code class="highlighter-rouge">notificationService</code> which can be injected into\r\n  any controller in the application.</p>\r\n\r\n<p>The <code class="highlighter-rouge">notificationService</code> has several functions available to control notifications.</p>\r\n<div class="demo-attributes table-responsive">\r\n  <table class="table">\r\n    <tbody>\r\n      <tr>\r\n        <th>Property</th>\r\n        <th>Description</th>\r\n      </tr>\r\n      <tr>\r\n        <td class="attribute">showNotification</td>\r\n        <td>This function should be called to show a notification. It should be given an object containing properties to configure\r\n          the appearance and content of the notification. It will return the notification element (if notifications are visible\r\n          - see <code>setNotificationVisibility</code>), this can be used to dismiss this individual notification at a later\r\n          point.\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <td class="attribute">dismissNotification</td>\r\n        <td>This function can be called to dismiss a notification. It should be passed the notification element to dismiss.</td>\r\n      </tr>\r\n      <tr>\r\n        <td class="attribute">dismissAllNotifications</td>\r\n        <td>This function will dismiss any currently visible notifications.</td>\r\n      </tr>\r\n      <tr>\r\n        <td class="attribute">getNotifications</td>\r\n        <td>this function will return an array of all notifications shown since the browser was last refreshed. The objects in\r\n          the array returned will contain the properties passed to the <code>showNotification</code> function along with\r\n          an additional <code>date</code> property which will contain the time at which the notification was shown. If a\r\n          more permanent history of notifications is required consider using local storage or a database.</td>\r\n      </tr>\r\n      <tr>\r\n        <td class="attribute">setNotificationVisibility</td>\r\n        <td>This function will determine whether notifications should be visibly displayed on screen when the <code>showNotification</code> function is called. If the <code>showNotification</code> function is called and the visibility is set to false,\r\n          no notification will show, however a record of it will still be kept and can be accessed using the <code>getNotifications</code> function. This function expects a boolean value as an argument, a value of <code>true</code> will display notifications\r\n          and a value of <code>false</code> will hide them. The default value is <code>true</code>.</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n<p>The following options can be used to configure the appearance and content of the notification:</p>\r\n<div class="demo-attributes table-responsive">\r\n  <table class="table m-t">\r\n    <tbody>\r\n      <tr>\r\n        <th>Name</th>\r\n        <th>Type</th>\r\n        <th>Description</th>\r\n      </tr>\r\n      <tr>\r\n        <td class="attribute">icon</td>\r\n        <td>string</td>\r\n        <td>Sets the icon from the icon set to display within the notification.</td>\r\n      </tr>\r\n      <tr>\r\n        <td class="attribute">title</td>\r\n        <td>string</td>\r\n        <td>Sets the title displayed at the top of the notification.</td>\r\n      </tr>\r\n      <tr>\r\n        <td class="attribute">text</td>\r\n        <td>string</td>\r\n        <td>Sets the text displayed within the notification.</td>\r\n      </tr>\r\n      <tr>\r\n        <td class="attribute">subtitle</td>\r\n        <td>string</td>\r\n        <td>Sets the text displayed beneath the main notification text. This is useful for adding a timestamp to the notification.</td>\r\n      </tr>\r\n      <tr>\r\n        <td class="attribute">duration</td>\r\n        <td>number</td>\r\n        <td>Sets the duration (in milliseconds) the notification should appear before automatically dismissing. A value of <code>0</code> will show the notification until manually dismissed.</td>\r\n      </tr>\r\n      <tr>\r\n        <td class="attribute">backgroundColor</td>\r\n        <td>string</td>\r\n        <td>Sets the background color of the notification.</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n<p>The HTML tab provides sample code to call the functions within the controller, while the Javascript tab provides an example\r\n  of how the <code>notificationService</code> can be used to show or dismiss notifications.</p>\r\n\r\n<tabset>\r\n  <tab heading="HTML">\r\n    <uxd-snippet [content]="snippets.compiled.layoutExampleHtml" language="html"></uxd-snippet>\r\n  </tab>\r\n  <tab heading="JavaScript">\r\n    <uxd-snippet [content]="snippets.compiled.controllerExampleJs" language="javascript"></uxd-snippet>\r\n  </tab>\r\n  <tab heading="CSS">\r\n    <uxd-snippet [content]="snippets.compiled.stylesCss" language="css"></uxd-snippet>\r\n  </tab>\r\n</tabset>'},function(e,t){e.exports='<uxd-collapsible-panels-wrapper></uxd-collapsible-panels-wrapper>\r\n\r\n<hr>\r\n\r\n<p>To get collapsible panels create an <code>accordion</code> tag. This contains the attribute <code>close-others</code>, which if set to <code>true</code> will close other panels, and if set to <code>false </code> will close only individual panels.</p>\r\n\r\n<p>Add the required number of panels underneath by adding <code>accordion-group</code> elements. These have attribute <code>heading</code> to provide the heading for that panel. An <code>accordion-group</code> element can also have an <code>is-open</code> attribute, which if set to <code>true</code> will keep the panel open initially. The <code>accordion-group </code> can have the panel-body content within the tags.</p>\r\n\r\n<tabset>\r\n    <tab heading="HTML">\r\n        <uxd-snippet [content]="snippets.compiled.layoutHtml" language="html"></uxd-snippet>\r\n    </tab>\r\n    <tab heading="JavaScript">\r\n        <uxd-snippet [content]="snippets.compiled.controllerJs" language="javascript"></uxd-snippet>\r\n    </tab>\r\n</tabset>'},function(e,t){e.exports='<uxd-item-display-panel-wrapper></uxd-item-display-panel-wrapper>\r\n\r\n<hr>\r\n\r\n<p>Each item that opens the item display panel is contained in the <code>display-panel-item</code> directive.</p>\r\n\r\n<p>The <code>shadow</code> property is optional and can be added to the <code>display-panel-item</code> to display a curved shadow under the header.</p>\r\n\r\n<p>The <code>auto-index</code> attribute is used to enable keyboard controls - full documentation can be found on the <a routerLink="/components/tables" fragment="indices-ng1">Table Indices</a> page.</p>\r\n\r\n<p>The input value of the directive is an <code>object</code>. It is defined by the <code>panel</code> property of each <code>item</code> object in <code>vm.items</code> which in turn defines the item display panel.</p>\r\n\r\n<p>The following defining the modal are set in the <code>panel</code> property of each <code>item</code>.</p>\r\n<div class="demo-attributes table-responsive">\r\n<table class="table">\r\n    <tbody><tr>\r\n        <th>Property</th>\r\n        <th>Description</th>\r\n    </tr>\r\n    <tr>\r\n        <td class="attribute">title</td>\r\n        <td>Defines the Header title of the item display panel.</td>\r\n    </tr>\r\n    <tr>\r\n        <td class="attribute">main</td>\r\n        <td>Provides a path to a template representing item display panel content.</td>\r\n    </tr>\r\n    <tr>\r\n        <td class="attribute">footer</td>\r\n        <td>Provides a path to a template representing item display panel footer content.</td>\r\n    </tr>\r\n    <tr>\r\n        <td class="attribute">modalColumns</td>\r\n        <td>Classes defining the number of columns as per the grid system for a responsive item display panel or a class with a preset width.</td>\r\n    </tr>\r\n    <tr>\r\n        <td class="attribute">top</td>\r\n        <td>Number, defines the initial top position of the modal with respect to standard header, condensed header or toolbar.</td>\r\n    </tr>\r\n    <tr>\r\n        <td class="attribute">reference</td>\r\n        <td>Element id or class, item display panel is displayed in reference to this element after scroll.</td>\r\n    </tr>\r\n    <tr>\r\n        <td class="attribute">scope</td>\r\n        <td>A scope instance to be used for the modal\'s main content.</td>\r\n    </tr>\r\n    <tr>\r\n        <td class="attribute">animate</td>\r\n        <td>(Optional) A boolean value to set the panel to animate in and out of the screen.</td>\r\n    </tr>\r\n</tbody></table>\r\n</div>\r\n\r\n<tabset>\r\n    <tab heading="HTML">\r\n        <uxd-snippet [content]="snippets.compiled.layoutHtml" language="html"></uxd-snippet>\r\n    </tab>\r\n    <tab heading="JavaScript">\r\n        <uxd-snippet [content]="snippets.compiled.controllerExampleJs" language="javascript"></uxd-snippet>\r\n    </tab>\r\n</tabset>\r\n\r\n<p>The next and previous buttons can be added to the panel footer to navigate between the items. The <code>ng-click</code> attribute of the previous button should be set as the <code>previous()</code> function and the <code>ng-click</code> attribute of the next button should be set as the <code>next()</code> function. The previous and next buttons will be disabled accordingly if the <code>ng-disabled</code> attribute is set to <code>previousBtnStatus</code> and <code>nextBtnStatus</code> respectively.</p>\r\n\r\n<p>The sample HTML for previous and next buttons in the modal footer is shown below:</p>\r\n\r\n<uxd-snippet [content]="snippets.compiled.modalFooterHtml" language="html"></uxd-snippet>'},function(e,t){e.exports='<p>\r\n    The Item Display Panel Service may be used to show and hide the <a routerLink="/components/panels" fragment="item-display-panel-ng1">Item Display Panel</a>\r\n    without using the directive. This is useful when more programmatic control over the display panel is required.</p>\r\n\r\n<p>An example of this service is shown in the <a routerLink="/components/tree-view" fragment="tree-grid-ng1">Tree Grid</a> documentation.</p>\r\n\r\n<p>To use the service, inject <code>$displayPanel</code> into the controller. This provides the following\r\n    functions:\r\n</p>\r\n\r\n<div class="demo-attributes table-responsive">\r\n    <table class="table m-t">\r\n        <tbody>\r\n            <tr>\r\n                <th>Name</th>\r\n                <th>Description</th>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">open</td>\r\n                <td>\r\n                    <p>Opens the display panel with the specified options, or updates the contents if it is already open. It\r\n                        takes the following arguments:</p>\r\n                    <ul>\r\n                        <li><code>element</code> - the HTML element which is being displayed, e.g. <code>tr</code> element in\r\n                            a table.</li>\r\n                        <li><code>itemDisplayPanelOptions</code> - the options for the display panel, as documented in the\r\n                            <a routerLink="/components/panels" fragment="item-display-panel-ng1">Item Display Panel</a> section.</li>\r\n                        <li><code>shadow</code> - a boolean argument determining whether a shadow effect appears underneath the\r\n                            title header of the display panel.</li>\r\n                        <li><code>previous</code> - a boolean argument indicating whether there is a previous item to switch\r\n                            to; useful if navigation buttons are used within the display panel.</li>\r\n                        <li><code>next</code> - a boolean argument indicating whether there is a next item to switch to; useful\r\n                            if navigation buttons are used within the display panel.</li>\r\n                    </ul>\r\n                </td>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">close</td>\r\n                <td>\r\n                    <p>Closes the display panel if it is open. It takes the following argument:</p>\r\n                    <ul>\r\n                        <li><code>itemDisplayPanelOptions</code> - the options for the display panel, as documented in the\r\n                            <a routerLink="/components/panels" fragment="item-display-panel-ng1">Item Display Panel</a> section.</li>\r\n                    </ul>\r\n                </td>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">panelOpen</td>\r\n                <td>Returns true if the panel is open.</td>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">panelHidden</td>\r\n                <td>Returns true if the panel is hidden. If the <code>animate</code> setting is used then the panel will be hidden\r\n                    instead of closed.</td>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">getCurrentPanel</td>\r\n                <td>Returns the <code>element</code> with which the <code>open</code> function was called.</td>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">movePrev</td>\r\n                <td>\r\n                    <p>Puts the browser focus on the previous sibling of the <code>element</code> which was passed to the <code>open</code>\r\n                        function, if there is one. Note that this function will not directly update the display panel contents.\r\n                        It takes one optional argument:</p>\r\n                    <ul>\r\n                        <li><code>selector</code> - a jQuery selector expression to match elements against.</li>\r\n                    </ul>\r\n                </td>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">moveNext</td>\r\n                <td>\r\n                    <p>Puts the browser focus on the next sibling of the <code>element</code> which was passed to the <code>open</code>\r\n                        function, if there is one. Note that this function will not directly update the display panel contents.\r\n                        It takes one optional argument:</p>\r\n                    <ul>\r\n                        <li><code>selector</code> - a jQuery selector expression to match elements against.</li>\r\n                    </ul>\r\n                </td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n</div>'},function(e,t){e.exports='<uxd-modal-inset-panel-wrapper></uxd-modal-inset-panel-wrapper>\r\n\r\n<hr>\r\n\r\n<p>The modal inset panel provides the functionality to have additional information appear in an animated slide out panel within\r\n  a modal. This can be used to display more detailed information or to contain controls for obtaining information.</p>\r\n\r\n<p>The <code>modal-inset-panel</code> directive should be placed at the top of the appropriate modal body element. In the example\r\n  below it is placed in the <code>div.modal-body</code> however this may differ slightly depending on the type of modal being\r\n  used.</p>\r\n\r\n<p>The following attributes can be specified to configure the behavior of the <code>modal-inset-panel</code>.</p>\r\n<div class="demo-attributes table-responsive">\r\n  <table class="table m-t">\r\n    <tbody>\r\n      <tr>\r\n        <th>Name</th>\r\n        <th>Type</th>\r\n        <th>Binding</th>\r\n        <th>Description</th>\r\n        <th>Optional</th>\r\n      </tr>\r\n      <tr>\r\n        <td class="attribute">show-panel</td>\r\n        <td>boolean</td>\r\n        <td>variable</td>\r\n        <td>This value should be changed to show or hide the panel.</td>\r\n        <td>false</td>\r\n      </tr>\r\n      <tr>\r\n        <td class="attribute">panel-side</td>\r\n        <td>string</td>\r\n        <td>variable</td>\r\n        <td>Sets which side of the modal the panel should appear on. The available options are <code>right</code> or <code>left</code>.</td>\r\n        <td>false</td>\r\n      </tr>\r\n      <tr>\r\n        <td class="attribute">panel-width</td>\r\n        <td>number</td>\r\n        <td>variable</td>\r\n        <td>Sets the desired width of the panel in pixels.</td>\r\n        <td>false</td>\r\n      </tr>\r\n      <tr>\r\n        <td class="attribute">on-dismiss</td>\r\n        <td>variable</td>\r\n        <td>literal</td>\r\n        <td>If specified, this will be called when the panel has been dismissed.</td>\r\n        <td>true</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n\r\n<h4>Modal Inset Panel Contents</h4>\r\n\r\n<p>To specify the contents of the inset panel use the <code>modal-inset-header</code> and <code>modal-inset-content</code> directives.\r\n  These should be added inside the <code>modal-inset-panel</code> directive.</p>\r\n\r\n<p>The <code>modal-inset-header</code> directive will add a header to the panel that contains a close button to dismiss the\r\n  modal inset panel. Add any elements inside the directive that you wish to display in the header such as a title or an icon.\r\n  The header behavior can be configured using the following attribute:</p>\r\n<div class="demo-attributes table-responsive">\r\n  <table class="table m-t">\r\n    <tbody>\r\n      <tr>\r\n        <th>Name</th>\r\n        <th>Type</th>\r\n        <th>Binding</th>\r\n        <th>Description</th>\r\n        <th>Optional</th>\r\n      </tr>\r\n      <tr>\r\n        <td class="attribute">allow-dismiss</td>\r\n        <td>boolean</td>\r\n        <td>literal</td>\r\n        <td>If set to false the close button will be hidden and the visibility of the panel must be handled manually. The default\r\n          value is <code>true</code>.</td>\r\n        <td>true</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n<p>The <code>modal-inset-content</code> directive should act as a container for the main content of the panel. The height of\r\n  the panel will always fill the modal body, however if the content may be larger than the available space consider adding\r\n  a scrollbar. The content of the panel can be set by adding child elements or by specifying a template using the following\r\n  attribute:</p>\r\n<div class="demo-attributes table-responsive">\r\n  <table class="table m-t">\r\n    <tbody>\r\n      <tr>\r\n        <th>Name</th>\r\n        <th>Type</th>\r\n        <th>Binding</th>\r\n        <th>Description</th>\r\n        <th>Optional</th>\r\n      </tr>\r\n      <tr>\r\n        <td class="attribute">panel-template</td>\r\n        <td>string</td>\r\n        <td>literal</td>\r\n        <td>If specified will load the template file and add the contents of the template to the panel.</td>\r\n        <td>true</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n\r\n<tabset>\r\n  <tab heading="HTML">\r\n    <uxd-snippet [content]="snippets.compiled.modalLayoutHtml" language="html"></uxd-snippet>\r\n  </tab>\r\n  <tab heading="JavaScript">\r\n    <uxd-snippet [content]="snippets.compiled.modalControllerJs" language="javascript"></uxd-snippet>\r\n  </tab>\r\n  <tab heading="CSS">\r\n    <uxd-snippet [content]="snippets.compiled.stylesCss" language="css"></uxd-snippet>\r\n  </tab>\r\n</tabset>\r\n\r\n<blockquote>\r\n  <p>Refer to the <a routerLink="/components/search" fragment="search-builder-ng1">Search Builder</a> page for an additional example of the Modal Inset Panel.</p>\r\n</blockquote>'},function(e,t){e.exports='<p>\r\n    The Side Inset layout is a page pattern which provides an animated side panel for presenting additional information. The\r\n    side panel is hidden or shown using the toggle button. The side panel is inset in the page and not overlaid, so the width\r\n    of the main content area will be reduced to make space for the side panel.</p>\r\n\r\n<p>To use the Side Inset layout, structure your page as follows:</p>\r\n\r\n<ul>\r\n    <li>A wrapper <code>div</code> following the page heading, with the <code>side-inset</code> attribute directive set.\r\n        <ul>\r\n            <li>A <code>div</code> containing the main page content, which needs to have the <code>main-content</code> class.</li>\r\n            <li>A <code>div</code> containing the side panel, which needs to have the <code>side-inset</code> class.</li>\r\n        </ul>\r\n    </li>\r\n</ul>\r\n\r\n<p>The order of the child elements will determine the position of the side panel - if the <code>side-inset</code> div is declared\r\n    in the HTML before the <code>main-content</code>, then the side panel will display on the <em>left</em> of the screen.\r\n    To place the side panel on the <em>right</em> of the screen, declare it after the <code>main-content</code> in the HTML.</p>\r\n\r\n<p>On the wrapper element where the <code>side-inset</code> directive is declared, the following additional properties can be\r\n    configured:\r\n</p>\r\n<div class="demo-attributes table-responsive">\r\n    <table class="table m-t">\r\n        <tbody>\r\n            <tr>\r\n                <th>Name</th>\r\n                <th>Type</th>\r\n                <th>Binding</th>\r\n                <th>Description</th>\r\n                <th>Optional</th>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">side-inset-width</td>\r\n                <td>number</td>\r\n                <td>literal</td>\r\n                <td>A value between 0 and 100, this is the percentage width of the parent element the expanded side inset panel\r\n                    will occupy (Default: 20).</td>\r\n                <td>true</td>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">side-inset-button-top</td>\r\n                <td>string</td>\r\n                <td>literal</td>\r\n                <td>A string that will be set as the <code>top</code> CSS position property of the toggle button, allowing its\r\n                    vertical placement to be configured (Default: \'0px\').</td>\r\n                <td>true</td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n</div>\r\n<p>The CodePen example uses the following example code and styles.</p>\r\n\r\n<tabset>\r\n    <tab heading="HTML">\r\n        <uxd-snippet [content]="snippets.compiled.layoutExampleHtml" language="html"></uxd-snippet>\r\n    </tab>\r\n    <tab heading="CSS">\r\n        <uxd-snippet [content]="snippets.compiled.stylesCss" language="css"></uxd-snippet>\r\n    </tab>\r\n    <tab heading="Side Panel HTML">\r\n        <uxd-snippet [content]="snippets.compiled.panelExampleHtml" language="html"></uxd-snippet>\r\n    </tab>\r\n</tabset>\r\n\r\n<p>The side panel contents can contain any content. The developer is responsible for the styling of the content of this panel.</p>'},function(e,t){e.exports='<p>The Popover directive can be used to show extra content when required. This content can be a string of text or your own custom\r\n  template and it supports multiple placements.</p>\r\n\r\n<p>In our CodePen example we have created a popover which appears when hovering the email addresses. This popover shows more detail\r\n  about the sender and recipients and contains a nested popover which the user can view by clicking the <code><span class="hpe-icon hpe-more hpe-rotate-90"></span></code>\r\n  button.</p>\r\n\r\n<p>There are 2 versions of the popover which you can implement:</p>\r\n\r\n<ul>\r\n  <li><code>popover</code> - takes a string of text only and will escape any HTML provided.</li>\r\n  <li><code>popover-template</code> - takes a string variable which specifies the location of a template to be used for the popover\r\n    body.</li>\r\n</ul>\r\n\r\n<p>The Popover directive also provides some optional attributes to configure how it will be displayed:</p>\r\n\r\n<div class="demo-attributes table-responsive">\r\n  <table class="table m-t">\r\n    <tbody>\r\n      <tr>\r\n        <th>Name</th>\r\n        <th>Type</th>\r\n        <th>Binding</th>\r\n        <th>Description</th>\r\n        <th>Optional</th>\r\n      </tr>\r\n      <tr>\r\n        <td class="attribute">popover-title</td>\r\n        <td>string</td>\r\n        <td>literal</td>\r\n        <td>A string to display as the popover title.</td>\r\n        <td>true</td>\r\n      </tr>\r\n      <tr>\r\n        <td class="attribute">popover-placement</td>\r\n        <td>string</td>\r\n        <td>literal</td>\r\n        <td>Describes where the popover should be placed. Available options are <code>top</code>, <code>bottom</code>, <code>left</code>\r\n          and <code>right</code>. Defaults to <code>top</code>.</td>\r\n        <td>true</td>\r\n      </tr>\r\n      <tr>\r\n        <td class="attribute">popover-animation</td>\r\n        <td>boolean</td>\r\n        <td>literal</td>\r\n        <td>Describes whether the popover should fade in/out. Defaults to <code>true</code>.</td>\r\n        <td>true</td>\r\n      </tr>\r\n      <tr>\r\n        <td class="attribute">popover-popup-delay</td>\r\n        <td>number</td>\r\n        <td>literal</td>\r\n        <td>Describes how long the delay (in milliseconds) should be before the popover appears. Defaults to <code>0</code>.</td>\r\n        <td>true</td>\r\n      </tr>\r\n      <tr>\r\n        <td class="attribute">popover-trigger</td>\r\n        <td>string</td>\r\n        <td>literal</td>\r\n        <td>Describes the event which will trigger the popover to appear. The options are:\r\n          <ul>\r\n            <li><code>mouseenter</code> - popover will display while the element is hovered.</li>\r\n            <li><code>click</code> - popover will display when the element is clicked and will hide when the element is clicked\r\n              again.</li>\r\n            <li><code>focus</code> - popover will display when the element is focused and will hide when the element is blurred.</li>\r\n            <li><code>outsideClick</code> - same as <code>click</code> only clicking anywhere outside of the directive element\r\n              or popover will hide the popover.</li>\r\n            <li><code>insideHover</code> - same as<code>mouseenter</code> only the popover will not disappear while the directive\r\n              element or popover are hovered.</li>\r\n          </ul>\r\n        </td>\r\n        <td>true</td>\r\n      </tr>\r\n      <tr>\r\n        <td class="attribute">popover-inside-delay</td>\r\n        <td>number</td>\r\n        <td>literal</td>\r\n        <td>Describes how long the delay should be before the popover disappears while the popover or directive element are not\r\n          hovered. Only required when <code>popover-trigger="insideHover"</code> is used. Defaults to <code>500</code> milliseconds.</td>\r\n        <td>true</td>\r\n      </tr>\r\n      <tr>\r\n        <td class="attribute">popover-append-to-body</td>\r\n        <td>boolean</td>\r\n        <td>literal</td>\r\n        <td>Describes whether the popover should be appended to the body instead of the parent element. Defaults to <code>true</code>.</td>\r\n        <td>true</td>\r\n      </tr>\r\n      <tr>\r\n        <td class="attribute">popover-class</td>\r\n        <td>string</td>\r\n        <td>literal</td>\r\n        <td>Custom class to be applied to the popover.</td>\r\n        <td>true</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n\r\n<blockquote>\r\n  <p><strong>Note</strong>: If you wish to implement a nested popover inside a popover which has set <code>popover-trigger="insideHover"</code>\r\n    then you must ensure the nested popover has set <code>popover-append-to-body="false"</code> otherwise both popovers will\r\n    disappear when hovering the nested popover.</p>\r\n</blockquote>\r\n\r\n<p>You can see the code used in our example by selecting the appropriate tabs below:</p>\r\n\r\n<tabset>\r\n  <tab heading="HTML">\r\n    <uxd-snippet [content]="snippets.compiled.layoutHtml" language="html"></uxd-snippet>\r\n  </tab>\r\n  <tab heading="Popover HTML">\r\n    <uxd-snippet [content]="snippets.compiled.popoverLayoutHtml" language="html"></uxd-snippet>\r\n  </tab>\r\n  <tab heading="Nested Popover HTML">\r\n    <uxd-snippet [content]="snippets.compiled.nestedPopoverLayoutHtml" language="html"></uxd-snippet>\r\n  </tab>\r\n  <tab heading="JavaScript">\r\n    <uxd-snippet [content]="snippets.compiled.controllerJs" language="javascript"></uxd-snippet>\r\n  </tab>\r\n  <tab heading="CSS">\r\n    <uxd-snippet [content]="snippets.compiled.stylesCss" language="css"></uxd-snippet>\r\n  </tab>\r\n</tabset>'},function(e,t){e.exports='<uxd-progress-bar-wrapper></uxd-progress-bar-wrapper>\r\n\r\n<hr>\r\n\r\n<p>Create a <code>progressbar</code> element and set the value attribute to the value property. Set <code>type="accent"</code>\r\n  and the max attribute to the maximum allowed value. Inside the <code>progressbar</code> element you can specify a <code>span</code>\r\n  which can be used to display the current value.</p>\r\n\r\n<tabset>\r\n  <tab heading="HTML">\r\n    <uxd-snippet [content]="snippets.compiled.layoutHtml" language="html"></uxd-snippet>\r\n  </tab>\r\n  <tab heading="JavaScript">\r\n    <uxd-snippet [content]="snippets.compiled.controllerJs" language="javascript"></uxd-snippet>\r\n  </tab>\r\n</tabset>'},function(e,t){e.exports='<uxd-custom-scrollbar-wrapper></uxd-custom-scrollbar-wrapper>\r\n\r\n<hr>\r\n\r\n<p>Custom scrollbar implements vertical scrollbar and does not support horizontal scrollbar.</p>\r\n\r\n<p>Custom scrollbar can be used on elements with a relevant overflow property. The scrollbar can be added to an element by providing\r\n  the <code>scroll-pane</code> attribute. The element should have an <code>id</code> or an attribute <code>scroll-name</code>\r\n  which is assigned an id for the scrollbar to work. The options for scrollbar should be passed to the <code>scroll-config</code>\r\n  attribute. Some of the options are:</p>\r\n<div class="demo-attributes table-responsive">\r\n  <table class="table m-t">\r\n    <tbody>\r\n      <tr>\r\n        <th>Name</th>\r\n        <th>Type</th>\r\n        <th>Description</th>\r\n      </tr>\r\n      <tr>\r\n        <td class="attribute">showOnlyOnHover</td>\r\n        <td>boolean</td>\r\n        <td>The scrollbar will be displayed only on hover when this option is set to <code>true</code>.</td>\r\n      </tr>\r\n      <tr>\r\n        <td class="attribute">resizeSensor</td>\r\n        <td>boolean</td>\r\n        <td>The scrollbar will be re-initialised automatically when the content changes size or the viewport size changes. Use\r\n          <code>resizeSensorDelay</code> property to add a delay before reinitialising.</td>\r\n      </tr>\r\n      <tr>\r\n        <td class="attribute">autoReinitialise</td>\r\n        <td>boolean</td>\r\n        <td>An alternative to the resizeSensor property. This is a less performant option and uses polling to check for size\r\n          changes, however in certain circumstances due to positioning of elements resizeSensor may not be suitable. The\r\n          scrollbar will be re-initialised automatically when there is a change in size of the viewport.</td>\r\n      </tr>\r\n      <tr>\r\n        <td class="attribute">enableKeyboardNavigation</td>\r\n        <td>boolean</td>\r\n        <td>The content will scroll using keyboard controls when it is given focus.</td>\r\n      </tr>\r\n      <tr>\r\n        <td class="attribute">isScrollableH</td>\r\n        <td>boolean</td>\r\n        <td>Disables the horizontal scrollbar when this option is set to <code>false</code>.</td>\r\n      </tr>\r\n      <tr>\r\n        <td class="attribute">scrollMargin</td>\r\n        <td>number</td>\r\n        <td>Margin in pixels to add around the scrollable area. The recommended margin as seen in the example above is 5. Default is 0.</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n<p>Example code for custom scrollbar is shown below:</p>\r\n\r\n<tabset>\r\n  <tab heading="HTML">\r\n    <uxd-snippet [content]="snippets.compiled.layoutExampleHtml" language="html"></uxd-snippet>\r\n  </tab>\r\n  <tab heading="JavaScript">\r\n    <uxd-snippet [content]="snippets.compiled.controllerJs" language="javascript"></uxd-snippet>\r\n  </tab>\r\n  <tab heading="CSS">\r\n    <uxd-snippet [content]="snippets.compiled.stylesCss" language="css"></uxd-snippet>\r\n  </tab>\r\n</tabset>\r\n\r\n<blockquote>\r\n  <p>Refer to <a href="http://jscrollpane.kelvinluck.com/">jScrollPane</a> and <a href="https://github.com/lght/angular-scroll-pane">angular-scroll-pane</a>\r\n    for more information.</p>\r\n</blockquote>'},function(e,t){e.exports='<uxd-infinite-scroll-load-more-wrapper></uxd-infinite-scroll-load-more-wrapper>\r\n\r\n<hr>\r\n\r\n<p>The above example shows how the infinite scroll list will be displayed if a <code>load-more-button</code> is added.</p>\r\n\r\n<p>The following code was used to create the above example:</p>\r\n\r\n<tabset>\r\n  <tab heading="HTML">\r\n    <uxd-snippet [content]="snippets.compiled.layoutHtml" language="html"></uxd-snippet>\r\n  </tab>\r\n  <tab heading="JavaScript">\r\n    <uxd-snippet [content]="snippets.compiled.controllerJs" language="javascript"></uxd-snippet>\r\n  </tab>\r\n  <tab heading="CSS">\r\n    <uxd-snippet [content]="snippets.compiled.stylesCss" language="css"></uxd-snippet>\r\n  </tab>\r\n  <tab heading="Item Template HTML">\r\n    <uxd-snippet [content]="snippets.compiled.itemTemplateHtml" language="html"></uxd-snippet>\r\n  </tab>\r\n</tabset>'},function(e,t){e.exports='<uxd-infinite-scroll-wrapper></uxd-infinite-scroll-wrapper>\r\n\r\n<hr>\r\n\r\n<p>When displaying long lists of data it is often preferable to add paging to the list. By using paging data is loaded in small\r\n  blocks improving load times and reducing the workload on the server providing the data.</p>\r\n\r\n<p>To implement paging functionality add the <code>infinite-scroll</code> directive as an attribute to the element that has\r\n  the scrollbar. This will also work on elements using the <em>custom scrollbar</em>.</p>\r\n\r\n<p>There are several other attributes that can be added to configure the behavior:</p>\r\n<div class="demo-attributes table-responsive">\r\n  <table class="table m-t">\r\n    <tbody>\r\n      <tr>\r\n        <th>Name</th>\r\n        <th>Type</th>\r\n        <th>Binding</th>\r\n        <th>Description</th>\r\n        <th>Optional</th>\r\n      </tr>\r\n      <tr>\r\n        <td class="attribute">page-size</td>\r\n        <td>number</td>\r\n        <td>variable</td>\r\n        <td>This should inform the directive of the number of items each page will contain. If a page contains less than the\r\n          specified number of items then it will be assumed that it is the last page and no more should be loaded.</td>\r\n        <td>false</td>\r\n      </tr>\r\n      <tr>\r\n        <td class="attribute">page-fn</td>\r\n        <td>boolean</td>\r\n        <td>variable</td>\r\n        <td>This function will be called when a page of data is required. The function will be called with three arguments, the\r\n          first will be the number representing which page to load, the second will be the number of items expected to be\r\n          in each page and the third will be the search query if one was specified. This function should either return an\r\n          array containing the data for the associated page, or a <code>$q.defer().promise</code> if data is not immediately\r\n          available.</td>\r\n        <td>false</td>\r\n      </tr>\r\n      <tr>\r\n        <td class="attribute">page-position</td>\r\n        <td>number</td>\r\n        <td>variable</td>\r\n        <td>Represents the point at which the next page should be loaded. This number is a represents a percentage so the value\r\n          should be between 1 - 100. The default behavior will attempt to load the next page when the scroll handle reaches\r\n          85% of the way down the track.</td>\r\n        <td>true</td>\r\n      </tr>\r\n      <tr>\r\n        <td class="attribute">item-template</td>\r\n        <td>string</td>\r\n        <td>variable</td>\r\n        <td>The url of the template for each item in the list. Each item in the list will have the same template, when an item\r\n          is added to the list it is created with a scope containing a <code>data</code> property that holds the data associated\r\n          with that item.</td>\r\n        <td>false</td>\r\n      </tr>\r\n      <tr>\r\n        <td class="attribute">container-id</td>\r\n        <td>string</td>\r\n        <td>variable</td>\r\n        <td>If the list items should be added to a different element than the one this directive is added to, this should be\r\n          used to identify the element. This should be used with the <code>infinite-scroll-container</code> directive, see\r\n          example code for more information. This is particularly useful when using a infinite scrolling with custom scrollbars.</td>\r\n        <td>true</td>\r\n      </tr>\r\n      <tr>\r\n        <td class="attribute">show-loading</td>\r\n        <td>boolean</td>\r\n        <td>variable</td>\r\n        <td>This specifies whether or not a loading indicator should be shown when a page is loading. Default value is true.</td>\r\n        <td>true</td>\r\n      </tr>\r\n      <tr>\r\n        <td class="attribute">search-query</td>\r\n        <td>string</td>\r\n        <td>variable</td>\r\n        <td>If specified when this query changes, the list will be cleared and the page function will be called to return results\r\n          relevant to the search query.</td>\r\n        <td>true</td>\r\n      </tr>\r\n      <tr>\r\n        <td class="attribute">window-scroll</td>\r\n        <td>boolean</td>\r\n        <td>variable</td>\r\n        <td>If set to true the <code>page-fn</code> will be called when the browser window is scrolled to the <code>page-position</code>\r\n          rather than binding to the scroll event of the element the directive is on.</td>\r\n        <td>true</td>\r\n      </tr>\r\n      <tr>\r\n        <td class="attribute">load-more-button</td>\r\n        <td>object</td>\r\n        <td>variable</td>\r\n        <td>If specified this can be used to enable and configure a button to appear at the bottom of the list. Clicking this\r\n          button will load the next page of items rather than scrolling near the bottom. The following options can be used\r\n          to configure the button:\r\n          <ul>\r\n            <li><code>show</code> - boolean (optional), if set to true a button will be added to the bottom of the list and will\r\n              be used to load the next page (default: false).</li>\r\n            <li><code>text</code> - string (optional), if set this will change the text displayed in the button (default: \'Load\r\n              More\').</li>\r\n            <li><code>class</code> - string (optional), if set this will allow additional CSS classes to be added to the button\r\n              which can be used to change the buttons appearance (default: none).</li>\r\n          </ul>\r\n        </td>\r\n        <td>true</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n<p>The following code was used to create the example above:</p>\r\n\r\n<tabset>\r\n  <tab heading="HTML">\r\n    <uxd-snippet [content]="snippets.compiled.layoutHtml" language="html"></uxd-snippet>\r\n  </tab>\r\n  <tab heading="JavaScript">\r\n    <uxd-snippet [content]="snippets.compiled.controllerJs" language="javascript"></uxd-snippet>\r\n  </tab>\r\n  <tab heading="CSS">\r\n    <uxd-snippet [content]="snippets.compiled.stylesCss" language="css"></uxd-snippet>\r\n  </tab>\r\n  <tab heading="Item Template HTML">\r\n    <uxd-snippet [content]="snippets.compiled.itemTemplateHtml" language="html"></uxd-snippet>\r\n  </tab>\r\n</tabset>'},function(e,t){e.exports='<uxd-search-builder-wrapper></uxd-search-builder-wrapper>\r\n\r\n<hr>\r\n\r\n<p> The Search Builder provides a visual way for the user to easily build up complex search queries using predefined components.\r\n  Click the button below to view all of the code used to produce the sample search builder modal above.</p>\r\n\r\n<uxd-search-builder-code-wrapper [snippets]="snippets"></uxd-search-builder-code-wrapper>\r\n\r\n<h4 id="search-builder-directive">Search Builder Directive</h4>\r\n\r\n<p>The <code>search-builder</code> directive is designed to act as a container for <code>search-group</code> and <code>search-component</code>  directives. It provides a way to access the generated search query object and register the components that can be added.</p>\r\n\r\n<uxd-snippet [content]="snippets.compiled.layoutHtml" language="html"></uxd-snippet>\r\n\r\n<p>The following attributes are available to configure the behavior of the <code>search-builder</code>:</p>\r\n<div class="demo-attributes table-responsive">\r\n  <table class="table m-t">\r\n    <tbody>\r\n      <tr>\r\n        <th>Name</th>\r\n        <th>Type</th>\r\n        <th>Binding</th>\r\n        <th>Description</th>\r\n        <th>Optional</th>\r\n      </tr>\r\n      <tr>\r\n        <td class="attribute">search-query</td>\r\n        <td>object</td>\r\n        <td>variable</td>\r\n        <td>This should be a binding to an object that will store the current search query generated by the <code>search-builder</code>.\r\n          If this initially has a value, the <code>search-builder</code> will automatically update to show the correct groups\r\n          and components with the values specified.</td>\r\n        <td>false</td>\r\n      </tr>\r\n      <tr>\r\n        <td class="attribute">components</td>\r\n        <td>array</td>\r\n        <td>variable</td>\r\n        <td>This should provide an array containing information on the components that can be added to it. Each component should\r\n          be given a unique name and a template url.</td>\r\n        <td>false</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n<p>The following is an example of how the component array might look:</p>\r\n\r\n<uxd-snippet [content]="snippets.compiled.componentArrayExampleJs" language="javascript"></uxd-snippet>\r\n\r\n<h4 id="search-group-directive">Search Group Directive</h4>\r\n\r\n<p>The <code>search-group</code> directive acts as a container for <code>search-component</code> directives. Each group should\r\n  represent a specific operator (eg. and, or, not). It also provides a way to the user to add new fields to the groups.</p>\r\n\r\n<uxd-snippet [content]="snippets.compiled.searchGroupExampleHtml" language="html"></uxd-snippet>\r\n\r\n<p>The following attributes can be used to configure the behavior of a <code>search-group</code>:</p>\r\n<div class="demo-attributes table-responsive">\r\n  <table class="table m-t">\r\n    <tbody>\r\n      <tr>\r\n        <th>Name</th>\r\n        <th>Type</th>\r\n        <th>Binding</th>\r\n        <th>Description</th>\r\n        <th>Optional</th>\r\n      </tr>\r\n      <tr>\r\n        <td class="attribute">group-id</td>\r\n        <td>string</td>\r\n        <td>variable</td>\r\n        <td>This should be a unique id given to each group to identify it in the generated search query.</td>\r\n        <td>false</td>\r\n      </tr>\r\n      <tr>\r\n        <td class="attribute">group-title</td>\r\n        <td>string</td>\r\n        <td>variable</td>\r\n        <td>This will specify the text that will display at the top of each group.</td>\r\n        <td>false</td>\r\n      </tr>\r\n      <tr>\r\n        <td class="attribute">operator</td>\r\n        <td>string</td>\r\n        <td>variable</td>\r\n        <td>This will specify the text that will display to the left of each group when more than one field has been added. The\r\n          color beside the operator label will be set depending on the operator specified. Recommended options are\r\n          <code>\'and\'</code>, <code>\'or\'</code> and <code>\'not\'</code>.</td>\r\n        <td>false</td>\r\n      </tr>\r\n      <tr>\r\n        <td class="attribute">button-text</td>\r\n        <td>string</td>\r\n        <td>variable</td>\r\n        <td>This will specify the text that goes along side the add field button.</td>\r\n        <td>false</td>\r\n      </tr>\r\n      <tr>\r\n        <td class="attribute">add-field</td>\r\n        <td>function</td>\r\n        <td>variable</td>\r\n        <td>This will specify the function to be called when the add field button is clicked. This function should return an\r\n          object that contains an <code>id</code> property giving the field a unique id, and a <code>component</code> property\r\n          specifying the name of the component to be added. Additionally this function can return a <code>$q.defer().promise</code>\r\n          if the type of field will not immediately be known. If a promise is returned a placeholder field will be displayed\r\n          until the promise is either resolved or rejected.</td>\r\n        <td>false</td>\r\n      </tr>\r\n      <tr>\r\n        <td class="attribute">remove-field</td>\r\n        <td>function</td>\r\n        <td>variable</td>\r\n        <td>This will specify the function to be called when the remove field button is clicked. This function should accept\r\n          one argument containing the ID of the component being removed. It should return a boolean, <code>true</code> indicating\r\n          that the component should be removed and <code>false</code> indicating that the remove action should be cancelled.\r\n          Additionally this function can return a <code>$q.defer().promise</code> to determine whether or not to remove the\r\n          field at a later point. The promise can either be resolved with a <code>boolean</code> value or rejected, in which\r\n          case the field will not be removed.</td>\r\n        <td>true</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n\r\n<h4 id="search-component-directive">Search Component Directive</h4>\r\n\r\n<p>The <code>search-component</code> directive should be used to create a specific component that can be added to a <code>search-group</code>.\r\n  Each <code>search-component</code> is responsible for setting the <code>model</code> property on it’s scope. It is this\r\n  value that will be displayed in the generated search query. For a <code>search-component</code> that has a single control,\r\n  for example an <code>input</code>, simply setting the <code>ng-model</code> property will update the value automatically.</p>\r\n\r\n<p>The following example will demonstrate the simplest form of <code>search-component</code>:</p>\r\n\r\n<uxd-snippet [content]="snippets.compiled.textComponentHtml" language="html"></uxd-snippet>\r\n\r\n<p>For a more complex <code>search-component</code>, such as a date range, it may be required to have a controller that will\r\n  update the <code>model</code> when values are changed. To specify a controller simply add an <code>ng-controller</code>  attribute to the <code>search-component</code> tag.</p>\r\n\r\n<p>The following example will demonstrate a more complex <code>search-component</code> that uses a controller to update the\r\n  <code>model</code>:</p>\r\n\r\n<tabset>\r\n    <tab heading="HTML">\r\n        <uxd-snippet [content]="snippets.compiled.dateRangeComponentHtml" language="html"></uxd-snippet>\r\n    </tab>\r\n    <tab heading="JavaScript">\r\n        <uxd-snippet [content]="snippets.compiled.dateRangeComponentJs" language="javascript"></uxd-snippet>\r\n    </tab>\r\n</tabset>\r\n\r\n<h4 id="search-builder-modal">Search Builder Modal</h4>\r\n\r\n<p>The Search Builder is designed to be used within a modal. A new modal layout was created specifically for the Search Builder.\r\n  To utilize the Search Builder modal set the <code>windowClass</code> to <code>\'search-builder-modal-window\'</code> when\r\n  specifying the modal options.</p>\r\n\r\n<p>The modal template should be similar to the following code which has been set up to show a scrollbar when required.</p>\r\n\r\n<uxd-snippet [content]="snippets.compiled.modalLayoutExampleHtml" language="html"></uxd-snippet>\r\n\r\n<blockquote>\r\n  <p>Refer to the <a routerLink="/components/scrollbar" fragment="custom-scrollbar-ng1">Scrollbar</a> page for more information on how to configure the scrollbar.</p>\r\n</blockquote>\r\n\r\n<blockquote>\r\n  <p>Refer to the <a routerLink="/components/modals" fragment="modal-ng1">Modal View</a> page for more information on how to configure the modal.</p>\r\n</blockquote>\r\n\r\n<h4 id="search-query-structure">Search Query Structure</h4>\r\n\r\n<p>The structure of the generated search query is an object that contains child objects for each group that has components.\r\n  The format is as follows:</p>\r\n\r\n<ul>\r\n  <li>group id\r\n    <ul>\r\n      <li>component id\r\n        <ul>\r\n          <li>component name</li>\r\n          <li>component value</li>\r\n        </ul>\r\n      </li>\r\n      <li>component id\r\n        <ul>\r\n          <li>component name</li>\r\n          <li>component value</li>\r\n        </ul>\r\n      </li>\r\n    </ul>\r\n  </li>\r\n  <li>group id\r\n    <ul>\r\n      <li>component id\r\n        <ul>\r\n          <li>component name</li>\r\n          <li>component value</li>\r\n        </ul>\r\n      </li>\r\n      <li>component id\r\n        <ul>\r\n          <li>component name</li>\r\n          <li>component value</li>\r\n        </ul>\r\n      </li>\r\n    </ul>\r\n  </li>\r\n</ul>\r\n\r\n<p>An example of a search query is:</p>\r\n\r\n<uxd-snippet [content]="snippets.compiled.searchQueryExampleJs" language="javascript"></uxd-snippet>\r\n'},function(e,t){e.exports='<uxd-search-history-wrapper></uxd-search-history-wrapper>\r\n\r\n<hr>\r\n\r\n<p>Search History can be saved and updated with the use of the <code>localStorage</code> object. Data\r\n  stored here will have no expiration time and can be easily accessed from any page when required.</p>\r\n\r\n<p>Using our above example you can click the <code><span class="hpe-icon hpe-history" aria-hidden="true"></span></code> icon\r\n  to see details of the last 10 searches.</p>\r\n\r\n<p>The <code>localStorage</code> object has the following methods which we use in our example above:</p>\r\n<div class="demo-attributes table-responsive">\r\n  <table class="table m-t">\r\n    <tbody>\r\n      <tr>\r\n        <th>Name</th>\r\n        <th>Description</th>\r\n      </tr>\r\n      <tr>\r\n        <td class="attribute">setItem</td>\r\n        <td>This method takes 2 parameters, a <code>key name</code> and <code>key value</code> pair, and will add the key to\r\n          the storage or update it if it already exists.</td>\r\n      </tr>\r\n      <tr>\r\n        <td class="attribute">getItem</td>\r\n        <td>This method takes a <code>key name</code> as a parameter and returns its value (if it exists).</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n\r\n<blockquote>\r\n  <p><strong>Note</strong>: Refer to the <a href="https://developer.mozilla.org/en-US/docs/Web/API/Storage">Storage API</a>\r\n    for full documentation</p>\r\n</blockquote>\r\n\r\n<p>You can see the code used in our example by selecting the appropriate tabs below:</p>\r\n\r\n<tabset>\r\n  <tab heading="HTML">\r\n    <uxd-snippet [content]="snippets.compiled.layoutHtml" language="html"></uxd-snippet>\r\n  </tab>\r\n  <tab heading="JavaScript">\r\n    <uxd-snippet [content]="snippets.compiled.controllerJs" language="javascript"></uxd-snippet>\r\n  </tab>\r\n  <tab heading="Modal HTML">\r\n    <uxd-snippet [content]="snippets.compiled.modalLayoutHtml" language="html"></uxd-snippet>\r\n  </tab>\r\n  <tab heading="Modal JavaScript">\r\n    <uxd-snippet [content]="snippets.compiled.modalControllerJs" language="javascript"></uxd-snippet>\r\n  </tab>\r\n  <tab heading="CSS">\r\n    <uxd-snippet [content]="snippets.compiled.stylesCss" language="css"></uxd-snippet>\r\n  </tab>\r\n</tabset>'},function(e,t){e.exports='<uxd-search-toolbar-wrapper></uxd-search-toolbar-wrapper>\r\n\r\n<hr>\r\n\r\n<p>The Search Toolbar is contained in the <code>search-toolbar</code> directive and the <code>.expand-input</code> class.</p>\r\n\r\n<p>Search Toolbar takes the following attributes:</p>\r\n<div class="demo-attributes table-responsive">\r\n<table class="table m-t">\r\n <tbody><tr>\r\n   <th>Name</th>\r\n   <th>Type</th>\r\n   <th>Binding</th>\r\n   <th>Description</th>\r\n   <th>Optional</th>\r\n </tr>\r\n <tr>\r\n   <td class="attribute">search-typeahead</td>\r\n   <td>array</td>\r\n   <td>variable</td>\r\n   <td>Name of the list where the typeahead data is stored.</td>\r\n   <td>false</td>\r\n </tr>\r\n <tr>\r\n   <td class="attribute">place-holder</td>\r\n   <td>string</td>\r\n   <td>literal</td>\r\n   <td>Placeholder text for an input.</td>\r\n   <td>false</td>\r\n </tr>\r\n <tr>\r\n   <td class="attribute">close-search</td>\r\n   <td>string</td>\r\n   <td>literal</td>\r\n   <td>Should be set to a value which when clicked closes the input text.</td>\r\n   <td>false</td>\r\n </tr>\r\n <tr>\r\n   <td class="attribute">on-search</td>\r\n   <td>function</td>\r\n   <td>variable</td>\r\n   <td>Defines the function to be called when the enter key is pressed. The function will be called with the current text entered in the field as an argument.</td>\r\n   <td>false</td>\r\n </tr>\r\n <tr>\r\n   <td class="attribute">on-focus</td>\r\n   <td>function</td>\r\n   <td>variable</td>\r\n   <td>Defines the function to be called when the search bar is focused.</td>\r\n   <td>true</td>\r\n </tr>\r\n</tbody></table>\r\n</div>\r\n<p>An example of the required HTML is as follows:</p>\r\n\r\n<tabset>\r\n    <tab heading="HTML">\r\n        <uxd-snippet [content]="snippets.compiled.layoutHtml" language="html"></uxd-snippet>\r\n    </tab>\r\n    <tab heading="JavaScript">\r\n        <uxd-snippet [content]="snippets.compiled.controllerJs" language="javascript"></uxd-snippet>\r\n    </tab>\r\n</tabset>'},function(e,t){e.exports='<uxd-multiple-select-table-wrapper></uxd-multiple-select-table-wrapper>\r\n\r\n<hr>\r\n\r\n<p>The Multiple Select Table can be used for selecting multiple items in a table format. As with the Single Select Table described\r\n    above, it also makes use of the <code>select-table</code> component. The only additional feature is the <code>multiple-select</code>\r\n    attribute which is used solely for selecting multiple items. All other attributes for the <code>select-table</code> maintain\r\n    the same functionality with the exception of the following:</p>\r\n\r\n<table class="table m-t">\r\n    <tr>\r\n        <th>Name</th>\r\n        <th>Type</th>\r\n        <th>Binding</th>\r\n        <th>Description</th>\r\n        <th>Optional</th>\r\n    </tr>\r\n    <tr>\r\n        <td class="attribute">multiple-select</td>\r\n        <td>boolean</td>\r\n        <td>literal</td>\r\n        <td>Allows selection of multiple items. If set to <code>true</code> the user will be able to select and deselect multiple\r\n            items.</td>\r\n        <td>true</td>\r\n    </tr>\r\n    <tr>\r\n        <td class="attribute">selected</td>\r\n        <td>array</td>\r\n        <td>variable</td>\r\n        <td>This should be set as an array for the Multiple Select Table as there can be multiple selected values, whereas the\r\n            Single Select Table only takes one selected value. It can be an array of strings or an array of objects. If it\r\n            is an array of objects, the <code>select-key</code> attribute (as described in the Single Select Table) should\r\n            be set to the name of the key, whose value from the object will be displayed. For example, if you have an object\r\n            like: <code>{{codeSnippet}}</code> and you want the name to be displayed, you would set <code>select-key="name"</code>.</td>\r\n        <td>false</td>\r\n    </tr>\r\n    <tr>\r\n        <td class="attribute">select-hidden-items</td>\r\n        <td>string</td>\r\n        <td>variable</td>\r\n        <td>This attribute is not used in the Multiple Select Table.</td>\r\n        <td>true</td>\r\n    </tr>\r\n</table>\r\n\r\n<p>You can see the code used in our example above by selecting the appropriate tabs below:</p>\r\n\r\n'},function(e,t){e.exports='<uxd-select-wrapper></uxd-select-wrapper>\r\n\r\n<hr>\r\n\r\n<p>The <code>dynamic-select</code> component allows users to choose one or more items from a set via a dropdown interface. It\r\n    supports filtering and keyboard control. For very large data sets, a paging feature is available, ensuring that data\r\n    is only loaded as required.</p>\r\n\r\n<p>The data set may be a collection of strings or objects. In the above example, the single select controls on the left use\r\n    an array of strings as a data source, while the multiple select controls on the right are set up to select objects. The\r\n    upper controls use a fixed array to provide the items to select from, whereas the lower controls use a paging function\r\n    which contains a delay to simulate a server request. This can be observed in action by scrolling or using the down key\r\n    to reach the end of the current result set in the select dropdown.</p>\r\n\r\n<tabset>\r\n    <tab heading="HTML">\r\n        <uxd-snippet [content]="snippets.compiled.sampleHtml"></uxd-snippet>\r\n    </tab>\r\n    <tab heading="JavaScript">\r\n        <uxd-snippet [content]="snippets.compiled.sampleJs" language="javascript"></uxd-snippet>\r\n    </tab>\r\n</tabset>\r\n\r\n<p>The following attributes are available to configure the <code>dynamic-select</code> directive.</p>\r\n\r\n<div class="demo-attributes table-responsive">\r\n    <table class="table m-t">\r\n        <tr>\r\n            <th>Name</th>\r\n            <th>Type</th>\r\n            <th>Binding</th>\r\n            <th>Description</th>\r\n            <th>Optional</th>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">multiple</td>\r\n            <td>none</td>\r\n            <td></td>\r\n            <td>Specifies that the control should allow multiple selection; otherwise only a single item may be selected at a\r\n                time. This attribute does not require a value.</td>\r\n            <td>true</td>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">ng-model</td>\r\n            <td>object or array</td>\r\n            <td>variable</td>\r\n            <td>The selected item(s).</td>\r\n            <td>false</td>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">source</td>\r\n            <td>array or function</td>\r\n            <td>variable</td>\r\n            <td>\r\n                <p>Provides the items that the user may select from. Items may be strings or objects. Use <code>select-as</code>                    and <code>track-by</code> to present objects as required.</p>\r\n                <p>If an array is provided then the full contents will be displayed in the dropdown. There must be no identical\r\n                    items.</p>\r\n                <p>If a function is provided, this will retrieve pages of items as required when scrolling or filtering the\r\n                    item dropdown. The arguments are as follows:</p>\r\n                <ul>\r\n                    <li><code>pageNumber</code> (numeric) - The index of the requested page, starting from 0.</li>\r\n                    <li><code>pageSize</code> (numeric) - The number of items requested.</li>\r\n                    <li><code>searchString</code> (string) - The text entered by the user to filter the results.</li>\r\n                </ul>\r\n                <p>The function should return either an array, or if the data is retrieved asynchronously, a promise containing\r\n                    an array. Return an empty array if there are no more items.</p>\r\n            </td>\r\n            <td>false</td>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">select-as</td>\r\n            <td>string</td>\r\n            <td>literal</td>\r\n            <td>If the <code>source</code> provides objects, specify the object property name which will contain the text to\r\n                be displayed in the control.</td>\r\n            <td>true</td>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">track-by</td>\r\n            <td>string</td>\r\n            <td>literal</td>\r\n            <td>If the <code>source</code> provides objects and the <code>select-as</code> property is not unique, specify the\r\n                object property to use as a unique key.</td>\r\n            <td>true</td>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">options</td>\r\n            <td>object</td>\r\n            <td>variable</td>\r\n            <td>Additional configuration options for the control, see below for available properties.</td>\r\n            <td>true</td>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">ng-disabled</td>\r\n            <td>boolean</td>\r\n            <td>variable</td>\r\n            <td>Determines whether the control is disabled. Default is false.</td>\r\n            <td>true</td>\r\n        </tr>\r\n    </table>\r\n</div>\r\n\r\n<p>The <code>options</code> attribute receives an object with the following properties:</p>\r\n\r\n<div class="demo-attributes table-responsive">\r\n    <table class="table m-t">\r\n        <tr>\r\n            <th>Name</th>\r\n            <th>Type</th>\r\n            <th>Description</th>\r\n            <th>Optional</th>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">placeholder</td>\r\n            <td>string</td>\r\n            <td>The informational text to display in the input area when no text has been entered.</td>\r\n            <td>true</td>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">allowNull</td>\r\n            <td>boolean</td>\r\n            <td>Determines whether the selected value may be set to null by deleting or editing the text in single selection\r\n                mode. Default is true.</td>\r\n            <td>true</td>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">scroll</td>\r\n            <td>boolean</td>\r\n            <td>Determines whether the dropdown has a fixed height and scrolls. This is always true when a paging function is\r\n                supplied, but may be set to false for small, fixed data sets to ensure that the dropdown fits the displayed\r\n                items. Default is true.</td>\r\n            <td>true</td>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">pageSize</td>\r\n            <td>numeric</td>\r\n            <td>The number of items per page to request. Applicable only when using a paging function in the <code>source</code>                attribute. Default is 20.</td>\r\n            <td>true</td>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">dropDirection</td>\r\n            <td>string</td>\r\n            <td>The direction in which the dropdown list expands from the control. "up" specifies that list appears above the\r\n                input area, and "down" specifies that it appears below. Default is "down".</td>\r\n            <td>true</td>\r\n        </tr>\r\n    </table>\r\n</div>'},function(e,t){e.exports='<uxd-single-select-table-wrapper></uxd-single-select-table-wrapper>\r\n\r\n<hr>\r\n\r\n<p>The <code>select-table</code> component can be used for single select in a table format. The component can be defined using\r\n    a <code>select-table</code> element. The options for the select component should be passed as attributes as explained\r\n    below:</p>\r\n\r\n<div class="demo-attributes table-responsive">\r\n    <table class="table m-t">\r\n        <tr>\r\n            <th>Name</th>\r\n            <th>Type</th>\r\n            <th>Binding</th>\r\n            <th>Description</th>\r\n            <th>Optional</th>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">values</td>\r\n            <td>array</td>\r\n            <td>variable</td>\r\n            <td>Array of strings or Array of objects, this attribute should be passed with the values to be shown in the select\r\n                table.</td>\r\n            <td>false</td>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">select-key</td>\r\n            <td>string</td>\r\n            <td>variable</td>\r\n            <td>When the options are passed as an array of objects, this attribute should be set to the name of the key, whose\r\n                value from the object will be displayed. Note that this should only be set when the options are passed as\r\n                an array of objects, and not required when the options are passed as an array of strings.</td>\r\n            <td>true</td>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">selected</td>\r\n            <td>string</td>\r\n            <td>variable</td>\r\n            <td>The selected option will be set to the variable passed to the <code>selected</code> attribute.</td>\r\n            <td>false</td>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">search-text</td>\r\n            <td>string</td>\r\n            <td>variable</td>\r\n            <td>The component can be associated with a search text which can filter the options. The <code>search-text</code>                attribute can be set to the text with which options will be filtered.</td>\r\n            <td>false</td>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">table-height</td>\r\n            <td>string</td>\r\n            <td>variable</td>\r\n            <td>The height of the table can be changed by providing a string to the <code>table-height</code> attribute (e.g.\r\n                "50%"). This can be set to px, % etc.</td>\r\n            <td>false</td>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">select-hidden-items</td>\r\n            <td>string</td>\r\n            <td>variable</td>\r\n            <td>Controls the behaviour when selected items are filtered from view. By default filtered items remain selected.\r\n                Set to the string <code>\'clear\'</code> to clear the selected item when the search-text filter has removed\r\n                it from the list of visible items. Alternatively, set to <code>\'reselect\'</code> to both clear the selected\r\n                item, and reselect it when it becomes visible again.</td>\r\n            <td>true</td>\r\n        </tr>\r\n    </table>\r\n</div>\r\n\r\n<p>The sample code for the above example is:</p>\r\n\r\n<tabset>\r\n    <tab heading="HTML">\r\n        <uxd-snippet [content]="snippets.compiled.sampleHtml"></uxd-snippet>\r\n    </tab>\r\n    <tab heading="JavaScript">\r\n        <uxd-snippet [content]="snippets.compiled.sampleJs" language="javascript"></uxd-snippet>\r\n    </tab>\r\n</tabset>'},function(e,t){e.exports="<uxd-layout-switching-splitter-wrapper></uxd-layout-switching-splitter-wrapper>\r\n\r\n<hr>\r\n\r\n<p>The example above demonstrates how to hide and show panels.</p>\r\n\r\n<p>\r\n    To hide a panel, place the attribute <code>splitter-panel-collapsed</code> on the <code>splitter-panel</code> element\r\n    you wish to hide. To toggle between a shown and hidden state, add or remove the attribute as required and then\r\n    reinitialize the Splitter. You can reinitialize the Splitter by passing an empty object to the <code>reinitialize</code>\r\n    attribute on the <code>splitter</code> element (the container of the panel). This object will be overwritten with\r\n    the reinitialization function, which can then be invoked from your own code at any time. Note that if you are using\r\n    multiple nested Splitters you should obtain a reinitialize function reference for each of these individually.\r\n</p>"},function(e,t){e.exports='<uxd-nested-splitter-wrapper></uxd-nested-splitter-wrapper>\r\n\r\n<hr>\r\n\r\n<p>The example above demonstrates how to have nested <code>splitter</code> directives which allow a mix of both horizontal and vertical panels.</p>\r\n\r\n<uxd-snippet [content]="snippets.compiled.layoutExampleHtml" language="html"></uxd-snippet>'},function(e,t){e.exports='<uxd-side-inset-panel-splitter-wrapper></uxd-side-inset-panel-splitter-wrapper>\r\n\r\n<hr>\r\n\r\n<p>The splitter supports a toggle button to collapse the panels in the style of the <a routerLink="/components/panels" fragment="side-inset-panel-ng1">Side Inset Panel</a>.\r\n    To add the toggle button, define your splitter panels\r\n    as described above but add the <code>splitter-side</code> attribute to the side panel, and the <code>splitter-main</code>\r\n    to the main panel.</p>\r\n\r\n<uxd-snippet [content]="snippets.compiled.layoutExampleHtml" language="html"></uxd-snippet>'},function(e,t){e.exports='<uxd-splitter-wrapper></uxd-splitter-wrapper>\r\n\r\n<hr>\r\n\r\n<p>The <code>splitter</code> directive is used to add a container for the resizable panels. The <code>splitter</code> can present\r\n  the panels horizontally or vertically. Inside the container the panels should be specified using the <code>splitter-panel</code>  directive.</p>\r\n\r\n<tabset>\r\n  <tab heading="HTML">\r\n    <uxd-snippet [content]="snippets.compiled.layoutExampleHtml" language="html"></uxd-snippet>\r\n  </tab>\r\n  <tab heading="JavaScript">\r\n    <uxd-snippet [content]="snippets.compiled.controllerJs" language="javascript"></uxd-snippet>\r\n  </tab>\r\n  <tab heading="CSS">\r\n    <uxd-snippet [content]="snippets.compiled.stylesCss" language="css"></uxd-snippet>\r\n  </tab>\r\n</tabset>\r\n\r\n<p>The following attributes can be added to the <code>splitter</code> directive to configure its behavior.</p>\r\n<div class="demo-attributes table-responsive">\r\n  <table class="table m-t">\r\n    <tbody>\r\n      <tr>\r\n        <th>Name</th>\r\n        <th>Type</th>\r\n        <th>Binding</th>\r\n        <th>Description</th>\r\n        <th>Optional</th>\r\n      </tr>\r\n      <tr>\r\n        <td class="attribute">direction</td>\r\n        <td>string</td>\r\n        <td>literal</td>\r\n        <td>Should be set to either \'horizontal\' or \'vertical\' depending on the desired orientation.</td>\r\n        <td>false</td>\r\n      </tr>\r\n      <tr>\r\n        <td class="attribute">gutter-size</td>\r\n        <td>number</td>\r\n        <td>literal</td>\r\n        <td>Specifies the thickness, in pixels, of the divider between panels. The default value is <code>10</code>. The minimum\r\n          recommended width is <code>4</code>.</td>\r\n        <td>true</td>\r\n      </tr>\r\n      <tr>\r\n        <td class="attribute">snap-offset</td>\r\n        <td>number</td>\r\n        <td>literal</td>\r\n        <td>If the user resizes a panel within this amount of pixels of its minimum size it will automatically snap to the minimum\r\n          size. The default value is <code>30</code>.</td>\r\n        <td>true</td>\r\n      </tr>\r\n      <tr>\r\n        <td class="attribute">on-drag-start</td>\r\n        <td>function</td>\r\n        <td>variable</td>\r\n        <td>Specifies a function to be called when the user begins dragging the divider.</td>\r\n        <td>true</td>\r\n      </tr>\r\n      <tr>\r\n        <td class="attribute">on-drag</td>\r\n        <td>function</td>\r\n        <td>variable</td>\r\n        <td>Specifies a function to be called when the divider is being moved.</td>\r\n        <td>true</td>\r\n      </tr>\r\n      <tr>\r\n        <td class="attribute">on-drag-end</td>\r\n        <td>function</td>\r\n        <td>variable</td>\r\n        <td>Specifies a function to be called when the user finishes dragging the divider.</td>\r\n        <td>true</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n<p>The following attributes can be added to the <code>splitter-panel</code> directive to configure its behavior.</p>\r\n<div class="demo-attributes table-responsive">\r\n  <table class="table m-t">\r\n    <tbody>\r\n      <tr>\r\n        <th>Name</th>\r\n        <th>Type</th>\r\n        <th>Binding</th>\r\n        <th>Description</th>\r\n        <th>Optional</th>\r\n      </tr>\r\n      <tr>\r\n        <td class="attribute">size</td>\r\n        <td>number</td>\r\n        <td>literal</td>\r\n        <td>Specifies the initial size of the panel as a percentage. The size of all panels combined should total <code>100</code>.\r\n          A total higher than this will cause overflow.</td>\r\n        <td>false</td>\r\n      </tr>\r\n      <tr>\r\n        <td class="attribute">min-size</td>\r\n        <td>number</td>\r\n        <td>literal</td>\r\n        <td>Specifies the desired minimum size of a panel in pixels.</td>\r\n        <td>true</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n\r\n<h4 id="full-height-usage">Full Height Usage</h4>\r\n\r\n<p>In order to have the splitter take up the remaining height of the page, you should set its height to <code>100%</code> and\r\n  ensure the full page hierarchy of containers down to that point also have their heights set to <code>100%</code>. If you\r\n  wish to remove the scrollbar from the window itself and have only the splitter panel internals be scrollable, then you\r\n  should set the height of the element containing the splitters to be 100% minus your header height. Currently this is only\r\n  supported using the condensed header.</p>\r\n\r\n<p>The following styles could be used to prepare a page layout for full-screen splitter usage, combined with a fixed condensed\r\n  header to prevent scrolling of the window:</p>\r\n\r\n<uxd-snippet [content]="snippets.compiled.fullHeightExampleCss" language="css"></uxd-snippet>'},function(e,t){e.exports='<table class="table table-hover">\r\n    <thead>\r\n        <tr>\r\n            <th *ngIf="columns.id">ID</th>\r\n            <th *ngIf="columns.data">Data</th>\r\n            <th *ngIf="columns.user">User</th>\r\n            <th *ngIf="columns.value">Value</th>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        <tr *ngFor="let item of tableData; let idx = index">\r\n            <td *ngIf="columns.id">{{ idx + 1 }}</td>\r\n            <td *ngIf="columns.data">{{ item.data }}</td>\r\n            <td *ngIf="columns.user">{{ item.user }}</td>\r\n            <td *ngIf="columns.value" [ngClass]="{ \'text-success\': item.value >= 0, \'chart-purple\': item.value < 0 }">\r\n                <i class="hpe-icon" [ngClass]="{ \'hpe-ascend\': item.value >= 0, \'hpe-descend\': item.value < 0 }"></i>\r\n                <span>{{ item.value }}</span>%\r\n            </td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n\r\n<br>\r\n<h4>Toggle Visibility of Table Columns:</h4>\r\n<br>\r\n<div class="row">\r\n    <div class="col-md-3 col-sm-6">\r\n        <ux-checkbox [(ngModel)]="columns.id">Show ID Column</ux-checkbox>\r\n    </div>\r\n    <div class="col-md-3 col-sm-6">\r\n        <ux-checkbox [(ngModel)]="columns.data">Show Data Column</ux-checkbox>\r\n    </div>\r\n    <div class="col-md-3 col-sm-6">\r\n        <ux-checkbox [(ngModel)]="columns.user">Show User Column</ux-checkbox>\r\n    </div>\r\n    <div class="col-md-3 col-sm-6">\r\n        <ux-checkbox [(ngModel)]="columns.value">Show Value Column</ux-checkbox>\r\n    </div>\r\n</div>\r\n\r\n<hr>\r\n\r\n<p>The dynamic showing and hiding of table columns can easily be achieved by using built in Angular directives.</p>\r\n\r\n<p>Create an object in your controller containing a boolean property for each column in the table. These properties should be\r\n    given an initial value that reflects whether or not the column should be visible.</p>\r\n\r\n<p>Then we can simply add an <code>ng-if</code> directive to the table header cell and the table body cell pointing to the property\r\n    matching that column in the controller.</p>\r\n\r\n<p>The header and body cells will now automatically show or hide based on the value in the controller.</p>\r\n\r\n<blockquote>\r\n    <p><strong>Note</strong>: Dynamic columns do not currently work with multiple sortable table headers</p>\r\n</blockquote>\r\n\r\n<tabset>\r\n\r\n    <tab heading="HTML">\r\n        <uxd-snippet language="html" [content]="snippets.compiled.layoutHtml"></uxd-snippet>\r\n    </tab>\r\n\r\n    <tab heading="Controller">\r\n        <uxd-snippet language="javascript" [content]="snippets.compiled.controllerJs"></uxd-snippet>\r\n    </tab>\r\n\r\n</tabset>'},function(e,t){e.exports='<uxd-custom-responsive-table-wrapper></uxd-custom-responsive-table-wrapper>\r\n\r\n<hr>\r\n\r\n<p>Controls should be contained in a <code>div.row</code> with each control being contained inside a <code>div.col-sm-*</code> to control its width. Surround the table in a <code>div.table-responsive</code>. A <code>div.horizontal-scrollbar</code>can be used in place of the the table-responsive class to add a horizontal scrollbar to the table. Note the use of utility classes below <code>.m-b-xs</code> to control spacing between the controls and the table.</p>\r\n\r\n<tabset>\r\n\r\n    <tab heading="HTML">\r\n        <uxd-snippet language="html" [content]="snippets.compiled.sampleHtml"></uxd-snippet>\r\n    </tab>\r\n    \r\n    <tab heading="Javascript">\r\n        <uxd-snippet language="javascript"  [content]="snippets.compiled.sampleJs"></uxd-snippet>\r\n    </tab>\r\n    \r\n    <tab heading="CSS">\r\n        <uxd-snippet language="css" [content]="snippets.compiled.sampleCss"></uxd-snippet>\r\n    </tab>\r\n</tabset>'},function(e,t){e.exports='<uxd-detail-row-header-wrapper></uxd-detail-row-header-wrapper>\r\n\r\n<hr>\r\n\r\n<p>\r\n    A <code>detail-row-header</code> can be added to a detail row responsive table which will enable multi column sorting\r\n    and filtering on the table headers.\r\n    <br>\r\n    <br>\r\n    The options for creating the headers are specified using <code>headers</code> which should contain the following\r\n    attributes:\r\n</p>\r\n\r\n<div class="demo-attributes table-responsive">\r\n    <table class="table m-t">\r\n        <tbody>\r\n            <tr>\r\n                <th>Name</th>\r\n                <th>Type</th>\r\n                <th>Description</th>\r\n                <th>Optional</th>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">title</td>\r\n                <td>string</td>\r\n                <td>This is used to define the name on the column.</td>\r\n                <td>false</td>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">class</td>\r\n                <td>string</td>\r\n                <td>This is used to define the class on the header for setting the width, this should match the class on each\r\n                    div in the table body.</td>\r\n                <td>true</td>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">sort</td>\r\n                <td>string</td>\r\n                <td>This is used to define how the column will be sorted. If this is not defined the column will be unsortable.</td>\r\n                <td>true</td>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">filter</td>\r\n                <td>string</td>\r\n                <td>This is used to define the url of the filter popover. If this is not defined the column will not include\r\n                    a filter. The filter template will have a scope containing a <code>closePopover</code> function which\r\n                    it can call to close the popover manually. The filter template scope will also receive the events <code>detailRowHeaderPopoverOpened</code>                    when the filter popover is opened, and <code>detailRowHeaderPopoverClosed</code> when it is closed.</td>\r\n                <td>true</td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n</div>\r\n\r\n<p>The sample code for the detail row header is as follows:</p>\r\n\r\n<tabset>\r\n\r\n    <tab heading="HTML">\r\n        <uxd-snippet language="html" [content]="htmlCode"></uxd-snippet>\r\n    </tab>\r\n\r\n    <tab heading="Controller">\r\n        <uxd-snippet language="javascript" [content]="controllerCode"></uxd-snippet>\r\n    </tab>\r\n\r\n    <tab heading="Popover HTML">\r\n        <uxd-snippet language="html" [content]="popoverHtmlCode"></uxd-snippet>\r\n    </tab>\r\n\r\n    <tab heading="Popover Controller">\r\n        <uxd-snippet language="javascript" [content]="popoverControllerCode"></uxd-snippet>\r\n    </tab>\r\n\r\n    <tab heading="CSS">\r\n        <uxd-snippet language="css" [content]="styleCode"></uxd-snippet>\r\n    </tab>\r\n\r\n    <tab heading="Data Service">\r\n        <uxd-snippet language="javascript" [content]="serviceCode"></uxd-snippet>\r\n    </tab>\r\n\r\n</tabset>'},function(e,t){e.exports='<uxd-detail-row-responsive-wrapper></uxd-detail-row-responsive-wrapper>\r\n\r\n<hr>\r\n\r\n\r\n<p>\r\n    Detail rows spanning columns can be added to responsive tables by adding <code>divs</code> with reponsive classes inside\r\n    the table row. Add <code>table</code> and <code>table-hover</code> classes to the <code>table</code> element.\r\n</p>\r\n\r\n<p>\r\n    The first <code>div</code> represents the tabulated columns and their data. The next <code>div</code> represents the\r\n    detail row that spans mulitple columns but is considered within the same table row.\r\n</p>\r\n\r\n<p>\r\n    Add any of the <code>col-xs-*</code>, <code>col-sm-*</code>, <code>col-md-*</code> <code>col-lg-*</code> classes to the\r\n    inner <code>div</code> element to achieve responsiveness.\r\n</p>\r\n\r\n<tabset>\r\n\r\n    <tab heading="HTML">\r\n        <uxd-snippet language="html" [content]="htmlCode"></uxd-snippet>\r\n    </tab>\r\n\r\n    <tab heading="Controller">\r\n        <uxd-snippet language="javascript" [content]="jsCode"></uxd-snippet>\r\n    </tab>\r\n\r\n    <tab heading="CSS">\r\n        <uxd-snippet language="css" [content]="cssCode"></uxd-snippet>\r\n    </tab>\r\n\r\n</tabset>'},function(e,t){e.exports='<p>\r\n    When there are a large number of filter options, the Dynamic Filter can be used to replace the regular dropdown with a text\r\n    search, supporting dropdown typeahead. This is configurable to fallback to the standard implementation when the list\r\n    of filters falls beneath a certain length.\r\n</p>\r\n\r\n<p>\r\n    To use the Dynamic Filter, set a <code>filter</code> directive, but no Filter Options inside\r\n    it. Instead, set <code>filter-options</code> as an <em>attribute</em> on the <code>filter</code>,\r\n    and bind this to the list of filter options. The objects of this list should define the same properties as the Filter\r\n    Option described above.\r\n</p>\r\n\r\n<p>\r\n    Additionally, set the <code>display-configuration</code> attribute, which expects an object\r\n    of the following format:\r\n</p>\r\n\r\n<div class="demo-attributes table-responsive">\r\n    <table class="table">\r\n        <tbody>\r\n            <tr>\r\n                <th>Property</th>\r\n                <th>Description</th>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">minCharacters</td>\r\n                <td>How many characters should be typed before a dropdown is shown (default: 3).</td>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">maxDisplayableItems</td>\r\n                <td>How many entries to show in the typeahead dropdown (default: show all matches).</td>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">maxIndividualItems</td>\r\n                <td>When there are fewer than this many items, a list of Filter Options will be shown instead of a text input\r\n                    (default: 0).</td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n</div>\r\n\r\n<p>\r\n    The values presented in the dropdown can also be changed dynamically. This is optional behaviour, but useful if you wish\r\n    to perform additional server requests on demand. The function supplied to <code>update-callback</code> will be triggered\r\n    every time the contents of the text input are modified. The function will be called with:\r\n</p>\r\n\r\n<ul>\r\n    <li><code>textInput</code> - the text value in the search control.</li>\r\n    <li><code>optionList</code> - the array of options the control can filter from.</li>\r\n</ul>\r\n\r\n<p>The function must return:</p>\r\n\r\n<ul>\r\n    <li>\r\n        <code>optionList</code> - the array of options, with the contents modified, added or removed\r\n        as required.\r\n    </li>\r\n</ul>\r\n\r\n<tabset>\r\n\r\n    <tab heading="HTML">\r\n        <uxd-snippet language="html" [content]="filterContainerCode"></uxd-snippet>\r\n    </tab>\r\n\r\n    <tab heading="Javascript">\r\n        <uxd-snippet language="javascript" [content]="filterControllerCode"></uxd-snippet>\r\n    </tab>\r\n\r\n</tabset>\r\n\r\n<h4 id="fixed-items">Fixed Items</h4>\r\n\r\n<p>\r\n    When using the Dynamic Filter and expecting the filters to be searchable with a dropdown typeahead as opposed to each filter\r\n    being shown individually in a list, you may still want to have some filter options which are fixed in position and will\r\n    always be visible. You can achieve this by modifying the set of filter options passed to the directive to include a set\r\n    of <code>fixedOptions</code>. An example is shown below:\r\n</p>\r\n\r\n<uxd-snippet language="javascript" [content]="filterOptionsCode"></uxd-snippet>\r\n\r\n<p>Passed to the directive as shown:</p>\r\n\r\n<uxd-snippet language="html" [content]="filterCode"></uxd-snippet>\r\n'},function(e,t){e.exports='<p>Filters are contained in the <code>filter-container</code> directive.</p>\r\n\r\n<p>Each directive has an internally defined Clear option which would appear when a filter is set. The <code>clear-tooltip</code>    attribute can be set to a string which will be displayed as tooltip for the clear button.</p>\r\n\r\n<uxd-snippet language="html" [content]="filterContainerCode"></uxd-snippet>\r\n\r\n<p>Filter Containers contain filters defined by the <code>filter</code> directive. Each filter should have a <code>name</code>.</p>\r\n\r\n<uxd-snippet language="html" [content]="filterCode"></uxd-snippet>\r\n\r\n<p>Each filter has a set of options to filter data. Filter options are contained in the <code>filter-option</code> directive.</p>\r\n\r\n<p>Filter Options should have the following attributes:</p>\r\n\r\n<div class="demo-attributes table-responsive">\r\n    <table class="table m-t">\r\n        <tbody>\r\n            <tr>\r\n                <th>Name</th>\r\n                <th>Type</th>\r\n                <th>Binding</th>\r\n                <th>Description</th>\r\n                <th>Optional</th>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">name</td>\r\n                <td>object</td>\r\n                <td>variable</td>\r\n                <td>An object containing the filter option name to be displayed.</td>\r\n                <td>false</td>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">select</td>\r\n                <td>function</td>\r\n                <td>variable</td>\r\n                <td>A function expression called when the option is selected. This method performs filtering, pagination and\r\n                    updates the data count.</td>\r\n                <td>false</td>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">default</td>\r\n                <td>boolean</td>\r\n                <td>variable</td>\r\n                <td>A boolean object indicating if this is the default filter (e.g., AUTHOR) applied when Clear All button in\r\n                    the filter container is clicked.</td>\r\n                <td>false</td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n</div>\r\n\r\n<uxd-snippet language="html" [content]="filterOptionsCode"></uxd-snippet>\r\n'},function(e,t){e.exports='<uxd-fixed-header-table-wrapper></uxd-fixed-header-table-wrapper>\r\n\r\n<hr>\r\n\r\n<p>\r\n    A fixed header table is provided by the <code>scrollable-table</code> directive. The table header stays in place while\r\n    the table content is scrolled independently.\r\n</p>\r\n\r\n<p>The attributes of this directive are:</p>\r\n\r\n<div class="demo-attributes table-responsive">\r\n    <table class="table m-t">\r\n        <tbody>\r\n            <tr>\r\n                <th>Name</th>\r\n                <th>Type</th>\r\n                <th>Binding</th>\r\n                <th>Description</th>\r\n                <th>Optional</th>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">watch</td>\r\n                <td>object</td>\r\n                <td>variable</td>\r\n                <td>Defines the values of the rows.</td>\r\n                <td>false</td>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">container-height</td>\r\n                <td>number</td>\r\n                <td>literal</td>\r\n                <td>Defines the height of the scrollable container.</td>\r\n                <td>false</td>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">header-height</td>\r\n                <td>number</td>\r\n                <td>literal</td>\r\n                <td>Defines the height of the fixed header.</td>\r\n                <td>false</td>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">watchHeaders</td>\r\n                <td>object</td>\r\n                <td>variable</td>\r\n                <td>Defines the values of the headers, required if using dynamically changing headers.</td>\r\n                <td>true</td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n</div>\r\n\r\n\r\n<tabset>\r\n    <tab heading="HTML">\r\n        <uxd-snippet language="html" [content]="htmlCode"></uxd-snippet>\r\n    </tab>\r\n\r\n    <tab heading="Javascript">\r\n        <uxd-snippet language="javascript" [content]="jsCode"></uxd-snippet>\r\n    </tab>\r\n</tabset>\r\n\r\n<br>\r\n\r\n<blockquote>\r\n    <p>Refer to the <a routerLink="/components/tables" fragment="sorting-ng1">Sorting</a> page for information about sorting the table headers.</p>\r\n</blockquote>'},function(e,t){e.exports='<p>Grouping can be very useful in a table view when you wish to rearrange a list of items in the following scenarios:</p>\r\n\r\n<ul>\r\n    <li>All family members are grouped together based on their parent, <strong>showing only the root parent</strong></li>\r\n    <li>All family members are grouped together based on their parent, <strong>showing the family hierarchy</strong></li>\r\n</ul>\r\n\r\n<p>\r\n    Each object in the list should be given a <code>unique ID</code>. Objects that act as children should be given a <code>parent ID</code>    which will be used to link it to its corresponding parent. Below is an example of how your object array should look:\r\n</p>\r\n\r\n<uxd-snippet language="javascript" [content]="idsCode"></uxd-snippet>\r\n\r\n<blockquote>\r\n    <p><strong>Note:</strong> Notice how last object has <code>parentId: 1</code>. This means that this object is a child of\r\n        the first object.</p>\r\n</blockquote>\r\n\r\n<p><strong>Showing only the root parent</strong></p>\r\n\r\n<p>\r\n    In order to group all family members together (showing only the root parents) you should include a function something similar\r\n    to our example below:\r\n</p>\r\n\r\n<uxd-snippet language="javascript" [content]="rootCode"></uxd-snippet>\r\n\r\n<p>\r\n    What we’re doing here is extracting all the root parents and children into 2 separate arrays and then traversing these arrays\r\n    to detect which parents have children. Those that do are given <code>hasChildren: true</code> property. This is optional\r\n    but is useful if you are wanting to display something for those parents that have children (e.g. <code>ng-show="item.hasChildren"</code>).\r\n</p>\r\n\r\n<p><br>\r\n    <strong>Showing the family hierarchy</strong></p>\r\n\r\n<p>\r\n    In order to group all family members together and construct the family hierarchy you should include a function similar to\r\n    our example below:\r\n</p>\r\n\r\n<uxd-snippet language="javascript" [content]="hierarchyCode"></uxd-snippet>\r\n\r\n<p>\r\n    Here we are doing something similar to the grouping function in that we extract all the root parents into a separate array.\r\n    We then traverse this array and find the children for each parent using the <code>findChildren</code> function. Each\r\n    <code>child</code> is then added to the <code>hierarchy</code> array and the <code>findChildren</code> function is called\r\n    recursively to find any children the <code>child</code> object may have. This results in a hierarchy that can consist\r\n    of infinite levels.\r\n</p>\r\n\r\n<blockquote>\r\n    <p>\r\n        Refer to the <a href="../../showcase/list_view/dist/#/listview/listview2">List View 2</a> showcase page to see a\r\n        working example.\r\n    </p>\r\n</blockquote>'},function(e,t){e.exports='<uxd-hover-actions-wrapper></uxd-hover-actions-wrapper>\r\n\r\n<hr>\r\n\r\n\r\n<p>Hover actions are very similar to list hover actions, however they are not limited to use within a <code>table</code>. Hover\r\n    actions can be used inside any element, and once that element is hovered over the hover actions will appear and can be\r\n    clicked or navigated to using the arrow key and also allow selection using the return key.</p>\r\n\r\n<p>To add hover actions to an element add the <code>hover-actions</code> directive. This can have the following attribute:</p>\r\n\r\n<div class="demo-attributes table-responsive">\r\n    <table class="table m-t">\r\n        <tbody>\r\n            <tr>\r\n                <th>Name</th>\r\n                <th>Type</th>\r\n                <th>Binding</th>\r\n                <th>Description</th>\r\n                <th>Optional</th>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">hover-element</td>\r\n                <td>string</td>\r\n                <td>literal</td>\r\n                <td>This should specify a CSS selector that defines which parent element should be hovered to show the hover\r\n                    actions. If this is not specified, the immediate parent will be set as the hover element.</td>\r\n                <td>true</td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n</div>\r\n\r\n<p>To add hover actions add <code>hover-action</code> directives to the <code>hover-actions</code> directive. A <code>hover-action</code>    can use the following attributes to configure it’s appearance:</p>\r\n\r\n<div class="demo-attributes table-responsive">\r\n    <table class="table m-t">\r\n        <tbody>\r\n            <tr>\r\n                <th>Name</th>\r\n                <th>Type</th>\r\n                <th>Binding</th>\r\n                <th>Description</th>\r\n                <th>Optional</th>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">name</td>\r\n                <td>string</td>\r\n                <td>literal</td>\r\n                <td>The name of the action, placed in a tooltip that is shown when the action is hovered.</td>\r\n                <td>false</td>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">icon</td>\r\n                <td>string</td>\r\n                <td>literal</td>\r\n                <td>The icon class from the icon set.</td>\r\n                <td>false</td>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">click</td>\r\n                <td>function</td>\r\n                <td>variable</td>\r\n                <td>This expression will be evaluated when the action is clicked or enter is pressed when it has focus.</td>\r\n                <td>false</td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n</div>\r\n\r\n<tabset>\r\n\r\n    <tab heading="HTML">\r\n        <uxd-snippet language="html" [content]="htmlCode"></uxd-snippet>\r\n    </tab>\r\n\r\n    <tab heading="Javascript">\r\n        <uxd-snippet language="javascript" [content]="jsCode"></uxd-snippet>\r\n    </tab>\r\n\r\n    <tab heading="CSS">\r\n        <uxd-snippet language="css" [content]="cssCode"></uxd-snippet>\r\n    </tab>\r\n\r\n</tabset>\r\n\r\n\r\n<br>\r\n\r\n<blockquote>\r\n    <p>Refer to the <a routerLink="/components/panels" fragment="collapsible-panels-ng1">Collapsible Panels</a> page for an example of hover actions.</p>\r\n</blockquote>'},function(e,t,n){e.exports='<p>\r\n    Some controls can require <code>index</code> and <code>tabIndex</code> attributes to be set. To avoid having\r\n    to calculate these manually you can use the <code>auto-index</code> directive. This directive is an attribute directive\r\n    that can be placed on any item which will be iterated using an\r\n    <code>ng-repeat</code> statement. Although it can be used in other cases it is intended for use with Table controls.\r\n</p>\r\n\r\n<p>For example, refer to the following sample code showing how the attribute might be placed on a table row:</p>\r\n\r\n<uxd-snippet language="html" [content]="htmlCode"></uxd-snippet>\r\n\r\n<p>This example would give each row the indices 0, 4, 8, 12… respectively. This allows for each row to contain indices for additional items, as shown:</p>\r\n\r\n<p><img src="'+n(1642)+'" class="img img-responsive"></p>\r\n\r\n<p>\r\n    These additional indices would either be configured manually, or will be provided if using this in conjunction with a\r\n    Preview Pane or Item Display Panel. The <code>tabindex</code> value will be set either to 1 or -1; as it is anticipated\r\n    that a control providing direct keyboard control will be used in conjunction, requiring the default tabbing behaviour\r\n    to be overriden with programatic keyboard control.\r\n</p>\r\n\r\n<p>The full set of configuration options for this directive are as follows:</p>\r\n\r\n<div class="demo-attributes table-responsive">\r\n    <table class="table m-t">\r\n        <tbody>\r\n            <tr>\r\n                <th>Name</th>\r\n                <th>Description</th>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">skip</td>\r\n                <td>A count of how many additional items are in the row and will need an index value (default: 0).</td>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">offset</td>\r\n                <td>A constant offset to apply to each calculated index (default: 0).</td>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">base</td>\r\n                <td>The lowest index value (default: 0).</td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n</div>\r\n\r\n<p>\r\n    If no values are provided then each item subject to the <code>ng-repeat</code> would receive an index value <em>0, 1, 2, 3 …</em>.\r\n</p>'},function(e,t){e.exports='<p>When using tables or cards to display information it may be desirable to switch between the different layouts either when\r\n    toggled or automatically when the parent element begins to get too small. To implement layout switching use the\r\n    <code\r\n       >layout-switcher-container</code> directive. The directive must have the following attribute:</p>\r\n\r\n<div class="demo-attributes table-responsive">\r\n    <table class="table m-t">\r\n        <tbody>\r\n            <tr>\r\n                <th>Name</th>\r\n                <th>Type</th>\r\n                <th>Binding</th>\r\n                <th>Description</th>\r\n                <th>Optional</th>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">selected</td>\r\n                <td>string</td>\r\n                <td>variable</td>\r\n                <td>A bindable property which will have the name of the layout to display.</td>\r\n                <td>false</td>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">active</td>\r\n                <td>string</td>\r\n                <td>variable</td>\r\n                <td>A bindable property which, if specified, will store the layout name of the active layout. This differs from\r\n                    the <code>selected</code> value as if the layout is collapsed this property will contain the name of\r\n                    the collapsed layout.</td>\r\n                <td>true</td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n</div>\r\n\r\n<p>Within the <code>layout-switcher-container</code> directive, layouts should be specified using\r\n    the <code>layout-switcher-item</code> directive. They can have the following attributes:</p>\r\n\r\n<div class="demo-attributes table-responsive">\r\n    <table class="table m-t">\r\n        <tbody>\r\n            <tr>\r\n                <th>Name</th>\r\n                <th>Type</th>\r\n                <th>Binding</th>\r\n                <th>Description</th>\r\n                <th>Optional</th>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">name</td>\r\n                <td>string</td>\r\n                <td>literal</td>\r\n                <td>The name of the layout which will be used by <code>layout-switcher-container</code> to indicate which layout\r\n                    to display.</td>\r\n                <td>false</td>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">layout</td>\r\n                <td>string</td>\r\n                <td>literal</td>\r\n                <td>The URL of the HTML file to be used as the layout. If no layout is specified you should place the HTML of\r\n                    the template within the <code>layout-switcher-item</code> element.</td>\r\n                <td>true</td>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">collapse-layout</td>\r\n                <td>string</td>\r\n                <td>literal</td>\r\n                <td>The name of the layout to be used when the display becomes small.</td>\r\n                <td>true</td>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">collapse-size</td>\r\n                <td>string</td>\r\n                <td>literal</td>\r\n                <td>The size at which the layout should change to the collapse layout.</td>\r\n                <td>true</td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n</div>\r\n\r\n<uxd-snippet language="html" [content]="htmlCode"></uxd-snippet>'},function(e,t){e.exports='<p>\r\n    These are actions that can be performed against a single item in a <code>table</code>. There should never be more than\r\n    3 of these actions and they should be restricted to the most common actions a user would want to perform.\r\n</p>\r\n\r\n<p>\r\n    To create these actions add the <code>.item-actions</code> class to the last <code>td</code> in each <code>tr</code>.\r\n    Inside the <code>td.item-actions</code> add an <code>item-hover-actions</code> element which will contain the <code>item-hover-action</code> elements. The <code>item-hover-action</code> can have the following attributes:\r\n</p>\r\n\r\n<div class="demo-attributes table-responsive">\r\n    <table class="table m-t">\r\n        <tbody>\r\n            <tr>\r\n                <th>Name</th>\r\n                <th>Type</th>\r\n                <th>Binding</th>\r\n                <th>Description</th>\r\n                <th>Optional</th>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">name</td>\r\n                <td>string</td>\r\n                <td>literal</td>\r\n                <td>A literal which is the name of the action and is placed in a tooltip.</td>\r\n                <td>false</td>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">icon</td>\r\n                <td>string</td>\r\n                <td>literal</td>\r\n                <td>A literal for the icon class which is added to the action element along with <code>.hpe-icon</code>.</td>\r\n                <td>false</td>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">click</td>\r\n                <td>function</td>\r\n                <td>variable</td>\r\n                <td>A function which is executed when the action is clicked.</td>\r\n                <td>false</td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n</div>\r\n\r\n<uxd-snippet language="html" [content]="htmlCode"></uxd-snippet>'},function(e,t){e.exports='<uxd-multi-column-sorting-wrapper></uxd-multi-column-sorting-wrapper>\r\n\r\n<hr>\r\n\r\n\r\n<p>The different options to sort are contained in the <code>multi-sortable-header</code> directive. The multi-sortable-header\r\n    will require one of the following classes to be added in order to set the text size for the headers.</p>\r\n\r\n<ul>\r\n    <li><code>sorter-header-sm</code> - sets the font size to 14px.</li>\r\n    <li><code>sorter-header-md</code> - sets the font size to 16px.</li>\r\n    <li><code>sorter-header-lg</code> - sets the font size to 18px.</li>\r\n</ul>\r\n\r\n<p>If using this in conjunction with the scrollable table one of the following classes is required.</p>\r\n\r\n<ul>\r\n    <li><code>scrollable-header-sm</code> - sets the font size to 14px.</li>\r\n    <li><code>scrollable-header-md</code> - sets the font size to 16px.</li>\r\n    <li><code>scrollable-header-lg</code> - sets the font size to 18px.</li>\r\n</ul>\r\n\r\n<p>Below is an example of the HTML and controller:</p>\r\n\r\n<tabset>\r\n\r\n    <tab heading="HTML">\r\n        <uxd-snippet language="html" [content]="htmlCode"></uxd-snippet>\r\n    </tab>\r\n\r\n    <tab heading="Javascript">\r\n        <uxd-snippet language="javascript" [content]="jsCode"></uxd-snippet>\r\n    </tab>\r\n\r\n</tabset>\r\n\r\n<p>The following attributes will need to be supplied to the sortable header:</p>\r\n\r\n<div class="demo-attributes table-responsive">\r\n    <table class="table m-t">\r\n        <tbody>\r\n            <tr>\r\n                <th>Name</th>\r\n                <th>Type</th>\r\n                <th>Binding</th>\r\n                <th>Description</th>\r\n                <th>Optional</th>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">headers</td>\r\n                <td>array</td>\r\n                <td>variable</td>\r\n                <td>Array of objects (defined below) used to store all the required header information.</td>\r\n                <td>false</td>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">default-sorter</td>\r\n                <td>array</td>\r\n                <td>variable</td>\r\n                <td>Array of strings indicating which columns will be sorted by default when the page loads, setting this to\r\n                    a variable will allow the sort to be remembered between visits.</td>\r\n                <td>false</td>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">default-order</td>\r\n                <td>array</td>\r\n                <td>variable</td>\r\n                <td>Array of boolean options indicating the sort order of the default columns when the page loads, setting this\r\n                    to a variable will allow the sort to be remembered between visits.</td>\r\n                <td>false</td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n</div>\r\n\r\n<p>The controller implements the select function and will accept the following attributes within the headers object:</p>\r\n\r\n<div class="demo-attributes table-responsive">\r\n    <table class="table m-t">\r\n        <tbody>\r\n            <tr>\r\n                <th>Name</th>\r\n                <th>Type</th>\r\n                <th>Description</th>\r\n                <th>Optional</th>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">sorterHeader</td>\r\n                <td>string</td>\r\n                <td>The column header.</td>\r\n                <td>false</td>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">sortable</td>\r\n                <td>boolean</td>\r\n                <td>True if the column can be used as a sorter.</td>\r\n                <td>false</td>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">sort</td>\r\n                <td>string</td>\r\n                <td>Sort expression for the column.</td>\r\n                <td>false</td>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">center</td>\r\n                <td>boolean</td>\r\n                <td>True if the column header should be centered.</td>\r\n                <td>false</td>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">fixedClass</td>\r\n                <td>string</td>\r\n                <td>A class for the header in order to set the column to a fixed width. This results in columns that do not change\r\n                    size when a sort has been applied or according to data in the cells.\r\n                    <p>The following classes have been created to allow for fixed column widths:</p>\r\n                    <ul>\r\n                        <li><code>table-col-icon</code> - width of 65px. Optimum width for a column containing icons.</li>\r\n                        <li><code>table-col-xs</code> - width of 5%.</li>\r\n                        <li><code>table-col-sm</code> - width of 10%.</li>\r\n                        <li><code>table-col-md</code> - width of 20%.</li>\r\n                        <li><code>table-col-lg</code> - width of 30%.</li>\r\n                        <li><code>table-col-xl</code> - width of 40%.</li>\r\n                        <li><code>fixedLayout</code> - sets the table to a fixed layout. To be used in conjunction with the classes\r\n                            above and should be placed within the <code>table</code> tag.</li>\r\n                    </ul>\r\n                    <p>\r\n                        Note: when applying a <code>fixedClass</code> to a column header you must also apply that same class\r\n                        to the <code>td</code> (data row) for that column. You should also specify the class in the <code>table</code>                        tag to be <code>fixedLayout</code>.\r\n                    </p>\r\n                </td>\r\n                <td>true</td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n</div>\r\n\r\n<p>The <code>auto-index</code> attribute in the example below is used to enable keyboard controls - full documentation can\r\n    be found on the <a routerLink="/components/tables" fragment="indices-ng1">Table Indices</a> page.</p>\r\n'},function(e,t){e.exports='<p>These are actions that can be performed against multiple items in a <code>table</code> or a <code>ul</code> with the <code>.card-view</code>    class applied.</p>\r\n\r\n<p>\r\n    Multiple selection actions should be inside a <code>div.affix-toolbar</code> which should be inside a <code>div.affix-container</code>.\r\n    Use the <code>multiple-select-actions</code> element to wrap all the actions. The <code>multiple-select-actions</code>    should also contain any other HTML elements that are not actions but need to be displayed in the toolbar. The <code>multiple-select-actions</code>    has the following attributes:\r\n</p>\r\n\r\n<div class="demo-attributes table-responsive">\r\n    <table class="table m-t">\r\n        <tbody>\r\n            <tr>\r\n                <th>Name</th>\r\n                <th>Type</th>\r\n                <th>Binding</th>\r\n                <th>Description</th>\r\n                <th>Optional</th>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">on-select</td>\r\n                <td>function</td>\r\n                <td>variable</td>\r\n                <td>Should take in an item as a parameter. This is called with the selected item when it is selected. <code>on-select="vm.select(item)"</code></td>\r\n                <td>false</td>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">on-deselect</td>\r\n                <td>function</td>\r\n                <td>variable</td>\r\n                <td>Should take in an item as a parameter. This is called with the selected item when it is deselected. When\r\n                    clearing all selections this method will be passed <code>null</code> as the item. <code>on-deselect="vm.deselect(item)"</code></td>\r\n                <td>false</td>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">key-fn</td>\r\n                <td>function</td>\r\n                <td>variable</td>\r\n                <td>Should take in an item as a parameter. This is called when it is necessary for the directive to uniquely\r\n                    identify an item. <code>key-fn="vm.getId(item)"</code></td>\r\n                <td>false</td>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">total</td>\r\n                <td>number</td>\r\n                <td>variable</td>\r\n                <td>Should return the total count of items. This is used for the Select All function. <code>total="vm.totalItems"</code></td>\r\n                <td>false</td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n</div>\r\n\r\n<uxd-snippet language="html" [content]="htmlCode"></uxd-snippet>\r\n\r\n<p>\r\n    To allow items to be selectable when in selection mode you must have the <code>multiple-select-item="item"</code> attribute\r\n    set to the specified item you want to select. If using a <code>table</code> you should put this attribute on the <code>tr</code>,\r\n    or if being used with <code>.card-view</code> then put this attribute on the <code>li</code>. Note the value specified\r\n    for the attribute is evaluated against the current <code>$scope</code>. A checkbox can be added to the item with the\r\n    <code>multiple-select-checkbox</code> class and the attribute <code>ng-model="multipleSelectChecked"</code>. The <code>td</code>    should also be given the <code>multiple-select-checkbox-table</code> class.\r\n</p>\r\n\r\n<uxd-snippet language="html" [content]="selectionCode"></uxd-snippet>\r\n\r\n<p>\r\n    A selection can be made invalid by changing the items in the grid. A selection can only be made invalid if "Select All" was\r\n    clicked to select all items. The items are considered to have changed when the count, specifed in the <code>total</code>    attribute on the <code>multiple-select-actions</code>, has changed.\r\n</p>\r\n\r\n<p>\r\n    <code>multipleSelectProvider</code> can be used to set the text that is displayed by these directives. You can set the\r\n    following properties on the <code>multipleSelectProvider</code>:\r\n</p>\r\n\r\n<div class="demo-attributes table-responsive">\r\n    <table class="table m-t">\r\n        <tbody>\r\n            <tr>\r\n                <th>Name</th>\r\n                <th>Type</th>\r\n                <th>Description</th>\r\n                <th>Optional</th>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">cancelText</td>\r\n                <td>string</td>\r\n                <td>Displayed beside the "x" when in selection mode. Default : "Cancel"</td>\r\n                <td>true</td>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">selectItemsText</td>\r\n                <td>string</td>\r\n                <td>Displayed when no items are selected, should encourage user to select items. Default : "Select Items or"</td>\r\n                <td>true</td>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">selectedItemsText</td>\r\n                <td>string</td>\r\n                <td>Displayed when items are selected. Default : "Selected"</td>\r\n                <td>true</td>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">selectedItemsUnitText</td>\r\n                <td>string</td>\r\n                <td>Displayed beside the item count when more than one item is selected. Default : "Items."</td>\r\n                <td>true</td>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">selectedItemUnitText</td>\r\n                <td>string</td>\r\n                <td>Displayed beside the item count when a single item is selected. Default : "Item."</td>\r\n                <td>true</td>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">selectAllText</td>\r\n                <td>string</td>\r\n                <td>Displayed in the link for selecting all. Default : "Select All"</td>\r\n                <td>true</td>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">selectNoneText</td>\r\n                <td>string</td>\r\n                <td>Displayed in the link for selecting none. Default : "Select None"</td>\r\n                <td>true</td>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">selectionInvalidText</td>\r\n                <td>string</td>\r\n                <td>Displayed when the selection becomes invalid. Default: "This selection is no longer valid"</td>\r\n                <td>true</td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n</div>'},function(e,t){e.exports='<p>\r\n    As an alternative to using checkboxes for multiple selection, if the preview pane is not required then the grid may be configured\r\n    to select by clicking/shift-clicking on the rows themselves. In this mode, clicking begins a new selection, and shift-clicking\r\n    adds further items to the selection. The <code>multiple-row-select-item="item"</code> attribute on the table row\r\n    enables this, specifying the item to select.\r\n</p>\r\n\r\n<p>\r\n    To enable keyboard navigation without the presence of the preview pane, the <code>keyboard-navigable-table</code> attribute\r\n    may be attached to the <code>&lt;table&gt;</code> element. Then, when the table has focus, the up and down arrows will\r\n    move the highlighted row up and down the table. The left and right arrow keys will move focus between the hover buttons\r\n    on the row, if any are present, and the enter key will activate the focused button. Finally, the space key will toggle\r\n    the selected state for the highlighted row.\r\n</p>\r\n\r\n<uxd-snippet language="html" [content]="htmlCode"></uxd-snippet>'},function(e,t){e.exports='<p>Preview Pane is contained in <code>preview-pane</code> directive. This directive contains the following attributes:</p>\r\n\r\n<div class="demo-attributes table-responsive">\r\n    <table class="table m-t">\r\n        <tbody>\r\n            <tr>\r\n                <th>Name</th>\r\n                <th>Type</th>\r\n                <th>Binding</th>\r\n                <th>Description</th>\r\n                <th>Optional</th>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">preview-file</td>\r\n                <td>string</td>\r\n                <td>variable</td>\r\n                <td>A binding which specifies the file to be previewed.</td>\r\n                <td>false</td>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">preview-title</td>\r\n                <td>string</td>\r\n                <td>variable</td>\r\n                <td>An optional binding that when set will display a title.</td>\r\n                <td>true</td>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">preview-subtitle</td>\r\n                <td>string</td>\r\n                <td>variable</td>\r\n                <td>An optional binding that when set will display a subtitle.</td>\r\n                <td>true</td>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">preview-empty-text</td>\r\n                <td>string</td>\r\n                <td>variable</td>\r\n                <td>An optional binding that when set will display a text when preview pane is empty.</td>\r\n                <td>true</td>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">shadow</td>\r\n                <td>boolean</td>\r\n                <td>literak</td>\r\n                <td>An optional binding that will display a curved shadow on the bottom of the title or subtitle.</td>\r\n                <td>true</td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n</div>\r\n\r\n<uxd-snippet language="html" [content]="toggleCode"></uxd-snippet>\r\n\r\n<p>\r\n    Preview Pane is triggered by a Preview button defined in the <code>preview-pane-toggle</code> directive. The attributes\r\n    of this directive are:\r\n</p>\r\n\r\n<div class="demo-attributes table-responsive">\r\n    <table class="table m-t">\r\n        <tbody>\r\n            <tr>\r\n                <th>Name</th>\r\n                <th>Type</th>\r\n                <th>Binding</th>\r\n                <th>Description</th>\r\n                <th>Optional</th>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">set-preview</td>\r\n                <td>boolean</td>\r\n                <td>variable</td>\r\n                <td>Defines if a Preview is enabled or disabled.</td>\r\n                <td>false</td>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">tooltip</td>\r\n                <td>string</td>\r\n                <td>literal</td>\r\n                <td>The tooltip for the toggle button.</td>\r\n                <td>false</td>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">aria-label</td>\r\n                <td>string</td>\r\n                <td>literal</td>\r\n                <td>Labels the preview button for assistive technologies.</td>\r\n                <td>false</td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n</div>\r\n\r\n<p>\r\n    <code>.hpe-divide-right</code> or <code>hpe-checkbox</code> classes are used along with <code>.hpe-lg</code> class for\r\n    larger size of icons, that shows if Preview is enabled or disabled.\r\n</p>\r\n\r\n<p>\r\n    Every item in the preview list is contained in the <code>preview-pane-item</code> directive. The directive defines the\r\n    method that is executed when the row is clicked for preview. The user can implement the <code>keydown-select</code> attribute\r\n    of this directive, set to <code>true</code> if he or she wishes to automatically select (click) a row when traversing\r\n    a list with keyboard controls.\r\n</p>\r\n\r\n<p>Define the tabIndex on each row to enable keyboard navigation.</p>\r\n\r\n<uxd-snippet language="html" [content]="previewItemCode"></uxd-snippet>'},function(e,t){e.exports='<uxd-preview-pane-window-wrapper></uxd-preview-pane-window-wrapper>\r\n\r\n<hr>\r\n\r\n<blockquote>\r\n    <p>\r\n        <strong>Note</strong>: Due to browser limitations any directives that specify a template will not work in the preview\r\n        pane window if viewed in Internet Explorer.\r\n    </p>\r\n</blockquote>\r\n\r\n<p>\r\n    The Preview Pane Window allows you to open a separate window for the currently displayed file. This is especially useful\r\n    when using dual monitors allowing a larger preview window to be viewed on a second monitor.\r\n</p>\r\n\r\n<p>\r\n    You can have a list of files and when traversing through the list with the Preview Pane Window open, you can see the page\r\n    updating to display the correct file.\r\n</p>\r\n\r\n<p>\r\n    A very interesting feature of the Preview Pane Window is that when you are displaying the preview in a separate window, any\r\n    changes made in the secondary window will update the original window, and vice versa. This means you can see your changes\r\n    happening live and don’t have to worry about writing complex code to keep the 2 windows in sync (2 way communication\r\n    between the windows achieved).\r\n</p>\r\n\r\n<p>\r\n    You can see this in our example above by navigating to any <code>.html</code> file (e.g.\r\n    <code>Document 1.html</code>) and clicking the “Standalone Viewer” button above the Preview Pane area ( <i class="hpe-icon hpe-clone"></i> ). \r\n    Enter text into the “Signed” input field and you will see the Preview Pane Window updating as you type, and vice versa\r\n    if you make changes in the Preview Pane Window.\r\n</p>\r\n\r\n<p>\r\n    In order to implement the Preview Pane Window, you must use the <code>preview-pane-window</code> directive and give it\r\n    a unique <code>preview-name</code> attribute. This will insert the “Standalone Viewer” button which the user can click\r\n    to open the Preview Pane Window. The <code>preview-pane</code> directive must also have a <code>preview-name</code> attribute\r\n    set which will be the same value as the attribute you set in the <code>preview-pane-window</code> directive.\r\n</p>\r\n\r\n<uxd-snippet language="html" [content]="sampleCode"></uxd-snippet>\r\n\r\n<blockquote>\r\n    <p>\r\n        Refer to the <a routerLink="/components/tables" fragment="preview-pane-ng1">Preview Pane</a> page for further documentation on how to implement a\r\n        Preview Pane.\r\n    </p>\r\n</blockquote>\r\n\r\n<p>You can see the code used in our example above by selecting the appropriate tabs below:</p>\r\n\r\n<tabset>\r\n    <tab heading="HTML">\r\n        <uxd-snippet language="html" [content]="htmlCode"></uxd-snippet>\r\n    </tab>\r\n    \r\n    <tab heading="Javascript">\r\n        <uxd-snippet language="javascript" [content]="jsCode"></uxd-snippet>\r\n    </tab>\r\n    \r\n    <tab heading="CSS">\r\n        <uxd-snippet language="css" [content]="cssCode"></uxd-snippet>\r\n    </tab>\r\n</tabset>\r\n\r\n<p>\r\n    The preview pane window has the class <code>.preview-pane-window-contents</code> class which can be used to style things\r\n    different when they are within the window. One use for this is to hide the footer when in the preview pane but make it\r\n    visible when in the window. An example of a preview pane footer can be found below:\r\n</p>\r\n\r\n<uxd-snippet language="html" [content]="footerCode"></uxd-snippet>'},function(e,t){e.exports='<uxd-reorderable-table-wrapper></uxd-reorderable-table-wrapper>\r\n\r\n<hr>\r\n\r\n<p>\r\n    Table rows can be reordered by using the <code>reorderable-table</code> directive. The above example shows how to add\r\n    buttons to move rows up or down, add a handle to allow a row to be dragged into a new position and also a button to remove\r\n    individual rows.\r\n</p>\r\n\r\n<tabset>\r\n    <tab heading="HTML">\r\n        <uxd-snippet language="html" [content]="htmlCode"></uxd-snippet>\r\n    </tab>\r\n    \r\n    <tab heading="Javascript">\r\n        <uxd-snippet language="javascript" [content]="jsCode"></uxd-snippet>\r\n    </tab>\r\n    \r\n    <tab heading="CSS">\r\n        <uxd-snippet language="css" [content]="cssCode"></uxd-snippet>\r\n    </tab>\r\n</tabset>\r\n\r\n<p>The following attributes are available to configure the behavior:</p>\r\n\r\n<div class="demo-attributes table-responsive">\r\n    <table class="table m-t">\r\n        <tbody>\r\n            <tr>\r\n                <th>Name</th>\r\n                <th>Type</th>\r\n                <th>Binding</th>\r\n                <th>Description</th>\r\n                <th>Optional</th>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">on-reorder</td>\r\n                <td>function</td>\r\n                <td>variable</td>\r\n                <td>This defines a function to be called when the order of the chart changes at any stage. This function should\r\n                    accept one argument which will contain the updated model.</td>\r\n                <td>true</td>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">on-reorder-complete</td>\r\n                <td>function</td>\r\n                <td>variable</td>\r\n                <td>This defines a function to be called when the user has finished dragging or reordering the rows. This function\r\n                    should accept one argument which will contain the updated model.</td>\r\n                <td>true</td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n</div>\r\n\r\n<h4 id="table-data">Table Data</h4>\r\n\r\n<p>\r\n    The <code>table</code> element should have both the <code>reorderable-table</code> directive and an <code>ng-model</code>.\r\n    The <code>ng-model</code> should be set to the array in the controller containing the table data. This model will be\r\n    updated when any rows are reordered to reflect the changes.\r\n</p>\r\n\r\n<p>\r\n    The table rows should be rendered using the <code>ng-repeat</code> directive as this will keep all changes in both the\r\n    UI and model in sync. Note that you cannot use <code>track by</code> in the <code>ng-repeat</code> as the <code>reorderable-table</code>    directive tracks each row internally. Using <code>track by</code> will prevent the table from working as expected.\r\n</p>\r\n\r\n<p>The example above uses the following to render table rows using <code>ng-repeat</code>:</p>\r\n\r\n<uxd-snippet language="html" [content]="tableDataCode"></uxd-snippet>\r\n\r\n<h4 id="reorder-controls">Reorder Controls</h4>\r\n\r\n<p>\r\n    Any element in the table row can be used to move a row up or down or to drag it. These elements are designated by adding\r\n    specific attributes to them. The following attributes can be added to elements to give them reorder actions:\r\n</p>\r\n\r\n<div class="demo-attributes table-responsive">\r\n    <table class="table m-t">\r\n        <tbody>\r\n            <tr>\r\n                <th>Name</th>\r\n                <th>Description</th>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">reorder-up</td>\r\n                <td>When the element with this attribute is clicked the row will be moved up one position.</td>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">reorder-drag</td>\r\n                <td>The element with this attribute can be used to drag a row to a different position in the list.</td>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">reorder-down</td>\r\n                <td>When the element with this attribute is clicked the row will be moved down one position.</td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n</div>\r\n\r\n<p>In the example above we added the following as our reordering controls:</p>\r\n\r\n<uxd-snippet language="html" [content]="controlsCode"></uxd-snippet>\r\n\r\n<h4 id="removing-rows">Removing Rows</h4>\r\n\r\n<p>\r\n    To remove rows from a reorderable table add a button to the row that calls a function in your controller which will remove\r\n    the appropriate item from the model array, after which the table will re-render showing the correct items., e.g.:\r\n</p>\r\n\r\n<tabset>\r\n    <tab heading="HTML">\r\n        <uxd-snippet language="html" [content]="removeRowHtmlCode"></uxd-snippet>\r\n    </tab>\r\n    \r\n    <tab heading="Javascript">\r\n        <uxd-snippet language="javascript" [content]="removeRowJsCode"></uxd-snippet>\r\n    </tab>\r\n</tabset>'},function(e,t){e.exports='<uxd-single-column-sorting-wrapper></uxd-single-column-sorting-wrapper>\r\n\r\n<hr>\r\n\r\n<p>The different options to sort are contained in the <code>sortable-header</code> directive. The sortable-header will require\r\n    one of the following classes to be added in order to set the text size for the headers.</p>\r\n\r\n<ul>\r\n    <li><code>sorter-header-sm</code> - sets the font size to 14px.</li>\r\n    <li><code>sorter-header-md</code> - sets the font size to 16px.</li>\r\n    <li><code>sorter-header-lg</code> - sets the font size to 18px.</li>\r\n</ul>\r\n\r\n<p>If using this in conjunction with the scrollable table one of the following classes is required.</p>\r\n\r\n<ul>\r\n    <li><code>scrollable-header-sm</code> - sets the font size to 14px.</li>\r\n    <li><code>scrollable-header-md</code> - sets the font size to 16px.</li>\r\n    <li><code>scrollable-header-lg</code> - sets the font size to 18px.</li>\r\n</ul>\r\n\r\n<p>Below is an example of the HTML and controller:</p>\r\n\r\n<tabset>\r\n\r\n    <tab heading="HTML">\r\n        <uxd-snippet language="html" [content]="htmlCode"></uxd-snippet>\r\n    </tab>\r\n\r\n    <tab heading="Javascript">\r\n        <uxd-snippet language="javascript" [content]="jsCode"></uxd-snippet>\r\n    </tab>\r\n</tabset>\r\n\r\n<p>The following attributes will need to be supplied to the sortable header:</p>\r\n\r\n<div class="demo-attributes table-responsive">\r\n    <table class="table m-t">\r\n        <tbody>\r\n            <tr>\r\n                <th>Name</th>\r\n                <th>Type</th>\r\n                <th>Binding</th>\r\n                <th>Description</th>\r\n                <th>Optional</th>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">headers</td>\r\n                <td>array</td>\r\n                <td>variable</td>\r\n                <td>Array of objects (defined below) used to store all the required header information.</td>\r\n                <td>false</td>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">default-sorter</td>\r\n                <td>string</td>\r\n                <td>variable</td>\r\n                <td>String indicating which column will be sorted by default when the page loads, setting this to a variable\r\n                    will allow the sort to be remembered between visits.</td>\r\n                <td>false</td>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">default-order</td>\r\n                <td>boolean</td>\r\n                <td>variable</td>\r\n                <td>Boolean option indicating the sort order of the default column when the page loads, setting this to a variable\r\n                    will allow the sort to be remembered between visits.</td>\r\n                <td>false</td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n</div>\r\n\r\n<p>The controller implements the select function and will accept the following attributes within the headers object:</p>\r\n\r\n<div class="demo-attributes table-responsive">\r\n    <table class="table m-t">\r\n        <tbody>\r\n            <tr>\r\n                <th>Name</th>\r\n                <th>Type</th>\r\n                <th>Description</th>\r\n                <th>Optional</th>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">sorterHeader</td>\r\n                <td>string</td>\r\n                <td>The column header.</td>\r\n                <td>false</td>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">sortable</td>\r\n                <td>boolean</td>\r\n                <td>True if the column can be used as a sorter.</td>\r\n                <td>false</td>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">sort</td>\r\n                <td>string</td>\r\n                <td>Sort expression for the column.</td>\r\n                <td>false</td>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">center</td>\r\n                <td>boolean</td>\r\n                <td>True if the column header should be centered.</td>\r\n                <td>false</td>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">fixedClass</td>\r\n                <td>string</td>\r\n                <td>A class for the header in order to set the column to a fixed width. This results in columns that do not change\r\n                    size when a sort has been applied or according to data in the cells.\r\n                    <p>The following classes have been created to allow for fixed column widths:</p>\r\n                    <ul>\r\n                        <li><code>table-col-icon</code> - width of 65px. Optimum width for a column containing icons.</li>\r\n                        <li><code>table-col-xs</code> - width of 5%.</li>\r\n                        <li><code>table-col-sm</code> - width of 10%.</li>\r\n                        <li><code>table-col-md</code> - width of 20%.</li>\r\n                        <li><code>table-col-lg</code> - width of 30%.</li>\r\n                        <li><code>table-col-xl</code> - width of 40%.</li>\r\n                        <li><code>fixedLayout</code> - sets the table to a fixed layout. To be used in conjunction with the classes\r\n                            above and should be placed within the <code>table</code> tag.</li>\r\n                    </ul>\r\n                    <p>Note: when applying a <code>fixedClass</code> to a column header you must also apply that same class\r\n                        to the <code>td</code> (data row) for that column. You should also specify the class in the <code>table</code>                        tag to be <code>fixedLayout</code>.</p>\r\n                </td>\r\n                <td>true</td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n</div>\r\n\r\n<p>The <code>auto-index</code> attribute in the example below is used to enable keyboard controls - full documentation can\r\n    be found on the <a routerLink="/components/tables" fragment="indices-ng1">Indices</a> page.</p>\r\n'},function(e,t){e.exports='<uxd-sort-toggle-wrapper></uxd-sort-toggle-wrapper>\r\n\r\n<hr>\r\n\r\n<p>\r\n    The different options to sort are contained in the <code>sort-direction-toggle</code> directive. The attribute <code>label</code>    takes a string which is displayed before the sorter dropdown and the attribute <code>descend</code> is an optional attribute\r\n    which can be set to <code>true</code> to default to sort by descending.\r\n</p>\r\n\r\n<p>The attribute <code>sorters</code> stores the values required for sorting and should have the following attributes:</p>\r\n\r\n<div class="demo-attributes table-responsive">\r\n    <table class="table m-t">\r\n        <tbody>\r\n            <tr>\r\n                <th>Name</th>\r\n                <th>Type</th>\r\n                <th>Binding</th>\r\n                <th>Description</th>\r\n                <th>Optional</th>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">name</td>\r\n                <td>string</td>\r\n                <td>variable</td>\r\n                <td>String displayed in the dropdown list.</td>\r\n                <td>false</td>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">sort</td>\r\n                <td>string</td>\r\n                <td>variable</td>\r\n                <td>String indicating which sort will be applied.</td>\r\n                <td>false</td>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">defaultSorter</td>\r\n                <td>boolean</td>\r\n                <td>variable</td>\r\n                <td>Boolean value set to true to indicate which sort will be applied when the page loads, if none is specified\r\n                    the first object in sorters will be used.</td>\r\n                <td>true</td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n</div>\r\n\r\n<p>An example code would look like:</p>\r\n\r\n<tabset>\r\n    <tab heading="HTML">\r\n        <uxd-snippet language="html" [content]="htmlCode"></uxd-snippet>\r\n    </tab>\r\n\r\n    <tab heading="Javascript">\r\n        <uxd-snippet language="javascript" [content]="jsCode"></uxd-snippet>\r\n    </tab>\r\n</tabset>\r\n'},function(e,t){e.exports='<p>\r\n    The different options to sort are contained in the <code>sorter</code> directive. The attribute <code>sorter-title</code> takes a string which is displayed before the sorter dropdown.\r\n</p>\r\n\r\n<uxd-snippet language="html" [content]="sortingCode"></uxd-snippet>\r\n\r\n<p>Each option to sort is specified using <code>sorter-option</code> directive.</p>\r\n\r\n<p><code>sorter-option</code> should have the following attributes:</p>\r\n\r\n<div class="demo-attributes table-responsive">\r\n    <table class="table m-t">\r\n        <tbody>\r\n            <tr>\r\n                <th>Name</th>\r\n                <th>Type</th>\r\n                <th>Binding</th>\r\n                <th>Description</th>\r\n                <th>Optional</th>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">name</td>\r\n                <td>string</td>\r\n                <td>variable</td>\r\n                <td>Sorter option name displayed.</td>\r\n                <td>false</td>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">select</td>\r\n                <td>function</td>\r\n                <td>variable</td>\r\n                <td>Called when the option is selected. This method performs sorting, pagination and updates the data count.</td>\r\n                <td>false</td>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">default</td>\r\n                <td>boolean</td>\r\n                <td>variable</td>\r\n                <td>True if this is the default sorter.</td>\r\n                <td>false</td>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">icon-class</td>\r\n                <td>string</td>\r\n                <td>variable</td>\r\n                <td>Class name of an icon to display on the right side of the sorter name (Example value: <code>hpe-icon hpe-actions</code>).</td>\r\n                <td>true</td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n</div>\r\n\r\n<p>An example code would look like:</p>\r\n\r\n<tabset>\r\n    <tab heading="HTML">\r\n        <uxd-snippet language="html" [content]="htmlCode"></uxd-snippet>\r\n    </tab>\r\n\r\n    <tab heading="Javascript">\r\n        <uxd-snippet language="javascript" [content]="jsCode"></uxd-snippet>\r\n    </tab>\r\n</tabset>'},function(e,t){e.exports='<p>\r\n    These are actions that can be performed against multiple items in a <code>table</code> or a <code>ul</code> with the\r\n    <code>.card-view</code> class applied. Traditional selection has a hit area only inside the checkbox for each item. Selection\r\n    mode will be activated when at least one check box is selected.\r\n</p>\r\n\r\n<p>Multiple selection actions should be inside a <code>div.affix-toolbar</code> which should be inside a <code>div.affix-container</code>.\r\n    Use the <code>multiple-list-select-actions</code> element to wrap all the actions. The <code>multiple-list-select-actions</code>    has the following attributes:\r\n</p>\r\n\r\n<div class="demo-attributes table-responsive">\r\n    <table class="table m-t">\r\n        <tbody>\r\n            <tr>\r\n                <th>Name</th>\r\n                <th>Type</th>\r\n                <th>Binding</th>\r\n                <th>Description</th>\r\n                <th>Optional</th>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">on-select</td>\r\n                <td>function</td>\r\n                <td>variable</td>\r\n                <td>Should take in an item as a parameter. This is called with the selected item when it is selected. <code>on-select="vm.select(item)"</code></td>\r\n                <td>false</td>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">on-deselect</td>\r\n                <td>function</td>\r\n                <td>variable</td>\r\n                <td>Should take in an item as a parameter. This is called with the selected item when it is deselected. When\r\n                    clearing all selections this method will be passed <code>null</code> as the item. <code>on-deselect="vm.deselect(item)"</code></td>\r\n                <td>false</td>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">key-fn</td>\r\n                <td>function</td>\r\n                <td>variable</td>\r\n                <td>Should take in an item as a parameter. This is called when it is necessary for the directive to uniquely\r\n                    identify an item. <code>key-fn="vm.getId(item)"</code></td>\r\n                <td>false</td>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">total</td>\r\n                <td>number</td>\r\n                <td>variable</td>\r\n                <td>Should return the total count of items. This is used for the Select All function. <code>total="vm.totalItems"</code></td>\r\n                <td>false</td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n</div>\r\n\r\n<p>\r\n    All HTML elements that need to be displayed in the toolbar when list is not in selection mode are enclosed in <code>div .disp</code>.\r\n    The <code>div .disp</code> should also contain any other HTML elements that are not actions but need to be displayed\r\n    in the toolbar. All HTML elements that need to be displayed in the toolbar when the list is in selection mode are enclosed\r\n    in <code>div .reverse-disp</code>. The elements inside <code>div .disp</code> can include <code>multiple-select-action</code>,\r\n    which can also trigger the selection mode.The <code>multiple-select-action</code> can have following attributes:\r\n</p>\r\n\r\n<div class="demo-attributes table-responsive">\r\n    <table class="table m-t">\r\n        <tbody>\r\n            <tr>\r\n                <th>Name</th>\r\n                <th>Type</th>\r\n                <th>Binding</th>\r\n                <th>Description</th>\r\n                <th>Optional</th>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">name</td>\r\n                <td>string</td>\r\n                <td>literal</td>\r\n                <td>The name of the action.</td>\r\n                <td>false</td>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">action</td>\r\n                <td>function</td>\r\n                <td>variable</td>\r\n                <td>This is called when the user confirms they want to proceed with the action.</td>\r\n                <td>false</td>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">type</td>\r\n                <td>string</td>\r\n                <td>literal</td>\r\n                <td>Used to style the action button. Values that can be given here are <code>primary</code>, <code>accent</code>,\r\n                    <code>secondary</code> and <code>warning</code>.</td>\r\n                <td>false</td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n</div>\r\n\r\n<p>\r\n    The <code>div .reverse-disp</code> can have elements <code>display-select-options</code> and <code>display-cancel-option</code>.\r\n    The <code>display-select-options</code> will display the Select All/None options and count of selected items. The <code>display-cancel-option</code>    will show the cancel button which will discard the selection mode on click.\r\n</p>\r\n\r\n<uxd-snippet language="html" [content]="htmlCode"></uxd-snippet>\r\n\r\n<p>\r\n    To get the check box, you must use the <code>.multi-select-checkbox</code> class. Also, <code>multiple-list-select-item="item"</code>    attribute should be set to the specified item you want to select. Note the value specified for the attribute is evaluated\r\n    against the current <code>$scope</code>. The <code>tr</code> or <code>li</code> element should have the classes <code>.clickable .single-select</code>.\r\n    When using a <code>table</code> the <code>extended-checkbox-hit</code> attribute can be added to the <code>td</code>    element that encloses <code>multiple-list-select-item</code> to extend the hit area to the space around the checkbox.\r\n</p>\r\n\r\n<uxd-snippet language="html" [content]="selectionCode"></uxd-snippet>\r\n\r\n<p>\r\n    A selection can be made invalid by changing the items in the grid. A selection can only be made invalid if “Select All” was\r\n    clicked to select all items. The items are considered to have changed when the count, specified in the <code>total</code>    attribute on the <code>multiple-list-select-actions</code>, has changed.\r\n</p>\r\n\r\n<p>\r\n    <code>multipleSelectProvider</code> can be used to set the text that is displayed by these directives. You can set the\r\n    following properties on the <code>multipleSelectProvider</code>:\r\n</p>\r\n\r\n<div class="demo-attributes table-responsive">\r\n    <table class="table m-t">\r\n        <tbody>\r\n            <tr>\r\n                <th>Name</th>\r\n                <th>Type</th>\r\n                <th>Description</th>\r\n                <th>Optional</th>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">cancelText</td>\r\n                <td>string</td>\r\n                <td>Displayed beside the "x" when in selection mode. Default : "Cancel"</td>\r\n                <td>true</td>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">selectItemsText</td>\r\n                <td>string</td>\r\n                <td>Displayed when no items are selected, should encourage user to select items. Default : "Select Items or"</td>\r\n                <td>true</td>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">selectedItemsText</td>\r\n                <td>string</td>\r\n                <td>Displayed when items are selected. Default : "Selected"</td>\r\n                <td>true</td>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">selectedItemsUnitText</td>\r\n                <td>string</td>\r\n                <td>Displayed beside the item count when more than one item is selected. Default : "Items."</td>\r\n                <td>true</td>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">selectedItemUnitText</td>\r\n                <td>string</td>\r\n                <td>Displayed beside the item count when a single item is selected. Default : "Item."</td>\r\n                <td>true</td>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">selectAllText</td>\r\n                <td>string</td>\r\n                <td>Displayed in the link for selecting all. Default : "Select All"</td>\r\n                <td>true</td>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">selectNoneText</td>\r\n                <td>string</td>\r\n                <td>Displayed in the link for selecting none. Default : "Select None"</td>\r\n                <td>true</td>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">selectionInvalidText</td>\r\n                <td>string</td>\r\n                <td>Displayed when the selection becomes invalid. Default: "This selection is no longer valid"</td>\r\n                <td>true</td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n</div>'},function(e,t){e.exports='<uxd-card-tabs-wrapper></uxd-card-tabs-wrapper>\r\n\r\n<hr>\r\n\r\n<p>Card tabs are defined inside a <code>cardset</code> element using a <code>card</code> element. Inside the <code>card</code> element insert any elements you wish to display inside the card. Also inside the <code>card</code> a <code>tab-content</code> element should be defined which will contain the content that will be shown when that card is selected.</p>\r\n\r\n<p>The tab content can be presented above or below the card by using the <code>content-position</code> attribute. The attribute should have a value of <code>top</code> or <code>bottom</code> which will place the content above or below respectively.</p>\r\n\r\n<p>If the <code>cardset</code> has more cards than can be displayed in the space available arrow buttons will appear to allow the user to scroll through all the cards.</p>\r\n\r\n<tabset>\r\n    <tab heading="HTML">\r\n        <uxd-snippet [code]="htmlCode"></uxd-snippet>\r\n    </tab>\r\n    <tab heading="JavaScript">\r\n        <uxd-snippet language="javascript" [code]="jsCode"></uxd-snippet>\r\n    </tab>\r\n    <tab heading="CSS">\r\n        <uxd-snippet language="css" [code]="cssCode"></uxd-snippet>\r\n    </tab>\r\n</tabset>'},function(e,t){e.exports='<uxd-detailed-tab-wrapper></uxd-detailed-tab-wrapper>\r\n\r\n<hr>\r\n\r\n<p>Above is a more detailed example of how the tabs can be used within an application, its is recommended to follow this design to avoid errors.</p>\r\n\r\n<tabset>\r\n    <tab heading="HTML">\r\n        <uxd-snippet [code]="htmlCode"></uxd-snippet>\r\n    </tab>\r\n    <tab heading="JavaScript">\r\n        <uxd-snippet language="javascript" [code]="jsCode"></uxd-snippet>\r\n    </tab>\r\n</tabset>\r\n\r\n<tabset>\r\n    <tab heading="Bar Chart HTML">\r\n        <uxd-snippet [code]="barHtml"></uxd-snippet>\r\n    </tab>\r\n    <tab heading="Bar Chart JavaScript">\r\n        <uxd-snippet language="javascript" [code]="barCtrl"></uxd-snippet>\r\n    </tab>\r\n</tabset>\r\n\r\n<tabset>\r\n    <tab heading="Sankey HTML">\r\n        <uxd-snippet [code]="sankeyHtml"></uxd-snippet>\r\n    </tab>\r\n    <tab heading="Sankey JavaScript">\r\n        <uxd-snippet language="javascript" [code]="sankeyCtrl"></uxd-snippet>\r\n    </tab>\r\n</tabset>\r\n\r\n<tabset>\r\n    <tab heading="Table HTML">\r\n        <uxd-snippet [code]="tableHtml"></uxd-snippet>\r\n    </tab>\r\n    <tab heading="Table JavaScript">\r\n        <uxd-snippet language="javascript" [code]="tableCtrl"></uxd-snippet>\r\n    </tab>\r\n</tabset>'},function(e,t){e.exports='<div class="m-t" ng-controller="TabsBarCtrl as vm">\r\n  <div class="flot-chart">\r\n\t\t<flot dataset="vm.barChart.data" options="vm.barChart.baroptions"\r\n\t\t\ton-plot-click="vm.barChart.onPlotClick(event,pos,item)"\r\n\t\t\ton-hover-click="vm.barChart.onPlotHover(event,pos,item)">\r\n\t\t</flot>\r\n\t</div>\r\n</div>'},function(e,t){e.exports='<div class="m-t" ng-controller="TabsSankeyCtrl as vm">\r\n  <sankey chart-data="vm.data" options="vm.options" click="vm.click"></sankey>\r\n</div>'},function(e,t){e.exports='<div class="m-t" ng-controller="TabsTableCtrl as vm">\r\n  \t<scrollable-table watch="sampleTableData" container-height="300" header-height="35">\r\n\t  <table class="table table-hover">\r\n\t      <thead>\r\n\t      <tr>\r\n\t          <th>id</th>\r\n\t          <th>Data</th>\r\n\t          <th>User</th>\r\n\t          <th>Task</th>\r\n\t          <th>Date</th>\r\n\t          <th>Action</th>\r\n\t      </tr>\r\n\t      </thead>\r\n\t      <tbody>\r\n\t      <tr ng-repeat="value in ::vm.sampleTableData">\r\n\t          <td ng-bind="::value.id"></td>\r\n\t          <td ng-bind="::value.Data"></td>\r\n\t          <td ng-bind="::value.User"></td>\r\n\t          <td ng-bind="::value.Task"></td>\r\n\t          <td ng-bind="::value.Date"></td>\r\n\t          <td>\r\n\t              <span class="hpe-icon hpe-checkmark text-secondary"></span>\r\n\t          </td>\r\n\t      </tr>\r\n\t      </tbody>\r\n\t  </table>\r\n\t</scrollable-table>\r\n</div>'},function(e,t){e.exports='<uxd-stacked-tabs-wrapper></uxd-stacked-tabs-wrapper>\r\n\r\n<p>The stacked tabs can be present on left side or right side of the content. The left-stacked tabs can be created by enclosing\r\n    the HTML of normal tabs with a <code>div .tabs-left</code>. The right-stacked tabs can be created by enclosing the HTML\r\n    of normal tabs with a <code>div .tabs-right</code>. The <code>align</code> attribute of the <code>tab</code> element\r\n    can be used to set the alignment of text and icon in the tab heading. This attribute can have value as <code>text-center</code>,\r\n    <code>text-left</code> or <code>text-right</code>. Other attributes of stacked tabs are same as the normal tabs.</p>\r\n\r\n<tabset>\r\n    <tab heading="HTML">\r\n        <uxd-snippet [code]="htmlCode"></uxd-snippet>\r\n    </tab>\r\n    <tab heading="JavaScript">\r\n        <uxd-snippet language="javascript" [code]="jsCode"></uxd-snippet>\r\n    </tab>\r\n    <tab heading="CSS">\r\n        <uxd-snippet language="css" [code]="cssCode"></uxd-snippet>\r\n    </tab>\r\n</tabset>'},function(e,t){e.exports='<uxd-tabs-wrapper></uxd-tabs-wrapper>\r\n\r\n<hr>\r\n\r\n<p>Tabs are definied inside a <code>tabset</code> element using a <code>tab</code> element. Use the <code>heading</code> attribute\r\n    on the <code>tab</code> element or the <code>tab-heading</code> element to define the tab heading, along with the <code>.tab-title</code>    class. The <code>tabset type</code> can be assigned <code>tabs minimal-tab</code> value to get the minimal tab. Set the\r\n    <code>active</code> attribute to a property which is updated with whether the tab is active or not. You can use the <code>disabled</code>    attribute in a similar manner. Set the <code>select</code> attribute to an expression that will be evaluated when the\r\n    tab is selected. The <code>align</code> attribute can be set to <code>text-center</code> to align the tab heading to\r\n    center. For the old style of tab strip, set the <code>.outline-tab</code> class on the <code>tabset</code> element instead\r\n    of setting the tab type.</p>\r\n\r\n<tabset>\r\n    <tab heading="HTML">\r\n        <uxd-snippet [code]="htmlCode"></uxd-snippet>\r\n    </tab>\r\n    <tab heading="JavaScript">\r\n        <uxd-snippet language="javascript" [code]="jsCode"></uxd-snippet>\r\n    </tab>\r\n</tabset>'},function(e,t){e.exports='<div class="m-t">\r\n  <h4>{{::tab.title}}</h4>\r\n  <p>Who are so beguiled and demoralized by the charms of pleasure of the moment, so blinded by desire, that they cannot foresee.</p>\r\n  <p>But I must explain to you how all this mistaken idea of denouncing pleasure and praising pain was born and I will give you a complete account of the system, and expound the actual teachings of the great explorer of the truth, the master-builder of human happiness. No one rejects, dislikes, or avoids pleasure itself.</p>\r\n</div>'},function(e,t){e.exports='<uxd-timeline-wrapper></uxd-timeline-wrapper>\r\n\r\n<hr>\r\n\r\n<p>Timeline is a responsive, data-driven vertical component to tell a story, show history or describe a sequence of events. It is defined within the <code>timeline</code> tags. The tag <code>timeline-event</code> represents each event in a timeline. The circular badge indicating each event is defined using the <code>timeline-badge</code> element.</p>\r\n\r\n<p>The <code>timeline-badge</code> can have the <code>class</code> set as any of the following colors:</p>\r\n\r\n<p><code>.primary</code> or\r\n<code>.accent</code> or\r\n<code>.alternate1</code> or\r\n<code>.alternate2</code> or\r\n<code>.alternate3</code> or\r\n<code>.vibrant1</code> or\r\n<code>.vibrant2</code> or\r\n<code>.grey1</code> or\r\n<code>.grey2</code> or\r\n<code>.grey3</code> or\r\n<code>.grey4</code> or\r\n<code>.grey5</code></p>\r\n\r\n<p>The <code>timeline-badge</code> can have the <code>class</code> set as one of the following status colors:</p>\r\n\r\n<p><code>.success</code> or\r\n<code>.warning</code> or\r\n<code>.critical</code></p>\r\n\r\n<p>The contents of the timeline event are defined within the <code>timeline-panel</code> element. The <code>timeline-panel</code> can have an optional element <code>timeline-heading</code> to display a heading for the contents of the timeline panel.</p>\r\n\r\n<p>Sample HTML code for the timeline is shown as follows:</p>\r\n\r\n<tabset>\r\n    <tab heading="HTML">\r\n        <uxd-snippet [code]="htmlCode"></uxd-snippet>\r\n    </tab>\r\n    <tab heading="JavaScript">\r\n        <uxd-snippet language="javascript" [code]="jsCode"></uxd-snippet>\r\n    </tab>\r\n</tabset>'},function(e,t){e.exports='<uxd-overflow-tooltip-wrapper></uxd-overflow-tooltip-wrapper>\r\n\r\n<hr>\r\n\r\n<p>The <code>overflow-tooltip</code> directive can be used to truncate text which may overflow its container, replacing the\r\n    overflow with an ellipsis. It is particularly suited for multi-line text where the ellipsis should come on the final\r\n    line. The text will always be truncated at the last full word, unless the text is a single word or the text has no spaces,\r\n    in which case words may be truncated between letters. The truncation position will be updated when the container resizes\r\n    or when the text content changes, and the tooltip will only be shown if the text has been truncated.</p>\r\n\r\n<p>The contents of the element to which this directive are applied can also contain HTML in addition to plain text, allowing\r\n    complex formatting to be retained. The <code>overflow-tooltip</code> directive is compatible with the <code>tooltip-placement</code>    attribute described above.</p>\r\n\r\n<uxd-snippet [code]="htmlCode"></uxd-snippet>\r\n\r\n<p>The CSS used in the example above is as follows:</p>\r\n\r\n<uxd-snippet language="css" [code]="cssCode"></uxd-snippet>'},function(e,t){e.exports='<uxd-single-line-overflow-tooltip-wrapper></uxd-single-line-overflow-tooltip-wrapper>\r\n\r\n<hr>\r\n\r\n<p>The <code class="highlighter-rouge">single-line-overflow-tooltip</code> directive can be used to truncate text which may overflow a single line, replacing the overflow with an ellipsis. The truncation position will be updated when the container resizes or when the text content changes, and the tooltip will only be shown if the text has been truncated.</p>\r\n\r\n<p>The contents of the element to which this directive are applied can also contain HTML in addition to plain text, allowing complex formatting to be retained. The <code class="highlighter-rouge">single-line-overflow-tooltip</code> directive is compatible with the <code class="highlighter-rouge">tooltip-placement</code> attribute described above.</p>\r\n\r\n<uxd-snippet [code]="htmlCode"></uxd-snippet>\r\n\r\n<p>The CSS used in the example above is as follows:</p>\r\n\r\n<uxd-snippet language="css" [code]="cssCode"></uxd-snippet>'},function(e,t){e.exports='<uxd-static-tooltip-wrapper></uxd-static-tooltip-wrapper>\r\n\r\n<hr>\r\n\r\n<p>Static tooltips can be added to elements to give the user detailed instructions on the purpose of the control when they first\r\n    navigate to the page.</p>\r\n\r\n<p>Add the <code>static-tooltip</code> directive to an element to show a static tooltip.</p>\r\n\r\n<tabset>\r\n    <tab heading="HTML">\r\n        <uxd-snippet [code]="htmlCode"></uxd-snippet>\r\n    </tab>\r\n    <tab heading="JavaScript">\r\n        <uxd-snippet language="javascript" [code]="jsCode"></uxd-snippet>\r\n    </tab>\r\n</tabset>\r\n\r\n<p>The following attributes can be used to configure static tooltips:</p>\r\n\r\n<div class="demo-attributes table-responsive">\r\n    <table class="table m-t">\r\n        <tr>\r\n            <th>Name</th>\r\n            <th>Type</th>\r\n            <th>Binding</th>\r\n            <th>Description</th>\r\n            <th>Optional</th>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">content</td>\r\n            <td>string</td>\r\n            <td>variable</td>\r\n            <td>Specifies the text to be displayed within the tooltip.</td>\r\n            <td>false</td>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">dismiss-text</td>\r\n            <td>string</td>\r\n            <td>variable</td>\r\n            <td>If specified will set the text of the dismiss all static tooltips option that will be displayed on hover. The\r\n                default is <code>\'HIDE TIPS\'</code>.</td>\r\n            <td>true</td>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">direction</td>\r\n            <td>string</td>\r\n            <td>variable</td>\r\n            <td>Specifies the direction the tooltip will point to the chosen element. Available options are: <code>up</code>,\r\n                <code>down</code>, <code>left</code> and <code>right</code>.</td>\r\n            <td>false</td>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">position</td>\r\n            <td>string</td>\r\n            <td>variable</td>\r\n            <td>Specifies where the callout should be placed on the tooltip. Available options are: <code>start</code>, <code>middle</code>                and <code>end</code>.</td>\r\n            <td>false</td>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">offset-x</td>\r\n            <td>number</td>\r\n            <td>variable</td>\r\n            <td>Specifies the number of pixels to the left or right that the tooltip should be offset.</td>\r\n            <td>true</td>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">offset-y</td>\r\n            <td>number</td>\r\n            <td>variable</td>\r\n            <td>Specifies the number of pixels up or down that the tooltip should be offset.</td>\r\n            <td>true</td>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">z-index</td>\r\n            <td>number</td>\r\n            <td>variable</td>\r\n            <td>If specified will set the z-index of the tooltip. Default value is <code>10098</code>.</td>\r\n            <td>true</td>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">tooltip-class</td>\r\n            <td>string</td>\r\n            <td>variable</td>\r\n            <td>If specified will allow a custom class to be set on the tooltip offering more customization.</td>\r\n            <td>true</td>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">tooltip-hidden</td>\r\n            <td>boolean</td>\r\n            <td>variable</td>\r\n            <td>If set to true this tooltip will not be displayed initially</td>\r\n            <td>true</td>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">tooltip-id</td>\r\n            <td>string</td>\r\n            <td>variable</td>\r\n            <td>Can be used to set a custom id on the tooltip, these must be unique for each tooltip.</td>\r\n            <td>true</td>\r\n        </tr>\r\n    </table>\r\n</div>\r\n\r\n<p>The Static Tooltip Service, <code>$staticTooltip</code>, allows you to show and hide all tooltips or individual tooltips\r\n    and check if any tooltips are visible. The full API for this service is as follows:</p>\r\n\r\n<div class="demo-attributes table-responsive">\r\n    <table class="table">\r\n        <tr>\r\n            <th>Name</th>\r\n            <th>Description</th>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">showAllTooltips</td>\r\n            <td>This function will hide all the tooltips.</td>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">hideAllTooltips</td>\r\n            <td>This function will hide all the tooltips/</td>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">showTooltip</td>\r\n            <td>\r\n                Arguments:\r\n                <ul>\r\n                    <li><code>id</code> - string</li>\r\n                </ul>\r\n                <p>This function will show the tooltip with the matching id.</p>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">hideTooltip</td>\r\n            <td>\r\n                Arguments:\r\n                <ul>\r\n                    <li><code>id</code> - string</li>\r\n                </ul>\r\n                <p>This function will hide the tooltip with the matching id.</p>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">tooltipsVisible</td>\r\n            <td>This function returns true if any tooltips are visible, otherwise returns false.</td>\r\n        </tr>\r\n    </table>\r\n</div>\r\n\r\n<blockquote>\r\n    <p>An example of how static tooltips can be used in an application can be found on <a routerLink="/showcase/listview1">List View 1</a>.</p>\r\n</blockquote>'},function(e,t){e.exports='<uxd-tooltips-wrapper></uxd-tooltips-wrapper>\r\n\r\n<hr>\r\n\r\n<p>To put a tooltip on an element set the <code>tooltip</code> attribute with the required text. The tooltip is placed at the top by default. You can change the placement of the tooltip by setting the <code>tooltip-placement</code> attribute to “top”, “bottom”, “left” or “right”.</p>\r\n\r\n<p>To support users of assistive technologies, include an <code>aria-label</code> attribute on the button to convey the tooltip text.</p>\r\n\r\n<tabset>\r\n    <tab heading="HTML">\r\n        <uxd-snippet [code]="htmlCode"></uxd-snippet>\r\n    </tab>\r\n    <tab heading="JavaScript">\r\n        <uxd-snippet language="javascript" [code]="jsCode"></uxd-snippet>\r\n    </tab>\r\n</tabset>'},function(e,t){e.exports='<uxd-tree-grid-asynchronous-loading-wrapper></uxd-tree-grid-asynchronous-loading-wrapper>\r\n\r\n<hr>\r\n\r\n<p>This example demonstrates asynchronous loading in the tree grid. The <code>data</code> attribute is bound to a function which\r\n    returns a promise for the child items of the provided data item.</p>\r\n\r\n<p>The <code>tree-data</code> attribute is used to examine and control the tree grid. The buttons above the grid use it to locate\r\n    all “folder” type rows, and invoke the <code>contract</code>, <code>expand</code> or <code>reload</code> functions on\r\n    them. It is also watched for changes made by the controls in the Priority column, and an array of the high priority items\r\n    is maintained in the controller.</p>\r\n\r\n<tabset>\r\n    <tab heading="HTML">\r\n        <uxd-snippet [code]="htmlCode"></uxd-snippet>\r\n    </tab>\r\n    <tab heading="JavaScript">\r\n        <uxd-snippet language="javascript" [code]="jsCodeShort"></uxd-snippet>\r\n    </tab>\r\n    <tab heading="Priority Template HTML">\r\n        <uxd-snippet [code]="template"></uxd-snippet>\r\n    </tab>\r\n</tabset>'},function(e,t){e.exports='<uxd-tree-grid-wrapper></uxd-tree-grid-wrapper>\r\n\r\n<hr>\r\n\r\n<p>The tree grid component allows hierarchical data to be displayed and navigated along with the benefits of a tabular presentation.\r\n  It shares familiar functionality with the list views, such as keyboard navigation and multiple selection, as well as the\r\n  ability to configure columns to fit the source data.</p>\r\n\r\n<p>The source for the example above is as follows:</p>\r\n\r\n<tabset>\r\n  <tab heading="HTML">\r\n    <uxd-snippet [code]="sampleHtml"></uxd-snippet>\r\n  </tab>\r\n  <tab heading="JavaScript">\r\n    <uxd-snippet language="javascript" [code]="sampleJs"></uxd-snippet>\r\n  </tab>\r\n</tabset>\r\n\r\n<h4>Actions</h4>\r\n\r\n<tabset>\r\n  <tab heading="HTML">\r\n    <uxd-snippet [code]="actionsHtml"></uxd-snippet>\r\n  </tab>\r\n  <tab heading="JavaScript">\r\n    <uxd-snippet language="javascript" [code]="actionsJs"></uxd-snippet>\r\n  </tab>\r\n</tabset>\r\n\r\n<h4>Display Panel</h4>\r\n\r\n<tabset>\r\n  <tab heading="Display Panel HTML">\r\n    <uxd-snippet [code]="displayPanel"></uxd-snippet>\r\n  </tab>\r\n  <tab heading="Display Panel Footer HTML">\r\n    <uxd-snippet [code]="displayPanelFooter"></uxd-snippet>\r\n  </tab>\r\n</tabset>\r\n\r\n<p>The attributes which can be applied to the <code>treegrid</code> directive are described in more detail below.</p>\r\n\r\n<div class="demo-attributes table-responsive">\r\n  <table class="table m-t">\r\n    <tr>\r\n      <th>Name</th>\r\n      <th>Type</th>\r\n      <th>Binding</th>\r\n      <th>Description</th>\r\n      <th>Optional</th>\r\n    </tr>\r\n    <tr>\r\n      <td class="attribute">data</td>\r\n      <td>array or function</td>\r\n      <td>variable</td>\r\n      <td>\r\n        <p>The data source of the tree grid. For smaller data sets, the entire hierachy may be loaded and passed to the <code>data</code>          attribute as an array of objects. Each object may have an array of child objects; the name of the property containing\r\n          this array must be specified in the <code>options</code> parameter. Any other properties may be mapped to columns\r\n          in the tree grid using the <code>columns</code> configuration.</p>\r\n        <p>For larger data sets, the tree grid can load the children of an item asynchronously. In this case, a function may\r\n          be provided to the <code>data</code> attribute. The argument to this function is the parent object for which children\r\n          should be loaded; this will be undefined when loading the top level of items. The return value should be either\r\n          an array of objects or a promise which resolves to an array of objects, representing the immediate children of\r\n          the parent. In this mode, the <code>hasChildren</code> function must be defined in the <code>options</code> parameter,\r\n          to determine which rows may be expanded.</p>\r\n      </td>\r\n      <td>false</td>\r\n    </tr>\r\n    <tr>\r\n      <td class="attribute">columns</td>\r\n      <td>array</td>\r\n      <td>variable</td>\r\n      <td>A list of the columns to be presented in the tree grid, along with details of how to present the data in that column.\r\n        It is important to define at least one column, since there is no default behaviour.</td>\r\n      <td>false</td>\r\n    </tr>\r\n    <tr>\r\n      <td class="attribute">tree-data</td>\r\n      <td>array</td>\r\n      <td>variable</td>\r\n      <td>This will be bound to a hierarchy of objects representing the current tree state. It can be used to access the data\r\n        objects which are currently loaded into the grid, which is useful in asynchronous mode since items dynamically retrieved\r\n        from a web service do not have to be manually tracked in the controller. It also provides information on the state\r\n        of the item\'s row in the tree grid.</td>\r\n      <td>false</td>\r\n    </tr>\r\n    <tr>\r\n      <td class="attribute">selected</td>\r\n      <td>array</td>\r\n      <td>variable</td>\r\n      <td>This array will contain the objects currently selected in the tree grid. This is a standard multiple selection component,\r\n        so the techniques described in <a routerLink="/components/tables" fragment="multiple-select-actions-ng1">Multiple Selection Actions</a> may also\r\n        be applied to the tree grid.</td>\r\n      <td>true</td>\r\n    </tr>\r\n    <tr>\r\n      <td class="attribute">current-row</td>\r\n      <td>object</td>\r\n      <td>variable</td>\r\n      <td>\r\n        <p>This object is bound to the row in the tree grid with focus. The current row is the most recently clicked, or the\r\n          row which is highlighted when using keyboard navigation. The object contains the following properties:</p>\r\n        <ul>\r\n          <li><code>element</code> - the <code>tr</code> element representing the current row in the tree grid.</li>\r\n          <li><code>item</code> - the source data item for the current row.</li>\r\n          <li><code>row</code> - the row object with the properties described in the Tree Data section.</li>\r\n        </ul>\r\n      </td>\r\n      <td>true</td>\r\n    </tr>\r\n    <tr>\r\n      <td class="attribute">options</td>\r\n      <td>object</td>\r\n      <td>variable</td>\r\n      <td>Configuration options which can be used to customise the appearance and behaviour of the tree grid. Most importantly,\r\n        the property which contains child nodes can be set here. This is also where the icon set and expander graphics can\r\n        be customised.</td>\r\n      <td>false</td>\r\n    </tr>\r\n  </table>\r\n</div>\r\n\r\n<h4>Column Definition</h4>\r\n\r\n<p>The <code>columns</code> attribute receives an array of objects with the following properties:</p>\r\n\r\n<div class="demo-attributes table-responsive">\r\n  <table class="table m-t">\r\n    <tr>\r\n      <th>Name</th>\r\n      <th>Type</th>\r\n      <th>Description</th>\r\n      <th>Optional</th>\r\n    </tr>\r\n    <tr>\r\n      <td class="attribute">name</td>\r\n      <td>string</td>\r\n      <td>The text which appears in the column header.</td>\r\n      <td>false</td>\r\n    </tr>\r\n    <tr>\r\n      <td class="attribute">value</td>\r\n      <td>string or function</td>\r\n      <td>\r\n        <ul>\r\n          <li>As a string, the name of a property in the source data object to display in the column.</li>\r\n          <li>As a function, this will be called to provide the value to display in the column. The argument to the function\r\n            will be the data object to render, and the return value should be a string.</li>\r\n        </ul>\r\n      </td>\r\n      <td>true</td>\r\n    </tr>\r\n    <tr>\r\n      <td class="attribute">template</td>\r\n      <td>string</td>\r\n      <td>Instead of the <code>value</code> property, this may specify the URL or identifier of an Angular template to render\r\n        in the column. In the scope of the template, the <code>item</code> property will contain the data object to render.\r\n        The <code>row</code> property is also available with the properties described in the Tree Data section. If controller\r\n        logic is required in the template, the Angular <code>ng-controller</code> attribute may be used within the template\r\n        markup. Note that the first column should not be a template.</td>\r\n      <td>true</td>\r\n    </tr>\r\n    <tr>\r\n      <td class="attribute">headerClass</td>\r\n      <td>string</td>\r\n      <td>One or more (space-separated) CSS classes to apply to the header <code>th</code> element. A common use may be to align\r\n        the text using the built-in <code>text-center</code> or <code>text-right</code> classes.</td>\r\n      <td>true</td>\r\n    </tr>\r\n    <tr>\r\n      <td class="attribute">cellClass</td>\r\n      <td>string</td>\r\n      <td>One or more (space-separated) CSS classes to apply to the <code>td</code> elements in the column. A common use may\r\n        be to align the text using the built-in <code>text-center</code> or <code>text-right</code> classes.</td>\r\n      <td>true</td>\r\n    </tr>\r\n    <tr>\r\n      <td class="attribute">width</td>\r\n      <td>string</td>\r\n      <td>The width of the column. Values which are valid on the CSS <code>width</code> property are accepted here. This is provided\r\n        as an alternative to specifying width in CSS via the <code>headerClass</code> property.</td>\r\n      <td>true</td>\r\n    </tr>\r\n    <tr>\r\n      <td class="attribute">tooltip</td>\r\n      <td>string</td>\r\n      <td>Text to display as a tooltip when hovering over cells in this column. The source data object is available as <code>item</code>        for the purposes of binding.</td>\r\n      <td>true</td>\r\n    </tr>\r\n    <tr>\r\n      <td class="attribute">tooltipPlacement</td>\r\n      <td>string</td>\r\n      <td>Position of the tooltip relative to the cell. Value may be "top", "bottom", "left", or "right".</td>\r\n      <td>true</td>\r\n    </tr>\r\n  </table>\r\n</div>\r\n\r\n<h4>Tree Data Definition</h4>\r\n\r\n<p>The <code>tree-data</code> attribute receives an array of objects with the following properties:</p>\r\n\r\n<div class="demo-attributes table-responsive">\r\n  <table class="table m-t">\r\n    <tr>\r\n      <th>Name</th>\r\n      <th>Type</th>\r\n      <th>Description</th>\r\n      <th>Optional</th>\r\n    </tr>\r\n    <tr>\r\n      <td class="attribute">dataItem</td>\r\n      <td>object</td>\r\n      <td>A reference to the custom data object representing the row in the tree grid.</td>\r\n      <td>false</td>\r\n    </tr>\r\n    <tr>\r\n      <td class="attribute">children</td>\r\n      <td>array</td>\r\n      <td>An array containing objects of the same format describing the child items of the row. This property is read only; to\r\n        add or remove rows in the tree grid, update the source data and reload.</td>\r\n      <td>false</td>\r\n    </tr>\r\n    <tr>\r\n      <td class="attribute">expanded</td>\r\n      <td>boolean</td>\r\n      <td>Whether the row is expanded in the tree grid. This will be true when the row has been expanded and child items have\r\n        completed loading. This property is read only.</td>\r\n      <td>false</td>\r\n    </tr>\r\n    <tr>\r\n      <td class="attribute">expanding</td>\r\n      <td>boolean</td>\r\n      <td>Whether the row is currently loading children; applies in asynchronous mode. This property is read only.</td>\r\n      <td>false</td>\r\n    </tr>\r\n    <tr>\r\n      <td class="attribute">level</td>\r\n      <td>number</td>\r\n      <td>The depth of the row in the tree grid. The top level items will have the value 0. This property is read only.</td>\r\n      <td>false</td>\r\n    </tr>\r\n    <tr>\r\n      <td class="attribute">api</td>\r\n      <td>object</td>\r\n      <td>\r\n        <p>Contains functions which may be used to control the row. The following functions are available:</p>\r\n        <ul>\r\n          <li><code>expand()</code> - expands the row, if not already expanded. Returns a promise which resolves when the child\r\n            rows are fully loaded.</li>\r\n          <li><code>contract()</code> - contracts the row, if expanded.</li>\r\n          <li><code>reload()</code> - reloads the child items, expanding the row if not already expanded. Returns a promise which\r\n            resolves when the child rows are fully loaded.</li>\r\n          <li><code>getValueForColumn(colIndex)</code> - returns the row display value for the column at <code>colIndex</code>            (0-based index).</li>\r\n        </ul>\r\n      </td>\r\n      <td>false</td>\r\n    </tr>\r\n  </table>\r\n</div>\r\n\r\n<p>The following function may be useful in searching the <code>tree-data</code> structure for specific items:</p>\r\n\r\n<uxd-snippet language="javascript" [code]="jsCode1"></uxd-snippet>\r\n\r\n<h4>Options</h4>\r\n\r\n<p>The <code>options</code> attribute receives an object with the following properties:</p>\r\n\r\n<div class="demo-attributes table-responsive">\r\n  <table class="table m-t">\r\n    <tr>\r\n      <th>Name</th>\r\n      <th>Type</th>\r\n      <th>Description</th>\r\n      <th>Optional</th>\r\n    </tr>\r\n    <tr>\r\n      <td class="attribute">childrenProperty</td>\r\n      <td>string</td>\r\n      <td>If the value of the <code>data</code> attribute is an array, then this must be set to the name of an array property\r\n        on the source data objects which contains the child objects, defining the hierarchy. If the array is present and\r\n        contains items, an expander will be rendered on the corresponding row to show or hide the children.</td>\r\n      <td>true</td>\r\n    </tr>\r\n    <tr>\r\n      <td class="attribute">hasChildren</td>\r\n      <td>function</td>\r\n      <td>If the value of the <code>data</code> attribute is a function (asynchronous operation), then this must be set to a\r\n        function which returns true if the provided object may have children and should therefore display an expander on\r\n        its row.</td>\r\n      <td>true</td>\r\n    </tr>\r\n    <tr>\r\n      <td class="attribute">maxDepth</td>\r\n      <td>number</td>\r\n      <td>The expansion depth limit. After this is reached, expanders will not display even if the data object contains children.\r\n        Default is 5.</td>\r\n      <td>true</td>\r\n    </tr>\r\n    <tr>\r\n      <td class="attribute">expandTopLevel</td>\r\n      <td>boolean</td>\r\n      <td>Set to true if the top-level rows should initially appear expanded. Default is false.</td>\r\n      <td>true</td>\r\n    </tr>\r\n    <tr>\r\n      <td class="attribute">expander</td>\r\n      <td>object</td>\r\n      <td>\r\n        <p>Defines the appearance of the expanders (buttons which toggle display of child rows). This object contains the following\r\n          properties:</p>\r\n        <ul>\r\n          <li><code>type</code> - the type of image to display, either <code>class</code> to use one of the standard <a routerLink="/css/icons">UX Aspects Icons</a> or <code>url</code> to use an icon image.</li>\r\n          <li><code>contracted</code> - the image to show when the row is in a contracted state. Either a CSS class or an image\r\n            URL, according to the <code>type</code>.</li>\r\n          <li><code>expanded</code> - the image to show when the row is in a expanded state. Either a CSS class or an image URL,\r\n            according to the <code>type</code>.</li>\r\n          <li><code>expanding</code> - the image to show when the the row is loading children in asynchronous mode. Either a\r\n            CSS class or an image URL, according to the <code>type</code>.</li>\r\n        </ul>\r\n      </td>\r\n      <td>true</td>\r\n    </tr>\r\n    <tr>\r\n      <td class="attribute">icons</td>\r\n      <td>object</td>\r\n      <td>\r\n        <p>Configures the set of icons which appear on the left of the first column. This object contains the following properties:</p>\r\n        <ul>\r\n          <li><code>type</code> - the type of image to display, either <code>class</code> to use one of the standard <a routerLink="/css/icons">UX Aspects Icons</a> or <code>url</code> to use an icon image.</li>\r\n          <li><code>get</code> - a function which returns the appropriate icon for the data object. The first argument is the\r\n            data object itself, and the second is a boolean indicating whether the row is expanded or not. The function should\r\n            return either a CSS class or an image URL, according to the <code>type</code>.</li>\r\n        </ul>\r\n      </td>\r\n      <td>true</td>\r\n    </tr>\r\n  </table>\r\n</div>\r\n\r\n<h4>Options Examples</h4>\r\n\r\n<p>An example <code>options</code> definition with alternative expanders and icons:</p>\r\n\r\n<uxd-snippet language="javascript" [code]="jsCode2"></uxd-snippet>\r\n\r\n<p>An example <code>options</code> definition using images:</p>\r\n\r\n<uxd-snippet language="javascript" [code]="jsCode3"></uxd-snippet>\r\n\r\n<h4>Events</h4>\r\n\r\n<p>To reload the tree grid to its initial state, issue the <code>treegrid.reload</code> event.</p>\r\n\r\n<uxd-snippet language="javascript" [code]="jsCode4"></uxd-snippet>'},function(e,t){e.exports='<div ng-controller="TreeGridActionsCtrl as vm" class="item-actions">\r\n    <list-hover-actions>\r\n        <list-hover-action name="Share" icon="hpe-share" click="vm.share(item)"></list-hover-action>\r\n        <list-hover-action name="View Details" icon="hpe-view" click="vm.goToDetails(item)"></list-hover-action>\r\n        <list-hover-action name="Delete" icon="hpe-trash" click="vm.delete(item)"></list-hover-action>\r\n    </list-hover-actions>\r\n</div>'},function(e,t){e.exports='<div class="m-md">\r\n    <p>Created on <span ng-bind="item.date.toLocaleDateString()"></span></p>\r\n    <div ng-if="item.type === \'folder\'">\r\n        <p>Folder contents:</p>\r\n        <ul>\r\n            <li ng-repeat="child in item.nodes" ng-bind="child.title"></li>\r\n        </ul>\r\n    </div>\r\n    <div ng-if="item.type === \'item\'">\r\n        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque neque risus...</p>\r\n    </div>\r\n</div>'},function(e,t){e.exports='<div class="pull-right p-b-md">\r\n    <span class="btn-pair">\r\n    <button class="btn button-secondary" ng-disabled="!previousBtnStatus" ng-click="previous()" tabindex="1"><i class="hpe-icon hpe-previous"></i>Previous</button>\r\n    <button class="btn button-secondary" ng-disabled="!nextBtnStatus" ng-click="next()" tabindex="1">Next<i class="hpe-icon hpe-next"></i></button>\r\n  </span>\r\n</div>'},function(e,t){e.exports='<uxd-tree-view-companion-view-wrapper></uxd-tree-view-companion-view-wrapper>\r\n\r\n<hr>\r\n\r\n<p>The code for this example is shown below:</p>\r\n\r\n<tabset>\r\n    <tab heading="HTML">\r\n        <uxd-snippet [code]="htmlCode"></uxd-snippet>\r\n    </tab>\r\n    <tab heading="JavaScript">\r\n        <uxd-snippet language="javascript" [code]="jsCode"></uxd-snippet>\r\n    </tab>\r\n</tabset>'},function(e,t){e.exports='<uxd-tree-view-wrapper></uxd-tree-view-wrapper>\r\n\r\n<hr>\r\n\r\n<p>The Tree View is created using the <code>tree-view</code> directive. It allows tree content to be displayed in a familiar\r\n    Explorer-like format and supports dynamic data and editing of content, and is designed for use with an accompanying List\r\n    View or Detail View.</p>\r\n\r\n<tabset>\r\n    <tab heading="HTML">\r\n        <uxd-snippet [code]="htmlCode"></uxd-snippet>\r\n    </tab>\r\n    <tab heading="JavaScript">\r\n        <uxd-snippet language="javascript" [code]="jsCode"></uxd-snippet>\r\n    </tab>\r\n</tabset>\r\n\r\n<p>The data to be displayed in the Tree View should be set to the <code>data</code> attribute of the directive. It should adhere\r\n    to the following interface:</p>\r\n\r\n<div class="demo-attributes table-responsive">\r\n    <table class="table m-t">\r\n        <tr>\r\n            <th>Name</th>\r\n            <th>Type</th>\r\n            <th>Description</th>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">title</td>\r\n            <td>string</td>\r\n            <td>The name of the item, which will be displayed in the tree.</td>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">allowChildren</td>\r\n            <td>boolean</td>\r\n            <td>Whether child nodes are possible for this node.</td>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">type</td>\r\n            <td>string</td>\r\n            <td>Used to configure the appearance (see Icon Configuration below for more details).</td>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">nodes</td>\r\n            <td>array</td>\r\n            <td>A collection of child objects, following the same interface.</td>\r\n        </tr>\r\n    </table>\r\n</div>\r\n\r\n<p>You can watch this data object for changes within your own controller, allowing you to save changes if needed.</p>\r\n\r\n<p>Additionally you can attach a <code>permissions</code> object to a node to control how users will interact with it. If not\r\n    supplied, these values will default to <code>true</code>.</p>\r\n\r\n<ul>\r\n    <li><code>add</code></li>\r\n    <li><code>edit</code></li>\r\n    <li><code>delete</code></li>\r\n</ul>\r\n\r\n<h4>Exposed Functions</h4>\r\n\r\n<p>In the accompanying View, you can add controls to add or delete items from the Tree View. Pass functions defining these to\r\n    the Tree View via the <code>add-item</code> and <code>delete-item</code> attributes. These functions will be decorated\r\n    within the Tree View, so you can define custom logic inside them. The <code>add-item</code> function can return an item\r\n    in the format defined above and it will be included in the tree. The <code>delete</code> function can return a boolean\r\n    indicating if the delete is permitted or successful, depending on the intended usage of the tree.</p>\r\n\r\n<p>If no functions are provided, the Tree View will display small inline editing buttons to allow basic interaction.</p>\r\n\r\n<p>Alternatively, you can pass the <code>read-only</code> attribute to the tree to disable adding, editing and deleting for\r\n    all nodes. Otherwise this can be configured on a per-node basis using the <code>permissions</code> object described above.</p>\r\n\r\n<h4>Icon Configuration</h4>\r\n\r\n<p>The Tree View supports extensible types. By default, <code>folder</code> and <code>item</code> types are defined. To display\r\n    custom icons for your application, define a mapping as shown, using the types you will set on your node objects and icons\r\n    from the Elements Icon set. You can define <code>collapsed</code> and <code>expanded</code> alternative icons for nodes\r\n    which you expect to use as containers.</p>\r\n\r\n<uxd-snippet [code]="snippet" language="js"></uxd-snippet>\r\n\r\n<h4>Options</h4>\r\n\r\n<p>You can pass a configuration object to the <code>options</code> attribute of the directive to control:</p>\r\n\r\n<div class="demo-attributes table-responsive">\r\n    <table class="table m-t">\r\n        <tr>\r\n            <th>Name</th>\r\n            <th>Type</th>\r\n            <th>Description</th>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">showTreeLines</td>\r\n            <td>boolean</td>\r\n            <td>Toggles the display of the dashed lines that outline the tree structure. Defaults to true.</td>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">openOnSelect</td>\r\n            <td>boolean</td>\r\n            <td>Sets if nodes should expand when selected. Defaults to false.</td>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">loadHeight</td>\r\n            <td>number</td>\r\n            <td>The number of pixels that indicates the initial height of the tree. This optional parameter can be set to prevent\r\n                the page flicker during tree load. The user should pass an appropriate value to the <code>loadHeight</code>                option.</td>\r\n        </tr>\r\n    </table>\r\n</div>'},function(e,t){e.exports='<p>UI Router is a routing framework for Angular, which allows organizing parts of the user interface into a state machine.</p>\r\n\r\n<p>The power of UI router lies in its ability to nest views and states.</p>\r\n\r\n<p>Add <code>ui-view</code> directive inside the <code>body</code> tag.</p>\r\n\r\n<uxd-snippet [code]="htmlCode1"></uxd-snippet>\r\n\r\n<p>Add <code>a</code> tags for navigation. &nbsp;Adding <code>ui-sref</code> directive helps with state transitions and auto-generates\r\n    the <code>href</code> attribute of the element it’s attached to, if the corresponding state has a URL.</p>\r\n\r\n<p>A navigation entry is highighted when the state is selected and is contained in the <code>active</code>, <code>selected</code>    classes.</p>\r\n\r\n<uxd-snippet [code]="htmlCode2"></uxd-snippet>\r\n\r\n<p>Set up the states with<code>$stateProvider</code>.</p>\r\n\r\n<p>State parameters are discussed below:</p>\r\n\r\n<div class="demo-attributes table-responsive">\r\n    <table class="table m-t">\r\n        <tr>\r\n            <th>Name</th>\r\n            <th>Description</th>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">url</td>\r\n            <td>Defines the path provided in ui-sref.</td>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">templateUrl</td>\r\n            <td>Configures a state\'s template, e.g. physical path of the page.</td>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">abstract</td>\r\n            <td>Indicates that a state can have child states but can\'t be self activated.</td>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">template</td>\r\n            <td>Simplest way to set your template.</td>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">data</td>\r\n            <td>Sets custom data, e.g. pageTitle.</td>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">controller</td>\r\n            <td>Assign a controller to the state, e.g. SideNavigationCtrl as sn, pageTitle.</td>\r\n        </tr>\r\n    </table>\r\n</div>\r\n\r\n<uxd-snippet language="javascript" [code]="jsCode"></uxd-snippet>'},function(e,t){e.exports='<p>The <code>$colorService</code> can be used to easily get the value for a color in the Color Palette.</p>\r\n\r\n<div class="demo-attributes table-responsive">\r\n    <table class="table m-t">\r\n        <tr>\r\n            <th>Name</th>\r\n            <th>Description</th>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">getColor</td>\r\n            <td>This method will accept a string parameter for a color from the Color Palette and return a ThemeColor object.</td>\r\n        </tr>\r\n    </table>\r\n</div>\r\n\r\n<p>The following functions can be used on the ThemeColor object:</p>\r\n\r\n<div class="demo-attributes table-responsive">\r\n    <table class="table m-t">\r\n        <tr>\r\n            <th>Name</th>\r\n            <th>Description</th>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">setRed</td>\r\n            <td>This method will set the red value of the ThemeColor. It will take a number as a parameter.</td>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">setGreen</td>\r\n            <td>This method will set the green value of the ThemeColor. It will take a number as a parameter.</td>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">setBlue</td>\r\n            <td>This method will set the blue value of the ThemeColor. It will take a number as a parameter.</td>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">setAlpha</td>\r\n            <td>This method will set the alpha value of the ThemeColor. It will take a number as a parameter.</td>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">toRgb</td>\r\n            <td>This method will return the rgb value of the ThemeColor.</td>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">toRgba</td>\r\n            <td>This method will return the rgba value of the ThemeColor.</td>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">toHex</td>\r\n            <td>This method will return the hexadecimal value of the ThemeColor.</td>\r\n        </tr>\r\n    </table>\r\n</div>\r\n\r\n<p>Below is an example of how the <code>$colorService</code> can be used in a controller:</p>\r\n\r\n<uxd-snippet language="javascript" [code]="jsCode"></uxd-snippet>\r\n\r\n<blockquote>\r\n  <p><strong>Note</strong>: Refer to the <a routerLink="/css/color-palette">Color Palette</a> page for a list of colors.</p>\r\n</blockquote>'},function(e,t){e.exports='<uxd-expanding-content-wrapper></uxd-expanding-content-wrapper>\r\n\r\n<hr>\r\n\r\n<p>It may be useful to show snippets of text and allow the user to view additional content if they want to. Use the following\r\ncode to achieve this functionality.</p>\r\n\r\n<tabset>\r\n    <tab heading="HTML">\r\n        <uxd-snippet [code]="htmlCode"></uxd-snippet>\r\n    </tab>\r\n    <tab heading="JavaScript">\r\n        <uxd-snippet language="javascript" [code]="jsCode"></uxd-snippet>\r\n    </tab>\r\n</tabset>'},function(e,t){e.exports="<p>When using <code>ng-show</code> or <code>ng-hide</code> to make content visible, you can add the <code>focus-on-show</code> attribute to give that element focus after it becomes visible.</p>"},function(e,t){e.exports='<p>We provide attribute to force focus on an element after the page is loaded. To apply force focus, use <code>force-focus</code>    attribute with the element. The optional attributes which can be used along with <code>force-focus</code> are:</p>\r\n\r\n<div class="demo-attributes table-responsive">\r\n    <table class="table m-t">\r\n        <tr>\r\n            <th>Name</th>\r\n            <th>Type</th>\r\n            <th>Binding</th>\r\n            <th>Description</th>\r\n            <th>Optional</th>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">timeout</td>\r\n            <td>number</td>\r\n            <td>literal</td>\r\n            <td>Provides focus after specified time in milliseconds.</td>\r\n            <td>true</td>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">prevent-focus</td>\r\n            <td>boolean</td>\r\n            <td>literal</td>\r\n            <td>An interpolated Angular expression which will prevent the element from receiving focus when <code>true</code>.</td>\r\n            <td>true</td>\r\n        </tr>\r\n    </table>\r\n</div>\r\n\r\n<uxd-snippet [code]="htmlCode"></uxd-snippet>'},function(e,t){e.exports='<uxd-list-item-filter-wrapper></uxd-list-item-filter-wrapper>\r\n\r\n<hr>\r\n\r\n<p>The <code>list-item-filter</code> directive is a fast and simple way to filter <code>li</code> elements within a <code>ul</code>    or <code>ol</code>. To use this simply add <code>list-item-filter</code> as an attribute on the <code>ul</code> or <code>ol</code>    element. The <code>filter-text</code> attribute which should be bound to a variable in the controller containing the\r\n    text the list should be filtered by.</p>\r\n\r\n<p>The only additional step required is to give each <code>li</code> a <code>key</code> attribute. This attribute should contain\r\n    the text each item should be filtered by.</p>\r\n\r\n<tabset>\r\n    <tab heading="HTML">\r\n        <uxd-snippet [code]="htmlCode"></uxd-snippet>\r\n    </tab>\r\n    <tab heading="JavaScript">\r\n        <uxd-snippet language="javascript" [code]="jsCode"></uxd-snippet>\r\n    </tab>\r\n</tabset>'},function(e,t){e.exports="<uxd-pdf-service-wrapper></uxd-pdf-service-wrapper>\r\n\r\n<hr>\r\n\r\n<p>PDF documents can be created to display table data using the <code>$pdf</code> service. By supplying the column definitions\r\n    and a dataset a table can automatically be created and a PDF can then be generated. Currently the service is limited\r\n    to creating PDFs from tables of rows and columns consisting of <strong>alphanumeric text</strong> only.</p>\r\n\r\n<p>To create a document call the <code>createTable</code> function on the <code>$pdf</code> service. The <code>createTable</code>    function can take three parameters, the first an array of column definitions (which are explained below), the second\r\n    containing the data for each row and the third defining any additional configuration.</p>\r\n\r\n<p>Below is an example of how to create the table and download the generated PDF.</p>\r\n\r\n<uxd-snippet [code]=\"snippet\" language=\"javascript\"></uxd-snippet>\r\n\r\n<p>In the code snippet above, the function will return an object containing the newly created document. The returned object\r\n    will have a <code>download</code> function that will allow you to download the generated PDF.</p>\r\n\r\n<p>Column definitions should be an array of objects, each object can contain the following properties:</p>\r\n\r\n<div class=\"demo-attributes table-responsive\">\r\n    <table class=\"table m-t\">\r\n        <tr>\r\n            <th>Name</th>\r\n            <th>Type</th>\r\n            <th>Description</th>\r\n        </tr>\r\n        <tr>\r\n            <td class=\"attribute\">title</td>\r\n            <td>string</td>\r\n            <td>Should contain the text in the column header.</td>\r\n        </tr>\r\n        <tr>\r\n            <td class=\"attribute\">value</td>\r\n            <td>string | function</td>\r\n            <td>Should either specify the property name in the row object containing the value or a function that will be passed\r\n                the row data and should return the value to display in that column.</td>\r\n        </tr>\r\n        <tr>\r\n            <td class=\"attribute\">width</td>\r\n            <td>size</td>\r\n            <td>Specifies the width of the column. You can specify sizes as a pixel value (<code>100</code>) or a percentage\r\n                (<code>'30%'</code>). Additionally you can let the service determine the size using <code>'auto'</code> which\r\n                will take only the size required to display the data in the column, or <code>'*'</code> which will stretch\r\n                to fill up any available space.</td>\r\n        </tr>\r\n    </table>\r\n</div>\r\n\r\n<p>You can also provide several options to customize the PDF being generated. If not specified then default values will be used.</p>\r\n\r\n<div class=\"demo-attributes table-responsive\">\r\n    <table class=\"table m-t\">\r\n        <tr>\r\n            <th>Name</th>\r\n            <th>Type</th>\r\n            <th>Description</th>\r\n        </tr>\r\n        <tr>\r\n            <td class=\"attribute\">pageSize</td>\r\n            <td>string</td>\r\n            <td>\r\n                Can specify the document page size. The following sizes are available:\r\n                <br><br>\r\n                <ul>\r\n                    <li>'4A0', '2A0', 'A0', 'A1', 'A2', 'A3', 'A4', 'A5', 'A6', 'A7', 'A8', 'A9', 'A10'</li>\r\n                    <li>'B0', 'B1', 'B2', 'B3', 'B4', 'B5', 'B6', 'B7', 'B8', 'B9', 'B10'</li>\r\n                    <li>'C0', 'C1', 'C2', 'C3', 'C4', 'C5', 'C6', 'C7', 'C8', 'C9', 'C10'</li>\r\n                    <li>'RA0', 'RA1', 'RA2', 'RA3', 'RA4'</li>\r\n                    <li>'SRA0', 'SRA1', 'SRA2', 'SRA3', 'SRA4'</li>\r\n                    <li>'EXECUTIVE', 'FOLIO', 'LEGAL', 'LETTER', 'TABLOID'</li>\r\n                </ul>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td class=\"attribute\">pageOrientation</td>\r\n            <td>string</td>\r\n            <td>Can specify the orientation of the page. The possible values are <code>portrait</code> or <code>landscape</code>.</td>\r\n        </tr>\r\n        <tr>\r\n            <td class=\"attribute\">pageMargins</td>\r\n            <td>array</td>\r\n            <td>Can specify the spacing on each side of the document. The array should have four values indicating the spacing\r\n                (in pixels) on the left, top, right &amp; bottom of the page.</td>\r\n        </tr>\r\n        <tr>\r\n            <td class=\"attribute\">metadata</td>\r\n            <td>object</td>\r\n            <td>\r\n                Can specify the document metadata. The available properties are:\r\n\r\n                <ul>\r\n                    <li><code>title</code> - The title of the document.</li>\r\n                    <li><code>author</code> - The author of the document.</li>\r\n                    <li><code>subject</code> - The subject of the document contents.</li>\r\n                    <li><code>keywords</code> - Relevant keywords for the document.</li>\r\n                </ul>\r\n            </td>\r\n        </tr>\r\n    </table>\r\n</div>\r\n\r\n<p>Below is the code used in the example above:</p>\r\n\r\n<tabset>\r\n    <tab heading=\"HTML\">\r\n        <uxd-snippet [code]=\"htmlCode\"></uxd-snippet>\r\n    </tab>\r\n    <tab heading=\"JavaScript\">\r\n        <uxd-snippet language=\"javascript\" [code]=\"jsCode\"></uxd-snippet>\r\n    </tab>\r\n</tabset>"},function(e,t){e.exports='<p>The <code>safeInterval</code> service is a scope-safe way to execute repeating functions in your code. It provides a wrapper\r\n    to the Angular <code>$interval</code> service that will automatically cancel your intervals when their scope is destroyed,\r\n    preventing the memory leaks, race conditions and unexpected behaviour that can result from intervals which have not been\r\n    properly destroyed.</p>\r\n\r\n<p>To use the <code>safeInterval</code> service, <code>inject</code> it into your controller or directive in the same way you\r\n    would normally inject the Angular <code>$interval</code> service. Then call the constructor to get an instance that will\r\n    be local to your execution context. The constructor takes the <code>$scope</code> variable as a parameter - this is used\r\n    to listen for the <code>$destroy</code> event raised by Angular.</p>\r\n\r\n<uxd-snippet language="javascript" [code]="jsCode1"></uxd-snippet>\r\n\r\n<p>The returned instance has two methods.</p>\r\n\r\n<div class="demo-attributes table-responsive">\r\n    <table class="table m-t">\r\n        <tr>\r\n            <th>Name</th>\r\n            <th>Description</th>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">interval</td>\r\n            <td>Two parameters, a function to execute and an optional delay in milliseconds to specify how often the function\r\n                should repeat. Returns an interval object.</td>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">cancel</td>\r\n            <td>One parameter, an interval object to be cancelled.</td>\r\n        </tr>\r\n    </table>\r\n</div>\r\n\r\n<p>The signature of these methods is the same as that on the <code>$interval</code> service. The example below shows how to\r\n    defer execution using the safeInterval service.</p>\r\n\r\n<uxd-snippet language="javascript" [code]="jsCode2"></uxd-snippet>\r\n\r\n<p>To manually cancel an interval:</p>\r\n\r\n<uxd-snippet language="javascript" [code]="jsCode3"></uxd-snippet>'},function(e,t){e.exports='<p>The <code>safeTimeout</code> service is a scope-safe way to execute delayed functions in your code. It provides a wrapper\r\n    to the Angular <code>$timeout</code> service that will automatically cancel your timers when their scope is destroyed,\r\n    preventing the memory leaks, race conditions and unexpected behaviour that can result from timers which have not been\r\n    properly destroyed.</p>\r\n\r\n<p>To use the <code>safeTimeout</code> service, <code>inject</code> it into your controller or directive in the same way you\r\n    would normally inject the Angular <code>$timeout</code> service. Then call the constructor to get an instance that will\r\n    be local to your execution context. The constructor takes the <code>$scope</code> variable as a parameter - this is used\r\n    to listen for the <code>$destroy</code> event raised by Angular.</p>\r\n\r\n<uxd-snippet language="javascript" [code]="jsCode1"></uxd-snippet>\r\n\r\n<p>The returned instance has two methods.</p>\r\n\r\n<div class="demo-attributes table-responsive">\r\n    <table class="table m-t">\r\n        <tr>\r\n            <th>Name</th>\r\n            <th>Description</th>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">timeout</td>\r\n            <td>Two parameters, a function to execute and an optional delay in milliseconds. Returns a timer object.</td>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">cancel</td>\r\n            <td>One parameter, a timer object to be cancelled.</td>\r\n        </tr>\r\n    </table>\r\n</div>\r\n\r\n<p>The signature of these methods is the same as that on the <code>$timeout</code> service. The example below shows how to defer\r\n    execution using the safeTimeout service.</p>\r\n\r\n<uxd-snippet language="javascript" [code]="jsCode2"></uxd-snippet>\r\n\r\n<p>To manually cancel a timer:</p>\r\n\r\n<uxd-snippet language="javascript" [code]="jsCode3"></uxd-snippet>'},function(e,t){e.exports='<p>The <code>timeAgoService</code> can be used to generate a string reflecting the duration between two specific points in time.\r\n    The service should be injected into the controller and has the following functions:</p>\r\n\r\n<div class="demo-attributes table-responsive">\r\n    <table class="table m-t">\r\n        <tr>\r\n            <th>Name</th>\r\n            <th>Description</th>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">setStrings</td>\r\n            <td>This can be used to localize or customize the strings that are generated. The function expects an object which\r\n                contains strings for each time period. See below for the default options.</td>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">timeSinceNow</td>\r\n            <td>This function will generate a string based on the current date and time. It expects one argument which should\r\n                be a date object representing a date and time that has already passed.</td>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">timeSince</td>\r\n            <td>Similar to the <code>timeSinceNow</code> function, however it expects a second argument which will be the date\r\n                and time you wish to assume as \'the present\'. The string returned will reflect the time that has passed since\r\n                this date.</td>\r\n        </tr>\r\n    </table>\r\n</div>\r\n\r\n<p>Below is an example of how the <code>timeAgoService</code> can be used in a controller:</p>\r\n\r\n<uxd-snippet language="javascript" [code]="snippet1"></uxd-snippet>\r\n\r\n<h4>Default Strings</h4>\r\n\r\n<p>The following object shows the default set of strings that will be returned by the service. Pass a similar object to the\r\n    <code>setStrings</code> method to customize and of the string values. Strings that can have varying units should use\r\n    <code><span class="p">{{</span><span class="err">x</span><span class="p">}}</span></code> to represent where the unit should\r\n    be placed.</p>\r\n\r\n<uxd-snippet language="javascript" [code]="snippet2"></uxd-snippet>\r\n\r\n<p>Additionally, a <code>time-ago</code> directive is available for text elements that will update in real time to reflect the\r\n    length of time since a specific date/time. See the following example:</p>\r\n\r\n<uxd-time-ago-service-wrapper></uxd-time-ago-service-wrapper>\r\n\r\n<p>The <code>time-ago</code> directive should be used as an attribute with a value that binds to a date object in the controller.\r\n    The string produced will represent how long ago the date specified is from the present time.</p>\r\n\r\n<tabset>\r\n    <tab heading="HTML">\r\n        <uxd-snippet [code]="htmlCode"></uxd-snippet>\r\n    </tab>\r\n    <tab heading="JavaScript">\r\n        <uxd-snippet language="javascript" [code]="jsCode"></uxd-snippet>\r\n    </tab>\r\n</tabset>'},function(e,t){e.exports='<p>The <code>windowCommunicationService</code> can be used to easily and effectively share a scope between 2 separate windows\r\n    with 2-way data communication being successfully achieved, which means that any changes made in the secondary window\r\n    will update the original window, and vice versa. The service should be injected and has the following functions:</p>\r\n\r\n<div class="demo-attributes table-responsive">\r\n    <table class="table m-t">\r\n        <tr>\r\n            <th>Name</th>\r\n            <th>Description</th>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">createWindow</td>\r\n            <td>This is the main function that will be used. It allows the user to open a new window with the following parameters\r\n                and returns the opened window as an object:\r\n                <ul>\r\n                    <li><code>windowTitle</code> - (string), specifies the title of the window to be opened.</li>\r\n                    <li><code>scope</code> - (object), specifies the scope which is to be shared between the 2 windows.</li>\r\n                    <li><code>url</code> - (string), specifies the url of the window to be opened.</li>\r\n                    <li><code>winWidth</code> - (integer: optional), specifies the width of the window.</li>\r\n                    <li><code>winHeight</code> - (integer: optional), specifies the height of the window.</li>\r\n                    <li><code>winX</code> - (integer: optional), specifies the distance the window will be placed from the left\r\n                        of the screen.</li>\r\n                    <li><code>winY</code> - (integer: optional), specifies the distance the window will be placed from the top\r\n                        of the screen.</li>\r\n                    Note: If the user does not specify any of the optional parameters, the window will be approximately centered to the screen\r\n                    with the height being 400px less than the screen height and the width being 200px less than the screen\r\n                    width.\r\n                </ul>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">updateContent</td>\r\n            <td>This method should be called when you wish to keep the current window open BUT change the url of the window (hence\r\n                changing the content). This is useful if you don\'t want to have to close the window each time you change\r\n                the window url (e.g. if you were navigating through a list of HTML templates). This function takes the <code>scope</code>                and <code>url</code> parameters described above.</td>\r\n        </tr>\r\n    </table>\r\n</div>\r\n\r\n<p>Below is an example of how the <code>windowCommunicationService</code> can be used in a controller:</p>\r\n\r\n<uxd-snippet language="javascript" [code]="jsCode"></uxd-snippet>'},function(e,t){e.exports='<uxd-marquee-wizard-wrapper></uxd-marquee-wizard-wrapper>\r\n\r\n<hr>\r\n\r\n<p>The Marquee Wizard can be implemented within a modal with the use of a <code>button</code> to initialize the modal. The controller\r\n  for our example is as follows:</p>\r\n\r\n<uxd-snippet language="javascript" [code]="modalJs"></uxd-snippet>\r\n\r\n<blockquote>\r\n  <p>Refer to the <a routerLink="/components/modals">Modal View</a> page for an example of how use a modal.</p>\r\n</blockquote>\r\n\r\n<p>The below HTML is used in the above example to launch the modal.</p>\r\n\r\n<uxd-snippet [code]="modalHtml"></uxd-snippet>\r\n\r\n<p>We specify the options for the modal, such as the <code>templateUrl</code>, <code>controller</code> and <code>windowClass</code>.</p>\r\n\r\n<p>The below HTML and javascript controller code is for the template we use in the Marquee Wizard example above. Note the use\r\n  of the <code>marquee-wizard</code> tag.</p>\r\n\r\n<tabset>\r\n  <tab heading="HTML">\r\n    <uxd-snippet [code]="htmlCode"></uxd-snippet>\r\n  </tab>\r\n  <tab heading="JavaScript">\r\n    <uxd-snippet language="javascript" [code]="jsCode"></uxd-snippet>\r\n  </tab>\r\n  <tab heading="Css">\r\n    <uxd-snippet language="css" [code]="cssCode"></uxd-snippet>\r\n  </tab>\r\n</tabset>\r\n\r\n<p>Attributes that can be defined for the Marquee Wizard:</p>\r\n\r\n<div class="demo-attributes table-responsive">\r\n  <table class="table m-t">\r\n    <tr>\r\n      <th>Name</th>\r\n      <th>Type</th>\r\n      <th>Binding</th>\r\n      <th>Description</th>\r\n      <th>Optional</th>\r\n    </tr>\r\n    <tr>\r\n      <td class="attribute">wizard-icon</td>\r\n      <td>string</td>\r\n      <td>variable</td>\r\n      <td>Specifies the icon for the wizard.</td>\r\n      <td>false</td>\r\n    </tr>\r\n    <tr>\r\n      <td class="attribute">wizard-steps</td>\r\n      <td>array</td>\r\n      <td>variable</td>\r\n      <td>Specifies each step of the wizard, including its <code>title</code>, <code>header</code> and <code>templateUrl</code>.\r\n        If you want to customize how the steps are displayed you can include <code>html</code> and set the HTML for each\r\n        step.</td>\r\n      <td>false</td>\r\n    </tr>\r\n    <tr>\r\n      <td class="attribute">button-options</td>\r\n      <td>object</td>\r\n      <td>variable</td>\r\n      <td>Defines the text, tooltip and visibility of a button.\r\n        <ul>\r\n          <li><code>nextText</code> - (default:"Next") - defines the text for the \'Next\' button.</li>\r\n          <li><code>previousText</code> - (default:"Previous") - defines the text for the \'Previous\' button.</li>\r\n          <li><code>finishText</code> - (default:"Finish") - defines the text for the \'Finish\' button.</li>\r\n          <li><code>showNext</code> - (default: true) - defines whether or not to show the \'Next\' button.</li>\r\n          <li><code>showPrevious</code> - (default: true) - defines whether or not to show the \'Previous\' button.</li>\r\n          <li><code>showFinish</code> - (default: true) - defines whether or not to show the \'Finish\' button.</li>\r\n          <li><code>nextTooltip</code> - optional attribute that allows you to set the tooltip for the \'Next\' button.</li>\r\n          <li><code>previousTooltip</code> - optional attribute that allows you to set the tooltip for the \'Previous\' button.</li>\r\n          <li><code>finishTooltip</code> - optional attribute that allows you to set the tooltip for the \'Finish\' button.</li>\r\n          <li><code>previousEnabled</code> - (default: true) - defines whether or not the \'Previous\' button is enabled.</li>\r\n          <li><code>nextEnabled</code> - (default: true) - defines whether or not the \'Next\' button is enabled.</li>\r\n          <li><code>finishEnabled</code> - (default: true) - defines whether or not the \'Finish\' button is enabled.</li>\r\n        </ul>\r\n      </td>\r\n      <td>false</td>\r\n    </tr>\r\n    <tr>\r\n      <td class="attribute">on-changing</td>\r\n      <td>function</td>\r\n      <td>variable</td>\r\n      <td>Expression that is called when changing steps. The expression should take in two parameters, from and to, which are\r\n        the indexes of the steps involved in the change. If it returns false then the current step goes into error state\r\n        and the step change is stopped. e.g. <code>on-changing="canChange(from,to)"</code>. The expression can also return\r\n        a number representing a step index to move to, overriding the <code>to</code> parameter.</td>\r\n      <td>true</td>\r\n    </tr>\r\n    <tr>\r\n      <td class="attribute">on-finishing</td>\r\n      <td>function</td>\r\n      <td>variable</td>\r\n      <td>Expression that is called when Finish is clicked but before <code>on-finished</code> expression is evaluated. The expression\r\n        should return a boolean result. If false current step goes into error state and the step change is stopped. e.g.\r\n        <code>on-finishing="canChange()"</code>.</td>\r\n      <td>true</td>\r\n    </tr>\r\n    <tr>\r\n      <td class="attribute">on-finished</td>\r\n      <td>function</td>\r\n      <td>variable</td>\r\n      <td>Expression that is called when Finish is clicked, after <code>on-finishing</code> expression is evaluated. e.g. <code>on-finished="wizardComplete()"</code>.</td>\r\n      <td>true</td>\r\n    </tr>\r\n    <tr>\r\n      <td class="attribute">on-canceled</td>\r\n      <td>function</td>\r\n      <td>variable</td>\r\n      <td>Expression that is called when Cancel is clicked. e.g. <code>on-canceled="wizardCanceled()"</code>.</td>\r\n      <td>true</td>\r\n    </tr>\r\n    <tr>\r\n      <td class="attribute">is-visited</td>\r\n      <td>boolean</td>\r\n      <td>variable</td>\r\n      <td>Set to indicate if a wizard is already visited(edited) and to enable all the steps (default: false).</td>\r\n      <td>true</td>\r\n    </tr>\r\n    <tr>\r\n      <td class="attribute">side-info</td>\r\n      <td>string</td>\r\n      <td>variable</td>\r\n      <td>Object to define the side panel info between the icon and the steps.\r\n        <ul>\r\n          <li><code>title</code> - optional string to define the title in the side info panel.</li>\r\n          <li><code>description</code> - optional string to define the description in the side info panel.</li>\r\n        </ul>\r\n      </td>\r\n      <td>true</td>\r\n    </tr>\r\n  </table>\r\n</div>\r\n\r\n<p>See below an example of the HTML first.html step template.</p>\r\n\r\n<uxd-snippet [code]="first"></uxd-snippet>\r\n\r\n<p>See below an example of the HTML fourth.html step template which contains validation.</p>\r\n\r\n<p>The <code>FormController</code> can be referenced using <code>form</code>.</p>\r\n\r\n<uxd-snippet [code]="fourth"></uxd-snippet>'},function(e,t){e.exports='<uxd-vertical-wizard-wrapper></uxd-vertical-wizard-wrapper>\r\n\r\n<hr>\r\n\r\n<p>The Vertical Wizard can be implemented with the use of the <code>vertical</code> class being included within the <code>wizard</code> element.</p>\r\n\r\n<p>Attributes that can be defined on the <code>wizard</code> element, as well as controller logic, can be seen in the above Wizard example.</p>\r\n\r\n<uxd-snippet [code]="htmlCode"></uxd-snippet>'},function(e,t){e.exports='<uxd-wizard-wrapper></uxd-wizard-wrapper>\r\n\r\n<hr>\r\n\r\n<p>Wizards are defined inside a <code>wizard</code> element. Each step is defined using a <code>step</code> element. Use the\r\n    <code>step-heading</code> element to define the html for the step heading. Note that the number of the step is automatically\r\n    prepended to the HTML. Everything not inside the <code>step-heading</code> is considered the content of the step. An\r\n    <code>overflow-tooltip</code>can be added to the wizard and will require <code>max-height</code>and <code>max-width</code>    to be added to the element. Alternatively a <code>single-line-overflow-tooltip</code>can be added to the wizard which\r\n    will require a <code>max-width</code> to be set and <code>vertical-align</code>to be set to bottom.</p>\r\n\r\n<p>Attributes that can be defined on the <code>wizard</code> element are:</p>\r\n\r\n<div class="demo-attributes table-responsive">\r\n    <table class="table m-t">\r\n        <tr>\r\n            <th>Name</th>\r\n            <th>Type</th>\r\n            <th>Binding</th>\r\n            <th>Description</th>\r\n            <th>Optional</th>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">button-options</td>\r\n            <td>object</td>\r\n            <td>variable</td>\r\n            <td>Defines the text, tooltip and visibility of a button.\r\n                <ul>\r\n                    <li><code>nextText</code> - (default:"Next") - defines the text for the \'Next\' button.</li>\r\n                    <li><code>previousText</code> - (default:"Previous") - defines the text for the \'Previous\' button.</li>\r\n                    <li><code>cancelText</code> - (default:"Cancel") - defines the text for the \'Cancel\' button.</li>\r\n                    <li><code>finishText</code> - (default:"Finish") - defines the text for the \'Finish\' button.</li>\r\n                    <li><code>showNext</code> - (default: true) - defines whether or not to show the \'Next\' button.</li>\r\n                    <li><code>showPrevious</code> - (default: true) - defines whether or not to show the \'Previous\' button.</li>\r\n                    <li><code>showCancel</code> - (default: true) - defines whether or not to show the \'Cancel\' button.</li>\r\n                    <li><code>showFinish</code> - (default: true) - defines whether or not to show the \'Finish\' button.</li>\r\n                    <li><code>nextTooltip</code> - optional attribute that allows you to set the tooltip for the \'Next\' button.</li>\r\n                    <li><code>previousTooltip</code> - optional attribute that allows you to set the tooltip for the \'Previous\'\r\n                        button.</li>\r\n                    <li><code>cancelTooltip</code> - optional attribute that allows you to set the tooltip for the \'Cancel\' button.</li>\r\n                    <li><code>finishTooltip</code> - optional attribute that allows you to set the tooltip for the \'Finish\' button.</li>\r\n                    <li><code>hideCancelOnFinish</code> - (default: true) - defines whether or not the show the \'Cancel\' button\r\n                        when on the final (finish) step.</li>\r\n                    <li><code>previousEnabled</code> - (default: true) - defines whether or not the \'Previous\' button is enabled.</li>\r\n                    <li><code>nextEnabled</code> - (default: true) - defines whether or not the \'Next\' button is enabled.</li>\r\n                    <li><code>cancelEnabled</code> - (default: true) - defines whether or not the \'Cancel\' button is enabled.</li>\r\n                    <li><code>finishEnabled</code> - (default: true) - defines whether or not the \'Finish\' button is enabled.</li>\r\n                    <li><code>alwaysShowFinish</code> - (default: false) - defines whether or not the \'Finish\' button is shown\r\n                        in all the steps.</li>\r\n                </ul>\r\n            </td>\r\n            <td>false</td>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">on-changing</td>\r\n            <td>function</td>\r\n            <td>variable</td>\r\n            <td>Expression that is called when changing steps. The expression should take in two parameters, from and to, which\r\n                are the indexes of the steps involved in the change. If it returns false then the current step goes into\r\n                error state and the step change is stopped. e.g. <code>on-changing="canChange(from,to)"</code>. The expression\r\n                can also return a number representing a step index to move to, overriding the <code>to</code> parameter.</td>\r\n            <td>true</td>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">on-finishing</td>\r\n            <td>function</td>\r\n            <td>variable</td>\r\n            <td>Expression that is called when Finish is clicked but before <code>on-finished</code> expression is evaluated.\r\n                The expression should return a boolean result. If false current step goes into error state and the step change\r\n                is stopped. e.g. <code>on-finishing="canChange()"</code>.</td>\r\n            <td>true</td>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">on-finished</td>\r\n            <td>function</td>\r\n            <td>variable</td>\r\n            <td>Expression that is called when Finish is clicked, after <code>on-finishing</code> expression is evaluated. e.g.\r\n                <code>on-finished="wizardComplete()"</code>.</td>\r\n            <td>true</td>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">on-canceled</td>\r\n            <td>function</td>\r\n            <td>variable</td>\r\n            <td>Expression that is called when Cancel is clicked. e.g. <code>on-canceled="wizardCanceled()"</code>.</td>\r\n            <td>true</td>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">is-visited</td>\r\n            <td>boolean</td>\r\n            <td>variable</td>\r\n            <td>Set to indicate if a wizard is already visited(edited) and to enable all the steps (default: false).</td>\r\n            <td>false</td>\r\n        </tr>\r\n    </table>\r\n</div>\r\n\r\n<tabset>\r\n    <tab heading="HTML">\r\n        <uxd-snippet [code]="htmlCode"></uxd-snippet>\r\n    </tab>\r\n    <tab heading="JavaScript">\r\n        <uxd-snippet language="javascript" [code]="jsCode"></uxd-snippet>\r\n    </tab>\r\n</tabset>'},function(e,t){e.exports='<uxd-wizard-validation-wrapper></uxd-wizard-validation-wrapper>\r\n\r\n<hr>\r\n\r\n<p>To validate a wizard use the <code>on-changing</code> and <code>on-finishing</code> attributes to execute validation on the current form to see if its valid or not. Return <code>false</code> to prevent wizard from continuing.</p>\r\n\r\n<p>Add attribute <code>is-visited</code> (default: false) to indicate that a wizard is visited and all steps are enabled.</p>\r\n\r\n<tabset>\r\n    <tab heading="HTML">\r\n        <uxd-snippet [code]="htmlCode"></uxd-snippet>\r\n    </tab>\r\n    <tab heading="JavaScript">\r\n        <uxd-snippet language="javascript" [code]="jsCode"></uxd-snippet>\r\n    </tab>\r\n</tabset>'},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,function(e,t){e.exports='<div class="btn-group">\r\n    <button type="button" class="btn button-toggle-primary" ng-model="vm.checkModelLeft" btn-checkbox btn-checkbox-true="\'ON\'" btn-checkbox-false="\'OFF\'">\r\n            Left<span class="sr-only" ng-bind="vm.checkModelLeft"></span>\r\n    </button>\r\n    <button type="button" class="btn button-toggle-primary" ng-model="vm.checkModelMiddle" btn-checkbox role="checkbox">Middle</button>\r\n    <button type="button" class="btn button-toggle-primary" ng-model="vm.checkModelRight" btn-checkbox role="checkbox">Right</button>\r\n</div>\r\n<p class="m-t">\r\n    <code>checkModelLeft</code> is <em ng-bind="vm.checkModelLeft"></em>.\r\n    <code>checkModelMiddle</code> is <em ng-bind="vm.checkModelMiddle"></em>. <code>checkModelRight</code> is\r\n    <em ng-bind="vm.checkModelRight"></em>.\r\n</p>'},function(e,t){e.exports='angular.module("app").controller("CheckboxButtonsCtrl", CheckboxButtonsCtrl);\r\n\r\nfunction CheckboxButtonsCtrl() {\r\n    var vm = this;\r\n\r\n    vm.checkModelLeft = "ON";\r\n    vm.checkModelMiddle = false;\r\n    vm.checkModelRight = false;\r\n}'},function(e,t){e.exports='<div class="m-t m-b">\r\n    <div class="btn-group" dropdown>\r\n        <button type="button" class="btn button-secondary dropdown-toggle" dropdown-toggle aria-haspopup="true" aria-expanded="false">\r\n            Actions <span class="hpe-icon hpe-down dropdown-icon-inline"></span>\r\n        </button>\r\n        <ul class="dropdown-menu features-dropdown" role="menu">\r\n            <li class="dropdown-submenu">\r\n                <a href="" class="dropdown-menu-item">\r\n                    <span class="dropdown-menu-icon"></span>\r\n                    <span class="dropdown-menu-text">\r\n                        Mark as\r\n                    </span>\r\n                    <span class="dropdown-menu-right dropdown-menu-hint">\r\n                        <i class="hpe-icon hpe-next"></i>\r\n                    </span>\r\n                </a>\r\n                <ul class="dropdown-menu features-dropdown" role="menu">\r\n                    <li>\r\n                        <a href="" class="dropdown-menu-item">\r\n                            <span class="dropdown-menu-icon">\r\n                                <i class="hpe-icon hpe-more"></i>\r\n                            </span>\r\n                            <span class="dropdown-menu-text">\r\n                                Pending\r\n                            </span>\r\n                            <span class="dropdown-menu-right dropdown-menu-hint">\r\n                                ALT+P\r\n                            </span>\r\n                        </a>\r\n                    </li>\r\n                    <li>\r\n                        <a href="" class="dropdown-menu-item">\r\n                            <span class="dropdown-menu-icon">\r\n                                <i class="hpe-icon hpe-link-up"></i>\r\n                            </span>\r\n                            <span class="dropdown-menu-text">\r\n                                Escalated\r\n                            </span>\r\n                            <span class="dropdown-menu-right dropdown-menu-hint">\r\n                                ALT+E\r\n                            </span>\r\n                        </a>\r\n                    </li>\r\n                    <li>\r\n                        <a href="" class="dropdown-menu-item">\r\n                            <span class="dropdown-menu-icon">\r\n                                <i class="hpe-icon hpe-checkmark"></i>\r\n                            </span>\r\n                            <span class="dropdown-menu-text">\r\n                                Closed\r\n                            </span>\r\n                            <span class="dropdown-menu-right dropdown-menu-hint">\r\n                                ALT+C\r\n                            </span>\r\n                        </a>\r\n                    </li>\r\n                </ul>\r\n            </li>\r\n            <li class="divider"></li>\r\n            <li>\r\n                <a href="" class="dropdown-menu-item">\r\n                    <span class="dropdown-menu-icon"></span>\r\n                    <span class="dropdown-menu-text">\r\n                        Export\r\n                    </span>\r\n                </a>\r\n            </li>\r\n            <li class="dropdown-submenu">\r\n                <a href="" class="dropdown-menu-item">\r\n                    <span class="dropdown-menu-icon"></span>\r\n                    <span class="dropdown-menu-text">\r\n                        Add to case\r\n                    </span>\r\n                    <span class="dropdown-menu-right dropdown-menu-hint">\r\n                        <i class="hpe-icon hpe-next"></i>\r\n                    </span>\r\n                </a>\r\n                <div class="dropdown-menu case-dropdown">\r\n                    <div class="case-filter">\r\n                        <div class="inner-addon right-addon">\r\n                            <i class="hpe-icon hpe-search"></i>\r\n                            <input type="text" class="form-control" ng-model="vm.caseFilter" ng-click="$event.stopPropagation();" />\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <div class="case-items" scroll-pane scroll-name="case-items" scroll-config="{ autoReinitialise: true }">\r\n                            <ul>\r\n                                <li ng-repeat="case in vm.cases | filter: vm.caseFilter">\r\n                                    <a href="" ng-bind="case"></a>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </li>\r\n            <li>\r\n                <a href="" class="dropdown-menu-item">\r\n                    <span class="dropdown-menu-icon"></span>\r\n                    <span class="dropdown-menu-text">\r\n                        Save list\r\n                    </span>\r\n                    <span class="dropdown-menu-right dropdown-menu-hint">\r\n                        ALT+L\r\n                    </span>\r\n                </a>\r\n            </li>\r\n            <li>\r\n                <a href="" class="dropdown-menu-item">\r\n                    <span class="dropdown-menu-icon"></span>\r\n                    <span class="dropdown-menu-text">\r\n                        Save search query\r\n                    </span>\r\n                    <span class="dropdown-menu-right dropdown-menu-hint">\r\n                        ALT+S\r\n                    </span>\r\n                </a>\r\n            </li>\r\n            <li>\r\n                <a href="" class="dropdown-menu-item">\r\n                    <span class="dropdown-menu-icon">\r\n                        <i class="hpe-icon hpe-edit"></i>\r\n                    </span>\r\n                    <span class="dropdown-menu-text">\r\n                        Annotate\r\n                    </span>\r\n                    <span class="dropdown-menu-right dropdown-menu-hint">\r\n                        ALT+A\r\n                    </span>\r\n                </a>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n</div>'},function(e,t){e.exports=".features-dropdown {\r\n    width: 250px;\r\n}\r\n\r\n.dropdown-submenu > .case-dropdown {\r\n    top: -52px;\r\n}\r\n\r\n.case-filter {\r\n    margin: 9px;\r\n}\r\n\r\n.case-items {\r\n    height: 195px;\r\n    width: 160px;\r\n    overflow: auto;\r\n}\r\n\r\n.case-items ul {\r\n    width: 100%;\r\n    list-style: none outside none;\r\n    padding: 0;\r\n}\r\n\r\n.case-items ul > li > a {\r\n    color: inherit;\r\n    line-height: 25px;\r\n    text-align: left;\r\n    font-weight: normal;\r\n    font-size: 1rem;\r\n    display: block;\r\n    padding: 7px 20px;\r\n    clear: both;\r\n    white-space: nowrap;\r\n}"},function(e,t){e.exports='<p>Button dropdown open: <em ng-bind="vm.buttonOpen" class="ng-binding">false</em>. Split dropdown open: <em ng-bind="vm.splitOpen" class="ng-binding">false</em>.</p>\r\n\r\n<div class="m-t m-b">\r\n    <div class="btn-group" dropdown is-open="vm.buttonOpen">\r\n        <button type="button" class="btn button-primary dropdown-toggle" dropdown-toggle aria-haspopup="true" aria-expanded="false">\r\n            Button dropdown <span class="hpe-icon hpe-down dropdown-icon-inline"></span>\r\n        </button>\r\n        <ul class="dropdown-menu" role="menu">\r\n            <li>\r\n                <a ng-click="$event.stopPropagation()">\r\n                    <radiobutton name="radio1" ng-model="vm.radioModel1" ng-value="vm.radioOptions.option1">\r\n                        Radio Option 1\r\n                    </radiobutton>\r\n                </a>\r\n            </li>\r\n            <li class="dropdown-indent">\r\n                <a ng-click="$event.stopPropagation()">\r\n                    <checkbox name="check1" ng-model="vm.checkModel1.option1" ng-disabled="vm.radioModel1 != vm.radioOptions.option1">\r\n                        Checkbox A\r\n                    </checkbox>\r\n                </a>\r\n            </li>\r\n            <li class="dropdown-indent">\r\n                <a ng-click="$event.stopPropagation()">\r\n                    <checkbox name="check2" ng-model="vm.checkModel1.option2" ng-disabled="vm.radioModel1 != vm.radioOptions.option1">\r\n                        Checkbox B\r\n                    </checkbox>\r\n                </a>\r\n            </li>\r\n            <li>\r\n                <a ng-click="$event.stopPropagation()">\r\n                    <radiobutton name="radio1" ng-model="vm.radioModel1" ng-value="vm.radioOptions.option2">\r\n                        Radio Option 2\r\n                    </radiobutton>\r\n                </a>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n    &nbsp;\r\n    <div class="btn-group" dropdown is-open="vm.splitOpen">\r\n        <button type="button" class="btn button-secondary">Split dropdown</button>\r\n        <button type="button" class="btn button-secondary dropdown-toggle" dropdown-toggle aria-haspopup="true" aria-expanded="false">\r\n            <span class="hpe-icon hpe-down"></span>\r\n            <span class="sr-only">Split button</span>\r\n        </button>\r\n        <ul class="dropdown-menu" role="menu">\r\n            <li><a>Action</a></li>\r\n            <li><a>Another action</a></li>\r\n            <li><a>Something else here</a></li>\r\n            <li class="divider"></li>\r\n            <li><a>Separated link</a></li>\r\n        </ul>\r\n    </div>\r\n</div>'},function(e,t){e.exports='angular.module(\'app\').controller(\'DropdownCtrl\', DropdownCtrl);\r\n\r\nfunction DropdownCtrl() {\r\n    var vm = this;\r\n\r\n    vm.buttonOpen = false;\r\n    vm.splitOpen = false;\r\n\r\n    vm.radioOptions = {\r\n        option1: 1,\r\n        option2: 2\r\n    };\r\n    vm.radioModel1 = vm.radioOptions.option1;\r\n\r\n    vm.checkModel1 = {\r\n        option1: false,\r\n        option2: false\r\n    };\r\n\r\n    vm.cases = [\r\n        "Alpha",\r\n        "Beta",\r\n        "Gamma",\r\n        "Delta",\r\n        "Epsilon",\r\n        "Zeta",\r\n        "Eta",\r\n        "Theta",\r\n        "Iota",\r\n        "Kappa",\r\n        "Alpha 2",\r\n        "Alpha 3",\r\n    ];\r\n    vm.caseFilter = "";\r\n}\r\n'},function(e,t){e.exports='<h4>Floating Action Button - Vertical (Bottom)</h4>\r\n\r\n<div style="margin-bottom: 150px">\r\n    <floating-action-button primary="\'hpe-contract\'" items="vm.items" direction="\'bottom\'">\r\n    </floating-action-button>\r\n</div>\r\n\r\n<hr>\r\n\r\n<h4>Floating Action Button - Horizontal (Right)</h4>\r\n\r\n<floating-action-button primary="\'hpe-contract\'" items="vm.items" direction="\'right\'">\r\n</floating-action-button>\r\n\r\n<hr>\r\n\r\n<h4>Floating Action Button - Vertical (Up)</h4>\r\n\r\n<floating-action-button primary="\'hpe-contract\'" items="vm.items" direction="\'top\'">\r\n</floating-action-button>\r\n\r\n<hr>\r\n\r\n<h4>Floating Action Button - Horizontal (Left)</h4>\r\n\r\n<div style="margin-left: 150px;">\r\n    <floating-action-button primary="\'hpe-contract\'" items="vm.items" direction="\'left\'">\r\n    </floating-action-button>\r\n</div>\r\n\r\n<hr>'},function(e,t){e.exports='angular.module("app").controller("FloatingActionButtonCtrl", FloatingActionButtonCtrl);\r\n\r\nfunction FloatingActionButtonCtrl() {\r\n    var vm = this;\r\n\r\n    vm.selectFloatingActionButton = function () {};\r\n\r\n    vm.items = [{\r\n        icon: "hpe-add",\r\n        event: this.selectFloatingActionButton\r\n    }, {\r\n        icon: "hpe-analytics",\r\n        event: this.selectFloatingActionButton\r\n    }, {\r\n        icon: "hpe-app",\r\n        event: this.selectFloatingActionButton\r\n    }];\r\n}\r\n'},function(e,t){e.exports='<div class="btn-group">\r\n    <button type="button" class="btn button-secondary" grouped-previous aria-label="Previous">\r\n        <i class="hpe-icon hpe-previous"></i>\r\n    </button>\r\n    <button class="btn button-secondary btn-nav btn-grouped" grouped-clear>1</button>\r\n    <button class="btn button-secondary btn-nav btn-grouped" grouped-clear>2</button>\r\n    <button class="btn button-secondary btn-nav btn-grouped" grouped-clear>3</button>\r\n    <button class="btn button-secondary btn-nav btn-grouped" grouped-clear>4</button>\r\n    <button type="button" class="btn button-secondary" grouped-next aria-label="Next">\r\n        <i class="hpe-icon hpe-next"></i>\r\n    </button>\r\n</div>\r\n'},function(e,t){e.exports='<div class="btn-group" role="group" aria-label="Alignment">\r\n    <button class="btn button-secondary btn-grouped btn-align" grouped-selected type="button">Left</button>\r\n    <button class="btn button-secondary btn-grouped btn-align active" grouped-selected type="button">Middle</button>\r\n    <button class="btn button-secondary btn-grouped btn-align" grouped-selected type="button">Right</button>\r\n</div>\r\n<br><br>\r\n'},function(e,t){e.exports='angular.module("app").controller("GroupedButtonsCtrl", GroupedButtonsCtrl);\r\n\r\nfunction GroupedButtonsCtrl() {\r\n    var vm = this;\r\n\r\n    vm.position = \'middle\';\r\n    vm.page = 1;\r\n\r\n    vm.previousPage = function () {\r\n        if (vm.page > 1) vm.page--;\r\n    };\r\n\r\n    vm.nextPage = function () {\r\n        if (vm.page < 4) vm.page++;\r\n    };\r\n}'},function(e,t){e.exports='<pagination total-items="vm.totalItems" ng-model="vm.currentPage" num-pages="vm.numPages"></pagination>\r\n<p>Page <span ng-bind="vm.currentPage"></span> of <span ng-bind="::vm.numPages"></span></p>\r\n'},function(e,t){e.exports="angular.module('app').controller('PaginationCtrl', PaginationCtrl);\r\n\r\nfunction PaginationCtrl() {\r\n    var vm = this;\r\n\r\n    vm.totalItems = 100;\r\n    vm.currentPage = 1;\r\n    vm.numPages = 0;\r\n}\r\n"},function(e,t){e.exports='<div class="btn-group">\r\n    <button type="button" class="btn button-toggle-primary" ng-model="vm.radioModel" btn-radio="\'Left\'">Left</button>\r\n    <button type="button" class="btn button-toggle-primary" ng-model="vm.radioModel" btn-radio="\'Middle\'">Middle</button>\r\n    <button type="button" class="btn button-toggle-primary" ng-model="vm.radioModel" btn-radio="\'Right\'">Right</button>\r\n</div>\r\n<p class="m-t"><code>radioModel</code> is <em ng-bind="vm.radioModel"></em>.</p>'},function(e,t){e.exports="angular.module('app').controller('RadioButtonsCtrl', RadioButtonsCtrl);\r\n\r\nfunction RadioButtonsCtrl() {\r\n    var vm = this;\r\n\r\n    vm.radioModel = \"Left\";\r\n}\r\n"},function(e,t){e.exports='<button type="button" class="btn button-toggle-primary" ng-model="vm.singleToggle" btn-checkbox btn-checkbox-true="\'ON\'" btn-checkbox-false="\'OFF\'">\r\n    Single Toggle <span class="sr-only" ng-bind="vm.singleToggle"></span>\r\n</button>\r\n<p class="m-t">Toggle is <em ng-bind="vm.singleToggle"></em></p>\r\n'},function(e,t){e.exports="angular.module('app').controller('SingleToggleButtonCtrl', SingleToggleButtonCtrl);\r\n\r\nfunction SingleToggleButtonCtrl() {\r\n    var vm = this;\r\n\r\n    vm.singleToggle = \"ON\";\r\n}\r\n"},function(e,t){e.exports=".thumbnails-example-container {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n}\r\n\r\n.thumbnail-example {\r\n    display: flex;\r\n    align-items: center;\r\n    height: 45px;\r\n    padding: 5px 10px;\r\n}\r\n\r\n.thumbnail-example .hpe-download {\r\n    margin-left: auto;\r\n    color: #989da0;\r\n}\r\n\r\n.thumbnail-example .hpe-download:hover {\r\n    color: #676a6c;\r\n    cursor: pointer;\r\n}\r\n\r\n.thumbnail-example p {\r\n    margin-bottom: -4px;\r\n}\r\n\r\n.thumbnail-example p > span {\r\n    font-size: 14px;\r\n    color: #333131;\r\n}\r\n\r\n.thumbnail-example p > span + span {\r\n    color: #828282;\r\n    margin-left: 4px;\r\n    font-size: 13px;\r\n}\r\n\r\n.thumbnail-example .word-icon {\r\n    background: url(https://uxaspects.github.io/UXAspects/assets/img/doc-icons/IconWordColorized.png) no-repeat;\r\n    width: 18px;\r\n    height: 18px;\r\n    flex: 0 0 auto;\r\n    background-size: cover;\r\n}\r\n\r\n.thumbnail-example .pdf-icon {\r\n    background: url(https://uxaspects.github.io/UXAspects/assets/img/doc-icons/IconPDFColorized.png) no-repeat;\r\n    width: 18px;\r\n    height: 18px;\r\n    flex: 0 0 auto;\r\n    background-size: cover;\r\n}\r\n\r\n.thumbnail-example .excel-icon {\r\n    background: url(https://uxaspects.github.io/UXAspects/assets/img/doc-icons/IconExcelColorized.png) no-repeat;\r\n    width: 18px;\r\n    height: 18px;\r\n    flex: 0 0 auto;\r\n    background-size: cover;\r\n}\r\n\r\n.thumbnail-example .html-icon {\r\n    background: url(https://uxaspects.github.io/UXAspects/assets/img/doc-icons/IconHTMLColorized.png) no-repeat;\r\n    width: 18px;\r\n    height: 18px;\r\n    flex: 0 0 auto;\r\n    background-size: cover;\r\n}\r\n\r\n.thumbnail-example .powerpoint-icon {\r\n    background: url(https://uxaspects.github.io/UXAspects/assets/img/doc-icons/IconPowerPointColorized.png) no-repeat;\r\n    width: 18px;\r\n    height: 18px;\r\n    flex: 0 0 auto;\r\n    background-size: cover;\r\n}\r\n\r\n.thumbnail-example .email-icon {\r\n    background: url(https://uxaspects.github.io/UXAspects/assets/img/doc-icons/IconEmailColorized.png) no-repeat;\r\n    width: 18px;\r\n    height: 18px;\r\n    flex: 0 0 auto;\r\n    background-size: cover;\r\n}\r\n\r\n.thumbnails-example-container .front, .thumbnails-example-container .back {\r\n    box-shadow: none;\r\n}\r\n\r\n.thumbnails-example-container .front .thumbnail-example {\r\n    padding: 10px;\r\n}\r\n\r\n.thumbnails-example-container .back {\r\n    background-color: #f2eff6; \r\n    border: 1px solid #cfd2d6;\r\n}\r\n\r\n.thumbnails-example-container .thumbnail-title {\r\n    font-weight: 600;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n}\r\n\r\n.thumbnails-example-container .back .thumbnail-example {\r\n    height: 100%;\r\n    align-items: flex-start;\r\n    padding: 15px 10px;\r\n}\r\n\r\n.thumbnails-example-container .back .thumbnail-title {\r\n    white-space: normal;\r\n    line-height: 18px;\r\n}\r\n\r\n.thumbnails-example-container .back .hpe-download {\r\n    bottom: 20px;\r\n    position: absolute;\r\n}"},function(e,t){e.exports="angular.module('app').controller('ThumbnailDemoCtrl', ThumbnailDemoCtrl);\r\n\r\nfunction ThumbnailDemoCtrl() {\r\n    var vm = this;\r\n\r\n    vm.show = false;\r\n    vm.flipShow = true;\r\n\r\n    vm.thumbnails = [{\r\n        url: 'https://uxaspects.github.io/UXAspects/assets/img/thumbnails/excel.png',\r\n        icon: 'excel-icon',\r\n        title: 'Results.xls',\r\n        type: 'Excel',\r\n        size: '101.3 KB'\r\n    }, {\r\n        url: '',\r\n        icon: 'word-icon',\r\n        title: 'Overview.doc',\r\n        type: 'Word',\r\n        size: '31.7 KB'\r\n    }, {\r\n        url: 'https://uxaspects.github.io/UXAspects/assets/img/thumbnails/pdf.png',\r\n        icon: 'pdf-icon',\r\n        title: 'Archiving Edge.pdf',\r\n        type: 'PDF',\r\n        size: '1.5 MB'\r\n    }];\r\n\r\n    vm.flippableThumbnails = [{\r\n        url: 'https://uxaspects.github.io/UXAspects/assets/img/thumbnails/html.png',\r\n        icon: 'html-icon',\r\n        title: 'Example home page for document finder site.html',\r\n        type: 'HTML',\r\n        size: '3.1 KB'\r\n    }, {\r\n        url: '',\r\n        icon: 'email-icon',\r\n        title: 'Recent discussion.msg',\r\n        type: 'Email',\r\n        size: '1.7 KB'\r\n    }, {\r\n        url: 'https://uxaspects.github.io/UXAspects/assets/img/thumbnails/powerpoint.png',\r\n        icon: 'powerpoint-icon',\r\n        title: 'Using the HPE Slide Library for PowerPoint Presentations.ppt',\r\n        type: 'PowerPoint',\r\n        size: '2.4 MB'\r\n    }];\r\n}\r\n"},function(e,t){e.exports=".thumbnails-example-container {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n}\r\n\r\n.thumbnail-example {\r\n    display: flex;\r\n    align-items: center;\r\n    height: 45px;\r\n    padding: 5px 10px;\r\n}\r\n\r\n.thumbnail-example .hpe-download {\r\n    margin-left: auto;\r\n    color: #989da0;\r\n}\r\n\r\n.thumbnail-example .hpe-download:hover {\r\n    color: #676a6c;\r\n    cursor: pointer;\r\n}\r\n\r\n.thumbnail-example p {\r\n    margin-bottom: -4px;\r\n}\r\n\r\n.thumbnail-example p > span {\r\n    font-size: 14px;\r\n    color: #333131;\r\n}\r\n\r\n.thumbnail-example p > span + span {\r\n    color: #828282;\r\n    margin-left: 4px;\r\n    font-size: 13px;\r\n}\r\n\r\n.thumbnail-example .word-icon {\r\n    background: url(assets/img/doc-icons/IconWordColorized.png) no-repeat;\r\n    width: 18px;\r\n    height: 18px;\r\n    flex: 0 0 auto;\r\n    background-size: cover;\r\n}\r\n\r\n.thumbnail-example .pdf-icon {\r\n    background: url(assets/img/doc-icons/IconPDFColorized.png) no-repeat;\r\n    width: 18px;\r\n    height: 18px;\r\n    flex: 0 0 auto;\r\n    background-size: cover;\r\n}\r\n\r\n.thumbnail-example .excel-icon {\r\n    background: url(assets/img/doc-icons/IconExcelColorized.png) no-repeat;\r\n    width: 18px;\r\n    height: 18px;\r\n    flex: 0 0 auto;\r\n    background-size: cover;\r\n}\r\n\r\n.thumbnail-example .html-icon {\r\n    background: url(assets/img/doc-icons/IconHTMLColorized.png) no-repeat;\r\n    width: 18px;\r\n    height: 18px;\r\n    flex: 0 0 auto;\r\n    background-size: cover;\r\n}\r\n\r\n.thumbnail-example .powerpoint-icon {\r\n    background: url(assets/img/doc-icons/IconPowerPointColorized.png) no-repeat;\r\n    width: 18px;\r\n    height: 18px;\r\n    flex: 0 0 auto;\r\n    background-size: cover;\r\n}\r\n\r\n.thumbnail-example .email-icon {\r\n    background: url(assets/img/doc-icons/IconEmailColorized.png) no-repeat;\r\n    width: 18px;\r\n    height: 18px;\r\n    flex: 0 0 auto;\r\n    background-size: cover;\r\n}\r\n\r\n.thumbnails-example-container .front, .thumbnails-example-container .back {\r\n    box-shadow: none;\r\n}\r\n\r\n.thumbnails-example-container .front .thumbnail-example {\r\n    padding: 10px;\r\n}\r\n\r\n.thumbnails-example-container .back {\r\n    background-color: #f2eff6; \r\n    border: 1px solid #cfd2d6;\r\n}\r\n\r\n.thumbnails-example-container .thumbnail-title {\r\n    font-weight: 600;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n}\r\n\r\n.thumbnails-example-container .back .thumbnail-example {\r\n    height: 100%;\r\n    align-items: flex-start;\r\n    padding: 15px 10px;\r\n}\r\n\r\n.thumbnails-example-container .back .thumbnail-title {\r\n    white-space: normal;\r\n    line-height: 18px;\r\n}\r\n\r\n.thumbnails-example-container .back .hpe-download {\r\n    bottom: 20px;\r\n    position: absolute;\r\n}"},function(e,t){e.exports='<toggleswitch ng-model="vm.show">Toggle thumbnails</toggleswitch>\r\n<hr>\r\n<div class="thumbnails-example-container m-t-lg">\r\n    <thumbnail ng-repeat="thumbnail in ::vm.thumbnails" url="::thumbnail.url" show="vm.show" class="m-r-lg m-b-lg">\r\n        <div class="thumbnail-example">\r\n            <div ng-class="::thumbnail.icon"></div>\r\n            <div class="m-l-sm m-b-xs">\r\n                <p class="thumbnail-title" ng-bind="::thumbnail.title"></p>\r\n                <p><span ng-bind="::thumbnail.type"></span><span ng-bind="::thumbnail.size"></span></p>\r\n            </div>\r\n            <i class="hpe-icon hpe-download hpe-lg"></i>\r\n        </div>\r\n    </thumbnail>\r\n</div>\r\n\r\n<h4 class="m-t-sm">Flippable variation</h4>\r\n<hr>\r\n<div class="thumbnails-example-container m-t-lg">\r\n    <flippable-card flip-on="hover" flip-style="vertical" card-height="169" card-width="220" ng-repeat="thumbnail in ::vm.flippableThumbnails"\r\n        class="m-r-lg m-t-md">\r\n        <card-front>\r\n            <thumbnail url="::thumbnail.url" show="vm.flipShow">\r\n                <div class="thumbnail-example">\r\n                    <div ng-class="::thumbnail.icon"></div>\r\n                    <p class="m-l-sm thumbnail-title" ng-bind="::thumbnail.title"></p>\r\n                </div>\r\n            </thumbnail>\r\n        </card-front>\r\n        <card-back>\r\n            <div class="thumbnail-example">\r\n                <div ng-class="::thumbnail.icon"></div>\r\n                <div class="m-l-sm p-r-sm">\r\n                    <p class="thumbnail-title" ng-bind="::thumbnail.title"></p>\r\n                    <p class="m-t-xs"><span ng-bind="::thumbnail.type"></span><span ng-bind="::thumbnail.size"></span></p>\r\n                    <i class="hpe-icon hpe-download hpe-lg"></i>\r\n                </div>\r\n            </div>\r\n        </card-back>\r\n    </flippable-card>\r\n</div>'},function(e,t){e.exports="angular.module('app').controller('ThumbnailDemoCtrl', ThumbnailDemoCtrl);\r\n\r\nfunction ThumbnailDemoCtrl() {\r\n    var vm = this;\r\n\r\n    vm.show = false;\r\n    vm.flipShow = true;\r\n\r\n    vm.thumbnails = [{\r\n        url: 'assets/img/thumbnails/excel.png',\r\n        icon: 'excel-icon',\r\n        title: 'Results.xls',\r\n        type: 'Excel',\r\n        size: '101.3 KB'\r\n    }, {\r\n        url: '',\r\n        icon: 'word-icon',\r\n        title: 'Overview.doc',\r\n        type: 'Word',\r\n        size: '31.7 KB'\r\n    }, {\r\n        url: 'assets/img/thumbnails/pdf.png',\r\n        icon: 'pdf-icon',\r\n        title: 'Archiving Edge.pdf',\r\n        type: 'PDF',\r\n        size: '1.5 MB'\r\n    }];\r\n\r\n    vm.flippableThumbnails = [{\r\n        url: 'assets/img/thumbnails/html.png',\r\n        icon: 'html-icon',\r\n        title: 'Example home page for document finder site.html',\r\n        type: 'HTML',\r\n        size: '3.1 KB'\r\n    }, {\r\n        url: '',\r\n        icon: 'email-icon',\r\n        title: 'Recent discussion.msg',\r\n        type: 'Email',\r\n        size: '1.7 KB'\r\n    }, {\r\n        url: 'assets/img/thumbnails/powerpoint.png',\r\n        icon: 'powerpoint-icon',\r\n        title: 'Using the HPE Slide Library for PowerPoint Presentations.ppt',\r\n        type: 'PowerPoint',\r\n        size: '2.4 MB'\r\n    }];\r\n}\r\n"},function(e,t){e.exports='<div class="m-t-lg">\r\n    <h5>Primary Toggle Buttons</h5>\r\n    <div data-toggle="buttons" class="btn-group toggle-buttons">\r\n        <label class="btn button-toggle-primary">\r\n            <input id="bold" type="checkbox" autocomplete="off" role="checkbox" aria-checked="false">Bold</label>\r\n        <label class="btn button-toggle-primary active">\r\n            <input id="underline" type="checkbox" autocomplete="off" checked="" role="checkbox" aria-checked="true">Underline\r\n        </label>\r\n        <label class="btn button-toggle-primary">\r\n            <input id="italic" type="checkbox" autocomplete="off" role="checkbox" aria-checked="false">Italic\r\n        </label>\r\n    </div>\r\n</div>\r\n<div class="m-t-sm">\r\n    <h5>Accent Toggle Buttons</h5>\r\n    <div data-toggle="buttons" class="btn-group toggle-buttons">\r\n        <label class="btn button-toggle-accent">\r\n            <input id="bold" type="checkbox" autocomplete="off" role="checkbox" aria-checked="false">Bold</label>\r\n        <label class="btn button-toggle-accent active">\r\n            <input id="underline" type="checkbox" autocomplete="off" checked="" role="checkbox" aria-checked="true">Underline\r\n        </label>\r\n        <label class="btn button-toggle-accent">\r\n            <input id="italic" type="checkbox" autocomplete="off" role="checkbox" aria-checked="false">Italic\r\n        </label>\r\n    </div>\r\n</div>\r\n'},function(e,t){e.exports='<div class="m-t">\r\n    <button data-toggle="button" class="btn button-toggle-primary m-b m-r-xl" role="button" aria-pressed="false" autocomplete="off">\r\n        Primary Single Toggle\r\n    </button>\r\n    <button data-toggle="button" class="btn button-toggle-accent m-b" role="button" aria-pressed="false" autocomplete="off">\r\n        Accent Single Toggle\r\n    </button>\r\n</div>\r\n'},function(e,t){e.exports='<div class="row">\r\n    <div class="col-md-6">\r\n        <component-list ng-model="vm.components">\r\n            <component>\r\n                <input type="text" class="form-control" placeholder="Enter text" ng-model="model">\r\n            </component>\r\n        </component-list>\r\n    </div>\r\n</div>'},function(e,t){e.exports="angular.module('app').controller('ComponentListDemoCtrl', ComponentListDemoCtrl);\r\n\r\nfunction ComponentListDemoCtrl() {\r\n    var vm = this;\r\n\r\n    vm.components = [];\r\n}\r\n"},function(e,t){e.exports='vm.contacts = [{\r\n    text: "II",\r\n    status: "active",\r\n    customTooltip:{\r\n        template: "app/contacts/contactPopover.html",\r\n        tooltipPosition: "top",\r\n        data: {\r\n            description: "Finance, Variable Income, Storage",\r\n            riskScore: "Low (0.1)",\r\n            longName:"Iago Innery",\r\n        }\r\n    }\r\n  },\r\n  //...\r\n];'},function(e,t){e.exports='vm.organization = {\r\n    text: "Investing",\r\n    label: "risk"\r\n};'},function(e,t){e.exports=".contacts-demo {\r\n    text-align: center;\r\n    margin-top: 200px;\r\n}"},function(e,t){e.exports='<div class="contacts-demo">\r\n    <contact-group contacts="vm.contacts" organization="vm.organization" size="vm.size" colors="vm.colors"></contact-group>\r\n    &nbsp;\r\n    <i class="contacts-arrow p-r hpe-icon hpe-link-next"></i>\r\n    &nbsp;\r\n    <contact-group contacts="vm.otherContacts" organization="vm.otherOrganization" size="vm.size" colors="vm.colorsAlt"></contact-group>\r\n</div>'},function(e,t){e.exports="angular.module('app').controller('ContactsDemoCtrl', ContactsDemoCtrl);\r\n\r\nfunction ContactsDemoCtrl() {\r\n    var vm = this;\r\n\r\n    vm.contacts = [{\r\n        text: 'RL',\r\n        status: 'active',\r\n        customTooltip: {\r\n            template: 'contacts-popover.html',\r\n            tooltipPosition: 'top',\r\n            data: {\r\n                description: 'Finance, Variable Income, Storage',\r\n                riskScore: 'Low (0.1)',\r\n                longName: 'Ryan Lawrence',\r\n            }\r\n        }\r\n    }, {\r\n        text: 'SH',\r\n        status: 'passive',\r\n        customTooltip: {\r\n            template: 'contacts-popover.html',\r\n            tooltipPosition: 'top',\r\n            data: {\r\n                description: 'Trade, Fixed Income, Securities',\r\n                riskScore: 'Low (0.2)',\r\n                longName: 'Simon Hemmings'\r\n            }\r\n\r\n        }\r\n    }, {\r\n        text: 'PMG',\r\n        status: 'active',\r\n        customTooltip: {\r\n            template: 'contacts-popover.html',\r\n            tooltipPosition: 'top',\r\n            data: {\r\n                description: 'Trade, Fixed Income, Securities',\r\n                riskScore: 'Low (0.2)',\r\n                longName: 'Peter McGrath'\r\n            }\r\n        }\r\n    }, {\r\n        text: 'RM',\r\n        status: 'active',\r\n        customTooltip: {\r\n            template: 'contacts-popover.html',\r\n            tooltipPosition: 'top',\r\n            data: {\r\n                description: 'Trade, Fixed Income, Securities',\r\n                riskScore: 'Low (0.2)',\r\n                longName: 'Rebecca Martin'\r\n            }\r\n\r\n        }\r\n    }];\r\n\r\n    vm.otherContacts = [{\r\n        text: 'Claire Dowd',\r\n        customTooltip: {\r\n            template: 'contacts-popover.html',\r\n            data: {\r\n                description: 'Trade, Fixed Income, Securities',\r\n                riskScore: 'Low (0.2)'\r\n            }\r\n        }\r\n    }, {\r\n        text: 'David Bond',\r\n        customTooltip: {\r\n            template: 'contacts-popover.html',\r\n            data: {\r\n                description: 'Trade, Fixed Income, Securities',\r\n                riskScore: 'Low (0.2)'\r\n            }\r\n        }\r\n    }];\r\n\r\n    vm.organization = {\r\n        text: 'Investing',\r\n        label: 'risk'\r\n    };\r\n\r\n    vm.otherOrganization = {\r\n        text: 'Trading',\r\n        label: 'external'\r\n    };\r\n\r\n    vm.size = 'medium';\r\n\r\n    vm.colors = {\r\n        primary: '#7b63a3',\r\n        secondary: '#ffffff'\r\n    };\r\n\r\n    vm.colorsAlt = {\r\n        primary: '#025662',\r\n        secondary: '#ffffff'\r\n    };\r\n}\r\n"},function(e,t){e.exports="angular.module('app').controller('ContactsOverflowDemoModalCtrl', ContactsOverflowDemoModalCtrl);\r\n\r\nContactsOverflowDemoModalCtrl.$inject = ['$modalInstance', '$q', 'contacts'];\r\n\r\nfunction ContactsOverflowDemoModalCtrl($modalInstance, $q, contacts) {\r\n    var vm = this;\r\n\r\n    vm.scrollConfig = {\r\n        resizeSensor: true\r\n    };\r\n\r\n    vm.pageSize = 25;\r\n    vm.pageFunction = function (page, pageSize) {\r\n        return $q.when(contacts.slice(page * pageSize, (page + 1) * pageSize));\r\n    };\r\n\r\n    vm.ok = function () {\r\n        $modalInstance.close();\r\n    };\r\n}"},function(e,t){e.exports=".contact-overflow-scroll-pane {\r\n    height: 300px;\r\n}\r\n.contact-overflow-modal-item-row {\r\n    padding: 5px 8px;\r\n    border-bottom: 1px solid lightgray;\r\n    margin-right: 7px;\r\n}\r\n.contact-overflow-modal-item-label {\r\n    width: 30px;\r\n    text-align: center;\r\n    color: #fff;\r\n    background-color: #835996;\r\n    padding: 2px 0;\r\n}"},function(e,t){e.exports='<div class="text-center">\r\n    <contact-group contacts="vm.overflowContacts" organization="vm.organization" size="vm.size" colors="vm.colors" max-contacts="4" overflow-click="vm.onOverflowClick()"></contact-group>\r\n</div>'},function(e,t){e.exports="angular.module('app').controller('ContactsOverflowDemoCtrl', ContactsOverflowDemoCtrl);\r\n\r\nContactsOverflowDemoCtrl.$inject = ['$modal'];\r\n\r\nfunction ContactsOverflowDemoCtrl($modal) {\r\n    var vm = this;\r\n\r\n    vm.overflowContacts = [{\r\n        text: 'DS',\r\n        detail: 'Dean Smith'\r\n    }, {\r\n        text: 'JB',\r\n        detail: 'James Bell'\r\n    }, {\r\n        text: 'RY',\r\n        detail: 'Rose Young'\r\n    }, {\r\n        text: 'PJ',\r\n        detail: 'Paul Jones'\r\n    }, {\r\n        text: 'GM',\r\n        detail: 'Glen Manning'\r\n    }, {\r\n        text: 'MU',\r\n        detail: 'Mike Underwood'\r\n    }, {\r\n        text: 'LH',\r\n        detail: 'Leah Harris'\r\n    }];\r\n    for (var i = 0; i < 100; i += 1) {\r\n        vm.overflowContacts.push({\r\n            text: 'C' + i,\r\n            detail: 'Contact ' + i\r\n        });\r\n    }\r\n\r\n    vm.organization = {\r\n        text: 'Investing',\r\n        label: 'risk'\r\n    };\r\n\r\n    vm.size = 'medium';\r\n\r\n    vm.colors = {\r\n        primary: '#7b63a3',\r\n        secondary: '#ffffff'\r\n    };\r\n\r\n    vm.colorsAlt = {\r\n        primary: '#025662',\r\n        secondary: '#ffffff'\r\n    };\r\n\r\n    vm.onOverflowClick = function () {\r\n        $modal.open({\r\n            animation: false,\r\n            templateUrl: 'contacts-overflow-modal.html',\r\n            controller: 'ContactsOverflowDemoModalCtrl',\r\n            controllerAs: 'vm',\r\n            resolve: {\r\n                contacts: function () {\r\n                    return vm.overflowContacts;\r\n                }\r\n            },\r\n            keyboard: 'true'\r\n        });\r\n    };\r\n}\r\n"},function(e,t){e.exports='<div class="row">\r\n  <div class="col-sm-6 col-xs-12">\r\n    <div class="input-group date m-nil">\r\n      <span class="input-group-addon" ng-click="vm.open($event)" ng-keypress="vm.openKey($event)" tabindex="1">\r\n        <i class="hpe-icon hpe-calendar" aria-hidden="true"></i>\r\n      </span>\r\n      <input type="text" class="form-control" ng-model="vm.date"\r\n        datepicker-popup="dd MMMM yyyy" ng-click="vm.open($event)" is-open="vm.opened "ng-blur="vm.change()" aria-label="Selected date">\r\n    </div>\r\n  </div>\r\n</div>\r\n<p class="m-t">Selected date is: <em ng-bind="vm.date | date:\'fullDate\'"></em></p>'},function(e,t){e.exports='angular.module("app").controller("DatePickerCtrl", DatePickerCtrl);\r\n\r\nfunction DatePickerCtrl() {\r\n    var vm = this;\r\n\r\n    vm.date = new Date();\r\n    vm.opened = false;\r\n\r\n    vm.open = function($event) {\r\n        $event.preventDefault();\r\n        $event.stopPropagation();\r\n        vm.opened = true;\r\n    };\r\n\r\n    vm.openKey = function($event) {\r\n        if ($event.which === 13){\r\n            $event.preventDefault();\r\n            $event.stopPropagation();\r\n            vm.opened = true;\r\n        }\r\n    };\r\n\r\n    vm.change = function() {\r\n        var customdate = new Date(vm.date);\r\n\r\n        if(isNaN(customdate)) {\r\n            vm.date = new Date();\r\n        } else if(vm.date !== vm.prevdate) {\r\n            vm.date = new Date(vm.date);\r\n            vm.prevdate = vm.date;\r\n        }\r\n    };\r\n}'},function(e,t){e.exports=".date-picker-validation-error {\r\n\tmargin-top: -30px;\r\n}\r\n\r\n.date-picker-validation-error > span {\r\n\twidth: 100%;\r\n\ttext-align: right;\r\n}"},function(e,t){e.exports='<form role="form" name="demoForm" class="p-b-lg">\r\n    <div class="row">\r\n        <div class="col-md-6 col-xs-12">\r\n            <div class="form-group-validate" ng-class="{ \'has-feedback\': demoForm.dateRangeFromPicker.$invalid }">\r\n                <label for="dateRangeFromPicker" class="control-label form-label col-sm-2 p-t-xs">From</label>\r\n                <div class="col-sm-10 input-group m-nil">\r\n                    <span class="input-group-addon" ng-click="vm.openDateFromPicker($event)" aria-haspopup="true" type="button">\r\n                        <i class="hpe-icon hpe-calendar" aria-hidden="true"></i>\r\n                    </span>\r\n                    <input type="text" id="dateRangeFromPicker" name="dateRangeFromPicker" class="form-control" date-time-picker-popup ng-model="vm.fromDate"\r\n                        ng-model-options="{updateOn: \'blur\'}" is-meridian="vm.ismeridian" choose-time="true" choose-date="true"\r\n                        choose-seconds="true" choose-timezone="false" default-day-time="start" is-open="vm.dateFromPickerOpen"\r\n                        max-date="vm.toDate.date" ng-click="vm.openDateFromPicker($event)" aria-label="Selected date" />\r\n                    <span class="hpe-icon hpe-alert form-control-feedback" ng-if="demoForm.dateRangeFromPicker.$invalid" aria-hidden="true"></span>\r\n                </div>\r\n            </div>\r\n            <div class="date-picker-validation-error">\r\n                <span class="validation-error-text" ng-if="demoForm.dateRangeFromPicker.$invalid && demoForm.dateRangeFromPicker.$error[\'isFormatValid\']">Invalid date/time format.</span>\r\n                <span class="validation-error-text" ng-if="demoForm.dateRangeFromPicker.$invalid && demoForm.dateRangeFromPicker.$error[\'isBeforeMax\']">Date is later than the "to" date.</span>\r\n            </div>\r\n        </div>\r\n        <div class="col-md-6 col-xs-12">\r\n            <div class="form-group-validate" ng-class="{ \'has-feedback\': demoForm.dateRangeToPicker.$invalid }">\r\n                <label for="dateRangeToPicker" class="control-label form-label col-sm-2 p-t-xs">To</label>\r\n                <div class="col-sm-10 input-group m-nil">\r\n                    <span class="input-group-addon" ng-click="vm.openDateToPicker($event)" aria-haspopup="true" type="button">\r\n                        <i class="hpe-icon hpe-calendar" aria-hidden="true"></i>\r\n                    </span>\r\n                    <input type="text" id="dateRangeToPicker" name="dateRangeToPicker" class="form-control" date-time-picker-popup ng-model="vm.toDate"\r\n                        ng-model-options="{updateOn: \'blur\'}" is-meridian="vm.ismeridian" choose-time="true" choose-date="true"\r\n                        choose-seconds="true" choose-timezone="false" default-day-time="end" is-open="vm.dateToPickerOpen" min-date="vm.fromDate.date"\r\n                        ng-click="vm.openDateToPicker($event)" aria-label="Selected date" />\r\n                    <span class="hpe-icon hpe-alert form-control-feedback" ng-if="demoForm.dateRangeToPicker.$invalid" aria-hidden="true"></span>\r\n                </div>\r\n            </div>\r\n            <div class="date-picker-validation-error">\r\n                <span class="validation-error-text" ng-if="demoForm.dateRangeToPicker.$invalid && demoForm.dateRangeToPicker.$error[\'isFormatValid\']">Invalid date/time format.</span>\r\n                <span class="validation-error-text" ng-if="demoForm.dateRangeToPicker.$invalid && demoForm.dateRangeToPicker.$error[\'isAfterMin\']">Date is earlier than the "from" date.</span>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class="row m-t-md">\r\n        <div class="col-md-6 col-xs-12">\r\n            <div class="form-group m-nil">\r\n                <label for="timeZoneSelect" class="control-label form-label col-sm-4 p-t-xs">Time zone</label>\r\n                <div class="col-sm-8">\r\n                    <dynamic-select id="timeZoneSelect" ng-model="vm.selectedTimeZone" source="vm.timezones" select-as="display" options="vm.timeZoneSelectOptions">\r\n                    </dynamic-select>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</form>\r\n\r\n<h4>Output</h4>\r\n\r\n<table class="table">\r\n    <thead>\r\n        <tr>\r\n            <th width="20%"></th>\r\n            <th width="40%">From</th>\r\n            <th width="40%">To</th>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        <tr>\r\n            <td>Local time</td>\r\n            <td ng-bind="vm.getLocalDateTime(vm.fromDate.date, vm.fromDate.timezone)"></td>\r\n            <td ng-bind="vm.getLocalDateTime(vm.toDate.date, vm.toDate.timezone)"></td>\r\n        </tr>\r\n        <tr>\r\n            <td>GMT</td>\r\n            <td ng-bind="vm.getUniversalDateTime(vm.fromDate.date, vm.fromDate.timezone)"></td>\r\n            <td ng-bind="vm.getUniversalDateTime(vm.toDate.date, vm.toDate.timezone)"></td>\r\n        </tr>\r\n    </tbody>\r\n</table>'},function(e,t){e.exports='angular.module("app").controller("DateRangePickerCtrl", DateRangePickerCtrl);\r\n\r\nDateRangePickerCtrl.$inject = ["$scope"];\r\n\r\nfunction DateRangePickerCtrl($scope) {\r\n    var vm = this;\r\n\r\n    vm.fromDate = {};\r\n    vm.toDate = {};\r\n    vm.ismeridian = true;\r\n    vm.datePickerIcon = \'hpe-icon hpe-calendar\';\r\n\r\n    vm.openDateFromPicker = function ($event) {\r\n        //Additional code to be executed when clicked\r\n        vm.dateFromPickerOpen = true;\r\n        $event.preventDefault();\r\n        $event.stopPropagation();\r\n    };\r\n    vm.openDateToPicker = function ($event) {\r\n        //Additional code to be executed when clicked\r\n        vm.dateToPickerOpen = true;\r\n        $event.preventDefault();\r\n        $event.stopPropagation();\r\n    };\r\n\r\n    vm.timezones = [{\r\n        display: "GMT -08:00",\r\n        offset: "-08:00"\r\n    }, {\r\n        display: "GMT -07:00",\r\n        offset: "-07:00"\r\n    }, {\r\n        display: "GMT -06:00",\r\n        offset: "-06:00"\r\n    }, {\r\n        display: "GMT -05:00",\r\n        offset: "-05:00"\r\n    }, {\r\n        display: "GMT -04:00",\r\n        offset: "-04:00"\r\n    }, {\r\n        display: "GMT -03:00",\r\n        offset: "-03:00"\r\n    }, {\r\n        display: "GMT -02:00",\r\n        offset: "-02:00"\r\n    }, {\r\n        display: "GMT -01:00",\r\n        offset: "-01:00"\r\n    }, {\r\n        display: "GMT",\r\n        offset: "+00:00"\r\n    }, {\r\n        display: "GMT +01:00",\r\n        offset: "+01:00"\r\n    }, {\r\n        display: "GMT +02:00",\r\n        offset: "+02:00"\r\n    }];\r\n    vm.selectedTimeZone = null;\r\n\r\n    vm.timeZoneSelectOptions = {\r\n        allowNull: false\r\n    };\r\n\r\n    initialiseTimeZone();\r\n\r\n    $scope.$watch("vm.selectedTimeZone", function (nv, ov) {\r\n        if (nv !== ov) {\r\n            setTimeZoneOffset(nv);\r\n        }\r\n    });\r\n\r\n    function initialiseTimeZone() {\r\n        // Use moment.js to get the user\'s timezone offset in +00:00 format\r\n        var localTimeZoneOffset = moment().tz(moment.tz.guess()).format(\'Z\');\r\n        setTimeZoneOffset(localTimeZoneOffset);\r\n        var tz = null;\r\n        for (var i = 0; i < vm.timezones.length; i += 1) {\r\n            if (vm.timezones[i].offset === localTimeZoneOffset) {\r\n                tz = vm.timezones[i];\r\n                break;\r\n            }\r\n        }\r\n        if (!tz) {\r\n            // Add missing timezone to the list\r\n            tz = {\r\n                display: "GMT " + localTimeZoneOffset,\r\n                offset: localTimeZoneOffset\r\n            };\r\n            vm.timezones.push(tz);\r\n        }\r\n        vm.selectedTimeZone = tz;\r\n    }\r\n\r\n    // Set timezone in both date objects\r\n    function setTimeZoneOffset(tz) {\r\n        if (angular.isString(tz.offset)) {\r\n            if (!angular.isDefined(vm.fromDate)) vm.fromDate = {};\r\n            vm.fromDate.timezone = tz.offset;\r\n            if (!angular.isDefined(vm.toDate)) vm.toDate = {};\r\n            vm.toDate.timezone = tz.offset;\r\n        }\r\n    }\r\n\r\n    vm.getLocalDateTime = function (date, timezone) {\r\n        if (!angular.isDefined(date) || !angular.isDefined(timezone)) return "Not Set";\r\n        return moment(date).utcOffset(timezone, true).format("ddd MMM DD, YYYY h:mm:ss A Z");\r\n    };\r\n\r\n    vm.getUniversalDateTime = function (date, timezone) {\r\n        if (!angular.isDefined(date) || !angular.isDefined(timezone)) return "Not Set";\r\n        return moment(date).utcOffset(timezone, true).utc().format("ddd MMM DD, YYYY h:mm:ss A Z");\r\n    };\r\n}'},function(e,t){e.exports='<div class="row demo">\r\n    <div class="col-sm-5 col-xs-12">\r\n        <div class="input-group m-nil">\r\n            <span class="input-group-addon" ng-click="vm.openIntegratedPicker($event)" aria-haspopup="true" type="button" tabindex="1">\r\n                <i ng-class="vm.datePickerIcon" aria-hidden="true"></i>\r\n            </span>\r\n            <input type="text" class="form-control" ng-model="vm.dateObj" ng-model-options="{updateOn: \'blur\'}" date-time-picker-popup ng-click="vm.openIntegratedPicker($event)" \r\n                    is-meridian="vm.ismeridian"  timezones="vm.timezones" timezone-default-index="vm.timezoneDefaultIndex" aria-label="Selected date" \r\n                    choose-time="vm.chooseTime" choose-date="vm.chooseDate" choose-timezone="vm.chooseTimezone" is-open="vm.datePickerOpen" />\r\n        </div>\r\n    </div>\r\n</div>\r\n<br>\r\nThe current values on object passed as ngModel are:\r\n\r\n<pre>\r\nvm.dateObj = {\r\n    date: {{vm.dateObj.date}},\r\n    time: {{vm.dateObj.time}},\r\n    timezone: {{vm.dateObj.timezone}}\r\n};\r\n</pre>\r\n\r\n<br>\r\n\r\n<h4>Customize the integrated date picker</h4>\r\n\r\n<hr>\r\n\r\n<div class="row">\r\n    <div class="col-md-6">\r\n        <div class="check">\r\n            <checkbox ng-model="vm.chooseDate">Choose Date</checkbox>\r\n        </div>\r\n        <div class="check">\r\n            <checkbox ng-model="vm.chooseTime">Choose Time</checkbox>\r\n        </div>\r\n        <div class="check">\r\n            <checkbox ng-model="vm.chooseTimezone">Choose Timezone</checkbox>\r\n        </div>\r\n    </div>\r\n    <div class="col-md-6">\r\n        <div role="radiogroup">\r\n            <div class="radio">\r\n                <radiobutton ng-model="vm.ismeridian" ng-value="true">12 Hour Click ( isMeridian: true )</radiobutton>\r\n            </div>\r\n            <div class="radio">\r\n                <radiobutton ng-model="vm.ismeridian" ng-value="false">24 Hour Click ( isMeridian: false )</radiobutton>\r\n            </div>\r\n        </div>\r\n        <div class="form-group">\r\n            <label for="icon class" class="control-label form-label m-l-md col-md-3">Icon Class</label>\r\n            <div class="col-md-8 m-l-nil p-l-nil">\r\n                <input type="text" name="iconClass" ng-model="vm.datePickerIcon" placeholder="Icon(Eg. hpe-icon hpe-calendar)" class="form-control">\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>'},function(e,t){e.exports='angular.module("app").controller("IntegratedDatePickerCtrl", IntegratedDatePickerCtrl);\r\n\r\nfunction IntegratedDatePickerCtrl() {\r\n    var vm = this;\r\n\r\n    vm.dateObj = {\r\n        date: new Date(),\r\n        time: "11:21:PM",\r\n        timezone: "GMT"\r\n    };\r\n    vm.ismeridian = true;\r\n    vm.timezones = ["GMT", "IST", "EST", "CST", "WST"];\r\n    vm.timezoneDefaultIndex = 0;\r\n    vm.chooseTime = true;\r\n    vm.chooseDate = true;\r\n    vm.chooseTimezone = true;\r\n    vm.datePickerIcon = \'hpe-icon hpe-calendar\';\r\n\r\n    vm.openIntegratedPicker = function($event) {\r\n        //Additional code to be executed when clicked\r\n        vm.datePickerOpen = true;\r\n        $event.preventDefault();\r\n        $event.stopPropagation();\r\n    };\r\n}'},function(e,t){e.exports='<timepicker ng-model="vm.mytime" ng-change="vm.changed()" hour-step="vm.hstep" minute-step="vm.mstep" \r\n  show-meridian="vm.ismeridian">\r\n</timepicker>'},function(e,t){e.exports='angular.module("app").controller("TimePickerCtrl", TimePickerCtrl);\r\n\r\nfunction TimePickerCtrl() {\r\n    var vm = this;\r\n    vm.mytime = new Date();\r\n    vm.hstep = 1;\r\n    vm.mstep = 15;\r\n    vm.ismeridian = true;\r\n    vm.changed = function () {\r\n        console.log("Timepicker changed");\r\n    };\r\n\r\n}'},function(e,t){e.exports=".draggable-card-list-demo {\r\n    width: 100%;\r\n    height: 470px;\r\n}\r\n\r\n.workbook-col {\r\n    width: 180px;\r\n}\r\n\r\n.items-col {\r\n    width: 58px;\r\n}\r\n\r\n.last-accessed-col {\r\n    width: 125px;\r\n}\r\n\r\n.author-col {\r\n    width: 121px;\r\n}\r\n\r\n.draggable-example {\r\n    background-color: #FAFAFA;\r\n}\r\n.card-content {\r\n  width: 100%;\r\n  height: 100%;\r\n  padding-top: 5px;\r\n}\r\n\r\n.card-content .chart-container {\r\n  display: inline-block;\r\n  width: 60px;\r\n  height: 60px;\r\n  vertical-align: top;\r\n}\r\n\r\n.card-content .text-container {\r\n  display: inline-block;\r\n  width: calc(100% - 70px);\r\n  padding-left: 10px;\r\n}\r\n\r\n.card-content .text-container .status {\r\n  width: 100%;\r\n  height: 15px;\r\n  line-height: 12px;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  color: #4b4d4e;\r\n}"},function(e,t){e.exports='<div class="demo row draggable-example">\r\n\r\n    <div class="col-sm-5 p-l-nil">\r\n        <div class="draggable-card-list-demo">\r\n            <draggable-cards on-select="vm.onSelect" direction="right">\r\n\r\n                <fixed-card ng-repeat="card in ::vm.fixedCards" card-title="card.name" card-subtitle="card.count" card-selected="card.selected"></fixed-card>\r\n\r\n                <draggable-card ng-repeat="card in ::vm.draggableCards" card-title="card.name" card-icons="card.icons" card-subtitle="card.count"\r\n                    card-selected="card.selected">\r\n                    <div class="card-content">\r\n                        <div class="chart-container">\r\n                            <flot dataset="card.data" options="card.options"></flot>\r\n                        </div>\r\n                        <div class="text-container">\r\n                            <p class="m-b-nil status" ng-bind="::card.status" overflow-tooltip></p>\r\n                            <p class="m-b-nil description text-muted" ng-bind="::card.description" overflow-tooltip></p>\r\n                        </div>\r\n                    </div>\r\n                </draggable-card>\r\n\r\n            </draggable-cards>\r\n        </div>\r\n    </div>\r\n\r\n    <div class="col-sm-7">\r\n        <div class="table-responsive">\r\n            <table class="table table-hover">\r\n                <thead class="table-header-dark">\r\n                    <tr>\r\n                        <th></th>\r\n                        <th>Workbook</th>\r\n                        <th>Items</th>\r\n                        <th>Last Accessed</th>\r\n                        <th>Author</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr ng-repeat="item in vm.items">\r\n                        <td class="text-center">\r\n                            <div class="listview-page-icon"></div>\r\n                        </td>\r\n                        <td class="workbook-col" ng-bind="item.workbook"></td>\r\n                        <td class="item-col" ng-bind="item.items"></td>\r\n                        <td class="last-accessed-col" ng-bind="item.lastAccessed"></td>\r\n                        <td class="author-col" ng-bind="item.author"></td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    </div>\r\n</div>'},function(e,t){e.exports="angular.module('app').controller('DraggableCardsListViewDemoCtrl', DraggableCardsListViewDemoCtrl);\r\n\r\nDraggableCardsListViewDemoCtrl.$inject = ['$scope', '$colorService'];\r\n\r\nfunction DraggableCardsListViewDemoCtrl($scope, $colorService) {\r\n    var vm = this;\r\n\r\n    var flotChartColors = {\r\n        accent: $colorService.getColor('accent').toRgb(),\r\n        grey5: $colorService.getColor('grey5').toRgb(),\r\n        other: $colorService.getColor('accent').setAlpha(0.5).toRgba()\r\n    };\r\n\r\n    var labelColor = '#333';\r\n\r\n    vm.availableItems = [{\r\n        workbook: 'Privileged documents',\r\n        items: 35,\r\n        lastAccessed: 'Jul 14, 2013',\r\n        author: chance.name(),\r\n        category: 'Privileged'\r\n    }, {\r\n        workbook: 'Work Product',\r\n        items: 60,\r\n        lastAccessed: 'Jan 12, 2013',\r\n        author: chance.name(),\r\n        category: 'Privileged'\r\n    }, {\r\n        workbook: 'Hold',\r\n        items: 22,\r\n        lastAccessed: 'Aug 4, 2013',\r\n        author: chance.name(),\r\n        category: 'Privileged'\r\n    }, {\r\n        workbook: 'For export',\r\n        items: 35,\r\n        lastAccessed: 'June 29, 2013',\r\n        author: chance.name(),\r\n        category: 'Privileged'\r\n    }, {\r\n        workbook: 'Executive Email',\r\n        items: 11,\r\n        lastAccessed: 'Dec 24, 2013',\r\n        author: chance.name(),\r\n        category: 'Protected'\r\n    }, {\r\n        workbook: 'Work Product',\r\n        items: 99,\r\n        lastAccessed: 'Jan 12, 2013',\r\n        author: chance.name(),\r\n        category: 'Protected'\r\n    }, {\r\n        workbook: 'Hold',\r\n        items: 12,\r\n        lastAccessed: 'Nov 12, 2013',\r\n        author: chance.name(),\r\n        category: 'Protected'\r\n    }, {\r\n        workbook: 'Workbook 7',\r\n        items: 44,\r\n        lastAccessed: 'Feb 1, 2013',\r\n        author: chance.name(),\r\n        category: 'Relevant'\r\n    }, {\r\n        workbook: 'Workbook 10',\r\n        items: 55,\r\n        lastAccessed: 'Apr 2, 2013',\r\n        author: chance.name(),\r\n        category: 'Relevant'\r\n    }, {\r\n        workbook: 'Workbook 8',\r\n        items: 66,\r\n        lastAccessed: 'May 3, 2013',\r\n        author: chance.name(),\r\n        category: 'Relevant'\r\n    },];\r\n\r\n    vm.items = [];\r\n\r\n    vm.onSelect = function (itemScope) {\r\n        var category = itemScope.card.name;\r\n\r\n        //if the selected category is all then show all available items\r\n        if (category === 'All') {\r\n            vm.items = vm.availableItems;\r\n        } else {\r\n            vm.items = vm.availableItems.filter(function (item) {\r\n                return item.category === category;\r\n            });\r\n        }\r\n        $scope.$digest();\r\n    };\r\n\r\n    vm.fixedCards = [{\r\n        name: 'All',\r\n        count: '(10)',\r\n        selected: true\r\n    }];\r\n\r\n    vm.draggableCards = [{\r\n        name: 'Protected',\r\n        count: '(3)',\r\n        status: '15% unique, 10% shared',\r\n        description: 'NYC Preliminary Production 1 created from the protected items.',\r\n        selected: false,\r\n        data: [{\r\n            data: 25,\r\n            color: [flotChartColors.accent]\r\n        }, {\r\n            data: 15,\r\n            color: [flotChartColors.other]\r\n        }, {\r\n            data: 18,\r\n            color: [flotChartColors.grey5]\r\n        }],\r\n        options: getChartOptions('13.2M'),\r\n        icons: [{\r\n            icon: 'hpe-folder',\r\n            tooltip: 'Folder',\r\n            click: function () {\r\n                //do stuff here when icon is clicked\r\n            }\r\n        }, {\r\n            icon: 'hpe-bookmark',\r\n            click: function () {\r\n                //do stuff here when icon is clicked\r\n            }\r\n        }]\r\n    }, {\r\n        name: 'Privileged',\r\n        count: '(4)',\r\n        status: '7% unique, 10% shared',\r\n        description: 'NYC Production 2 created as a follow up to Production 1.',\r\n        selected: false,\r\n        data: [{\r\n            data: 10,\r\n            color: [flotChartColors.accent]\r\n        }, {\r\n            data: 5,\r\n            color: [flotChartColors.other]\r\n        }, {\r\n            data: 85,\r\n            color: [flotChartColors.grey5]\r\n        }],\r\n        options: getChartOptions('6.5M')\r\n    }, {\r\n        name: 'Relevant',\r\n        count: '(3)',\r\n        status: '65% unique, 12% shared',\r\n        description: 'NYC Production 3 Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.',\r\n        selected: false,\r\n        data: [{\r\n            data: 60,\r\n            color: [flotChartColors.accent]\r\n        }, {\r\n            data: 15,\r\n            color: [flotChartColors.other]\r\n        }, {\r\n            data: 25,\r\n            color: [flotChartColors.grey5]\r\n        }],\r\n        options: getChartOptions('33.2M')\r\n    }];\r\n\r\n    function getChartOptions(label) {\r\n        return {\r\n            series: {\r\n                pie: {\r\n                    show: true,\r\n                    innerRadius: 0.7,\r\n                    centerLabel: {\r\n                        show: true,\r\n                        color: labelColor,\r\n                        text: label,\r\n                        font: 'Source Sans Pro',\r\n                        fontSize: 15,\r\n                        textBaseline: 'middle'\r\n                    },\r\n                    stroke: {\r\n                        width: 0\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }\r\n}\r\n"},function(e,t){e.exports=".draggable-card-demo {\r\n    width: 400px;\r\n    height: 500px;\r\n}\r\n\r\n.card-content {\r\n    width: 100%;\r\n    height: 100%;\r\n    padding-top: 5px;\r\n}\r\n\r\n.card-content .chart-container {\r\n    display: inline-block;\r\n    width: 60px;\r\n    height: 60px;\r\n    vertical-align: top;\r\n}\r\n\r\n.card-content .text-container {\r\n    display: inline-block;\r\n    width: calc(100% - 70px);\r\n    padding-left: 10px;\r\n}\r\n\r\n.card-content .text-container .status {\r\n    width: 100%;\r\n    height: 15px;\r\n    line-height: 12px;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    color: #4b4d4e;\r\n}\r\n\r\n.card-content .text-container .description {\r\n    width: 100%;\r\n    height: 44px;\r\n    overflow: hidden;\r\n    font-size: 14px;\r\n}"},function(e,t){e.exports='<div class="demo row">\r\n    <div class="draggable-card-demo p-l-md">\r\n        <draggable-cards allow-reordering="vm.allowReordering" allow-editing="vm.allowEditing" allow-removing="vm.allowRemoving" on-edit="vm.onEdit" on-remove="vm.onRemove" on-select="vm.onSelect" on-reorder="vm.onReorder" direction="right">\r\n            <fixed-card ng-repeat="card in ::vm.fixedCards" card-title="card.name" card-subtitle="card.count" card-selected="card.selected"></fixed-card>\r\n\r\n            <draggable-card ng-repeat="card in vm.draggableCards" card-title="card.name" card-subtitle="card.count" card-selected="card.selected">\r\n            <div class="card-content">\r\n                <div class="chart-container">\r\n                <flot dataset="card.data" options="card.options"></flot>\r\n                </div>\r\n                <div class="text-container">\r\n                <p class="m-b-nil status" ng-bind="::card.status" overflow-tooltip></p>\r\n                <p class="m-b-nil description text-muted" ng-bind="::card.description" overflow-tooltip></p>\r\n                </div>\r\n            </div>\r\n            </draggable-card>\r\n        </draggable-cards>\r\n    </div>\r\n</div>'},function(e,t){e.exports="angular.module('app').controller('DraggableCardsDemoCtrl', DraggableCardsDemoCtrl);\r\n\r\nDraggableCardsDemoCtrl.$inject = ['$scope', '$colorService'];\r\n\r\nfunction DraggableCardsDemoCtrl($scope, $colorService) {\r\n    var vm = this;\r\n\r\n    var flotChartColors = {\r\n        accent: $colorService.getColor('accent').toRgb(),\r\n        grey5: $colorService.getColor('grey5').toRgb(),\r\n        other: $colorService.getColor('accent').setAlpha(0.5).toRgba()\r\n    };\r\n\r\n    vm.allowEditing = true;\r\n    vm.allowRemoving = true;\r\n    vm.allowReordering = true;\r\n\r\n    var labelColor = '#333';\r\n\r\n    vm.onReorder = function () {\r\n        //do stuff here when cards are reordered\r\n    };\r\n\r\n    vm.onSelect = function () {\r\n        //do stuff here when a card is selected\r\n    };\r\n\r\n    vm.onEdit = function () {\r\n        //do stuff here when the edit button is clicked\r\n    };\r\n\r\n    vm.onRemove = function (itemScope) {\r\n\r\n        //find the matching card\r\n        var idx = vm.draggableCards.indexOf(itemScope.card);\r\n\r\n        //remove and the item\r\n        vm.draggableCards.splice(idx, 1);\r\n\r\n        //ensure update occurs\r\n        $scope.$digest();\r\n    };\r\n\r\n    vm.fixedCards = [{\r\n        name: 'All',\r\n        count: '(8)',\r\n        selected: false\r\n    }, {\r\n        name: 'No Category',\r\n        count: '(2)',\r\n        selected: false\r\n    }];\r\n\r\n    vm.draggableCards = [{\r\n        name: 'Protected',\r\n        count: '(6)',\r\n        status: '15% unique, 10% shared',\r\n        description: 'NYC Preliminary Production 1 created from the protected items.',\r\n        selected: true,\r\n        data: [{\r\n            data: 25,\r\n            color: [flotChartColors.accent]\r\n        }, {\r\n            data: 15,\r\n            color: [flotChartColors.other]\r\n        }, {\r\n            data: 18,\r\n            color: [flotChartColors.grey5]\r\n        }],\r\n        options: getChartOptions('13.2M')\r\n    }, {\r\n        name: 'Privileged',\r\n        count: '(4)',\r\n        status: '7% unique, 10% shared',\r\n        description: 'NYC Production 2 created as a follow up to Production 1.',\r\n        selected: false,\r\n        data: [{\r\n            data: 10,\r\n            color: [flotChartColors.accent]\r\n        }, {\r\n            data: 5,\r\n            color: [flotChartColors.other]\r\n        }, {\r\n            data: 85,\r\n            color: [flotChartColors.grey5]\r\n        }],\r\n        options: getChartOptions('6.5M')\r\n    }, {\r\n        name: 'Relevant',\r\n        count: '(2)',\r\n        status: '65% unique, 12% shared',\r\n        description: 'NYC Production 3 Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.',\r\n        selected: false,\r\n        data: [{\r\n            data: 60,\r\n            color: [flotChartColors.accent]\r\n        }, {\r\n            data: 15,\r\n            color: [flotChartColors.other]\r\n        }, {\r\n            data: 25,\r\n            color: [flotChartColors.grey5]\r\n        }],\r\n        options: getChartOptions('33.2M')\r\n    }, {\r\n        name: 'Proprietary',\r\n        count: '(3)',\r\n        status: '7% unique, 10% shared',\r\n        description: 'NYC Production 4 Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.',\r\n        selected: false,\r\n        data: [{\r\n            data: 7,\r\n            color: [flotChartColors.accent]\r\n        }, {\r\n            data: 5,\r\n            color: [flotChartColors.other]\r\n        }, {\r\n            data: 87,\r\n            color: [flotChartColors.grey5]\r\n        }],\r\n        options: getChartOptions('5.4M')\r\n    }, {\r\n        name: 'Reviewed',\r\n        count: '(2)',\r\n        status: '65% unique, 12% shared',\r\n        description: 'NYC Production 5 Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.',\r\n        selected: false,\r\n        data: [{\r\n            data: 60,\r\n            color: [flotChartColors.accent]\r\n        }, {\r\n            data: 10,\r\n            color: [flotChartColors.other]\r\n        }, {\r\n            data: 30,\r\n            color: [flotChartColors.grey5]\r\n        }],\r\n        options: getChartOptions('36.0M')\r\n    }];\r\n\r\n    function getChartOptions(label) {\r\n        return {\r\n            series: {\r\n                pie: {\r\n                    show: true,\r\n                    innerRadius: 0.7,\r\n                    centerLabel: {\r\n                        show: true,\r\n                        color: labelColor,\r\n                        text: label,\r\n                        font: 'Source Sans Pro',\r\n                        fontSize: 15,\r\n                        textBaseline: 'middle'\r\n                    },\r\n                    stroke: {\r\n                        width: 0\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }\r\n}\r\n"},function(e,t){e.exports='<draggable-panel-container class="col-xs-6" draggable-group="my-draggable-list">\r\n  <!-- Panels Go Here -->\r\n</draggable-panel-container>'},function(e,t){e.exports='<draggable-panel>\r\n    <div class="hpebox">\r\n        <div class="hpebox-title">\r\n            <div class="hpebox-draghandle drag-handle" drag-handle></div>\r\n            <h3>Draggable 1</h3>\r\n        </div>\r\n        <div class="hpebox-content">\r\n            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vestibulum...</p>\r\n        </div>\r\n    </div>\r\n</draggable-panel>'},function(e,t){e.exports='<div class="row">\r\n    <draggable-panel-container class="col-xs-6" draggable-group="my-draggable-list" render-delay>\r\n\r\n        <draggable-panel>\r\n            <div class="hpebox">\r\n                <div class="hpebox-title">\r\n                    <div class="hpebox-draghandle drag-handle" drag-handle></div>\r\n                    <h3>Draggable 1</h3>\r\n                </div>\r\n                <div class="hpebox-content">\r\n                    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vestibulum tincidunt est vitae ultrices accumsan.\r\n                        Aliquam ornare lacus adipiscing, posuere lectus et, fringilla augue.</p>\r\n                </div>\r\n            </div>\r\n        </draggable-panel>\r\n\r\n        <draggable-panel>\r\n            <div class="hpebox">\r\n                <div class="hpebox-title">\r\n                    <div class="hpebox-draghandle drag-handle" drag-handle></div>\r\n                    <h3>Draggable 2</h3>\r\n                </div>\r\n                <div class="hpebox-content">\r\n                    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vestibulum tincidunt est vitae ultrices accumsan.\r\n                        Aliquam ornare lacus adipiscing, posuere lectus et, fringilla augue.</p>\r\n                </div>\r\n            </div>\r\n        </draggable-panel>\r\n\r\n    </draggable-panel-container>\r\n\r\n    <draggable-panel-container class="col-xs-6" draggable-group="my-draggable-list" render-delay>\r\n\r\n        <draggable-panel>\r\n            <div class="hpebox">\r\n                <div class="hpebox-title">\r\n                    <div class="hpebox-draghandle drag-handle" drag-handle></div>\r\n                    <h3>Draggable 3</h3>\r\n                </div>\r\n                <div class="hpebox-content">\r\n                    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vestibulum tincidunt est vitae ultrices accumsan.\r\n                        Aliquam ornare lacus adipiscing, posuere lectus et, fringilla augue.</p>\r\n                </div>\r\n            </div>\r\n        </draggable-panel>\r\n\r\n        <draggable-panel>\r\n            <div class="hpebox">\r\n                <div class="hpebox-title">\r\n                    <div class="hpebox-draghandle drag-handle" drag-handle></div>\r\n                    <h3>Draggable 4</h3>\r\n                </div>\r\n                <div class="hpebox-content">\r\n                    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vestibulum tincidunt est vitae ultrices accumsan.\r\n                        Aliquam ornare lacus adipiscing, posuere lectus et, fringilla augue.</p>\r\n                </div>\r\n            </div>\r\n        </draggable-panel>\r\n\r\n        <draggable-panel>\r\n            <div class="hpebox">\r\n                <div class="hpebox-title">\r\n                    <div class="hpebox-draghandle drag-handle" drag-handle></div>\r\n                    <h3>Draggable 5</h3>\r\n                </div>\r\n                <div class="hpebox-content">\r\n                    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vestibulum tincidunt est vitae ultrices accumsan.\r\n                        Aliquam ornare lacus adipiscing, posuere lectus et, fringilla augue.</p>\r\n                </div>\r\n            </div>\r\n        </draggable-panel>\r\n\r\n    </draggable-panel-container>\r\n</div>'},function(e,t){e.exports=".draggable-panel-list-demo {\r\n\tbackground-color: #f7f7f7;\r\n\theight: 400px;\r\n}\r\n\r\n.body-dark .draggable-panel-list-demo {\r\n\tbackground-color: #404040;\r\n}\r\n\r\n.body-dark .draggable-panel-list-demo div {\r\n\tbackground-color: #444444;\r\n}\r\n\r\n.draggable-panel-list-demo div {\r\n\tbackground-color: #ffffff;\r\n}\r\n\r\n.list-item-large-demo {\r\n\theight: 130px;\r\n}\r\n\r\n.list-item-small-demo {\r\n\theight: 50px;\r\n}"},function(e,t){e.exports='<div class="row">\r\n\r\n    <div class="m-l-md">\r\n        <h4>Drag cards to add them to the list</h4>\r\n    </div>\r\n\r\n    <draggable-panel-container class="col-xs-6 draggable-panel-card-container p-l-md p-r-nil" draggable-group="my-draggable-list"\r\n        draggable-view="card" on-drag-start="vm.onDragStart" on-drag-end="vm.onDragEnd" custom-placeholder-size="true">\r\n\r\n        <draggable-panel>\r\n            <div class="draggable-panel-card card">\r\n                <div class="gutter" drag-handle>\r\n                    <div class="drag-handle"></div>\r\n                </div>\r\n                <div class="content">\r\n                    <i class="hpe-icon hpe-down p-t-sm p-b-sm m-b-xs" aria-hidden="true"></i>\r\n                    <h4 class="m-t-nil m-b-md">Dropdown</h4>\r\n                    <p class="align-left inline m-t-xs">Dropdown</p>\r\n                    <p class="align-right inline p-r-sm m-t-xs lighten">Dropdown</p>\r\n                </div>\r\n            </div>\r\n\r\n            <div class="draggable-panel-list list list-item-small-demo">\r\n                <div class="gutter" drag-handle>\r\n                    <div class="drag-handle"></div>\r\n                </div>\r\n                <div class="title">\r\n                    <p>Dropdown</p>\r\n                </div>\r\n                <div class="content">\r\n                    <div class="btn-group">\r\n                        <button type="button" class="btn button-secondary">Action </button>\r\n                        <button data-toggle="dropdown" class="btn button-secondary dropdown-toggle" aria-expanded="false">\r\n                <span class="hpe-icon hpe-down"></span>\r\n                <span class="sr-only">Toggle Dropdown</span>\r\n              </button>\r\n                        <ul class="dropdown-menu" role="menu" aria-labelledby="btnDropDown2">\r\n                            <li><a>Action</a></li>\r\n                            <li><a>Another action</a></li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </draggable-panel>\r\n\r\n        <draggable-panel>\r\n            <div class="draggable-panel-card card">\r\n                <div class="gutter" drag-handle>\r\n                    <div class="drag-handle"></div>\r\n                </div>\r\n                <div class="content">\r\n                    <i class="hpe-icon hpe-document-text p-t-sm p-b-sm m-b-xs" aria-hidden="true"></i>\r\n                    <h4 class="m-t-nil m-b-md">Comments</h4>\r\n                    <p class="align-left inline m-t-xs">Text area</p>\r\n                    <p class="align-right inline p-r-sm m-t-xs lighten">Text</p>\r\n                </div>\r\n            </div>\r\n\r\n            <div class="draggable-panel-list list list-item-large-demo">\r\n                <div class="gutter" drag-handle>\r\n                    <div class="drag-handle"></div>\r\n                </div>\r\n                <div class="title">\r\n                    <p>Comments</p>\r\n                </div>\r\n                <div class="content">\r\n                    <textarea class="form-control inline" rows="4" placeholder="Enter text"></textarea>\r\n                </div>\r\n            </div>\r\n        </draggable-panel>\r\n\r\n        <draggable-panel>\r\n            <div class="draggable-panel-card card">\r\n                <div class="gutter" drag-handle>\r\n                    <div class="drag-handle"></div>\r\n                </div>\r\n                <div class="content">\r\n                    <i class="hpe-icon hpe-divide p-t-sm p-b-sm m-b-xs" aria-hidden="true"></i>\r\n                    <h4 class="m-t-nil m-b-md">Buttons</h4>\r\n                    <p class="align-left inline m-t-xs">Single Select</p>\r\n                    <p class="align-right inline p-r-sm m-t-xs lighten">Text</p>\r\n                </div>\r\n            </div>\r\n\r\n            <div class="draggable-panel-list list list-item-small-demo">\r\n                <div class="gutter" drag-handle>\r\n                    <div class="drag-handle"></div>\r\n                </div>\r\n                <div class="title">\r\n                    <p>Buttons</p>\r\n                </div>\r\n                <div class="content">\r\n                    <div class="btn-group" role="group" aria-label="Alignment">\r\n                        <button class="btn button-secondary btn-grouped" type="button">Left</button>\r\n                        <button class="btn button-secondary btn-grouped" type="button">Right</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </draggable-panel>\r\n\r\n    </draggable-panel-container>\r\n\r\n    <draggable-panel-container class="col-xs-6 p-r-nil p-l-nil draggable-panel-list-container draggable-panel-list-demo" draggable-group="my-draggable-list"\r\n        draggable-view="list" custom-placeholder-size="true">\r\n\r\n    </draggable-panel-container>\r\n</div>'},function(e,t){e.exports="angular.module('app').controller('DraggablePanelsViewsDemoCtrl', DraggablePanelsViewsDemoCtrl);\r\n\r\nfunction DraggablePanelsViewsDemoCtrl() {\r\n    var vm = this;\r\n\r\n    // store reference to the container element for better performance\r\n    var listContainer;\r\n\r\n    function getContainer() {\r\n        // if container has already been found then return it\r\n        if (listContainer) { return listContainer; }\r\n\r\n        // otherwise find the element\r\n        listContainer = angular.element(document.getElementsByClassName('draggable-panel-list-container')[0]);\r\n\r\n        // return found element\r\n        return listContainer;\r\n    }\r\n\r\n    vm.onDragStart = function (panel) {\r\n        if (panel.toElement && panel.toElement.className === 'drag-handle') {\r\n            panel.toElement.parentElement.classList.add('panel-dragging');\r\n        } else if (panel.toElement) {\r\n            panel.toElement.classList.add('panel-dragging');\r\n        }\r\n\r\n        getContainer().addClass('draggable-panel-highlight');\r\n    };\r\n\r\n    vm.onDragEnd = function (panel) {\r\n        if (panel.toElement && panel.toElement.className === 'drag-handle') {\r\n            panel.toElement.parentElement.classList.remove('panel-dragging');\r\n        } else if (panel.toElement) {\r\n            panel.toElement.classList.remove('panel-dragging');\r\n        }\r\n\r\n        getContainer().removeClass('draggable-panel-highlight');\r\n    };\r\n}\r\n"},function(e,t){e.exports='<facet-container select-title="Selected:" clear-text="Clear All">\r\n      <!--...-->\r\n    <facet-custom name=" \'DATE MODIFIED\' " select="vm.dateFacetSelect" deselect="vm.dateFacetDeselect" model="vm.date" display="vm.dateFacetDisplayFn">\r\n        <div class="input-group date m-nil" style="padding: 10px;">\r\n            <span class="input-group-addon" ng-click="vm.dateFacetOpen($event)">\r\n              <i class="hpe-icon hpe-calendar" aria-hidden="true"></i>\r\n            </span>\r\n            <input type="text" class="form-control" ng-model="vm.date" datepicker-popup="dd MMMM yyyy"\r\n            ng-click="vm.dateFacetOpen($event)" is-open="vm.dateFacetOpened" aria-label="Selected date">\r\n        </div>\r\n    </facet-custom>\r\n     <!--...-->\r\n</facet-container>'},function(e,t){e.exports='angular.module("app").controller("TestCtrl", TestCtrl);\r\n\r\nfunction TestCtrl() {\r\n    var vm = this;\r\n\r\n    vm.date = "";\r\n    vm.dateFacetOpened = false;\r\n\r\n    vm.dateFacetOpen = function ($event) {\r\n        $event.preventDefault();\r\n        $event.stopPropagation();\r\n        vm.dateFacetOpened = true;\r\n        vm.prevdate = vm.date;\r\n    };\r\n\r\n    vm.change = function () {\r\n        var customdate = new Date(vm.date);\r\n        if (isNaN(customdate)) {\r\n            vm.date = new Date();\r\n        } else if (vm.date !== vm.prevdate) {\r\n            vm.date = new Date(vm.date);\r\n            vm.prevdate = vm.date;\r\n        }\r\n    };\r\n\r\n    var selectedDateFilter = function (data) {\r\n        if (vm.compareDate === "") return true;\r\n        return data.date.getDate().toString() + data.date.getMonth().toString() + data.date.getFullYear().toString() === vm.compareDate;\r\n    };\r\n\r\n    var customFilters = [];\r\n    var currentDate = "";\r\n\r\n    var applyCustomFilter = function () {\r\n        //Pushing the filter to the set of selected filters\r\n        vm.filters.push(customFilters);\r\n\r\n        //Updating counts and loading page with selected filter\r\n        vm.updateCounts();\r\n        vm.updateSelectCounts();\r\n        vm.loadPage();\r\n    };\r\n\r\n    vm.dateFacetDeselect = function () {\r\n        //Store the current date, and select with this date.\r\n        currentDate = vm.date;\r\n\r\n        //make this empty to clear the date field\r\n        vm.date = "";\r\n\r\n        customFilters.splice(0, 1);\r\n        vm.filters.push(customFilters);\r\n        applyCustomFilter();\r\n    };\r\n\r\n    vm.dateFacetSelect = function () {\r\n\r\n        if (vm.date !== "")\r\n            vm.compareDate = vm.date.getDate().toString() + vm.date.getMonth().toString() + vm.date.getFullYear().toString();\r\n        else vm.compareDate = ""; //Returns all the values\r\n\r\n        customFilters.push(selectedDateFilter);\r\n        applyCustomFilter();\r\n    };\r\n\r\n    vm.dateFacetDisplayFn = function () {\r\n        vm.date = currentDate;\r\n\r\n        if (vm.date !== "")\r\n            return vm.date.getDate().toString() + " - " + (vm.date.getMonth() + 1).toString() + " - " + vm.date.getFullYear().toString();\r\n    };\r\n\r\n}'},function(e,t){e.exports='<facet-custom name=" \'DATE MODIFIED\' " select="vm.dateFacetSelect" deselect="vm.dateFacetDeselect" model="vm.date" display="vm.dateFacetDisplayFn">\r\n<!-- ....  -->\r\n</facet-custom>'},function(e,t){e.exports='<facet-container>\r\n    <!--...-->\r\n    <facet-dynamic name="vm.facetOptions.title" facet-options="vm.facetOptions" display-configuration="vm.facetLongListConfig"\r\n                   placeholder=" \'Find Author\' " update-callback="vm.longListCallback" max-length="100" max-lines="3" disable-return="\'false\'" >\r\n    </facet-dynamic>\r\n    <!--...-->\r\n</facet-container>'},function(e,t){e.exports='angular.module("app").controller("TestCtrl", ["exampleDataService", TestCtrl]);\r\n\r\nfunction TestCtrl(exampleDataService) {\r\n    var vm = this;\r\n\r\n    vm.service = exampleDataService;\r\n\r\n    //Example configuration\r\n    vm.facetLongListConfig = {\r\n        minCharacters: 3,\r\n        minIndividualItems: 0,\r\n        maxIndividualItems: 10,\r\n        maxDisplayableItems: 10,\r\n        showZero: false\r\n    };\r\n\r\n    vm.facetOptions = {\r\n        title: "Author",\r\n        options: vm.service.users.sort().map(function (user) {\r\n            //Logic to filter the matching names\r\n            return {\r\n                name: user,\r\n                filter: function (data) {\r\n                    return data.name === user;\r\n                }\r\n            };\r\n        })\r\n    };\r\n\r\n    vm.facetOptions.options.forEach(function (option) {\r\n        option.select = function () {\r\n            console.log("Facet Selected");\r\n            //Implement logic when facet is selected\r\n        };\r\n\r\n        option.deselect = function () {\r\n            console.log("Facet Deselected");\r\n            //Implement logic when facet is deselected\r\n        };\r\n    });\r\n\r\n    vm.longListCallback = function (textInput, optionList) {\r\n        return optionList;\r\n    };\r\n}'},function(e,t){e.exports="/*\r\n  Flot Line Chart With Facet Panel\r\n*/\r\n\r\n.flot-facet-container {\r\n    overflow: hidden;\r\n}\r\n\r\n.flot-facet-container .flot-chart-facet-container {\r\n    display: block;\r\n    height: 500px;\r\n}\r\n\r\n.flot-facet-container .flot-side-panel {\r\n    height: 500px;\r\n    box-shadow: -5px 0px 12px #ccc;\r\n    border: 1px solid #ddd;\r\n}\r\n\r\n.flot-facet-container .flot-side-panel .date-range-label {\r\n    padding: 0;\r\n    margin: 6px 0;\r\n}\r\n\r\n.flot-facet-container .flot-side-panel .warning-text {\r\n    color: #ff454f;\r\n    text-align: center;\r\n    margin-top: 10px;\r\n}\r\n\r\n.flot-facet-container .flot-side-panel .no-indent {\r\n    padding-left: 0;\r\n}"},function(e,t){e.exports='<div ng-controller="FacetCtrl as lc" class="container-fluid">\r\n    <div class="row">\r\n        <div class="col-md-12 m-t-md">\r\n            <div class="row flot-facet-container">\r\n                <div class="col-sm-8">\r\n                    <div class="flot-chart-facet-container">\r\n                        <flot dataset="lc.lineChart.data" options="lc.lineChart.lineoptions" on-plot-click="lc.lineChart.onPlotClick(event,pos,item)"\r\n                            on-hover-click="lc.lineChart.onPlotHover(event,pos,item)">\r\n                        </flot>\r\n                    </div>\r\n                </div>\r\n                <div class="col-sm-4 flot-side-panel">\r\n                    <facet-container select-title="Selected:" clear-text="Clear All">\r\n\r\n                        <facet-custom name=" \'Date Range\' " select="lc.selectDateRange" deselect="lc.deselectDateRange" model="lc.dateRangeModel"\r\n                            display="lc.displayDateRange">\r\n                            <br />\r\n                            <label class="col-sm-2 date-range-label">From</label>\r\n                            <div class="col-sm-10 input-group date m-nil m-b-sm">\r\n                                <span class="input-group-addon" ng-click="lc.dateStartOpen($event)">\r\n                          <i class="hpe-icon hpe-calendar" aria-hidden="true"></i>\r\n                        </span>\r\n                                <input type="text" class="form-control" ng-model="lc.dateStart" datepicker-popup="dd MMMM yyyy" ng-click="lc.dateStartOpen($event)"\r\n                                    is-open="lc.dateStartIsOpen" ng-change="lc.dateStartUpdate()" aria-label="Selected start date"\r\n                                />\r\n                            </div>\r\n\r\n                            <label class="col-sm-2 date-range-label">To</label>\r\n                            <div class="col-sm-10 input-group date m-nil">\r\n                                <span class="input-group-addon" ng-click="lc.dateEndOpen($event)">\r\n                          <i class="hpe-icon hpe-calendar" aria-hidden="true"></i>\r\n                        </span>\r\n                                <input type="text" class="form-control" ng-model="lc.dateEnd" datepicker-popup="dd MMMM yyyy" ng-click="lc.dateEndOpen($event)"\r\n                                    is-open="lc.dateEndIsOpen" ng-change="lc.dateEndUpdate()" aria-label="Selected end date"\r\n                                />\r\n                            </div>\r\n                            <p class="text-center text-muted m-t-sm"><small>Choose a date range between 1st January 2012 - 1st January 2016</small></p>\r\n                            <p class="warning-text" ng-show="lc.invalidDate">Invalid Date Range</p>\r\n                        </facet-custom>\r\n\r\n                        <facet-custom name=" \'User Type\' " select="lc.userTypeSelect" deselect="lc.userTypeDeselect" model="lc.userTypeModel" display="lc.userTypeDisplay">\r\n\r\n                            <div role="radiogroup">\r\n                                <div class="radio">\r\n                                    <radiobutton class="no-indent" ng-model="lc.selectedUserType" ng-value="lc.userTypeOptions.ldap">LDAP</radiobutton>\r\n                                </div>\r\n                                <div class="radio">\r\n                                    <radiobutton class="no-indent" ng-model="lc.selectedUserType" ng-value="lc.userTypeOptions.imap">IMAP</radiobutton>\r\n                                </div>\r\n                                <div class="radio">\r\n                                    <radiobutton class="no-indent" ng-model="lc.selectedUserType" ng-value="lc.userTypeOptions.eca">ECA</radiobutton>\r\n                                </div>\r\n                                <div class="radio">\r\n                                    <radiobutton class="no-indent" ng-model="lc.selectedUserType" ng-value="lc.userTypeOptions.admin">Admin</radiobutton>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </facet-custom>\r\n\r\n                    </facet-container>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>'},function(e,t){e.exports='angular.module(\'app\').controller(\'FacetCtrl\', FacetCtrl);\r\n\r\nFacetCtrl.$inject = [\'$scope\'];\r\n\r\nfunction FacetCtrl($scope) {\r\n    var lc = this;\r\n\r\n    var flotChartColors = {\r\n        primary: "rgb(1, 169, 130)",\r\n        secondary1: "rgb(96, 121, 141)",\r\n        secondary2: "rgb(97, 71, 103)",\r\n        secondary3: "rgb(135, 123, 117)",\r\n        secondary4: "rgb(97, 125, 120)",\r\n        secondary5: "rgb(204, 204, 204)",\r\n        gridColor: "#999999",\r\n        tickColor: "#D4D4D4",\r\n        white: "#FFFFFF",\r\n        transparent: "rgba(0, 0, 0, 0)",\r\n        borderColor: "#E5E5E5"\r\n    };\r\n\r\n    //default dates\r\n    var minimumDate = 1325376000000,\r\n        maximumDate = 1451606400000,\r\n        startDate = 1427846400000,\r\n        endDate = 1446336000000,\r\n        step = 2311200000,\r\n        selectedUserModel = \'LDAP\';\r\n\r\n    var ldapData = getPointsWithinRange(minimumDate, maximumDate, step, 15, 75);\r\n    var imapData = getPointsWithinRange(minimumDate, maximumDate, step, 15, 75);\r\n    var ecaData = getPointsWithinRange(minimumDate, maximumDate, step, 15, 75);\r\n    var adminData = getPointsWithinRange(minimumDate, maximumDate, step, 15, 75);\r\n\r\n    //set the initial selection\r\n    var chartData = ldapData;\r\n\r\n    /*\r\n    This function should be used to calculate new Y axis minimum and maximum values\r\n    when the data changes to provide a more suitable range\r\n    */\r\n\r\n    function updateChartYAxis() {\r\n        var start = lc.lineChart.lineoptions.xaxis.min;\r\n        var end = lc.lineChart.lineoptions.xaxis.max;\r\n\r\n        var min, max;\r\n\r\n        for (var i = 0; i < chartData.length; i++) {\r\n            var x = chartData[i][0];\r\n            var y = chartData[i][1];\r\n\r\n            if (x >= start && x <= end) {\r\n                if (!min || y < min) min = y;\r\n                if (!max || y > max) max = y;\r\n            }\r\n        }\r\n\r\n        //add some extra space above and beneath\r\n        min -= 5;\r\n        max += 5;\r\n\r\n        //update the chart\r\n        lc.lineChart.lineoptions.yaxis.min = min;\r\n        lc.lineChart.lineoptions.yaxis.max = max;\r\n    }\r\n\r\n    /*\r\n    Date Range Facet\r\n    */\r\n\r\n    lc.dateRangeModel = \'\';\r\n    lc.invalidDate = false;\r\n\r\n    var dateChanged = false;\r\n\r\n    lc.selectDateRange = function () {\r\n        //update date range\r\n        updateChart(lc.dateStart, lc.dateEnd);\r\n\r\n        if (lc.dateStart.getTime() > lc.dateEnd.getTime()) lc.invalidDate = true;\r\n        else lc.invalidDate = false;\r\n    };\r\n\r\n    lc.deselectDateRange = function () {\r\n\r\n        //check if the user has changed the date rather than deselected\r\n        if (dateChanged) {\r\n            lc.invalidDate = false;\r\n            dateChanged = false;\r\n            return;\r\n        }\r\n\r\n        //if user deselected or hit clear all then reset the values to their default\r\n        lc.dateRangeModel = \'\';\r\n        lc.dateStart = new Date(minimumDate);\r\n        lc.dateEnd = new Date(maximumDate);\r\n        lc.invalidDate = false;\r\n\r\n        //redraw the charts taking into account the default values\r\n        updateChart(lc.dateStart, lc.dateEnd);\r\n\r\n    };\r\n\r\n    lc.displayDateRange = function () {\r\n\r\n        //convert the dates to readable strings\r\n        var startDate = lc.dateStart;\r\n        var endDate = lc.dateEnd;\r\n\r\n        var monthNames = ["Jan", "Feb", "Mar", "Apr", "May", "June", "July", "Aug", "Sept", "Oct", "Nov", "Dec"];\r\n\r\n        var formattedFrom = startDate.getDate() + \' \' +\r\n            monthNames[startDate.getMonth()] + \' \' +\r\n            startDate.getFullYear();\r\n\r\n        var formattedTo = endDate.getDate() + \' \' +\r\n            monthNames[endDate.getMonth()] + \' \' +\r\n            endDate.getFullYear();\r\n\r\n        return \'From \' + formattedFrom + " to " + formattedTo;\r\n    };\r\n\r\n    function updateChart(startDate, endDate) {\r\n        //set the charts new start x and y axis\r\n        lc.lineChart.lineoptions.xaxis.min = startDate.getTime();\r\n        lc.lineChart.lineoptions.xaxis.max = endDate.getTime();\r\n\r\n        //show a more appropriate Y axis range based on the values\r\n        updateChartYAxis();\r\n    }\r\n\r\n    /*\r\n    Start Date Range Control\r\n    */\r\n\r\n    lc.dateStartIsOpen = false;\r\n    lc.dateStart = new Date(minimumDate);\r\n\r\n    lc.dateStartOpen = function ($event) {\r\n        //show date picker and make sure other date picker is hidden\r\n        lc.dateEndIsOpen = false;\r\n        lc.dateStartIsOpen = !lc.dateStartIsOpen;\r\n        $event.preventDefault();\r\n        $event.stopPropagation();\r\n    };\r\n\r\n    lc.dateStartUpdate = function () {\r\n        dateChanged = true;\r\n\r\n        if (lc.dateStart.getTime() < minimumDate) lc.dateStart = new Date(minimumDate);\r\n        if (lc.dateStart.getTime() > maximumDate) lc.dateStart = new Date(maximumDate);\r\n\r\n        lc.dateRangeModel = JSON.stringify({\r\n            start: lc.dateStart,\r\n            end: lc.dateEnd\r\n        });\r\n    };\r\n\r\n    /*\r\n    End Date Range Control\r\n    */\r\n\r\n    lc.dateEndIsOpen = false;\r\n    lc.dateEnd = new Date(maximumDate);\r\n\r\n    lc.dateEndOpen = function ($event) {\r\n        //show date picker and make sure other date picker is hidden\r\n        lc.dateStartIsOpen = false;\r\n        lc.dateEndIsOpen = !lc.dateEndIsOpen;\r\n        $event.preventDefault();\r\n        $event.stopPropagation();\r\n    };\r\n\r\n    lc.dateEndUpdate = function () {\r\n        dateChanged = true;\r\n\r\n        if (lc.dateEnd.getTime() < minimumDate) lc.dateEnd = new Date(minimumDate);\r\n        if (lc.dateEnd.getTime() > maximumDate) lc.dateEnd = new Date(maximumDate);\r\n\r\n        lc.dateRangeModel = JSON.stringify({\r\n            start: lc.dateStart,\r\n            end: lc.dateEnd\r\n        });\r\n    };\r\n\r\n    /*\r\n    User Type Facet\r\n    */\r\n\r\n    lc.userTypeModel = \'LDAP\';\r\n    lc.selectedUserType = \'LDAP\';\r\n    lc.revertUser = false;\r\n\r\n    lc.userTypeOptions = {\r\n        ldap: \'LDAP\',\r\n        imap: \'IMAP\',\r\n        eca: \'ECA\',\r\n        admin: \'Admin\'\r\n    };\r\n\r\n    $scope.$watch(\'lc.selectedUserType\', function (newValue, oldValue) {\r\n        if (newValue !== oldValue) {\r\n\r\n            //if we are deselecting then we want to revert the user\r\n            if (lc.revertUser) {\r\n                lc.revertUser = false;\r\n                selectedUserModel = null;\r\n            } else lc.userTypeModel = newValue;\r\n        }\r\n    });\r\n\r\n    lc.userTypeSelect = function () {\r\n\r\n        //store the new selected user model\r\n        selectedUserModel = lc.userTypeModel;\r\n\r\n        //based on the user type show the data and change the color\r\n        switch (lc.userTypeModel) {\r\n\r\n            case \'LDAP\':\r\n                chartData = ldapData;\r\n                lc.lineChart.lineoptions.colors = [flotChartColors.primary];\r\n                break;\r\n\r\n            case \'IMAP\':\r\n                chartData = imapData;\r\n                lc.lineChart.lineoptions.colors = [flotChartColors.secondary1];\r\n                break;\r\n\r\n            case \'ECA\':\r\n                chartData = ecaData;\r\n                lc.lineChart.lineoptions.colors = [flotChartColors.secondary2];\r\n                break;\r\n\r\n            case \'Admin\':\r\n                chartData = adminData;\r\n                lc.lineChart.lineoptions.colors = [flotChartColors.secondary3];\r\n                break;\r\n        }\r\n\r\n        //update the chart data\r\n        lc.lineChart.data[0].data = chartData;\r\n\r\n        //update the y axis range\r\n        updateChartYAxis();\r\n    };\r\n\r\n    lc.userTypeDeselect = function () {\r\n        //if we are deselecting then reset\r\n        if (lc.userTypeModel === selectedUserModel) {\r\n\r\n            //set the user model to empty string to remove selected label\r\n            lc.userTypeModel = \'\';\r\n\r\n            //reset chart data\r\n            chartData = ldapData;\r\n            lc.lineChart.lineoptions.colors = [flotChartColors.primary];\r\n            lc.lineChart.data[0].data = chartData;\r\n\r\n            //update the y axis range\r\n            updateChartYAxis();\r\n\r\n            //update redio buttons\r\n            lc.selectedUserType = \'LDAP\';\r\n            lc.revertUser = true;\r\n        } else {\r\n            lc.revertUser = false;\r\n        }\r\n    };\r\n\r\n    lc.userTypeDisplay = function () {\r\n        return lc.userTypeModel;\r\n    };\r\n\r\n    /*\r\n    Set up line chart for example\r\n    */\r\n\r\n    lc.lineChart = {\r\n        data: [{\r\n            label: "line",\r\n            data: ldapData\r\n        }],\r\n        lineoptions: {\r\n            series: {\r\n                lines: {\r\n                    show: true,\r\n                    lineWidth: 3,\r\n                    fill: false\r\n                },\r\n                shadowSize: 0,\r\n                highlightColor: [flotChartColors.secondary]\r\n            },\r\n            xaxis: {\r\n                tickDecimals: 0,\r\n                mode: \'time\',\r\n                timeformat: "%b %y",\r\n                tickColor: flotChartColors.transparent,\r\n                min: minimumDate,\r\n                max: maximumDate\r\n            },\r\n            yaxis: {},\r\n            colors: [flotChartColors.primary],\r\n            grid: {\r\n                color: [flotChartColors.gridColor],\r\n                hoverable: true,\r\n                clickable: true,\r\n                tickColor: [flotChartColors.tickColor],\r\n                borderWidth: 1,\r\n                borderColor: flotChartColors.borderColor\r\n            },\r\n            legend: {\r\n                show: false\r\n            },\r\n            tooltip: {\r\n                show: true,\r\n                snap: true,\r\n                shifts: {\r\n                    x: 0,\r\n                    y: -47\r\n                },\r\n                content: "x: %x, y: %y"\r\n            }\r\n        }\r\n    };\r\n\r\n    /*\r\n    Get Sample Random Data\r\n    */\r\n    function getPointsWithinRange(rangeStart, rangeEnd, step, low, high) {\r\n        var points = [];\r\n\r\n        for (var i = rangeStart; i <= rangeEnd; i += step) {\r\n            var randomPoint = Math.floor(Math.random() * (high - low + 1) + low);\r\n            points.push([i, randomPoint]);\r\n        }\r\n        return points;\r\n    }\r\n\r\n}'},function(e,t){e.exports='<facet-container select-title="Selected:" clear-text="Clear All" no-items-text="None selected"\r\n   clear-all-fn="vm.clearAllFn()">\r\n  <!--facet elements....  -->\r\n</facet-container>'},function(e,t){e.exports='<facet-option ng-repeat="option" name="option.name" select="option.select()" count="option.count"\r\n   deselect="option.deselect()" show-zero="option.showZero" disabled="option.disabled">\r\n</facet-option>'},function(e,t){e.exports='angular.module("app").controller("ListViewCtrl", ListViewCtrl);\r\n\r\nfunction ListViewCtrl($state, items, exampleDataService, $rootScope, multipleSelectProvider) {\r\n    var vm = this;\r\n    // ........\r\n\r\n    vm.service = exampleDataService;\r\n    vm.totalItems = vm.service.getTotal();\r\n    vm.currentPage = 1;\r\n    vm.pageSize = 50;\r\n    vm.items = items;\r\n    vm.filters = [];\r\n    vm.facets = [];\r\n    vm.dropdownFilters = [];\r\n    // .........\r\n    vm.multiprovider = multipleSelectProvider;\r\n    // ..........\r\n    vm.facets.push(usersFacet);\r\n    vm.facets.push(extFacet);\r\n    vm.generateFacetObjects();\r\n    vm.generateFilters();\r\n    vm.clearAllFn = function () {\r\n        // ...\r\n    };\r\n}\r\n\r\nListViewCtrl.prototype.generateFacetObjects = function () {\r\n    var vm = this;\r\n    // .........\r\n    option.select = function () {\r\n        // .........\r\n        vm.updateSelectCounts();\r\n        vm.loadPage();\r\n    };\r\n\r\n    option.deselect = function () {\r\n        // ..........\r\n        vm.updateSelectCounts();\r\n        vm.loadPage();\r\n    };\r\n\r\n    option.count = vm.getCount(option);\r\n    option.disabled = false;\r\n    option.showZero = true;\r\n};\r\n\r\nListViewCtrl.prototype.updateSelectCounts = function () {\r\n    var vm = this;\r\n\r\n    vm.count = 0;\r\n    //sort out filters\r\n    var filters = filters || [];\r\n\r\n    vm.filters.forEach(function (filterListToBeOred) {\r\n        if (filterListToBeOred.length > 0) {\r\n            filters.push(function (data) {\r\n                return filterListToBeOred.some(function (filter) {\r\n                    return filter(data);\r\n                });\r\n            });\r\n        }\r\n    });\r\n\r\n    vm.items = vm.service.getPage(vm.currentPage - 1, vm.pageSize, filters);\r\n\r\n    for (var i = 0; i < vm.items.length; i++) {\r\n        if (vm.multiprovider.isSelected(vm.items[i])) {\r\n            vm.count = vm.count + 1;\r\n        }\r\n    }\r\n\r\n    vm.multiprovider.state.count = vm.count;\r\n};'},function(e,t){e.exports='$scope.$watch("vm.showFacets", function (nv) {\r\n  if (nv) {\r\n    $scope.$broadcast("facet-reinitialise");\r\n  }\r\n});'},function(e,t){e.exports='<facet name="facet.title">\r\n  <!--facet options....  -->\r\n</facet>'},function(e,t){e.exports=".file-upload-dropzone {\r\n  border: 2px dashed rgba(96, 121, 141, 0.8);\r\n  background: white;\r\n  font-size: 18px;\r\n  font-weight: 300;\r\n  width: 100%;\r\n  padding-top: 60px;\r\n  text-align: center;\r\n  min-height: 150px;\r\n  color: #676a6c;\r\n  cursor: pointer;\r\n}"},function(e,t){e.exports='<div ng-controller="FileUploadCtrl as vm" class="container-fluid">\r\n    <div class="row">\r\n        <div class="col-md-12 m-t-md">\r\n            <div>\r\n                <label for="file-upload-demo-codepen" nv-file-drop uploader="uploader" class="file-upload-dropzone">\r\n          Click here or Drag and Drop to upload files\r\n        </label>\r\n                <input type="file" id="file-upload-demo-codepen" class="sr-only" nv-file-select uploader="uploader" multiple>\r\n                <p class="progress-static-text" ng-bind="uploader.progress+\'%\'"></p>\r\n                <progressbar value="uploader.progress" type="secondary" max="100">\r\n                </progressbar>\r\n                <ul ng-if="uploader.queue.length" class="dropzone-queue clearfix">\r\n                    <li ng-repeat="item in uploader.queue">\r\n                        <a href="" ng-click="item.remove()">\r\n                            <span class="facet-selected-name" ng-bind="item.file.name"></span>&nbsp;\r\n                            <span class="hpe-icon hpe-close"></span>\r\n                        </a>\r\n                    </li>\r\n                </ul>\r\n                <button type="button" class="btn button-primary" ng-click="uploader.uploadAll()" ng-disabled="!uploader.getNotUploadedItems().length"\r\n                    disabled="disabled">\r\n          Upload All\r\n        </button> &nbsp;\r\n                <button type="button" class="btn button-secondary" ng-click="uploader.cancelAll()" ng-disabled="!uploader.isUploading" disabled="disabled">\r\n          Cancel All\r\n        </button> &nbsp;\r\n                <button type="button" class="btn button-secondary" ng-click="uploader.clearQueue()" ng-disabled="!uploader.queue.length">\r\n          Clear All\r\n        </button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>'},function(e,t){e.exports="angular.module('app').controller('FileUploadCtrl', ['$scope', 'FileUploader', FileUploadCtrl]);\r\n\r\nfunction FileUploadCtrl($scope, FileUploader) {\r\n  $scope.uploader = new FileUploader();\r\n}"},function(e,t){e.exports="function FileUploadCtrl($scope, FileUploader) {\r\n    $scope.uploader = new FileUploader();\r\n}"},function(e,t){e.exports="/*\r\n    Flippable Cards\r\n*/\r\n.flip-card-content {\r\n    padding-top: 35px;\r\n    padding-left: 20px;\r\n    padding-right: 10px;\r\n    padding-bottom: 15px;\r\n}\r\n\r\n.flip-card-content.cursor-pointer {\r\n    cursor: pointer;\r\n}\r\n\r\n.flip-card-content .front-title {\r\n    font-size: 21px;\r\n    font-weight: 600;\r\n    color: #333;\r\n}\r\n\r\n.flip-card-content.card-back {\r\n    padding: 15px 10px 10px 10px;\r\n    background-color: #7B63A3;\r\n    height: 100%;\r\n}\r\n\r\n.flip-card-content.card-back p {\r\n    color: #fff;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    white-space: nowrap;\r\n}\r\n\r\n.flip-card-content.card-back span.muted {\r\n    font-size: 12px;\r\n    color: #ccc;\r\n}\r\n\r\n.flip-card-content.card-back span.right-align {\r\n    display: inline-block;\r\n    width: 65px;\r\n    text-align: right;\r\n}\r\n\r\n.flip-card-content.card-back span.left-align {\r\n    display: inline-block;\r\n    width: 70px;\r\n    text-align: left;\r\n    margin-left: 5px;\r\n}\r\n\r\n.spark-left-align {\r\n    display: inline-block;\r\n    width: 53px;\r\n    text-align: left;\r\n    margin-left: 5px;\r\n}\r\n\r\n.spark-left-align.second {\r\n    width: 35px;\r\n}\r\n\r\n.flip-card-content.card-back span.reviewed {\r\n    color: #2ad2c9;\r\n}\r\n\r\n.flip-card-content.card-back span.produced {\r\n    color: #ff8d6d;\r\n}\r\n\r\n.card-back hr {\r\n    margin-top: 7px;\r\n    margin-bottom: 7px;\r\n    border-top: 1px solid #ccc;\r\n    opacity: 0.25;\r\n}\r\n\r\n.card-logo {\r\n    margin-left: 20px;\r\n    margin-top: -5px;\r\n    position: absolute;\r\n}\r\n\r\n.flip-card-nested-donut {\r\n    float: right;\r\n    right: 10px;\r\n    bottom: 15px;\r\n    position: absolute;\r\n}\r\n\r\n.card-text {\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n}\r\n\r\n.card-text.documents {\r\n    color: #666;\r\n}\r\n\r\n.card-text.reviewed {\r\n    color: #24b2a4;\r\n}\r\n\r\n.card-text.produced {\r\n    color: #ea7e65;\r\n    display: inline-block;\r\n    margin-bottom: 0px;\r\n}\r\n\r\n.card-text .text-muted {\r\n    font-size: 14px;\r\n    color: #999;\r\n}\r\n\r\n.clickable-icon {\r\n    margin: 10px;\r\n    cursor: pointer;\r\n    color: #999\r\n}\r\n\r\n.clickable-icon.icon-back {\r\n    color: white;\r\n}\r\n\r\n.flex-container {\r\n    display: flex;\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n    justify-content: flex-start;\r\n    align-content: flex-start;\r\n    align-items: flex-start;\r\n}\r\n\r\n.nested-donut-example {\r\n    width: 100%;\r\n    margin-top: 15px;\r\n}\r\n\r\n.nested-donut-example:before {\r\n    content: ' ';\r\n    display: inline-block;\r\n    vertical-align: middle;\r\n    height: 100%;\r\n}\r\n\r\n.nested-donut-example .nested-donut-text {\r\n    margin-right: 50px;\r\n    display: inline-block;\r\n    vertical-align: middle;\r\n}\r\n\r\n.nested-donut-example .nested-donut-container {\r\n    vertical-align: middle;\r\n}\r\n\r\n.nested-donut-text p {\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n}\r\n\r\n.nested-donut-text p.documents {\r\n    color: #666;\r\n}\r\n\r\n.nested-donut-text p.reviewed {\r\n    color: #24b2a4;\r\n}\r\n\r\n.nested-donut-text p.produced {\r\n    color: #ea7e65;\r\n}\r\n\r\n.nested-donut-text p span+span {\r\n    font-size: 14px;\r\n    color: #999;\r\n}\r\n\r\n.bold-icon {\r\n    font-weight: bold;\r\n}"},function(e,t){e.exports='<div class="container-fluid">\r\n    <div class="row">\r\n        <div class="col-md-12 m-t-md">\r\n            <div class="flex-container">\r\n                <flippable-card class="m-sm" flip-on="click" flip-style="vertical" card-height="240" card-width="260">\r\n                    <card-front>\r\n                        <i class="hpe-icon hpe-link-down pull-right clickable-icon" aria-hidden="true" flip-on-click=""></i>\r\n                        <img class="card-logo" ng-src="https://uxaspects.github.io/UXAspects/assets/img/IconCaseColorized36x36.png">\r\n                        <div class="flip-card-content">\r\n                            <p class="front-title">NYC vs Volkswagen</p>\r\n                            <div class="m-t-md">\r\n                                <p class="card-text documents"><span ng-bind="::vm.card1.documents"></span><span class="text-muted"> documents</span></p>\r\n                                <p class="card-text" ng-style="{color: vm.colors.reviewed}"><span ng-bind="::vm.card1.reviewed"></span><span class="text-muted"> reviewed</span></p>\r\n                                <p class="card-text produced" ng-style="{color: vm.colors.produced}"><span ng-bind="::vm.card1.produced"></span><span class="text-muted"> produced</span></p>\r\n                            </div>\r\n                            <nested-donut class="flip-card-nested-donut" dataset="vm.nestedDonutData1" options="vm.nestedDonutOptions"></nested-donut>\r\n                        </div>\r\n                    </card-front>\r\n                    <card-back>\r\n                        <i class="hpe-icon hpe-link-up pull-right clickable-icon icon-back" aria-hidden="true" flip-on-click=""></i>\r\n                        <div class="flip-card-content card-back">\r\n                            <p>NYC vs Volkswagen</p>\r\n                            <div class="row">\r\n                                <div class="col-xs-5">\r\n                                    <p>\r\n                                        <span ng-style="{color: vm.colors.documents}" ng-bind="::vm.card1.documents"></span>\r\n                                        <span class="muted"> documents</span>\r\n                                    </p>\r\n                                </div>\r\n                                <div class="col-xs-7">\r\n                                    <p>\r\n                                        <span class="muted right-align">total </span>\r\n                                        <span class="left-align">1.2 GB</span>\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                            <hr>\r\n                            <div class="row">\r\n                                <div class="col-xs-5">\r\n                                    <p>\r\n                                        <span ng-style="{color: vm.colors.reviewed}" ng-bind="::vm.card1.reviewed"></span>\r\n                                        <span class="muted"> reviewed</span>\r\n                                    </p>\r\n                                </div>\r\n                                <div class="col-xs-7">\r\n                                    <p>\r\n                                        <span class="muted right-align">responsive</span>\r\n                                        <spark type="vm.spark.type" value="\'65\'" fillheight="5" class="spark-left-align"></spark>\r\n                                    </p>\r\n                                    <p>\r\n                                        <span class="muted right-align">privilege</span>\r\n                                        <spark type="vm.spark.type" value="\'65\'" fillheight="5" class="spark-left-align second"></spark>\r\n                                    </p>\r\n                                </div>\r\n\r\n                            </div>\r\n                            <hr>\r\n                            <div class="row">\r\n                                <div class="col-xs-5">\r\n                                    <p>\r\n                                        <span ng-style="{color: vm.colors.produced}" ng-bind="::vm.card1.produced"></span>\r\n                                        <span class="muted"> produced</span>\r\n                                    </p>\r\n                                </div>\r\n                                <div class="col-xs-7">\r\n                                    <p>\r\n                                        <span class="muted right-align">productions</span>\r\n                                        <span class="produced left-align">22</span>\r\n                                    </p>\r\n                                    <p>\r\n                                        <span class="muted right-align">active</span>\r\n                                        <spark type="vm.spark.type" value="\'60\'" fillheight="5" class="spark-left-align"></spark>\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </card-back>\r\n                </flippable-card>\r\n\r\n\r\n                <flippable-card class="m-sm" flip-on="hover" flip-style="horizontal" card-height="240" card-width="260">\r\n                    <card-front>\r\n                        <img class="card-logo" ng-src="https://uxaspects.github.io/UXAspects/assets/img/IconCaseColorized36x36.png">\r\n                        <div class="flip-card-content">\r\n                            <p class="front-title">The Dorling Case</p>\r\n                            <div class="m-t-md">\r\n                                <p class="card-text documents"><span ng-bind="::vm.card2.documents"></span><span class="text-muted"> documents</span></p>\r\n                                <p class="card-text" ng-style="{color: vm.colors.reviewed}"><span ng-bind="::vm.card2.reviewed"></span><span class="text-muted"> reviewed</span></p>\r\n                                <p class="card-text produced" ng-style="{color: vm.colors.produced}"><span ng-bind="::vm.card2.produced"></span><span class="text-muted"> produced</span></p>\r\n                            </div>\r\n                            <nested-donut class="flip-card-nested-donut" dataset="vm.nestedDonutData2" options="vm.nestedDonutOptions"></nested-donut>\r\n                        </div>\r\n                    </card-front>\r\n                    <card-back>\r\n                        <div class="flip-card-content card-back">\r\n                            <p>The Dorling Case</p>\r\n                            <div class="row">\r\n                                <div class="col-xs-5">\r\n                                    <p>\r\n                                        <span ng-style="{color: vm.colors.documents}" ng-bind="::vm.card2.documents"></span>\r\n                                        <span class="muted"> documents</span>\r\n                                    </p>\r\n                                </div>\r\n                                <div class="col-xs-7">\r\n                                    <p>\r\n                                        <span class="muted right-align">total </span>\r\n                                        <span class="left-align">0.8 GB</span>\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                            <hr>\r\n                            <div class="row">\r\n                                <div class="col-xs-5">\r\n                                    <p>\r\n                                        <span ng-style="{color: vm.colors.reviewed}" ng-bind="::vm.card2.reviewed"></span>\r\n                                        <span class="muted"> reviewed</span>\r\n                                    </p>\r\n                                </div>\r\n                                <div class="col-xs-7">\r\n                                    <p>\r\n                                        <span class="muted right-align">responsive</span>\r\n                                        <spark type="vm.spark.type" value="\'65\'" fillheight="5" class="spark-left-align"></spark>\r\n                                    </p>\r\n                                    <p>\r\n                                        <span class="muted right-align">privilege</span>\r\n                                        <spark type="vm.spark.type" value="\'65\'" fillheight="5" class="spark-left-align second"></spark>\r\n                                    </p>\r\n                                </div>\r\n\r\n                            </div>\r\n                            <hr>\r\n                            <div class="row">\r\n                                <div class="col-xs-5">\r\n                                    <p>\r\n                                        <span ng-style="{color: vm.colors.produced}" ng-bind="::vm.card2.produced"></span>\r\n                                        <span class="muted"> produced</span>\r\n                                    </p>\r\n                                </div>\r\n                                <div class="col-xs-7">\r\n                                    <p>\r\n                                        <span class="muted right-align">productions</span>\r\n                                        <span class="produced left-align">22</span>\r\n                                    </p>\r\n                                    <p>\r\n                                        <span class="muted right-align">active</span>\r\n                                        <spark type="vm.spark.type" value="\'60\'" fillheight="5" class="spark-left-align"></spark>\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </card-back>\r\n                </flippable-card>\r\n\r\n\r\n                <flippable-card class="m-sm" flip-on="click" flip-style="horizontal" card-height="240" card-width="260">\r\n                    <card-front>\r\n                        <img class="card-logo" ng-src="https://uxaspects.github.io/UXAspects/assets/img/IconCaseColorized36x36.png">\r\n                        <div class="flip-card-content">\r\n                            <p class="front-title">The Salisbury Case</p>\r\n                            <div class="m-t-md">\r\n                                <p class="card-text documents"><span ng-bind="::vm.card3.documents"></span><span class="text-muted"> documents</span></p>\r\n                                <p class="card-text" ng-style="{color: vm.colors.reviewed}"><span ng-bind="::vm.card3.reviewed"></span><span class="text-muted"> reviewed</span></p>\r\n                                <p class="card-text produced" ng-style="{color: vm.colors.produced}"><span ng-bind="::vm.card3.produced"></span><span class="text-muted"> produced</span></p>\r\n                            </div>\r\n                            <nested-donut class="flip-card-nested-donut" dataset="vm.nestedDonutData1" options="vm.nestedDonutOptions"></nested-donut>\r\n                        </div>\r\n                    </card-front>\r\n                    <card-back>\r\n                        <div class="flip-card-content card-back">\r\n                            <p>The Salisbury Case</p>\r\n                            <div class="row">\r\n                                <div class="col-xs-5">\r\n                                    <p>\r\n                                        <span ng-bind="::vm.card3.documents"></span>\r\n                                        <span class="muted"> documents</span>\r\n                                    </p>\r\n                                </div>\r\n                                <div class="col-xs-7">\r\n                                    <p>\r\n                                        <span class="muted right-align">total </span>\r\n                                        <span class="left-align">10.7 GB</span>\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                            <hr>\r\n                            <div class="row">\r\n                                <div class="col-xs-5">\r\n                                    <p>\r\n                                        <span ng-style="{color: vm.colors.reviewed}" ng-bind="::vm.card3.reviewed"></span>\r\n                                        <span class="muted"> reviewed</span>\r\n                                    </p>\r\n                                </div>\r\n                                <div class="col-xs-7">\r\n                                    <p>\r\n                                        <span class="muted right-align">responsive</span>\r\n                                        <spark type="vm.spark.type" value="\'65\'" fillheight="5" class="spark-left-align"></spark>\r\n                                    </p>\r\n                                    <p>\r\n                                        <span class="muted right-align">privilege</span>\r\n                                        <spark type="vm.spark.type" value="\'65\'" fillheight="5" class="spark-left-align second"></spark>\r\n                                    </p>\r\n                                </div>\r\n\r\n                            </div>\r\n                            <hr>\r\n                            <div class="row">\r\n                                <div class="col-xs-5">\r\n                                    <p>\r\n                                        <span ng-style="{color: vm.colors.produced}" ng-bind="::vm.card3.produced"></span>\r\n                                        <span class="muted"> produced</span>\r\n                                    </p>\r\n                                </div>\r\n                                <div class="col-xs-7">\r\n                                    <p>\r\n                                        <span class="muted right-align">productions</span>\r\n                                        <span class="produced left-align">22</span>\r\n                                    </p>\r\n                                    <p>\r\n                                        <span class="muted right-align">active</span>\r\n                                        <spark type="vm.spark.type" value="\'60\'" fillheight="5" class="spark-left-align"></spark>\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </card-back>\r\n                </flippable-card>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>'},function(e,t){e.exports="angular.module('app').controller('FlippableCardCtrl', FlippableCardCtrl);\r\n\r\nFlippableCardCtrl.$inject = ['$colorService'];\r\n\r\nfunction FlippableCardCtrl($colorService) {\r\n\r\n    var vm = this;\r\n\r\n    vm.card1 = {\r\n        documents: '23,456',\r\n        reviewed: '19,976',\r\n        produced: '11,123'\r\n    };\r\n\r\n    vm.nestedDonutData1 = [{\r\n        label: 'documents',\r\n        color: $colorService.getColor('grey6').toHex(),\r\n        value: 23456\r\n    }, {\r\n        label: 'reviewed',\r\n        color: $colorService.getColor('vibrant1').toHex(),\r\n        value: 19876\r\n    }, {\r\n        label: 'produced',\r\n        color: $colorService.getColor('vibrant2').toHex(),\r\n        value: 11123\r\n    }];\r\n\r\n    vm.nestedDonutOptions = {\r\n        size: 70,\r\n        donutWidth: 3,\r\n        donutSpacing: 3,\r\n        hoverAnimation: true,\r\n        centerLabel: {\r\n            show: false\r\n        },\r\n        tooltip: {\r\n            show: false\r\n        }\r\n    };\r\n\r\n    vm.spark = {\r\n        type: 'spark-primary',\r\n        type2: 'spark-warning'\r\n    };\r\n\r\n    vm.card2 = {\r\n        documents: '15,678',\r\n        reviewed: '10,123',\r\n        produced: '3,123'\r\n    };\r\n\r\n    vm.nestedDonutData2 = [{\r\n        label: 'documents',\r\n        color: $colorService.getColor('grey6').toHex(),\r\n        value: 15678\r\n    }, {\r\n        label: 'reviewed',\r\n        color: $colorService.getColor('vibrant1').toHex(),\r\n        value: 10123\r\n    }, {\r\n        label: 'produced',\r\n        color: $colorService.getColor('vibrant2').toHex(),\r\n        value: 3123\r\n    }];\r\n\r\n    vm.card3 = {\r\n        documents: '256,987',\r\n        reviewed: '143,567',\r\n        produced: '45,678'\r\n    };\r\n\r\n    vm.nestedDonutData3 = [{\r\n        label: 'documents',\r\n        color: $colorService.getColor('grey6').toHex(),\r\n        value: 256987\r\n    }, {\r\n        label: 'reviewed',\r\n        color: $colorService.getColor('vibrant1').toHex(),\r\n        value: 143567\r\n    }, {\r\n        label: 'produced',\r\n        color: $colorService.getColor('vibrant2').toHex(),\r\n        value: 45678\r\n    }];\r\n}"},function(e,t){e.exports='<grid source="vm.source" columns="vm.columns"></grid>'},function(e,t){e.exports='angular.module(\'app\').controller(\'GridDemoCtrl\', GridDemoCtrl);\r\n\r\nfunction GridDemoCtrl() {\r\n    var vm = this;\r\n\r\n    vm.source = [{\r\n        "checked": false,\r\n        "name": chance.name(),\r\n        "age": 46,\r\n        "city": "London",\r\n        "active": true\r\n    }, {\r\n        "checked": false,\r\n        "name": chance.name(),\r\n        "age": 60,\r\n        "city": "Berlin",\r\n        "active": false\r\n    }, {\r\n        "checked": false,\r\n        "name": chance.name(),\r\n        "age": 57,\r\n        "city": "Paris",\r\n        "active": false\r\n    }, {\r\n        "checked": false,\r\n        "name": chance.name(),\r\n        "age": 28,\r\n        "city": "California",\r\n        "active": false\r\n    }, {\r\n        "checked": false,\r\n        "name": chance.name(),\r\n        "age": 31,\r\n        "city": "Miami",\r\n        "active": true\r\n    }];\r\n\r\n    vm.columns = [{\r\n        title: \'\',\r\n        template: \'<checkbox style="margin-bottom: 0" ng-model="checked"></checkbox>\',\r\n        width: \'40px\'\r\n    }, {\r\n        title: \'Name\',\r\n        template: \'<span ng-bind="::name"></span>\',\r\n    }, {\r\n        title: \'Age\',\r\n        template: \'<span ng-bind="::age"></span>\',\r\n    }, {\r\n        title: \'City\',\r\n        template: \'<span ng-bind="::city"></span>\',\r\n    }, {\r\n        title: \'Active\',\r\n        template: \'<i class="hpe-icon hpe-active" ng-show="::active"></i>\',\r\n    }];\r\n}'},function(e,t){e.exports='<button help-center-item help-center-title="Buttons" help-center-url="#" type="button" sort-fn="vm.sortMenuItems">Primary</button>'},function(e,t){e.exports='<help-center-menu url="developers.gettingstarted" help-text="Help Center" icon="\'hpe-help\'" target="_self"></help-center-menu>'},function(e,t){e.exports="angular.module('app').controller('HelpCenterCtrl', HelpCenterCtrl);\r\n\r\nfunction HelpCenterCtrl() {\r\n\r\n    var vm = this;\r\n    \r\n    vm.sortHelpCenter = function (prev, next) {\r\n        if (prev.title > next.title) {\r\n            return 1;\r\n        } else if (prev.title < next.title) {\r\n            return -1;\r\n        } else {\r\n            return 0;\r\n        }\r\n    };\r\n}"},function(e,t){e.exports='<hierarchy-bar data="vm.breadcrumbs" options="vm.options" select-node="vm.selectBreadcrumb"></hierarchy-bar>'},function(e,t){e.exports="angular.module('app').controller('HierarchyBarDemoCtrl', HierarchyBarDemoCtrl);\r\n\r\nHierarchyBarDemoCtrl.$inject = [\"$q\", \"$timeout\"];\r\n\r\nfunction HierarchyBarDemoCtrl($q, $timeout) {\r\n    var vm = this;\r\n\r\n    var adminIcon = \"https://uxaspects.github.io/UXAspects/assets/img/IconManagerColorized.png\";\r\n    var userIcon = \"https://uxaspects.github.io/UXAspects/assets/img/IconCustodianColorized.png\";\r\n\r\n    vm.options = {\r\n        image: function (data) {\r\n            return data.image;\r\n        },\r\n        action: {\r\n            title: \"Loading\",\r\n            event: function (crumb) {\r\n                if (crumb.children) {\r\n                    return;\r\n                }\r\n\r\n                var defer = $q.defer();\r\n\r\n                $timeout(function () {\r\n                    crumb.children = [{\r\n                        name: chance.name(),\r\n                        position: 'Intern',\r\n                        phone: chance.phone(),\r\n                        email: 'intern@company.com',\r\n                        image: adminIcon\r\n                    }, {\r\n                        name: chance.name(),\r\n                        position: 'Intern',\r\n                        phone: chance.phone(),\r\n                        email: 'intern@company.com',\r\n                        image: adminIcon\r\n                    }, {\r\n                        name: chance.name(),\r\n                        position: 'Intern',\r\n                        phone: chance.phone(),\r\n                        email: 'intern@company.com',\r\n                        image: adminIcon\r\n                    }];\r\n\r\n                    addNodeParentRefs(crumb);\r\n\r\n                    defer.resolve();\r\n\r\n                }, 2000);\r\n\r\n                return defer.promise;\r\n            }\r\n        }\r\n    };\r\n\r\n    vm.breadcrumbs = {\r\n        name: chance.name(),\r\n        position: 'National Manager',\r\n        phone: chance.phone(),\r\n        email: 'nat_manager@company.com',\r\n        image: adminIcon,\r\n        children: [{\r\n            name: chance.name(),\r\n            position: 'Regional Manager',\r\n            phone: chance.phone(),\r\n            email: 'reg_manager@company.com',\r\n            image: adminIcon,\r\n            children: [{\r\n                name: chance.name(),\r\n                position: 'Assistant',\r\n                phone: chance.phone(),\r\n                email: 'assistant@company.com',\r\n                image: adminIcon,\r\n                children: [{\r\n                    name: chance.name(),\r\n                    position: 'Human Resources',\r\n                    phone: chance.phone(),\r\n                    email: 'hr@company.com',\r\n                    image: userIcon\r\n                }, {\r\n                    name: chance.name(),\r\n                    position: 'Engineer',\r\n                    phone: chance.phone(),\r\n                    email: 'tech@company.com',\r\n                    image: userIcon\r\n                }, {\r\n                    name: chance.name(),\r\n                    position: 'Quality Assurance',\r\n                    phone: chance.phone(),\r\n                    email: 'qa@company.com',\r\n                    image: userIcon\r\n                }]\r\n            }, {\r\n                name: chance.name(),\r\n                position: 'Manager',\r\n                phone: chance.phone(),\r\n                email: 'manager@company.com',\r\n                active: true,\r\n                image: userIcon,\r\n                children: [{\r\n                    name: chance.name(),\r\n                    position: 'Sales',\r\n                    phone: chance.phone(),\r\n                    email: 'sales1@company.com',\r\n                    image: userIcon\r\n                }, {\r\n                    name: chance.name(),\r\n                    position: 'Office Administrator',\r\n                    phone: chance.phone(),\r\n                    email: 'office_admin@company.com',\r\n                    image: userIcon,\r\n                    children: [{\r\n                        name: chance.name(),\r\n                        position: 'Receptionist',\r\n                        phone: chance.phone(),\r\n                        email: 'reception@company.com',\r\n                        image: userIcon\r\n                    }]\r\n                }, {\r\n                    name: chance.name(),\r\n                    position: 'Sales',\r\n                    phone: chance.phone(),\r\n                    email: 'sales2@company.com',\r\n                    image: userIcon\r\n                }]\r\n            }, {\r\n                name: chance.name(),\r\n                position: 'Head of Accounting',\r\n                phone: chance.phone(),\r\n                email: 'head_accounting@company.com',\r\n                image: userIcon,\r\n                children: [{\r\n                    name: chance.name(),\r\n                    position: 'Accountant',\r\n                    phone: chance.phone(),\r\n                    email: 'accountant1@company.com',\r\n                    image: userIcon\r\n                }, {\r\n                    name: chance.name(),\r\n                    position: 'Accountant',\r\n                    phone: chance.phone(),\r\n                    email: 'accountant2@company.com',\r\n                    image: userIcon\r\n                }]\r\n            }]\r\n        }]\r\n    };\r\n\r\n    // add references to parent nodes\r\n    addNodeParentRefs();\r\n\r\n    function addNodeParentRefs(node, parent) {\r\n\r\n        if (!node) {\r\n            node = vm.breadcrumbs;\r\n        }\r\n\r\n        // if there is a parent then add reference to it\r\n        if (parent) {\r\n            node.parent = parent;\r\n        }\r\n\r\n        // get node children\r\n        var children = node.children || node._children;\r\n\r\n        // check if there are children\r\n        if (!children || children.length === 0) {\r\n            return;\r\n        }\r\n\r\n        // loop through each child and get its children\r\n        for (var idx = 0; idx < children.length; idx++) {\r\n\r\n            var child = children[idx];\r\n\r\n            addNodeParentRefs(child, node);\r\n        }\r\n    }\r\n\r\n    vm.selectBreadcrumb = function (data) {\r\n\r\n        // reset the breadcrumb list\r\n        vm.breadcrumbs = [];\r\n\r\n        // ensure a node is selected\r\n        if (!data) {\r\n            return;\r\n        }\r\n\r\n        // get the current node\r\n        var node = data;\r\n\r\n        // add the current node to the list\r\n        vm.breadcrumbs.push(node);\r\n\r\n        // add all its parents\r\n        while (node.parent) {\r\n\r\n            // set node to reference its parent\r\n            node = node.parent;\r\n\r\n            // add this node to the list\r\n            vm.breadcrumbs.push(node);\r\n        }\r\n\r\n        // reverse the array to get the desired order\r\n        vm.breadcrumbs.reverse();\r\n    };\r\n\r\n    vm.selectBreadcrumb(vm.breadcrumbs);\r\n\r\n}"},function(e,t){e.exports='<div>\r\n    <checkbox ng-model="vm.checkModel.option1" ng-disabled="vm.disableCheck" name="checkboxOption1" simplified="vm.simplified">Option1</checkbox>\r\n</div>\r\n\r\n<div>\r\n    <checkbox ng-model="vm.checkModel.option2" indeterminate-value="vm.indeterminateValue" name="checkboxOption2" simplified="vm.simplified">Option2</checkbox>\r\n</div>\r\n\r\n<div>\r\n    <checkbox ng-model="vm.checkModel.option3" name="checkboxOption3" simplified="vm.simplified">Option3</checkbox>\r\n</div>\r\n\r\n<div>\r\n    <checkbox ng-model="vm.checkModel.option4" name="checkboxOption4" simplified="vm.simplified">Onsectetur adipiscing elit. Inte adipiscing elit onsectetur adipiscing elit. Inte adipiscing elit onsectetur adipiscing elit. Inte adipiscing elit onsectetur adipiscing elit. Inte adipiscing elit onsectetur adipiscing elit. Inte adipiscing elit onsectetur adipiscing elit.</checkbox>\r\n</div>\r\n\r\n<p class="m-t">\r\n    <code>checkModel.option1</code> is <em ng-bind="vm.checkModel.option1"></em>.\r\n    <code>checkModel.option2</code> is <em ng-bind="vm.checkModel.option2"></em>.\r\n    <code>checkModel.option3</code> is <em ng-bind="vm.checkModel.option3"></em>.\r\n    <code>checkModel.option4</code> is <em ng-bind="vm.checkModel.option4"></em>.\r\n</p>\r\n\r\n<div>\r\n    <button class="btn button-primary m-r-xs" \r\n            ng-click="vm.disableCheck = !vm.disableCheck"\r\n            ng-bind="vm.disableCheck ? \'Click to enable Option1\' : \'Click to disable Option1\'">\r\n    </button>\r\n\r\n    <button class="btn button-secondary m-r-xs" \r\n            ng-click="vm.checkModel.option2 = vm.indeterminateValue">\r\n            Set Option2 to indeterminate state\r\n    </button>\r\n\r\n    <button class="btn button-accent" \r\n            ng-click="vm.simplified = !vm.simplified"\r\n            ng-bind="vm.simplified ? \'Disable Simplified Style\' : \'Enable Simplified Style\'">\r\n    </button>\r\n</div>'},function(e,t){e.exports="angular.module('app').controller('CheckboxDemoCtrl', CheckboxDemoCtrl);\r\n\r\nfunction CheckboxDemoCtrl() {\r\n    var vm = this;\r\n\r\n    vm.checkModel = {\r\n        option1: true,\r\n        option2: false,\r\n        option3: false,\r\n        option4: false\r\n    };\r\n\r\n    vm.simplified = false;\r\n    vm.indeterminateValue = -1;\r\n    vm.disableCheck = false;\r\n}"},function(e,t){e.exports='<div>\r\n    <ux-checkbox [(value)]="checkModel.option1" [disabled]="disableCheck" [simplified]="simplified">Option1</ux-checkbox>\r\n</div>\r\n\r\n<div>\r\n    <ux-checkbox [(value)]="checkModel.option2" [indeterminateValue]="indeterminateValue" [simplified]="simplified">Option2</ux-checkbox>\r\n</div>\r\n\r\n<div>\r\n    <ux-checkbox [(value)]="checkModel.option3" [simplified]="simplified">Option3</ux-checkbox>\r\n</div>\r\n\r\n<div>\r\n    <ux-checkbox [(value)]="checkModel.option4" [simplified]="simplified">Onsectetur adipiscing elit. Inte adipiscing elit onsectetur adipiscing elit. Inte adipiscing elit onsectetur adipiscing elit. Inte adipiscing elit onsectetur adipiscing elit. Inte adipiscing elit onsectetur adipiscing elit. Inte adipiscing elit onsectetur adipiscing elit.</ux-checkbox>\r\n</div>\r\n\r\n<br>\r\n\r\n<p class="m-t-xl">\r\n    <code>checkModel.option1</code> is <em>{{ checkModel.option1 }}</em>.\r\n    <code>checkModel.option2</code> is <em>{{ checkModel.option2 }}</em>.\r\n    <code>checkModel.option3</code> is <em>{{ checkModel.option3 }}</em>.\r\n    <code>checkModel.option4</code> is <em>{{ checkModel.option4 }}</em>.\r\n</p>\r\n\r\n<br>\r\n\r\n<div>\r\n    <button class="btn button-primary m-r-xs" \r\n            (click)="disableCheck = !disableCheck">\r\n            {{ disableCheck ? \'Click to enable Option1\' : \'Click to disable Option1\' }}\r\n    </button>\r\n\r\n    <button class="btn button-secondary m-r-xs" \r\n            (click)="checkModel.option2 = indeterminateValue">\r\n            Set Option2 to indeterminate state\r\n    </button>\r\n\r\n    <button class="btn button-accent" \r\n            (click)="simplified = !simplified">\r\n            {{ simplified ? \'Disable Simplified Style\' : \'Enable Simplified Style\' }}\r\n    </button>\r\n</div>'},function(e,t){e.exports="import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app',\r\n    templateUrl: './src/app.html'\r\n})\r\nexport class AppComponent {\r\n    private checkModel = {\r\n        option1: true,\r\n        option2: false,\r\n        option3: false,\r\n        option4: false\r\n    };\r\n\r\n    private simplified = false;\r\n    private indeterminateValue = -1;\r\n    private disableCheck = false;\r\n}"},function(e,t){e.exports=".dropdown-popover {\r\n    z-index: 1005;\r\n}\r\n\r\n.dropdown-outer-container {\r\n    padding-top: 5px;\r\n    padding-bottom: 5px;\r\n}\r\n\r\n.dropdown-container {\r\n    overflow: auto;\r\n    width: 250px;\r\n}\r\n\r\n.dropdown-container table {\r\n    border-bottom: 1px solid #e5e5e5;\r\n}\r\n\r\n.dropdown-container table tbody tr td {\r\n    padding-bottom: 6px;\r\n}\r\n\r\n.dropdown-container table .check>label {\r\n    margin-bottom: 0px;\r\n}\r\n\r\n.btn-pull-right {\r\n    float: right;\r\n    margin-top: 3px;\r\n}\r\n\r\n.group-header {\r\n    font-size: 18px;\r\n}\r\n\r\n.dropdown-body {\r\n    font-size: 16px;\r\n}\r\n\r\n.dropdown-footer {\r\n    text-align: right;\r\n    border-top: 1px solid #e5e5e5;\r\n    padding: 15px 15px 6px 0;\r\n    margin-left: -15px;\r\n    margin-right: -15px;\r\n}\r\n\r\n.inner-addon {\r\n    position: relative;\r\n}\r\n\r\n\r\n/* style icon */\r\n\r\n.inner-addon .hpe-icon {\r\n    position: absolute;\r\n    padding: 10px;\r\n    pointer-events: none;\r\n}\r\n\r\n\r\n/* align icon */\r\n\r\n.left-addon .hpe-icon {\r\n    left: 0px;\r\n}\r\n\r\n.right-addon .hpe-icon {\r\n    right: 0px;\r\n}\r\n\r\n\r\n/* add padding  */\r\n\r\n.left-addon input {\r\n    padding-left: 30px;\r\n}\r\n\r\n.right-addon input {\r\n    padding-right: 30px;\r\n}"},function(e,t){e.exports='<div class="row">\r\n    <div class="col-md-4 col-md-offset-1 col-sm-4">\r\n        <br/>\r\n        <div class="btn-group filter">\r\n            <button class="filter-dropdown btn popover-button dropdown-toggle" popover-class="dropdown-popover" popover-animation="false"\r\n                popover-template="\'template.html\'"\r\n                popover-placement="bottom" popover-append-to-body="false" popover-popup-delay="0">\r\n                Show Dropdown<span class="hpe-icon hpe-down"></span>\r\n            </button>\r\n        </div>\r\n        <br/>\r\n        <br/>\r\n    </div>\r\n</div>'},function(e,t){e.exports='angular.module("app").controller("CustomDropdownCtrl", CustomDropdownCtrl);\r\n\r\nCustomDropdownCtrl.$inject = [\'$scope\', \'$timeout\'];\r\n\r\nfunction CustomDropdownCtrl($scope, $timeout) {\r\n    var vm = this;\r\n\r\n    vm.searchBox = true;\r\n    vm.searchText = "";\r\n    vm.footer = true;\r\n    vm.applyText = "OK";\r\n    vm.cancelText = "Cancel";\r\n    vm.selectAllText = "Select All";\r\n    vm.deselectAllText = "Deselect All";\r\n    vm.dropdownHeight = 500;\r\n\r\n    vm.values = {\r\n        groups: [{\r\n            groupName: "Group A",\r\n            values: [{\r\n                    name: "From",\r\n                    selected: false,\r\n                    selectedChecked: false\r\n                }, {\r\n                    name: "ID",\r\n                    selected: false,\r\n                    selectedChecked: false\r\n                }, {\r\n                    name: "From Address",\r\n                    selected: true,\r\n                    selectedChecked: true\r\n                }, {\r\n                    name: "Feedback",\r\n                    selected: true,\r\n                    selectedChecked: true\r\n                }, {\r\n                    name: "To",\r\n                    selected: true,\r\n                    selectedChecked: true\r\n                }, {\r\n                    name: "To Address",\r\n                    selected: false,\r\n                    selectedChecked: false\r\n                }\r\n\r\n            ]\r\n        }, {\r\n            groupName: "Group B",\r\n            values: [{\r\n                    name: "Feedback Score",\r\n                    selected: false,\r\n                    selectedChecked: false\r\n                }, {\r\n                    name: "Attachment Count",\r\n                    selected: false,\r\n                    selectedChecked: false\r\n                }, {\r\n                    name: "Comment",\r\n                    selected: true,\r\n                    selectedChecked: true\r\n                }, {\r\n                    name: "Content Length",\r\n                    selected: false,\r\n                    selectedChecked: false\r\n                }, {\r\n                    name: "Content Type",\r\n                    selected: false,\r\n                    selectedChecked: false\r\n                }\r\n\r\n            ]\r\n        }, {\r\n            groupName: "Group C",\r\n            values: [{\r\n                name: "Overall Sentiment",\r\n                selected: false,\r\n                selectedChecked: false\r\n            }, {\r\n                name: "Analysis",\r\n                selected: true,\r\n                selectedChecked: true\r\n            }, {\r\n                name: "Index Values",\r\n                selected: false,\r\n                selectedChecked: false\r\n            }, {\r\n                name: "Generate Report",\r\n                selected: true,\r\n                selectedChecked: true\r\n            }]\r\n        }]\r\n    };\r\n\r\n    vm.updateSelected = function (value) {\r\n        value.selected = !value.selected;\r\n        value.selectedChecked = value.selected;\r\n    };\r\n\r\n    vm.applyCallback = function () {\r\n        //  do processing when apply is called\r\n\r\n        $timeout(function () {\r\n            angular.element(\'.popover-button\').click();\r\n        });\r\n\r\n    };\r\n    vm.cancelCallback = function () {\r\n        //  do processing when cancel is called\r\n        $timeout(function () {\r\n            vm.inputVal = "";\r\n            angular.element(\'.popover-button\').click();\r\n        });\r\n\r\n    };\r\n\r\n    vm.selectAll = function () {\r\n        angular.forEach(vm.values.groups, function (group) {\r\n\r\n            angular.forEach(group.values, function (value) {\r\n                if (vm.searchText === undefined || vm.searchText === "" || (value.name.toLowerCase()).indexOf(vm.searchText.toLowerCase()) > -1)\r\n                    value.selected = true;\r\n            });\r\n        });\r\n    };\r\n\r\n    vm.deselectAll = function () {\r\n        angular.forEach(vm.values.groups, function (group) {\r\n            angular.forEach(group.values, function (value) {\r\n\r\n                if (vm.searchText === undefined || vm.searchText === "" || (value.name.toLowerCase()).indexOf(vm.searchText.toLowerCase()) > -1)\r\n                    value.selected = false;\r\n\r\n            });\r\n        });\r\n    };\r\n\r\n}'},function(e,t){e.exports='<div ng-controller="CustomDropdownCtrl as vm">\r\n    <span ng-show="vm.searchBox">\r\n  <div class="inner-addon right-addon">\r\n    <i class="hpe-icon hpe-search"></i>\r\n    <input  type="text" ng-model="vm.searchText" name="searchBox"\r\n            placeholder="Find Column.." class="form-control">\r\n  </div>\r\n  <br/>\r\n  </span>\r\n    <div class="dropdown-outer-container">\r\n        <div class="dropdown-container" ng-style="{height: vm.dropdownHeight+\'px\'}" scroll-config="{autoReinitialise: true,showOnlyOnHover:true,enableKeyboardNavigation:true} "\r\n            scroll-pane id="example-dropdown">\r\n            <div>\r\n                <table class="table table-hover m-b-sm" ng-repeat="group in vm.values.groups">\r\n                    <thead>\r\n                        <tr ng-if="(group.values |  filter:{name:vm.searchText}).length">\r\n                            <th><span class="group-header" ng-bind="group.groupName"></span></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody class="dropdown-body">\r\n                        <tr ng-repeat="value in group.values |  filter:{name:vm.searchText}" ng-click="vm.updateSelected(value)">\r\n                            <td>\r\n                                <div class="check">\r\n                                    <checkbox ng-model="value.selectedChecked" simplified="true" name="value.name">\r\n                                        <span class="listview-text-emphasis" ng-bind="value.name"></span>\r\n                                    </checkbox>\r\n                                </div>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class="dropdown-footer">\r\n        <button type="button" class="btn btn-w-m btn-primary m-r-sm" ng-click="vm.applyCallback()" ng-bind="vm.applyText"></button>\r\n        <button type="button" class="btn btn-w-m btn-white" ng-click="vm.cancelCallback()" ng-bind="vm.cancelText"></button>\r\n    </div>\r\n</div>'},function(e,t){e.exports='<div class="row">\r\n    <div class="col-md-4 col-sm-6 col-xs-12 m-t-md">\r\n        <textarea class="form-control" rows="1" placeholder="Enter text" expanding-textarea disable-return="true" \r\n                  max-visible-lines="2"></textarea>\r\n    </div>\r\n</div>'},function(e,t){e.exports='<span class="inline-dropdown-text">Repeat the collection</span>\r\n<div class="btn-group" dropdown is-open="vm.inlineDropDownOpen">\r\n    <button type="button" class="btn inline-dropdown dropdown-toggle" dropdown-toggle>\r\n    <span ng-bind="vm.inlineDropDownOptions[vm.inlineDefaultIndex]"></span>\r\n    <span class="hpe-icon hpe-down"></span>\r\n  </button>\r\n    <ul class="dropdown-menu" role="menu">\r\n        <li ng-repeat="option in vm.inlineDropDownOptions">\r\n            <a href="" ng-click="vm.dropClick($index)" ng-bind="option"></a>\r\n        </li>\r\n    </ul>\r\n</div>'},function(e,t){e.exports='angular.module("app").controller("InlineDropDownCtrl", InlineDropDownCtrl);\r\n\r\nfunction InlineDropDownCtrl() {\r\n    var vm = this;\r\n\r\n    vm.inlineDropDownOpen = false;\r\n    vm.inlineDropDownOptions = ["Every Day", "Every Week", "Every Hour", "Every Month"];\r\n    vm.inlineDefaultIndex = 2;\r\n\r\n    vm.dropClick = function(index) {\r\n        vm.inlineDefaultIndex = index;        \r\n    };\r\n}'},function(e,t){e.exports='<div class="row">\r\n    <div ng-class="{\'col-lg-12 col-md-12 col-xs-12 col-sm-12\':vm.filterSearchExpanded==true,\'p-r-nil col-lg-2 col-md-2 col-sm-2 col-xs-11\':vm.filterSearchExpanded==false}">\r\n        <expand-input place-holder="Filter..." class-name="input-sm form-control filter-text" elname="input-expand-search" focus="vm.expandFilter(value)"\r\n            clear-text-icon="hpe-close" close-search="Cancel">\r\n        </expand-input>\r\n    </div>\r\n</div>'},function(e,t){e.exports='angular.module("app").controller("InputExpandCtrl", InputExpandCtrl);\r\n\r\nfunction InputExpandCtrl() {\r\n    var vm = this;\r\n\r\n    vm.filterSearchExpanded = false;\r\n\r\n    vm.expandFilter = function(value) {\r\n        vm.filterSearchExpanded = value;\r\n    };\r\n\r\n}'},function(e,t){e.exports='<div class="input-group">\r\n    <input type="text" class="form-control" data-mask="vm.ISBNMask" placeholder="ISBN 1"\r\n        aria-label="ISBN 1 13 digits only"/>\r\n    <span class="help-block">999-99-999-9999-9</span>\r\n</div>\r\n<div class="input-group">\r\n    <input type="text" class="form-control" data-mask="vm.phoneMask" placeholder="Telephone Number"\r\n        aria-label="Telephone number 10 digits only"/>\r\n    <span class="help-block">(999) 999-9999</span>\r\n</div>\r\n<div class="input-group">\r\n    <input type="text" class="form-control" data-mask="vm.currencyMask" placeholder="Currency"\r\n        aria-label="Currency 11 digits only"/>\r\n    <span class="help-block">$ 999,999,999.99</span>\r\n</div>\r\n<div class="input-group">\r\n    <input type="text" class="form-control" data-mask="vm.IPMask" placeholder="IP Address"\r\n        aria-label="IP address 11 or 12 digits only"/>\r\n    <span class="help-block">99[9].999.999.999</span>\r\n</div>'},function(e,t){e.exports='angular.module("app").controller("InputMaskCtrl", InputMaskCtrl);\r\n\r\nfunction InputMaskCtrl() {\r\n    var vm = this;\r\n\r\n    vm.ISBNMask = "999-99-999-9999-9";\r\n    vm.phoneMask = "(999) 999-9999";\r\n    vm.currencyMask = "$ 999,999,999.99";\r\n    vm.IPMask = "99[9].999.999.999";\r\n}'},function(e,t){e.exports=".number-picker-demo {\r\n    width: 70px;\r\n}"},function(e,t){e.exports='<label>Selecting an integer:</label>\r\n<div>\r\n    <number-picker step="vm.step" min="vm.min" max="vm.max" validate="vm.validate" ng-model="vm.value1" class="number-picker-demo"></number-picker>\r\n</div>\r\n<label class="m-t-md">Selecting a decimal:</label>\r\n<div>\r\n    <number-picker step="\'0.5\'" min="\'0\'" max="\'10\'" ng-model="vm.value2" class="number-picker-demo"></number-picker>\r\n</div>'},function(e,t){e.exports='angular.module("app").controller("NumberPickerCtrl", NumberPickerCtrl);\r\n\r\nfunction NumberPickerCtrl() {\r\n    var vm = this;\r\n\r\n    vm.step = 1;\r\n    vm.min = -10;\r\n    vm.max = 10;\r\n\r\n    vm.value1 = 0;\r\n    vm.value2 = 0;\r\n    \r\n    vm.validate = function(value) {\r\n      if (value % vm.step !== 0 || value.toString().indexOf(\'.\') !== -1)\r\n        return true;\r\n      else \r\n        return false;\r\n    };\r\n}'},function(e,t){e.exports='<div>\r\n    <radiobutton ng-model="vm.radioModel" \r\n                    ng-value="vm.radioOptions.option1" \r\n                    ng-disabled="vm.disableRadio" \r\n                    name="group1" \r\n                    simplified="vm.simplified"\r\n                    id="radioOption1">\r\n                    Option1\r\n    </radiobutton>\r\n</div>\r\n\r\n<div>\r\n    <radiobutton ng-model="vm.radioModel" ng-value="vm.radioOptions.option2" name="group1" simplified="vm.simplified" id="radioOption2">Option2</radiobutton>\r\n</div>\r\n\r\n<div>\r\n    <radiobutton ng-model="vm.radioModel" ng-value="vm.radioOptions.option3" name="group1" simplified="vm.simplified" id="radioOption3">Option3</radiobutton>\r\n</div>\r\n\r\n<div>\r\n    <radiobutton ng-model="vm.radioModel" ng-value="vm.radioOptions.option4" name="group1" simplified="vm.simplified" id="radioOption4">\r\n        Option four onsectetur adipiscing elit. Inte adipiscing elit onsectetur adipiscing elit. Inte adipiscing elit onsectetur adipiscing elit. Inte adipiscing elit onsectetur adipiscing elit. Inte adipiscing elit onsectetur adipiscing elit. Inte adipiscing elit onsectetur adipiscing elit.\r\n    </radiobutton>\r\n</div>\r\n\r\n<p class="m-t">\r\n    <code>radioModel</code> is <em ng-bind="vm.radioModel"></em>.\r\n</p>\r\n\r\n<div>\r\n    <button class="btn button-primary m-r-xs" \r\n            ng-click="vm.disableRadio = !vm.disableRadio"\r\n            ng-bind="vm.disableRadio ? \'Click to enable Option1\' : \'Click to disable Option1\'">\r\n    </button>\r\n\r\n    <button class="btn button-accent" \r\n            ng-click="vm.simplified = !vm.simplified"\r\n            ng-bind="vm.simplified ? \'Disable Simplified Style\' : \'Enable Simplified Style\'">\r\n    </button>\r\n</div>'},function(e,t){e.exports='angular.module("app").controller("RadioButtonCtrl", RadioButtonCtrl);\r\n\r\nfunction RadioButtonCtrl() {\r\n    var vm = this;\r\n\r\n    vm.radioModel = 100;\r\n\r\n    vm.radioOptions = {\r\n        option1: 100,\r\n        option2: "string",\r\n        option3: {\r\n            test: 1\r\n        },\r\n        option4: "Wrap-Text"\r\n    };\r\n\r\n    vm.disableRadio = false;\r\n    vm.simplified = false;\r\n}'},function(e,t){e.exports='<div class="row">\r\n\r\n    <div class="col-md-5">\r\n        <slider-chart ng-model="vm.value" slider-options="vm.sliderOptions" chart-data="vm.chart.data" chart-options="vm.chart.options"></slider-chart>\r\n\r\n        <div class="col-sm-3 m-t-sm">\r\n            <input type="text" class="form-control m-b" ng-model="vm.value.low" ng-model-options="{ debounce: 500 }">\r\n        </div>\r\n        <div class="col-sm-offset-6 col-sm-3 m-t-sm">\r\n            <input type="text" class="form-control m-b" ng-model="vm.value.high" ng-model-options="{ debounce: 500 }">\r\n        </div>\r\n\r\n    </div>\r\n\r\n</div>'},function(e,t){e.exports="angular.module('app').controller('SlidersChartsCtrl', SlidersChartsCtrl);\r\n\r\nSlidersChartsCtrl.$inject = ['$colorService'];\r\n\r\nfunction SlidersChartsCtrl($colorService) {\r\n\r\n\tvar vm = this;\r\n\r\n    var accentColor = $colorService.getColor('accent').toRgb();\t   \r\n\r\n    vm.value = {\r\n\t    low: 1,\r\n\t    high: 30\r\n\t};\r\n\r\n\tvm.sliderOptions = {\r\n\t    type: 'range',\r\n\t    handles: {\r\n\t        style: 'button',\r\n\t        callout: {\r\n\t            trigger: 'hover',\r\n\t            background: '#464646',\r\n\t            color: '#fff',\r\n\t            formatter: function (value) {\r\n\t                return value;\r\n\t            }\r\n\t        }\r\n\t    },\r\n\t    track: {\r\n\t        height: 'narrow',\r\n\t        min: 1,\r\n\t        max: 30,\r\n\t        ticks: {\r\n\t            snap: 'major',\r\n\t            major: {\r\n\t                show: false,\r\n\t                steps: 1,\r\n\t                labels: true,\r\n\t                formatter: function (value) {\r\n\t                    return value;\r\n\t                }\r\n\t            },\r\n\t            minor: {\r\n\t                show: false,\r\n\t                steps: 5,\r\n\t                labels: false,\r\n\t                formatter: function (value) {\r\n\t                    return value;\r\n\t                }\r\n\t            }\r\n\t        },\r\n\t        colors: {\r\n\t            lower: '#f2f2f2',\r\n\t            range: accentColor,\r\n\t            higher: '#f2f2f2'\r\n\t        }\r\n\t    }\r\n\t};\r\n\r\n    vm.chart = {\r\n\t    data: [{\r\n\t\t    label: \"line\",\r\n\t\t    data: [\r\n\t\t        [1, 34],\r\n\t\t        [2, 25],\r\n\t\t        [3, 19],\r\n\t\t        [4, 34],\r\n\t\t        [5, 32],\r\n\t\t        [6, 44],\r\n\t\t        [7, 34],\r\n\t\t        [8, 25],\r\n\t\t        [9, 19],\r\n\t\t        [10, 36],\r\n\t\t        [11, 20],\r\n\t\t        [12, 41],\r\n\t\t        [13, 34],\r\n\t\t        [14, 20],\r\n\t\t        [15, 31],\r\n\t\t        [16, 34],\r\n\t\t        [17, 32],\r\n\t\t        [18, 44],\r\n\t\t        [19, 19],\r\n\t\t        [20, 25],\r\n\t\t        [21, 19],\r\n\t\t        [22, 21],\r\n\t\t        [23, 32],\r\n\t\t        [24, 30],\r\n\t\t        [25, 34],\r\n\t\t        [26, 25],\r\n\t\t        [27, 45],\r\n\t\t        [28, 50],\r\n\t\t        [29, 55],\r\n\t\t        [30, 48]\r\n\t\t    ]\r\n\t\t}],\r\n\t\toptions: {\r\n\t\t    series: {\r\n\t\t        lines: {\r\n\t\t            show: true,\r\n\t\t            lineWidth: 0,\r\n\t\t            fill: true,\r\n\t\t            fillColor: {\r\n\t\t                colors: [{\r\n\t\t                    opacity: 0.1\r\n\t\t                }, {\r\n\t\t                    opacity: 0.3\r\n\t\t                }]\r\n\t\t            }\r\n\t\t        },\r\n\t\t        shadowSize: 0,\r\n\t\t        highlightColor: [accentColor],\r\n\t\t        forecastDashStyle: [5],\r\n\t\t    },\r\n\t\t    xaxis: {\r\n\t\t        show: false\r\n\t\t    },\r\n\t\t    yaxis: {\r\n\t\t    \tshow: false\r\n\t\t    }, \r\n\t\t    colors: [accentColor],\r\n\t\t    grid: {\r\n\t\t        borderWidth: {\r\n\t\t            \"left\": 0,\r\n\t\t            \"bottom\": 0,\r\n\t\t            \"right\": 0,\r\n\t\t            \"top\": 0\r\n\t\t        }\r\n\t\t    },\r\n\t\t    legend: {\r\n\t\t        show: false\r\n\t\t    },\r\n\t\t    tooltip: {\r\n\t\t        show : true,\r\n\t\t        snap: true,\r\n\t\t        shifts: {\r\n\t\t            x: 0,\r\n\t\t            y: -35\r\n\t\t        },\r\n\t\t        content: \"x: %x, y: %y\"\r\n\t\t    }\r\n\t\t}\r\n\t};\r\n    \r\n}"},function(e,t){e.exports='<slider-chart ng-model="vm.value" slider-options="vm.sliderOptions" chart-data="vm.chart.data" chart-options="vm.chart.options"></slider-chart>'},function(e,t){e.exports='<div class="container-fluid">\r\n\r\n    <div class="row">\r\n\r\n        <div class="col-md-12">\r\n            <h4 class="text-black p-t-md p-b-md">Single Value Sliders</h4>\r\n        </div>\r\n\r\n        <div class="col-md-6 p-r-md p-b-md">\r\n            <p class="text-black p-b-md">Button Handle - Custom Labels</p>\r\n            <slider ng-model="vm.slider1.value" options="vm.slider1.options"></slider>\r\n        </div>\r\n        <div class="col-md-6 p-l-md p-b-md">\r\n            <p class="text-black p-b-md">Line Handle - Callout on Drag</p>\r\n            <slider ng-model="vm.slider2.value" options="vm.slider2.options"></slider>\r\n        </div>\r\n    </div>\r\n\r\n    <hr>\r\n\r\n    <div class="row">\r\n\r\n        <div class="col-md-6 p-r-md p-b-md">\r\n            <p class="text-black p-b-md">Narrow - Track Styling - Snapping</p>\r\n            <slider ng-model="vm.slider3.value" options="vm.slider3.options"></slider>\r\n        </div>\r\n        <div class="col-md-6 p-l-md p-b-md">\r\n            <p class="text-black p-b-md">Narrow - Gradient Track Styling - Callout on Hover</p>\r\n            <slider ng-model="vm.slider4.value" options="vm.slider4.options"></slider>\r\n        </div>\r\n    </div>\r\n\r\n    <hr>\r\n\r\n    <div class="row">\r\n\r\n        <div class="col-md-12">\r\n            <h4 class="text-black p-t-md p-b-md">Range Value Sliders</h4>\r\n        </div>\r\n\r\n        <div class="col-md-6 p-r-md p-b-md">\r\n            <p class="text-black p-b-lg">Range Track - Persistent Callout</p>\r\n            <slider ng-model="vm.slider5.value" options="vm.slider5.options"></slider>\r\n        </div>\r\n        <div class="col-md-6 p-l-md p-b-md">\r\n            <p class="text-black p-b-lg">Range Track Style - Custom Callout Styles</p>\r\n            <slider ng-model="vm.slider6.value" options="vm.slider6.options"></slider>\r\n        </div>\r\n    </div>\r\n\r\n    <hr>\r\n\r\n    <div class="row">\r\n\r\n        <div class="col-md-12">\r\n            <h4 class="text-black p-t-md p-b-md">Range Slider with Text Inputs</h4>\r\n        </div>\r\n\r\n        <div class="col-md-12">\r\n            <slider ng-model="vm.slider7.value" options="vm.slider7.options"></slider>\r\n        </div>\r\n    </div>\r\n\r\n    <div class="row m-t-sm p-t-xs">\r\n        <div class="col-sm-2">\r\n            <input type="text" class="form-control m-b" ng-model="vm.slider7.value.low" ng-model-options="{ debounce: 500 }">\r\n        </div>\r\n        <div class="col-sm-offset-8 col-sm-2">\r\n            <input type="text" class="form-control m-b" ng-model="vm.slider7.value.high" ng-model-options="{ debounce: 500 }">\r\n        </div>\r\n    </div>\r\n\r\n</div>'},function(e,t){e.exports="angular.module('app').controller('SlidersCtrl', SlidersCtrl);\r\n\r\nSlidersCtrl.$inject = ['$colorService'];\r\n\r\nfunction SlidersCtrl($colorService) {\r\n    var vm = this;\r\n\r\n    vm.slider1 = {\r\n        value: 50,\r\n        options: {\r\n            track: {\r\n                ticks: {\r\n                    major: {\r\n                        steps: [0, 50, 100],\r\n                        labels: true,\r\n                        formatter: function (value) {\r\n                            if (value === 0) {\r\n                                return 'Minimum';\r\n                            }\r\n                            if (value === 50) {\r\n                                return 'Default';\r\n                            }\r\n                            if (value === 100) {\r\n                                return 'Maximum';\r\n                            }\r\n                        }\r\n                    },\r\n                    minor: {\r\n                        show: false\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    vm.slider2 = {\r\n        value: 3.8,\r\n        options: {\r\n            handles: {\r\n                style: 'line',\r\n                callout: {\r\n                    trigger: 'drag',\r\n                    formatter: function (value) {\r\n                        return value ? value.toFixed(1) : value;\r\n                    }\r\n                }\r\n            },\r\n            track: {\r\n                min: 1,\r\n                max: 5,\r\n                ticks: {\r\n                    major: {\r\n                        steps: [1, 5],\r\n                        labels: true\r\n                    },\r\n                    minor: {\r\n                        steps: 1,\r\n                        labels: false\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    vm.slider3 = {\r\n        value: 4,\r\n        options: {\r\n            track: {\r\n                min: 0,\r\n                max: 5,\r\n                height: 'narrow',\r\n                ticks: {\r\n                    snap: 'all',\r\n                    major: {\r\n                        steps: 5,\r\n                        labels: true\r\n                    },\r\n                    minor: {\r\n                        steps: 1,\r\n                        labels: true\r\n                    }\r\n                },\r\n                colors: {\r\n                    lower: $colorService.getColor('accent').toHex()\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    vm.slider4 = {\r\n        value: 60,\r\n        options: {\r\n            handles: {\r\n                style: 'line',\r\n                callout: {\r\n                    trigger: 'hover',\r\n                    formatter: function (value) {\r\n                        return value ? parseInt(value) : value;\r\n                    }\r\n                }\r\n            },\r\n            track: {\r\n                height: 'narrow',\r\n                ticks: {\r\n                    major: {\r\n                        steps: 50\r\n                    },\r\n                    minor: {\r\n                        steps: 10\r\n                    }\r\n                },\r\n                colors: {\r\n                    higher: ['#fdf690', '#f14a50']\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    vm.slider5 = {\r\n        value: {\r\n            low: 1234,\r\n            high: 9876\r\n        },\r\n        options: {\r\n            type: 'range',\r\n            handles: {\r\n                callout: {\r\n                    trigger: 'persistent',\r\n                    formatter: function (value) {\r\n                        return value ? parseInt(value) : value;\r\n                    }\r\n                }\r\n            },\r\n            track: {\r\n                height: 'narrow',\r\n                min: 1000,\r\n                max: 10000,\r\n                ticks: {\r\n                    major: {\r\n                        show: false\r\n                    },\r\n                    minor: {\r\n                        show: false\r\n                    }\r\n                },\r\n                colors: {\r\n                    range: $colorService.getColor('accent').toHex()\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    vm.slider6 = {\r\n        value: {\r\n            low: 22,\r\n            high: 76\r\n        },\r\n        options: {\r\n            type: 'range',\r\n            handles: {\r\n                style: 'line',\r\n                callout: {\r\n                    trigger: 'hover',\r\n                    background: $colorService.getColor('accent').toHex(),\r\n                    formatter: function (value) {\r\n                        return value ? parseInt(value) : value;\r\n                    }\r\n                }\r\n            },\r\n            track: {\r\n                height: 'narrow',\r\n                ticks: {\r\n                    major: {\r\n                        steps: 25\r\n                    },\r\n                    minor: {\r\n                        steps: 5\r\n                    }\r\n                },\r\n                colors: {\r\n                    range: $colorService.getColor('alternate1').toHex()\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    vm.slider7 = {\r\n        value: {\r\n            low: 25,\r\n            high: 75\r\n        },\r\n        options: {\r\n            type: 'range',\r\n            handles: {\r\n                style: 'line',\r\n                callout: {\r\n                    trigger: 'hover',\r\n                    background: $colorService.getColor('accent').toHex(),\r\n                    formatter: function (value) {\r\n                        return value ? parseInt(value) : value;\r\n                    }\r\n                }\r\n            },\r\n            track: {\r\n                ticks: {\r\n                    snap: 'all',\r\n                    major: {\r\n                        steps: 25\r\n                    },\r\n                    minor: {\r\n                        steps: 5\r\n                    }\r\n                },\r\n                colors: {\r\n                    range: $colorService.getColor('accent').toHex()\r\n                }\r\n            }\r\n        }\r\n    };\r\n}"},function(e,t){e.exports='<slider ng-model="vm.value" options="vm.options"></slider>'},function(e,t){e.exports="vm.value = 50;"},function(e,t){e.exports='<slider ng-model="vm.value" options="vm.options"></slider>\r\n<input type="text" class="form-control m-b" ng-model="vm.value" ng-model-options="{ debounce: 500 }">'},function(e,t){e.exports="vm.value = {\r\n    low: 25,\r\n    high: 75\r\n};"},function(e,t){e.exports="vm.options = {\r\n    type: 'value',\r\n    handles: {\r\n        style: 'button',\r\n        callout: {\r\n            trigger: 'none',\r\n            background: '#464646',\r\n            color: '#fff',\r\n            formatter: function (value) {\r\n                return value;\r\n            }\r\n        }\r\n    },\r\n    track: {\r\n        height: 'wide',\r\n        min: 0,\r\n        max: 100,\r\n        ticks: {\r\n            snap: 'none',\r\n            major: {\r\n                show: true,\r\n                steps: 10,\r\n                labels: true,\r\n                formatter: function (value) {\r\n                    return value;\r\n                }\r\n            },\r\n            minor: {\r\n                show: true,\r\n                steps: 5,\r\n                labels: false,\r\n                formatter: function (value) {\r\n                    return value;\r\n                }\r\n            }\r\n        },\r\n        colors: {\r\n            lower: '#f2f2f2',\r\n            range: '#7b63a3',\r\n            higher: '#f2f2f2'\r\n        }\r\n    }\r\n};"},function(e,t){e.exports='<tag-input tags="vm.tags2" full-tag-set="vm.tagSet" options="vm.demoOptions2"></tag-input>'},function(e,t){e.exports='vm.tags2 = [];\r\n\r\nvm.tagSet = ["Red", "Orange", "Yellow", "Green", "Blue", "Indigo", "Violet"];\r\n\r\nvm.demoOptions2 = {\r\n    placeholder: "Add tag",\r\n    autocomplete: {\r\n        addFromAutocompleteOnly:true\r\n    }\r\n};'},function(e,t){e.exports='<div class="row m-b-sm">\r\n    <div class="col-sm-6">\r\n        <tag-input tags="vm.tags" options="vm.demoOptions1" api="vm.demoApi"></tag-input>\r\n    </div>\r\n</div>\r\n<div>\r\n    <span>Current Tags</span>\r\n    <pre>{{vm.tags}}</pre>\r\n</div>'},function(e,t){e.exports='angular.module(\'app\').controller(\'TagsCtrl\', TagsCtrl);\r\n\r\nfunction TagsCtrl() {\r\n    var vm = this;\r\n\r\n    vm.tags = ["Redundant", "Trivial", "Obsolete", "Deletion Scheduled", "SharePoint 2007 Repository"];\r\n    vm.tags2 = [];\r\n    vm.tags3 = [];\r\n\r\n    vm.tagSet = ["Red", "Orange", "Yellow", "Green", "Blue", "Indigo", "Violet"];\r\n\r\n    vm.people = [];\r\n    vm.posts = [\'Labs\', \'Finance\', \'Auditing\', \'Technical\', \'Investor Relations\', \'Operations\'];\r\n    for (var i = 0; i < 20; i++) {\r\n        var names = chance.name();\r\n        var email = names.toLowerCase().replace(" ", ".");\r\n\r\n        vm.people.push({\r\n            name: names,\r\n            email: email + \'@business.com\',\r\n            position: vm.posts[Math.floor(Math.random() * vm.posts.length)]\r\n        });\r\n    }\r\n\r\n    vm.demoOptions1 = {\r\n        placeholder: "Add tag",\r\n        maxNumberTags: 8,\r\n        maxTagsMessage: "Maximum number of tags has been added"\r\n    };\r\n\r\n    vm.demoApi = {\r\n        onTagAdding: function () {\r\n            if (vm.tags.length >= vm.demoOptions1.maxNumberTags) {\r\n                return false;\r\n            }\r\n            return true;\r\n        },\r\n\r\n        onTagRemoving: function () {\r\n            return true;\r\n        }\r\n    };\r\n\r\n    vm.demoOptions2 = {\r\n        placeholder: "Add tag",\r\n        autocomplete: {\r\n            addFromAutocompleteOnly: true\r\n        }\r\n    };\r\n\r\n    vm.demoOptions3 = {\r\n        placeholder: "Add tag",\r\n        format: {\r\n            display: "name",\r\n            key: "name"\r\n        },\r\n        autocomplete: {\r\n            addFromAutocompleteOnly: true,\r\n            template: "directives/tagInput/customAutocompleteTemplate.html",\r\n            minLength: 1,\r\n            source: function ($query) {\r\n                return vm.people.filter(function (person) {\r\n                    return person.name.toLowerCase().indexOf($query.toLowerCase()) !== -1;\r\n                });\r\n            }\r\n        }\r\n    };\r\n}'},function(e,t){e.exports='<tag-input tags="vm.tags3" options="vm.demoOptions3"></tag-input>'},function(e,t){e.exports="vm.tags3 = [];\r\n\r\nvm.people = [];\r\nvm.posts = ['Labs', 'Finance', 'Auditing', 'Technical', 'Investor Relations', 'Operations'];\r\n\r\nfor(var i = 0; i<20; i++) {\r\n    //generating dummy data\r\n    var names = chance.name();\r\n    var email = names.toLowerCase().replace(\" \", \".\");\r\n    \r\n    vm.people.push({\r\n        name: names,\r\n        email: email + '@business.com',\r\n        position: vm.posts[Math.floor(Math.random() * vm.posts.length)]\r\n    });\r\n}\r\n\r\nvm.demoOptions3 = {\r\n    placeholder: \"Add tag\",\r\n    format: {\r\n        display: \"name\",\r\n        key: \"name\"\r\n    },\r\n    autocomplete: {\r\n        addFromAutocompleteOnly: true,\r\n        template: \"directives/tagInput/customAutocompleteTemplate.html\",\r\n        minLength: 1,\r\n        source: function($query) {\r\n            return vm.people.filter(function(person) {\r\n                return person.name.toLowerCase().indexOf($query.toLowerCase()) !== -1;\r\n            });\r\n        }\r\n    }\r\n};"},function(e,t){e.exports='<tag-input tags="vm.tags" options="vm.demoOptions1" api="vm.demoApi"></tag-input>'},function(e,t){e.exports='vm.tags = ["Redundant", "Trivial", "Obsolete", "Deletion Scheduled", "SharePoint 2007 Repository" ];\r\nvm.tags2 = [];\r\n\r\nvm.demoOptions1 = {\r\n    placeholder : "Add tag",\r\n    maxNumberTags: 8,\r\n    maxTagsMessage: "Maximum number of tags has been added"\r\n};\r\n\r\nvm.demoApi = {\r\n    onTagAdding: function(tag){\r\n        if(vm.tags.length >= vm.demoOptions1.maxNumberTags) {\r\n            return false;\r\n        }\r\n        return true;\r\n    },\r\n    onTagRemoving: function(tag) {\r\n        return true;\r\n    }\r\n};'},function(e,t){e.exports='.toggleswitch-custom .el-toggleswitch > .el-toggleswitch-bg {\r\n    /* This is the color of the background in the unchecked state. */ \r\n    background-color: #ebebeb;\r\n    /* These three properties are used to "shrink" the default rounded backdrop. */\r\n    box-sizing: border-box;\r\n    background-clip: content-box;\r\n    border: 2px solid transparent;\r\n    /* The new animation for the background. */\r\n    transition: background-color 0.3s;\r\n}\r\n\r\n.toggleswitch-custom .el-toggleswitch.checked > .el-toggleswitch-bg {\r\n    /* This is the color of the background in the checked state. */ \r\n    background-color: #9dd4a1;\r\n    /* The default control uses box-shadow to create the animation, so remove that. */\r\n    box-shadow: none;\r\n    /* The default control changes the border, so override that. */\r\n    border: 2px solid transparent;\r\n    /* The default control has a slightly different animation for unchecking, so override that. */\r\n    transition: background-color 0.3s;\r\n}\r\n\r\n.toggleswitch-custom .el-toggleswitch > .el-toggleswitch-nub {\r\n    /* This is the color of the switch in the unchecked state. */ \r\n    background-color: #fff;\r\n    /* Remove the border. */\r\n    border: 0;\r\n    /* Create a dropshadow. */\r\n    box-shadow: 0px 1px 4px 1px rgba(0, 0, 0, 0.3);\r\n    /* Add a color transition to the switch as well as the slide animation. */\r\n    transition: background-color 0.3s, left 0.15s;\r\n}\r\n\r\n.toggleswitch-custom .el-toggleswitch.checked > .el-toggleswitch-nub {\r\n    /* This is the color of the switch in the checked state. */ \r\n    background-color: #fff;\r\n}'},function(e,t){e.exports='<div>\r\n    <toggleswitch ng-model="vm.toggleSwitches.option1" ng-disabled="vm.toggleSwitchDisable">Toggle 1</toggleswitch>\r\n</div>\r\n<div>\r\n    <toggleswitch ng-model="vm.toggleSwitches.option2">Toggle 2</toggleswitch>\r\n</div>\r\n<div>\r\n    <toggleswitch ng-model="vm.toggleSwitches.option3">Toggle 3</toggleswitch>\r\n</div>\r\n<div class="m-t-sm">\r\n    <toggleswitch class="toggleswitch-lg" ng-model="vm.toggleSwitches.option4">Large Toggle</toggleswitch>\r\n</div>\r\n<p class="m-t">\r\n    <code>toggleSwitches.option1</code> is <em ng-bind="vm.toggleSwitches.option1"></em>.\r\n    <code>toggleSwitches.option2</code> is <em ng-bind="vm.toggleSwitches.option2"></em>.\r\n    <code>toggleSwitches.option3</code> is <em ng-bind="vm.toggleSwitches.option3"></em>.\r\n    <code>toggleSwitches.option4</code> is <em ng-bind="vm.toggleSwitches.option4"></em>.\r\n</p>\r\n<button class="btn button-primary m-r-xs" ng-click="vm.toggleSwitchDisable = !vm.toggleSwitchDisable" ng-bind="vm.toggleSwitchDisable ? \'Click to enable Toggle 1\' : \'Click to disable Toggle 1\'"></button>\r\n<hr>\r\n<div>\r\n    <toggleswitch class="toggleswitch-custom" ng-model="vm.toggleSwitches.option5">Custom Toggle</toggleswitch>\r\n</div>'},function(e,t){e.exports="angular.module('app').controller('ToggleSwitchDemoCtrl', ToggleSwitchDemoCtrl);\r\n\r\nfunction ToggleSwitchDemoCtrl() {\r\n    var vm = this;\r\n\r\n    vm.toggleSwitches = {\r\n        option1: true,\r\n        option2: false,\r\n        option3: false,\r\n        option4: false,\r\n        option5: false\r\n    };\r\n    vm.toggleSwitchDisable = false;\r\n}"},function(e,t){e.exports='<toggleswitch ng-model="vm.toggleSwitches.option1" ng-disabled="vm.toggleSwitchDisable">Toggle 1</toggleswitch>'},function(e,t){e.exports='<toggleswitch class="toggleswitch-lg" ng-model="vm.toggleSwitches.option4">Large Toggle</toggleswitch>'},function(e,t){e.exports='<toggleswitch class="toggleswitch-custom" ng-model="vm.toggleSwitches.option5">Custom Toggle</toggleswitch>'},function(e,t){e.exports='vm.callback = function (elem) {\r\n    elem.trigger("click");\r\n};'},function(e,t){e.exports="angular.module('app').controller('HotkeysDemoCtrl', HotkeysDemoCtrl);\r\n\r\nHotkeysDemoCtrl.$inject = ['$scope', 'keyboardService'];\r\n\r\nfunction HotkeysDemoCtrl($scope, keyboardService) {\r\n    var vm = this;\r\n\r\n    vm.selected = 'None';\r\n    vm.otherSelected = 'None';\r\n\r\n    vm.callback1 = function () {\r\n    };\r\n    vm.callback2 = function (elem) {\r\n        elem.trigger('click');\r\n    };\r\n\r\n    vm.button1 = function () {\r\n        vm.selected = 'Active';\r\n    };\r\n    vm.button2 = function () {\r\n        vm.selected = 'Inactive';\r\n    };\r\n    vm.button3 = function () {\r\n        vm.selected = 'Lock';\r\n    };\r\n    vm.buttonA = function () {\r\n        vm.otherSelected = 'Decelerate';\r\n    };\r\n    vm.buttonB = function () {\r\n        vm.otherSelected = 'Drive';\r\n    };\r\n    vm.buttonC = function () {\r\n        vm.otherSelected = 'Accelerate';\r\n    };\r\n\r\n    vm.testKeyInput = '';\r\n    vm.testKey = {};\r\n    vm.testKeyBound = false;\r\n    vm.testMessage = '';\r\n\r\n    vm.toggleBind = function () {\r\n        if (vm.testKeyBound) {\r\n            keyboardService.unbindKey(vm.testKey);\r\n            vm.testKeyBound = false;\r\n        }\r\n        else {\r\n            var code = keyboardService.getCharCode(vm.testKeyInput);\r\n            if (code === 0) { return; }\r\n\r\n            vm.testKey.code = code;\r\n            keyboardService.bindKey(vm.testKey, function () {\r\n                $scope.$apply(function () {\r\n                    vm.testMessage = 'Hotkey was pressed at ' + new Date().toLocaleTimeString();\r\n                });\r\n            });\r\n            vm.testKeyBound = true;\r\n        }\r\n        vm.testMessage = '';\r\n    };\r\n}\r\n"},function(e,t){e.exports='<div style="display:flex;">\r\n\r\n  <div class="aspects-focus-outline hotkey-demo-only" hotkey=\'y\' hotkey-action="vm.callback1" hotkey-hint>\r\n\r\n    <div class="hotkey-demo-only-button-layout">\r\n      <button class="btn button button-secondary" hotkey-item ng-click="vm.button1()">\r\n      <i class="hpe-icon hpe-active"></i>\r\n    </button> &nbsp;\r\n      <button class="btn button button-secondary" hotkey-item ng-click="vm.button2()">\r\n      <i class="hpe-icon hpe-inactive"></i>\r\n    </button> &nbsp;\r\n      <button class="btn button button-secondary" hotkey-item ng-click="vm.button3()">\r\n      <i class="hpe-icon hpe-lock"></i>\r\n    </button>\r\n    </div>\r\n\r\n    <p class="m-t-xs" style="text-align: center;">\r\n      Selected: <span ng-bind="vm.selected"></span>\r\n    </p>\r\n\r\n  </div>\r\n\r\n  <div class="aspects-focus-outline hotkey-demo-only m-l-lg" hotkey=\'m\' hotkey-action="vm.callback2" hotkey-hint>\r\n\r\n    <div class="hotkey-demo-only-button-layout">\r\n\r\n      <button class="btn button button-secondary" hotkey-item ng-click="vm.buttonA()">\r\n      <i class="hpe-icon hpe-rewind"></i>\r\n    </button> &nbsp;\r\n      <button class="btn button button-secondary" hotkey-item ng-click="vm.buttonB()">\r\n      <i class="hpe-icon hpe-play"></i>\r\n    </button> &nbsp;\r\n      <button class="btn button button-secondary" hotkey-item ng-click="vm.buttonC()">\r\n      <i class="hpe-icon hpe-fast-forward"></i>\r\n    </button>\r\n\r\n    </div>\r\n    <p class="m-t-xs" style="text-align: center;">\r\n      Selected: <span ng-bind="vm.otherSelected"></span>\r\n    </p>\r\n  </div>\r\n\r\n</div>'},function(e,t){e.exports=".hotkey-demo-only{\r\n\twidth: 210px;\r\n\theight: 80px;\r\n\tborder: 2px solid #f1f1f1;\r\n\tborder-radius: 3px;\r\n}\r\n.hotkey-demo-only .hotkey-group-hint {\r\n\tmargin-left: -2px;\r\n\tmargin-top: -2px;\r\n}\r\n.hotkey-demo-only-button-layout{\r\n\tpadding-left:30px;\r\n\tpadding-top:20px;\r\n}"},function(e,t){e.exports="angular.module('app').controller('KeyboardServiceDemoCtrl', KeyboardServiceDemoCtrl);\r\n\r\nKeyboardServiceDemoCtrl.$inject = ['$scope', 'keyboardService'];\r\n\r\nfunction KeyboardServiceDemoCtrl($scope, keyboardService) {\r\n    var vm = this;\r\n\r\n    vm.testKeyInput = '';\r\n    vm.testKey = {};\r\n    vm.testKeyBound = false;\r\n    vm.testMessage = '';\r\n\r\n    vm.toggleBind = function () {\r\n        if (vm.testKeyBound) {\r\n            keyboardService.unbindKey(vm.testKey);\r\n            vm.testKeyBound = false;\r\n        } else {\r\n            var code = keyboardService.getCharCode(vm.testKeyInput);\r\n            if (code === 0) { return; }\r\n\r\n            vm.testKey.code = code;\r\n            keyboardService.bindKey(vm.testKey, function () {\r\n                $scope.$apply(function () {\r\n                    vm.testMessage = 'Hotkey was pressed at ' + new Date().toLocaleTimeString();\r\n                });\r\n            });\r\n            vm.testKeyBound = true;\r\n        }\r\n        vm.testMessage = '';\r\n    };\r\n}\r\n"},function(e,t){e.exports='<div class="row m-t-md m-b-md">\r\n  <div class="col-sm-1 m-t-xs">\r\n    <checkbox name="shift-check" ng-model="vm.testKey.shiftKey" ng-disabled="vm.testKeyBound">Shift</checkbox>\r\n  </div>\r\n  <div class="col-sm-1 m-t-xs">\r\n    <checkbox name="ctrl-check" ng-model="vm.testKey.ctrlKey" ng-disabled="vm.testKeyBound">Ctrl</checkbox>\r\n  </div>\r\n  <div class="col-sm-1 m-t-xs">\r\n    <checkbox name="alt-check" ng-model="vm.testKey.altKey" ng-disabled="vm.testKeyBound">Alt</checkbox>\r\n  </div>\r\n  <div class="col-sm-2">\r\n    <input type="text" placeholder="Key" class="form-control" maxlength="1" ng-model="vm.testKeyInput" ng-disabled="vm.testKeyBound"\r\n    />\r\n  </div>\r\n  <div class="col-sm-2">\r\n    <button type="button" class="btn button-primary" ng-click="vm.toggleBind()">{{ vm.testKeyBound ? "Unbind Key" : "Bind Key" }}</button>\r\n  </div>\r\n</div>\r\n<alert ng-if="vm.testMessage.length > 0" type="info">\r\n  <span ng-bind="vm.testMessage"></span>\r\n</alert>'},function(e,t){e.exports="angular.module('app').controller('MarqueeModalDemoCtrl', MarqueeModalDemoCtrl);\r\n\r\nMarqueeModalDemoCtrl.$inject = ['$modal'];\r\n\r\nfunction MarqueeModalDemoCtrl($modal) {\r\n    var vm = this;\r\n\r\n    vm.openModal = function () {\r\n\r\n        var modalInstance = $modal.open({\r\n            animation: false,\r\n            templateUrl: 'modalLayout.html',\r\n            controller: 'MarqueeModalDemoModalCtrl',\r\n            controllerAs: 'vm',\r\n            keyboard: 'true',\r\n            size: 'lg',\r\n            windowClass: 'marquee-modal-window'\r\n        });\r\n\r\n        modalInstance.result.then(function () {\r\n            //result passed into closed function;\r\n        });\r\n    };\r\n}\r\n\r\n"},function(e,t){e.exports='<button type="button" class="btn button-primary" ng-click="vm.openModal()">\r\n    <span class="hpe-icon hpe-deployment" aria-hidden="true"></span>&nbsp;Launch Marquee Modal\r\n</button>'},function(e,t){e.exports="angular.module('app').controller('MarqueeModalDemoModalCtrl', MarqueeModalDemoModalCtrl);\r\n\r\nMarqueeModalDemoModalCtrl.$inject = ['$modalInstance'];\r\n\r\nfunction MarqueeModalDemoModalCtrl($modalInstance) {\r\n    var vm = this;\r\n\r\n    // date picker properties\r\n    vm.date = new Date();\r\n    vm.opened = false;\r\n\r\n    vm.open = function ($event) {\r\n        $event.preventDefault();\r\n        $event.stopPropagation();\r\n        vm.opened = true;\r\n    };\r\n\r\n    // modal properties\r\n    vm.ok = function () {\r\n        $modalInstance.close(\"true\");\r\n    };\r\n\r\n    vm.cancel = function () {\r\n        $modalInstance.dismiss(\"cancel\");\r\n    };\r\n}\r\n"},function(e,t){e.exports='<div class="modal-header">\r\n    <div class="dismiss">\r\n        <button class="btn btn-icon button-dark btn-circular btn-close" type="button" aria-label="Close" ng-click="vm.cancel()">\r\n            <span class="hpe-icon hpe-close" aria-hidden="true"></span>\r\n        </button>\r\n    </div>\r\n    <h4 class="modal-title" id="myModalLabel">UX Aspects Modal View</h4>\r\n</div>\r\n<div class="modal-body">\r\n    <h3><center>AGREEMENT</center></h3>\r\n    <p>\r\n        Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in, egestas eget quam.\r\n        Morbi leo risus, porta ac consectetur ac, vestibulum at eros.\r\n        Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel scelerisque nisl consectetur\r\n        et. Donec sed odio dui.</p>\r\n    ...\r\n</div>\r\n<div class="modal-footer">\r\n    <button type="button" class="btn btn-w-m button-accent" ng-click="vm.ok()">ACCEPT</button>\r\n</div>\r\n'},function(e,t){e.exports=".person-icon {\r\n    width: 48px;\r\n    height: 48px;\r\n    background-image: url('https://uxaspects.github.io/UXAspects/assets/img/IconUser.png');\r\n    background-size: 100% 100%;\r\n}\r\n          \r\n.case-modal {\r\n    height: 520px;\r\n}\r\n\r\n.case-modal .case-label {\r\n    font-size: 18px;\r\n}\r\n\r\n.case-logo {\r\n    color: #85D2BE;\r\n}"},function(e,t){e.exports="angular.module('app').controller('ModalDemoCtrl', ModalDemoCtrl);\r\n\r\nModalDemoCtrl.$inject = ['$modal'];\r\n\r\nfunction ModalDemoCtrl($modal) {\r\n    var vm = this;\r\n\r\n    vm.openModal1 = function () {\r\n        var modalInstance = $modal.open({\r\n            templateUrl: 'modalLayout.html',\r\n            controller: 'ModalDemoModalCtrl',\r\n            controllerAs: 'vm',\r\n            animation: false,\r\n            keyboard: 'true'\r\n            // Add this class attribute for dark modal header\r\n            // windowClass: 'modal-window-dark-header'\r\n        });\r\n        modalInstance.result.then(function () {\r\n            // result passed into closed function;\r\n        });\r\n    };\r\n}\r\n"},function(e,t){e.exports='<button type="button" class="btn button-primary" ng-click="vm.openModal1()">\r\n  <span class="hpe-icon hpe-deployment" aria-hidden="true"></span>&nbsp;Launch Modal View\r\n</button>'},function(e,t){e.exports="angular.module('app').controller('ModalDemoModalCtrl', ModalDemoModalCtrl);\r\n\r\nModalDemoModalCtrl.$inject = ['$modalInstance'];\r\n\r\nfunction ModalDemoModalCtrl($modalInstance) {\r\n    var vm = this;\r\n\r\n    vm.ok = function () {\r\n        $modalInstance.close('true');\r\n    };\r\n\r\n    vm.cancel = function () {\r\n        $modalInstance.dismiss('cancel');\r\n    };\r\n}\r\n"},function(e,t){e.exports="angular.module('app').controller('SideModalDemoCtrl', SideModalDemoCtrl);\r\n\r\nfunction SideModalDemoCtrl() {\r\n    var vm = this;\r\n\r\n    vm.sideModalOptions = {\r\n        title: \"Site Detail - UX Aspects\",\r\n        main: \"modalContent.html\",\r\n        footer: \"modalFooter.html\",\r\n        modalColumns: 'col-lg-6 col-md-7 col-sm-9 col-xs-10',\r\n        affixHeader: true\r\n    };\r\n}\r\n"},function(e,t){e.exports='<button type="button" side-modal-window="vm.sideModalOptions" class="btn button-primary">\r\n    <span class="hpe-icon hpe-deployment" aria-hidden="true"></span>&nbsp;Launch Side Modal\r\n</button>'},function(e,t){e.exports=".inset-scroll {\r\n    overflow: auto;\r\n    height: 100%;\r\n}"},function(e,t){e.exports="angular.module('app').controller('SquareModalDemoCtrl', SquareModalDemoCtrl);\r\n\r\nSquareModalDemoCtrl.$inject = ['$modal'];\r\n\r\nfunction SquareModalDemoCtrl($modal) {\r\n    var vm = this;\r\n\r\n    vm.openModal2 = function () {\r\n        var modalInstance = $modal.open({\r\n            templateUrl: 'modalLayout.html',\r\n            controller: 'SquareModalDemoModalCtrl',\r\n            controllerAs: 'vm',\r\n            animation: false,\r\n            keyboard: 'true',\r\n            windowClass: 'square-modal-window'\r\n        });\r\n        modalInstance.result.then(function () {\r\n            //result passed into closed function;\r\n        });\r\n    };\r\n}\r\n"},function(e,t){e.exports='<button type="button" class="btn button-accent" ng-click="vm.openModal2()">\r\n    <span class="hpe-icon hpe-announcement" aria-hidden="true"></span>&nbsp;Launch Square corner Modal\r\n</button>'},function(e,t){e.exports="angular.module('app').controller('SquareModalDemoModalCtrl', SquareModalDemoModalCtrl);\r\n\r\nSquareModalDemoModalCtrl.$inject = ['$modalInstance'];\r\n\r\nfunction SquareModalDemoModalCtrl($modalInstance) {\r\n    var vm = this;\r\n\r\n    vm.ok = function () {\r\n        $modalInstance.close('true');\r\n    };\r\n\r\n    vm.cancel = function () {\r\n        $modalInstance.dismiss('cancel');\r\n    };\r\n}\r\n"},function(e,t){e.exports='<div class="modal-header">\r\n    <div class="dismiss">\r\n        <button class="btn btn-icon button-dark btn-circular btn-close" type="button" aria-label="Close" ng-click="vm.cancel()">\r\n            <span class="hpe-icon hpe-close" aria-hidden="true"></span>\r\n        </button>\r\n    </div>\r\n    <h4 class="modal-title" id="myModalLabel">UX Aspects Modal View</h4>\r\n</div>\r\n<div class="modal-body">\r\n    <h3><center>AGREEMENT</center></h3>\r\n    <p>\r\n        Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in, egestas eget quam.\r\n        Morbi leo risus, porta ac consectetur ac, vestibulum at eros.\r\n        Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel scelerisque nisl consectetur\r\n        et. Donec sed odio dui.</p>\r\n    ...\r\n</div>\r\n<div class="modal-footer">\r\n    <button type="button" class="btn btn-w-m button-accent" ng-click="vm.ok()">ACCEPT</button>\r\n</div>\r\n'},function(e,t){e.exports="angular.module('app').controller('AlertStylesDemoCtrl', AlertStylesDemoCtrl);\r\n\r\nfunction AlertStylesDemoCtrl() {\r\n    var vm = this;\r\n\r\n    vm.infoAlert = {\r\n        type: 'info',\r\n        msg: 'This is an example of an info alert.',\r\n        linkText: 'Alert Link'\r\n    };\r\n    vm.errorAlert = {\r\n        type: 'error',\r\n        msg: 'This is an example of an error alert.',\r\n        linkText: 'Alert Link'\r\n    };\r\n}"},function(e,t){e.exports='<alert type="{{vm.infoAlert.type}}">\r\n    <span ng-bind="vm.infoAlert.msg"></span> &nbsp;\r\n    <a href="" class="alert-link" ng-bind="vm.infoAlert.linkText"></a>\r\n</alert>\r\n<alert type="{{vm.errorAlert.type}}">\r\n    <span ng-bind="vm.errorAlert.msg"></span> &nbsp;\r\n    <a href="" class="alert-link" ng-bind="vm.errorAlert.linkText"></a>\r\n</alert>'},function(e,t){e.exports="angular.module('app').controller('DismissableStylesDemoCtrl', DismissableStylesDemoCtrl);\r\n\r\nfunction DismissableStylesDemoCtrl() {\r\n    var vm = this;\r\n\r\n    vm.addDismissAlert = function (type) {\r\n        vm.dismissAlerts.push({\r\n            type: type,\r\n            msg: 'This is an example of a dismissible ' + type + ' alert.',\r\n            linkText: 'Alert Link'\r\n        });\r\n    };\r\n\r\n    vm.dismissAlerts = [];\r\n    vm.addDismissAlert('info');\r\n    vm.addDismissAlert('error');\r\n    \r\n    vm.close = function (item) {\r\n        vm.dismissAlerts.splice(vm.dismissAlerts.indexOf(item), 1);\r\n    };\r\n}"},function(e,t){e.exports='<alert ng-repeat="alert in vm.dismissAlerts" type="{{alert.type}}" close="vm.close(alert)">\r\n    <span ng-bind="alert.msg"></span>&nbsp;\r\n    <a href="" class="alert-link" ng-bind="alert.linkText"></a>\r\n</alert>\r\n<button ng-click="vm.addDismissAlert(\'info\')" class="btn button-secondary">Add Info Alert</button> &nbsp;\r\n<button ng-click="vm.addDismissAlert(\'error\')" class="btn btn-alert">Add Error Alert</button>'},function(e,t){e.exports='<button type="button" class="btn button-primary m-t-sm" ng-click="vm.showNextNotification()">Show Notification</button>'},function(e,t){e.exports="angular.module('app').controller('NotificationDropdownDemoCtrl', NotificationDropdownDemoCtrl);\r\n\r\nNotificationDropdownDemoCtrl.$inject = ['$scope', 'notificationService', '$colorService'];\r\n\r\nfunction NotificationDropdownDemoCtrl($scope, notificationService, $colorService) {\r\n    var vm = this;\r\n\r\n    var sampleNotifications = [{\r\n        icon: 'hpe-user',\r\n        text: 'Add new custodians (23) submitted',\r\n        duration: 2000,\r\n        backgroundColor: $colorService.getColor('primary').toHex()\r\n    }, {\r\n        icon: 'hpe-alert',\r\n        text: 'Export Michael J. Angelakis completed with 2 errors',\r\n        duration: 2000,\r\n        backgroundColor: $colorService.getColor('accent').toHex()\r\n    }, {\r\n        icon: 'hpe-archive',\r\n        text: 'Export Marc Andressen submitted',\r\n        duration: 2000,\r\n        backgroundColor: $colorService.getColor('critical').toHex()\r\n    }];\r\n\r\n    var currentNotification = 0;\r\n\r\n    //update the visibility of the notifications\r\n    vm.hideNotifications = false;\r\n\r\n    //watch the notifications that have been displayed\r\n    vm.previousNotifications = [];\r\n\r\n    //keep a count of the number of notifications\r\n    vm.notificationCount = 0;\r\n\r\n    vm.showNextNotification = function () {\r\n\r\n        //next notification\r\n        var nextNotification = sampleNotifications[currentNotification];\r\n\r\n        //show the next notifications\r\n        notificationService.showNotification(nextNotification);\r\n\r\n        //increment notification counter\r\n        currentNotification++;\r\n\r\n        //loop notifications\r\n        if (currentNotification > 2) currentNotification = 0;\r\n    };\r\n\r\n    //when a notification has been added update the array\r\n    $scope.$watch(function () {\r\n        return notificationService.getNotifications();\r\n    }, function (nv, ov) {\r\n\r\n        //update notification count\r\n        vm.notificationCount = nv.length;\r\n\r\n        //return the three most recent notifications\r\n        if (!angular.equals(nv, ov)) vm.previousNotifications = nv.slice().reverse().slice(0, 3);\r\n\r\n    }, true);\r\n\r\n    //watch when the visibility of the notifications changes\r\n    $scope.$watch('vm.hideNotifications', function (nv, ov) {\r\n        if (nv !== ov) notificationService.setNotificationVisibility(!nv);\r\n    });\r\n\r\n    vm.notificationModalOptions = {\r\n        title: \"Alerts\",\r\n        main: \"modalLayout.html\",\r\n        modalColumns: \"notification-modal\",\r\n        affixHeader: true\r\n    };\r\n\r\n    // Clean up scope\r\n    vm.$onDestroy = function () {\r\n        $scope.$destroy();\r\n    };\r\n}\r\n\r\n"},function(e,t){e.exports='<!-- Notification dropdown in page header -->\r\n<li class="dropdown count-info">\r\n    <a class="dropdown-toggle" data-toggle="dropdown">\r\n        <i class="hpe-icon hpe-notification"></i> <span class="label label-primary" ng-show="vm.notificationCount > 0"\r\n            ng-bind="vm.notificationCount"></span>\r\n    </a>\r\n    <ul class="dropdown-menu">\r\n        <li ng-show="vm.notificationCount === 0">\r\n            <p class="no-notifications-dropdown"><span class="hpe-icon hpe-notification m-r-sm"></span> No Notifications</p>\r\n        </li>\r\n        <li ng-repeat="notification in vm.previousNotifications">\r\n            <a class="dropdown-notification">\r\n                <div class="notification-icon">\r\n                    <i class="hpe-icon hpe-fw text-muted" ng-class="notification.icon"></i>\r\n                </div>\r\n                <div class="notification-text">\r\n                    <span ng-bind="notification.text"></span>\r\n                </div>\r\n                <div class="notification-time">\r\n                    <span class="text-muted small" time-ago="notification.date"></span>\r\n                </div>\r\n            </a>\r\n        </li>\r\n        <li>\r\n            <div class="dropdown-notification-options">\r\n                <a href="" class="hyperlink" ng-show="vm.notificationCount > 0" side-modal-window="vm.notificationModalOptions">View all alerts</a>\r\n                <div class="hide-notifications">\r\n                    <checkbox ng-model="vm.hideNotifications" name="hide-notifications">Hide notifications</checkbox>\r\n                </div>\r\n            </div>\r\n        </li>\r\n    </ul>\r\n</li>\r\n'},function(e,t){e.exports='<div class="notification-header">\r\n    <ol class="breadcrumb">\r\n        <li class="hidden-xs">\r\n            <span>Home<i class="hpe-icon hpe-up" aria-hidden="true"></i></span>\r\n        </li>\r\n        <li class="hidden-xs">\r\n            <span>Components<i class="hpe-icon hpe-up" aria-hidden="true"></i></span>\r\n        </li>\r\n        <li class="visible-xs-block">\r\n            <span><i class="hpe-icon hpe-more" aria-hidden="true" tooltip="Home > Components" tooltip-placement="bottom"></i><i class="hpe-icon hpe-up" aria-hidden="true"></i></span>\r\n        </li>\r\n    </ol>\r\n    <h1 class="heading m-t-nil">Notifications</h1>\r\n\r\n    <ul class="nav-buttons">\r\n        <li class="dropdown hidden-xs">\r\n            <a class="dropdown-toggle">\r\n                <i class="hpe-icon hpe-help"></i>\r\n            </a>\r\n        </li>\r\n        <li class="dropdown hidden-xs">\r\n            <a class="dropdown-toggle">\r\n                <i class="hpe-icon hpe-search"></i>\r\n            </a>\r\n        </li>\r\n        <li class="dropdown count-info hidden-xs">\r\n            <a class="dropdown-toggle" data-toggle="dropdown">\r\n                <i class="hpe-icon hpe-notification"></i> <span class="label label-primary" ng-show="vm.notificationCount > 0"\r\n                    ng-bind="vm.notificationCount"></span>\r\n            </a>\r\n            <ul class="dropdown-menu">\r\n                <li ng-show="vm.notificationCount === 0">\r\n                    <p class="no-notifications-dropdown"><span class="hpe-icon hpe-notification m-r-sm"></span> No Notifications</p>\r\n                </li>\r\n                <li ng-repeat="notification in vm.previousNotifications">\r\n                    <a class="dropdown-notification">\r\n                        <div class="notification-icon">\r\n                            <i class="hpe-icon hpe-fw text-muted" ng-class="notification.icon"></i>\r\n                        </div>\r\n                        <div class="notification-text">\r\n                            <span ng-bind="notification.text"></span>\r\n                        </div>\r\n                        <div class="notification-time">\r\n                            <span class="text-muted small" time-ago="notification.date"></span>\r\n                        </div>\r\n                    </a>\r\n                </li>\r\n                <li>\r\n                    <div class="dropdown-notification-options">\r\n                        <a href="" class="hyperlink text-primary" ng-show="vm.notificationCount > 0" side-modal-window="vm.notificationModalOptions">View all alerts</a>\r\n                        <div class="hide-notifications">\r\n                            <checkbox ng-model="vm.hideNotifications" name="hide-notifications">Hide notifications</checkbox>\r\n                        </div>\r\n                    </div>\r\n                </li>\r\n            </ul>\r\n        </li>\r\n        <li class="dropdown hidden-xs">\r\n            <a class="dropdown-toggle">\r\n                <i class="hpe-icon hpe-actions"></i>\r\n            </a>\r\n        </li>\r\n        <li class="dropdown visible-xs">\r\n            <a class="dropdown-toggle" ng-click="vm.iconHeaderVisible = !vm.iconHeaderVisible">\r\n                <i class="hpe-icon text-primary" ng-class="vm.iconHeaderVisible ? \'hpe-down\' : \'hpe-previous\'"></i>\r\n            </a>\r\n        </li>\r\n    </ul>\r\n</div>\r\n\r\n<div class="notification-icon-header visible-xs" ng-show="vm.iconHeaderVisible">\r\n    <ul class="nav-buttons">\r\n        <li class="dropdown">\r\n            <a class="dropdown-toggle">\r\n                <i class="hpe-icon hpe-help"></i>\r\n            </a>\r\n        </li>\r\n        <li class="dropdown">\r\n            <a class="dropdown-toggle">\r\n                <i class="hpe-icon hpe-search"></i>\r\n            </a>\r\n        </li>\r\n        <li class="dropdown count-info">\r\n            <a class="dropdown-toggle" data-toggle="dropdown">\r\n                <i class="hpe-icon hpe-notification"></i> <span class="label label-primary" ng-show="vm.notificationCount > 0"\r\n                    ng-bind="vm.notificationCount"></span>\r\n            </a>\r\n            <ul class="dropdown-menu">\r\n                <li ng-show="vm.notificationCount === 0">\r\n                    <p class="no-notifications-dropdown"><span class="hpe-icon hpe-notification m-r-sm"></span> No Notifications</p>\r\n                </li>\r\n                <li ng-repeat="notification in vm.previousNotifications">\r\n                    <a class="dropdown-notification">\r\n                        <div class="notification-icon">\r\n                            <i class="hpe-icon hpe-fw text-muted" ng-class="notification.icon"></i>\r\n                        </div>\r\n                        <div class="notification-text">\r\n                            <span ng-bind="notification.text"></span>\r\n                        </div>\r\n                        <div class="notification-time">\r\n                            <span class="text-muted small" time-ago="notification.date"></span>\r\n                        </div>\r\n                    </a>\r\n                </li>\r\n                <li>\r\n                    <div class="dropdown-notification-options">\r\n                        <a href="" class="hyperlink text-primary" ng-show="vm.notificationCount > 0" side-modal-window="vm.notificationModalOptions">View all alerts</a>\r\n                        <div class="hide-notifications">\r\n                            <checkbox ng-model="vm.hideNotifications" name="hide-notifications">Hide notifications</checkbox>\r\n                        </div>\r\n                    </div>\r\n                </li>\r\n            </ul>\r\n        </li>\r\n        <li class="dropdown">\r\n            <a class="dropdown-toggle">\r\n                <i class="hpe-icon hpe-actions"></i>\r\n            </a>\r\n        </li>\r\n    </ul>\r\n</div>\r\n\r\n<p>Use the button below to trigger a notification. This will update the notifications shown in the dropdown.</p>\r\n\r\n<button type="button" class="btn button-primary m-t-sm" ng-click="vm.showNextNotification()">Show Notification</button>\r\n'},function(e,t){e.exports="angular.module('app').controller('NotificationDropdownDemoModalCtrl', NotificationDropdownDemoModalCtrl);\r\n\r\nNotificationDropdownDemoModalCtrl.$inject = ['$q', '$scope', 'safeTimeout', 'timeAgoService']\r\n\r\nfunction NotificationDropdownDemoModalCtrl($q, $scope, safeTimeout, timeAgoService) {\r\n    var vm = this;\r\n\r\n    //create safe timeout instance\r\n    var safeTimeoutInstance = safeTimeout.create($scope);\r\n\r\n    vm.itemTemplateUrl = 'notification.html';\r\n\r\n    vm.getPage = function (pageNumber, pageSize) {\r\n        //return promise to simulate loading from a server\r\n        var defer = $q.defer();\r\n\r\n        safeTimeoutInstance.timeout(function () {\r\n\r\n            //generate some fake notifications here\r\n            var notifications = [];\r\n\r\n            //show a maximimum of 10 pages\r\n            if (pageNumber >= 10) {\r\n                defer.resolve([]);\r\n                return;\r\n            }\r\n\r\n            for (var i = 0; i < pageSize; i++) {\r\n                notifications.push(generateNotification(pageNumber, i));\r\n            }\r\n\r\n            defer.resolve(notifications);\r\n        }, 500);\r\n\r\n        return defer.promise;\r\n    };\r\n\r\n    function generateNotification(pageNumber, index) {\r\n\r\n        var type = Math.floor(Math.random() * 5);\r\n\r\n        var icon, text;\r\n\r\n        switch (type) {\r\n            case 0:\r\n                icon = 'hpe-user';\r\n                text = 'Add new custodians (' + (Math.floor(Math.random() * 25) + 1) + ') submitted';\r\n                break;\r\n            case 1:\r\n                icon = 'hpe-alert';\r\n                text = 'Export ' + chance.name() + ' completed with ' + (Math.floor(Math.random() * 5) + 1) + ' errors';\r\n                break;\r\n            case 2:\r\n                icon = 'hpe-archive';\r\n                text = 'Export ' + chance.name() + ' submitted';\r\n                break;\r\n            case 3:\r\n                icon = 'hpe-checkmark';\r\n                text = 'Add new custodians (' + (Math.floor(Math.random() * 25) + 1) + ') completed';\r\n                break;\r\n            case 4:\r\n                icon = 'hpe-checkmark';\r\n                text = 'Export ' + chance.name() + ' completed';\r\n                break;\r\n        }\r\n\r\n        //units that represent time periods in milliseconds\r\n        var timeUnits = {\r\n            second: 1000,\r\n            minute: 60000,\r\n            hour: 3600000,\r\n            day: 86400000,\r\n            week: 604800000,\r\n            month: 2419200000,\r\n            year: 31536000000\r\n        };\r\n\r\n        //get the current time in milliseconds\r\n        var now = new Date().getTime();\r\n        var pastTime, idx = index + 1;\r\n\r\n        //emulate a point in time in the past based on the pageNumber and index\r\n        if (pageNumber === 0) pastTime = new Date(now - (timeUnits.second * idx));\r\n        else if (pageNumber === 1) pastTime = new Date(now - (timeUnits.minute * idx));\r\n        else if (pageNumber === 2) pastTime = new Date(now - (timeUnits.hour * idx));\r\n        else if (pageNumber === 3) pastTime = new Date(now - (timeUnits.day * Math.ceil(idx / 3)));\r\n        else if (pageNumber === 4) pastTime = new Date(now - (timeUnits.week * Math.ceil(idx / 5)));\r\n        else if (pageNumber === 5) pastTime = new Date(now - (timeUnits.month * Math.ceil(idx / 1.7)));\r\n        else pastTime = new Date(now - timeUnits.year);\r\n\r\n        //generate string based on how long ago it was\r\n        var date = timeAgoService.timeSinceNow(pastTime);\r\n\r\n        return {\r\n            icon: icon,\r\n            text: text,\r\n            date: date\r\n        };\r\n    }\r\n}"},function(e,t){e.exports=".notification-modal {\r\n    width: 340px;\r\n}\r\n\r\n.notification-scroll-container {\r\n    height: 100%;\r\n}\r\n\r\n.inset-scroll {\r\n  overflow: auto;\r\n  height: 100%; \r\n}\r\n\r\n.notification-header, \r\n.notification-icon-header {\r\n  position: relative;\r\n  width: 100%;\r\n  height: 57px;\r\n  box-shadow: 0px 5px 5px -2px #c3c3c3;\r\n  padding: 16px 0 10px 20px;\r\n  font-size: 15px;\r\n  color: #fff;\r\n}\r\n\r\n.notification-header {\r\n  margin-bottom: 15px;\r\n  background-color: #333;\r\n}\r\n\r\n.notification-icon-header {\r\n  margin-top: -15px;\r\n  background-color: #2a2a2a;\r\n}\r\n\r\n.notification-header .breadcrumb {\r\n  display: inline-block;\r\n  font-size: 15px;\r\n  margin-top: 2px;\r\n}\r\n\r\n.notification-header .breadcrumb > li:after {\r\n  content: none;\r\n}\r\n\r\n.notification-header .breadcrumb > li i {\r\n  transform: rotate(90deg);\r\n  font-size: 11px;\r\n  vertical-align: middle;\r\n  padding: 9px 5px 5px 3px;\r\n  display: inline-block;\r\n  opacity: 0.8;\r\n}\r\n.notification-header .breadcrumb > li i.hpe-more {\r\n  transform: none;\r\n}\r\n\r\n.notification-header .nav-buttons, .notification-icon-header .nav-buttons {\r\n  position: absolute;\r\n  top: 8px;\r\n  right: 5px;\r\n  list-style-type: none;\r\n  bottom: 8px;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\n.notification-header .nav-buttons .dropdown, .notification-icon-header .nav-buttons .dropdown {\r\n  position: relative;\r\n  display: inline-block;\r\n  width: 40px;\r\n  color: #333;\r\n  cursor: pointer;\r\n}\r\n\r\n.notification-header .nav-buttons .dropdown:hover,\r\n.notification-header .nav-buttons .dropdown.open,\r\n.notification-icon-header .nav-buttons .dropdown:hover,\r\n.notification-icon-header .nav-buttons .dropdown.open {\r\n  background-color: #4d4d4d;\r\n}\r\n\r\n.notification-header .nav-buttons .dropdown .dropdown-toggle,\r\n.notification-icon-header .nav-buttons .dropdown .dropdown-toggle {\r\n  display: inline-block;\r\n  padding: 10px;\r\n  color: #fff;\r\n}\r\n\r\n.notification-header .nav-buttons .dropdown .dropdown-menu,\r\n.notification-icon-header .nav-buttons .dropdown .dropdown-menu {\r\n  width: 310px;\r\n  color: #666;\r\n  right: 0;\r\n  left: auto;\r\n}\r\n\r\n.notification-header .heading {\r\n  display: inline-block;\r\n  font-size: 15px;\r\n}\r\n\r\n/*\r\n  Notification Dropdown Example\r\n*/\r\n\r\n.dropdown-notification {\r\n  display: table !important;\r\n  width: 100%;\r\n  min-height: 40px;\r\n  font-size: 16px;\r\n  padding: 10px !important;\r\n  margin: 0 !important;\r\n  border-bottom: 1px solid #e5e5e5;\r\n  border-bottom-left-radius: 0 !important;\r\n  border-bottom-right-radius: 0 !important;\r\n}\r\n\r\n.dropdown-notification .notification-icon {\r\n  display: table-cell;\r\n  width: 30px;\r\n  padding-right: 10px;\r\n  text-align: center;\r\n  vertical-align: middle;\r\n  font-size: 22px;\r\n  color: #888;\r\n}\r\n\r\n.dropdown-notification .notification-text {\r\n  display: table-cell;\r\n  vertical-align: middle;\r\n  color: #888;\r\n  font-size: 17px;\r\n}\r\n\r\n.dropdown-notification .notification-text span,\r\n.dropdown-notification .notification-time span {\r\n  white-space: normal;\r\n}\r\n\r\n.dropdown-notification  .notification-time {\r\n  display: table-cell;\r\n  width: 90px;\r\n  text-align: right;\r\n  vertical-align: middle;\r\n}\r\n\r\n.no-notifications-dropdown {\r\n  height: 47px;\r\n  margin: 0;\r\n  text-align: center;\r\n  line-height: 47px;\r\n  color: #888;\r\n  border-bottom: 1px solid #e5e5e5;\r\n}\r\n\r\n.dropdown-notification-options {\r\n  height: 40px;\r\n  font-size: 17px;\r\n  padding: 6px 10px 10px;\r\n  cursor: default;\r\n}\r\n\r\n.dropdown-notification-options .hyperlink {\r\n  padding: 0 !important;\r\n}\r\n\r\n.dropdown-notification-options .hide-notifications {\r\n  display: inline-block;\r\n  float: right;\r\n  font-size: 14px;\r\n  color: #888888;\r\n}\r\n\r\n.dropdown-notification-options .hide-notifications span {\r\n  display: inline-block;\r\n  padding-top: 0px;\r\n  height: 23px;\r\n  line-height: 23px;\r\n  vertical-align: bottom;\r\n}"},function(e,t){e.exports='angular.module(\'app\').controller(\'NotificationListDemoCtrl\', NotificationListDemoCtrl);\r\n\r\nfunction NotificationListDemoCtrl() {\r\n    var vm = this;\r\n\r\n    vm.notificationModalOptions = {\r\n        title: "Alerts",\r\n        main: "modalLayout.html",\r\n        modalColumns: "notification-modal",\r\n        affixHeader: true\r\n    };\r\n}\r\n\r\n'},function(e,t){e.exports='<button type="button" class="btn button-secondary" side-modal-window="vm.notificationModalOptions">Show Notification History</button>\r\n'},function(e,t){e.exports="angular.module('app').controller('NotificationListDemoModalCtrl', NotificationListDemoModalCtrl);\r\n\r\nNotificationListDemoModalCtrl.$inject = ['$q', '$scope', 'safeTimeout', 'timeAgoService']\r\n\r\nfunction NotificationListDemoModalCtrl($q, $scope, safeTimeout, timeAgoService) {\r\n    var vm = this;\r\n\r\n    //create safe timeout instance\r\n    var safeTimeoutInstance = safeTimeout.create($scope);\r\n\r\n    vm.itemTemplateUrl = 'notification.html';\r\n\r\n    vm.getPage = function (pageNumber, pageSize) {\r\n        //return promise to simulate loading from a server\r\n        var defer = $q.defer();\r\n\r\n        safeTimeoutInstance.timeout(function () {\r\n\r\n            //generate some fake notifications here\r\n            var notifications = [];\r\n\r\n            //show a maximimum of 10 pages\r\n            if (pageNumber >= 10) {\r\n                defer.resolve([]);\r\n                return;\r\n            }\r\n\r\n            for (var i = 0; i < pageSize; i++) {\r\n                notifications.push(generateNotification(pageNumber, i));\r\n            }\r\n\r\n            defer.resolve(notifications);\r\n        }, 500);\r\n\r\n        return defer.promise;\r\n    };\r\n\r\n    function generateNotification(pageNumber, index) {\r\n\r\n        var type = Math.floor(Math.random() * 5);\r\n\r\n        var icon, text;\r\n\r\n        switch (type) {\r\n            case 0:\r\n                icon = 'hpe-user';\r\n                text = 'Add new custodians (' + (Math.floor(Math.random() * 25) + 1) + ') submitted';\r\n                break;\r\n            case 1:\r\n                icon = 'hpe-alert';\r\n                text = 'Export ' + chance.name() + ' completed with ' + (Math.floor(Math.random() * 5) + 1) + ' errors';\r\n                break;\r\n            case 2:\r\n                icon = 'hpe-archive';\r\n                text = 'Export ' + chance.name() + ' submitted';\r\n                break;\r\n            case 3:\r\n                icon = 'hpe-checkmark';\r\n                text = 'Add new custodians (' + (Math.floor(Math.random() * 25) + 1) + ') completed';\r\n                break;\r\n            case 4:\r\n                icon = 'hpe-checkmark';\r\n                text = 'Export ' + chance.name() + ' completed';\r\n                break;\r\n        }\r\n\r\n        //units that represent time periods in milliseconds\r\n        var timeUnits = {\r\n            second: 1000,\r\n            minute: 60000,\r\n            hour: 3600000,\r\n            day: 86400000,\r\n            week: 604800000,\r\n            month: 2419200000,\r\n            year: 31536000000\r\n        };\r\n\r\n        //get the current time in milliseconds\r\n        var now = new Date().getTime();\r\n        var pastTime, idx = index + 1;\r\n\r\n        //emulate a point in time in the past based on the pageNumber and index\r\n        if (pageNumber === 0) pastTime = new Date(now - (timeUnits.second * idx));\r\n        else if (pageNumber === 1) pastTime = new Date(now - (timeUnits.minute * idx));\r\n        else if (pageNumber === 2) pastTime = new Date(now - (timeUnits.hour * idx));\r\n        else if (pageNumber === 3) pastTime = new Date(now - (timeUnits.day * Math.ceil(idx / 3)));\r\n        else if (pageNumber === 4) pastTime = new Date(now - (timeUnits.week * Math.ceil(idx / 5)));\r\n        else if (pageNumber === 5) pastTime = new Date(now - (timeUnits.month * Math.ceil(idx / 1.7)));\r\n        else pastTime = new Date(now - timeUnits.year);\r\n\r\n        //generate string based on how long ago it was\r\n        var date = timeAgoService.timeSinceNow(pastTime);\r\n\r\n        return {\r\n            icon: icon,\r\n            text: text,\r\n            date: date\r\n        };\r\n    }\r\n}"},function(e,t){e.exports='vm.notificationModalOptions = {\r\n    title: "Alerts",\r\n    main: "notificationHistory.html",\r\n    modalColumns: "notification-modal",\r\n    affixHeader: true\r\n};'},function(e,t){e.exports=".notification-modal {\r\n  width: 340px;\r\n}\r\n\r\n.notification-scroll-container {\r\n  height: 100%;\r\n}\r\n\r\n.notification-panel {\r\n  display: table;\r\n  border-top: 1px solid #E5E5E5;\r\n  padding: 6px 0;\r\n}\r\n\r\n.notification-panel .notification-panel-icon {\r\n  display: table-cell;\r\n  width: 20px;\r\n  padding-right: 15px;\r\n  text-align: center;\r\n  vertical-align: middle;\r\n  font-size: 22px;\r\n  color: #888;\r\n}\r\n\r\n.notification-panel .notification-panel-text {\r\n  display: table-cell;\r\n}\r\n\r\n.notification-panel .notification-panel-text .notification-text {\r\n  margin: 0;\r\n  color: #666666;\r\n  font-size: 16px;\r\n  line-height: 1.2em;\r\n}\r\n\r\n.notification-panel .notification-panel-timestamp {\r\n  display: table-cell;\r\n  width: 110px;\r\n  text-align: right;\r\n  vertical-align: middle;\r\n}\r\n\r\n.notification-panel .notification-panel-timestamp .notification-timestamp {\r\n  margin: 0;\r\n  color: #999;\r\n  font-size: 14px;\r\n  padding-right: 5px;\r\n}\r\n\r\n.inset-scroll {\r\n  overflow: auto;\r\n  height: 100%;\r\n}"},function(e,t){e.exports="angular.module(\"elements\").controller(\"NotificationCtrl\", NotificationCtrl);\r\n\r\nNotificationCtrl.$inject = ['notificationService', '$colorService'];\r\n\r\nfunction NotificationCtrl(notificationService, $colorService) {\r\n    var vm = this;\r\n\r\n    vm.showNotification = function () {\r\n\r\n        var options = {\r\n            icon: 'hpe-chat',\r\n            title: 'Messages Received',\r\n            text: 'You have 16 messages',\r\n            subtitle: new Date().toLocaleDateString() + ' ' + new Date().toLocaleTimeString(),\r\n            duration: 4000,\r\n            backgroundColor: $colorService.getColor('primary').toHex()\r\n        };\r\n\r\n        notificationService.showNotification(options);\r\n    };\r\n\r\n    vm.dismissAll = function () {\r\n        notificationService.dismissAllNotifications();\r\n    };\r\n}"},function(e,t){e.exports="angular.module('app').controller('NotificationsDemoCtrl', NotificationsDemoCtrl);\r\n\r\nNotificationsDemoCtrl.$inject = ['$colorService', 'notificationService'];\r\n\r\nfunction NotificationsDemoCtrl($colorService, notificationService) {\r\n    var vm = this;\r\n\r\n    vm.notificationColors = {\r\n        primary: $colorService.getColor('primary').toHex(),\r\n        accent: $colorService.getColor('accent').toHex(),\r\n        chart4: $colorService.getColor('chart4').toHex(),\r\n        chart5: $colorService.getColor('chart5').toHex(),\r\n        ok: $colorService.getColor('ok').toHex(),\r\n        warning: $colorService.getColor('warning').toHex(),\r\n        critical: $colorService.getColor('critical').toHex()\r\n    };\r\n\r\n    vm.setColor = function (color) {\r\n        vm.backgroundColor = vm.notificationColors[color];\r\n    };\r\n\r\n    vm.showNotification = function () {\r\n\r\n        var options = {\r\n            icon: vm.icon,\r\n            title: vm.title,\r\n            text: vm.text,\r\n            subtitle: vm.subtitle,\r\n            duration: vm.duration,\r\n            backgroundColor: vm.backgroundColor\r\n        };\r\n\r\n        //ensure notifications are visible - next example allows hiding them\r\n        if (vm.hideNotifications === true) {\r\n            vm.hideNotifications = false;\r\n            notificationService.setNotificationVisibility(true);\r\n        }\r\n\r\n        notificationService.showNotification(options);\r\n    };\r\n\r\n    vm.dismissAll = function () {\r\n        notificationService.dismissAllNotifications();\r\n    };\r\n\r\n    vm.setDefaultValues = function () {\r\n        vm.icon = 'hpe-chat';\r\n        vm.title = 'Messages Received';\r\n        vm.text = 'You have 16 messages';\r\n        vm.subtitle = new Date().toLocaleDateString() + ' ' + new Date().toLocaleTimeString();\r\n        vm.duration = 4000;\r\n        vm.backgroundColor = vm.notificationColors.primary;\r\n    };\r\n\r\n    //set initial default values\r\n    vm.setDefaultValues();\r\n}\r\n\r\n"},function(e,t){e.exports='<button type="button" class="btn button-primary" ng-click="vm.showNotification()">Show Notification</button>\r\n<button type="button" class="btn button-secondary" ng-click="vm.dismissAll()">Dismiss Notifications</button>'},function(e,t){e.exports='<button type="button" class="btn button-primary m-r-sm" ng-click="vm.showNotification()">Show Notification</button>\r\n<button type="button" class="btn button-secondary m-r-sm" ng-click="vm.dismissAll()">Dismiss Notifications</button>\r\n<button type="button" class="btn button-secondary" ng-click="vm.setDefaultValues()">Default Values</button>\r\n<hr />\r\n<h4 class="p-b-sm">Customize the Notification</h4>\r\n<div class="row">\r\n    <div class="col-md-6">\r\n        <div class="form-group">\r\n            <label class="form-label">Notification Title</label>\r\n            <input type="text" placeholder="Enter title" class="form-control" ng-model="vm.title">\r\n        </div>\r\n        <div class="form-group">\r\n            <label class="form-label">Notification Text</label>\r\n            <input type="text" placeholder="Enter text" class="form-control" ng-model="vm.text">\r\n        </div>\r\n        <div class="form-group">\r\n            <label class="form-label">Notification Subtitle</label>\r\n            <input type="text" placeholder="Enter subtitle" class="form-control" ng-model="vm.subtitle">\r\n        </div>\r\n    </div>\r\n\r\n    <div class="col-md-6">\r\n        <div class="form-group">\r\n            <label class="form-label">Icon</label>\r\n            <input type="text" placeholder="Enter icon (eg. hpe-chat)" class="form-control" ng-model="vm.icon">\r\n        </div>\r\n        <div class="form-group">\r\n            <label class="form-label">Duration (in milliseconds)</label>\r\n            <input type="number" placeholder="Enter duration (milliseconds)" class="form-control" ng-model="vm.duration">\r\n        </div>\r\n        <div class="form-group">\r\n            <label class="form-label">Background Color</label>\r\n            <div class="input-group m-b-sm">\r\n                <input type="text" placeholder="Enter color" class="form-control" ng-model="vm.backgroundColor" text-string-color>\r\n                <span class="input-group-addon color-display" ng-style="{ \'background-color\': vm.backgroundColor }">&nbsp;</span>\r\n            </div>\r\n            <small class="text-muted">Recommended Colors</small>\r\n            <div class="color-palette">\r\n                <div class="color-box primary-color" ng-click="vm.setColor(\'primary\')"></div>\r\n                <div class="color-box accent-color" ng-click="vm.setColor(\'accent\')"></div>\r\n                <div class="color-box chart4-color" ng-click="vm.setColor(\'chart4\')"></div>\r\n                <div class="color-box chart5-color" ng-click="vm.setColor(\'chart5\')"></div>\r\n                <div class="color-box ok-color" ng-click="vm.setColor(\'ok\')"></div>\r\n                <div class="color-box warning-color" ng-click="vm.setColor(\'warning\')"></div>\r\n                <div class="color-box critical-color" ng-click="vm.setColor(\'critical\')"></div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>'},function(e,t){e.exports=".color-palette {\r\n  padding-top: 5px;\r\n}\r\n\r\n.color-palette .color-box {\r\n  display: inline-block;\r\n  width: 25px;\r\n  height: 25px;\r\n  margin: 0 3px;\r\n  border: 2px solid rgba(0, 0, 0, 0.3);\r\n  cursor: pointer;\r\n}\r\n\r\n.color-display {\r\n  border: 2px solid rgba(0, 0, 0, 0.3) !important;\r\n  transition: background-color 0.3s linear;\r\n}"},function(e,t){e.exports="angular.module('app').controller('CollapsiblePanelsDemoCtrl', CollapsiblePanelsDemoCtrl);\r\n\r\nCollapsiblePanelsDemoCtrl.$inject = ['$timeout'];\r\n\r\nfunction CollapsiblePanelsDemoCtrl($timeout) {\r\n    var vm = this;\r\n\r\n    vm.groups = [{\r\n        title: 'Collapsible Panel 1',\r\n        content: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vestibulum tincidunt est vitae ultrices accumsan. Aliquam ornare lacus adipiscing, posuere lectus et, fringilla augue.',\r\n        isOpen: 'true'\r\n\r\n    }, {\r\n        title: 'Collapsible Panel 2',\r\n        content: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vestibulum tincidunt est vitae ultrices accumsan. Aliquam ornare lacus adipiscing, posuere lectus et, fringilla augue.',\r\n        isOpen: 'false'\r\n    }, {\r\n        title: 'Collapsible Panel 3',\r\n        content: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vestibulum tincidunt est vitae ultrices accumsan. Aliquam ornare lacus adipiscing, posuere lectus et, fringilla augue.',\r\n        isOpen: 'false'\r\n    }];\r\n\r\n    $timeout(function () {\r\n        $(\".panel-heading[data-toggle='collapse']\").each(function (index, element) {\r\n            $(element).keypress(function (e) {\r\n                if (e.which === 13 || e.which === 32) {\r\n                    $(element).trigger(\"click\");\r\n                }\r\n            });\r\n        });\r\n    }, 200);\r\n}"},function(e,t){e.exports='<accordion close-others="true">\r\n    <accordion-group is-open="group.isOpen" heading="{{group.title}}" ng-repeat="group in vm.groups">\r\n        <span ng-bind="group.content"></span>\r\n    </accordion-group>\r\n</accordion>'},function(e,t){e.exports='angular.module(\'app\').controller(\'ItemDisplayPanelDemoCtrl\', ItemDisplayPanelDemoCtrl);\r\n\r\nItemDisplayPanelDemoCtrl.$inject = [\'$scope\'];\r\n\r\nfunction ItemDisplayPanelDemoCtrl($scope) {\r\n    var vm = this;\r\n\r\n    vm.items = [{\r\n        "name": chance.name(),\r\n        "dateString": "3 Oct 2015",\r\n        "document": "Document 4.ppt",\r\n        "extension": ".ppt",\r\n        "storage": "95.25",\r\n        "active": false,\r\n        "panel": {\r\n            "scope": $scope.$new(),\r\n            "title": "Site Detail - UX Aspects (PPT)",\r\n            "main": "modalPPT.html",\r\n            "footer": "modalFooter.html",\r\n            "modalColumns": "col-lg-6 col-md-7 col-sm-9 col-xs-10",\r\n            "top": 50\r\n        }\r\n    },\r\n    //...\r\n    ];\r\n}'},function(e,t){e.exports='angular.module(\'app\').controller(\'ItemDisplayPanelDemoCtrl\', ItemDisplayPanelDemoCtrl);\r\n\r\nItemDisplayPanelDemoCtrl.$inject = [\'$scope\'];\r\n\r\nfunction ItemDisplayPanelDemoCtrl($scope) {\r\n    var vm = this;\r\n\r\n    vm.items = [{\r\n        "name": chance.name(),\r\n        "dateString": "3 Oct 2015",\r\n        "document": "Document 4.ppt",\r\n        "extension": ".ppt",\r\n        "storage": "95.25",\r\n        "active": false,\r\n        "panel": {\r\n            "scope": $scope.$new(),\r\n            "title": "Site Detail - UX Aspects (PPT)",\r\n            "main": "modalPPT.html",\r\n            "footer": "modalFooter.html",\r\n            "modalColumns": "col-lg-6 col-md-7 col-sm-9 col-xs-10"\r\n        }\r\n    }, {\r\n        "name": chance.name(),\r\n        "dateString": "3 Oct 2015",\r\n        "document": "Document 9.pdf",\r\n        "extension": ".pdf",\r\n        "storage": "15.25",\r\n        "active": true,\r\n        "panel": {\r\n            "scope": $scope.$new(),\r\n            "title": "Site Detail - UX Aspects (PDF)",\r\n            "main": "modalPDF.html",\r\n            "footer": "modalFooter.html",\r\n            "modalColumns": "col-lg-6 col-md-7 col-sm-9 col-xs-10"\r\n        }\r\n    }, {\r\n        "name": chance.name(),\r\n        "dateString": "3 Oct 2015",\r\n        "document": "Document 14.doc",\r\n        "extension": ".doc",\r\n        "storage": "25.25",\r\n        "active": false,\r\n        "panel": {\r\n            "scope": $scope.$new(),\r\n            "title": "Site Detail - UX Aspects (DOC)",\r\n            "main": "modalDOC.html",\r\n            "footer": "modalFooter.html",\r\n            "modalColumns": "col-lg-6 col-md-7 col-sm-9 col-xs-10"\r\n        }\r\n    }, {\r\n        "name": chance.name(),\r\n        "dateString": "3 Oct 2015",\r\n        "document": "Document 29.pdf",\r\n        "extension": ".pdf",\r\n        "storage": "15.25",\r\n        "active": true,\r\n        "panel": {\r\n            "scope": $scope.$new(),\r\n            "title": "Site Detail - UX Aspects (PDF)",\r\n            "main": "modalPDF.html",\r\n            "footer": "modalFooter.html",\r\n            "modalColumns": "col-lg-6 col-md-7 col-sm-9 col-xs-10"\r\n        }\r\n    }, {\r\n        "name": chance.name(),\r\n        "dateString": "3 Oct 2015",\r\n        "document": "Document 34.pdf",\r\n        "extension": ".pdf",\r\n        "storage": "15.25",\r\n        "active": false,\r\n        "panel": {\r\n            "scope": $scope.$new(),\r\n            "title": "Site Detail - UX Aspects (PDF)",\r\n            "main": "modalPDF.html",\r\n            "footer": "modalFooter.html",\r\n            "modalColumns": "col-lg-6 col-md-7 col-sm-9 col-xs-10"\r\n        }\r\n    }];\r\n}'},function(e,t){e.exports='<div class="demo-attributes table-responsive">\r\n    <table class="table table-hover">\r\n        <thead>\r\n            <tr class="table-header-dark">\r\n                <th class="listview-document-th"></th>\r\n                <th>NAME</th>\r\n                <th>AUTHOR</th>\r\n                <th>DATE MODIFIED</th>\r\n                <th>STORAGE (GB)</th>\r\n                <th class="text-center">STATUS</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr class="clickable single-select" ng-repeat="item in ::vm.items" display-panel-item="item.panel" auto-index="{{ { skip:3, offset:1, base:1 } }}"\r\n                shadow="true">\r\n                <td class="text-center">\r\n                    <div class="listview-page-icon"></div>\r\n                </td>\r\n                <td class="listview-text-emphasis" ng-bind="::item.document"></td>\r\n                <td>\r\n                    <div ng-bind="::item.name"></div>\r\n                </td>\r\n                <td ng-bind="::item.dateString"></td>\r\n                <td class="spark-chart-col-width2">\r\n                    <spark type="\'spark-chart2\'" value="item.storage" fillheight="3" inline-label="item.storage" top="13"></spark>\r\n                </td>\r\n                <td class="text-center item-actions">\r\n                    <div class="hpe-icon" ng-class="{\'text-secondary\': item.active, \'hpe-checkmark\':item.active}"></div>\r\n                    <list-hover-actions>\r\n                        <list-hover-action name="Share" icon="hpe-share"></list-hover-action>\r\n                        <list-hover-action name="View Details" icon="hpe-view"></list-hover-action>\r\n                        <list-hover-action name="Delete" icon="hpe-trash"></list-hover-action>\r\n                    </list-hover-actions>\r\n                </td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n</div>'},function(e,t){e.exports=".preview-display {\r\n  padding-top: 15px;\r\n  padding-left: 20px;\r\n  padding-right: 20px;\r\n}"},function(e,t){e.exports="angular.module('app').controller('ModalInsetPanelDemoCtrl', ModalInsetPanelDemoCtrl);\r\n\r\nModalInsetPanelDemoCtrl.$inject = ['$modal'];\r\n\r\nfunction ModalInsetPanelDemoCtrl($modal) {\r\n    var vm = this;\r\n\r\n    vm.openModal = function () {\r\n\r\n        var modalInstance = $modal.open({\r\n            animation: false,\r\n            templateUrl: 'modalLayout.html',\r\n            controller: 'ModalInsetPanelDemoModalCtrl',\r\n            controllerAs: 'vm',\r\n            size: 'md',\r\n            keyboard: 'true'\r\n        });\r\n\r\n        modalInstance.result.then(function () {\r\n            //result passed into closed function;\r\n        });\r\n    };\r\n}"},function(e,t){e.exports='<button type="button" class="btn button-primary" ng-click="vm.openModal()">\r\n    <span class="hpe-icon hpe-deployment" aria-hidden="true"></span>&nbsp;Launch Modal with Inset Panel\r\n</button>'},function(e,t){e.exports="angular.module('app').controller('ModalInsetPanelDemoModalCtrl', ModalInsetPanelDemoModalCtrl);\r\n\r\nModalInsetPanelDemoModalCtrl.$inject = ['$modalInstance'];\r\n\r\nfunction ModalInsetPanelDemoModalCtrl($modalInstance) {\r\n    var vm = this;\r\n\r\n    // Inset Panel Properties\r\n    vm.showPanel = false;\r\n    vm.panelWidth = 300;\r\n    vm.panelSide = 'right';\r\n\r\n    vm.scrollBarConfig = {\r\n        autoReinitialise: true,\r\n        enableKeyboardNavigation: true,\r\n        showOnlyOnHover: true\r\n    };\r\n\r\n    // Populate users list with dummy data\r\n    vm.users = [];\r\n\r\n    for (var i = 0; i < 20; i++) {\r\n        var fileCount = Math.floor(Math.random() * 10000);\r\n\r\n        vm.users.push({\r\n            name: chance.name(),\r\n            percentComplete: ((fileCount / 10000) * 100),\r\n            label: '<span class=\"spark-label-1 modal-panel-detail-text\">' + fileCount + ' Documents</span>'\r\n        });\r\n    }\r\n\r\n    vm.ok = function () {\r\n        $modalInstance.close(\"true\");\r\n    };\r\n\r\n    vm.cancel = function () {\r\n        $modalInstance.dismiss(\"cancel\");\r\n    };\r\n\r\n    vm.showInsetLeft = function () {\r\n        vm.panelSide = 'left';\r\n        vm.showPanel = true;\r\n    };\r\n\r\n    vm.showInsetRight = function () {\r\n        vm.panelSide = 'right';\r\n        vm.showPanel = true;\r\n    };\r\n}"},function(e,t){e.exports=".modal-inset {\r\n  height: calc(100% - 10px);\r\n  margin: 5px;\r\n}\r\n\r\n.modal-inset .scroll-container {\r\n  height: 100%;\r\n}\r\n\r\n.user-scroll-container {\r\n  margin: 0 15px;\r\n}\r\n\r\n.disk-space-list {\r\n  list-style-type: none;\r\n  padding: 0;\r\n}\r\n\r\n.disk-space-list-item .user-container {\r\n  display: table;\r\n  border-bottom: 1px solid #eee;\r\n  padding: 5px 0px;\r\n}\r\n\r\n.disk-space-list-item .user-container .icon-container {\r\n  display: table-cell;\r\n  vertical-align: middle;\r\n}\r\n\r\n.disk-space-list-item .user-container .user-info-container {\r\n  display: table-cell;\r\n  width: 100%;\r\n  padding-left: 10px;\r\n}\r\n\r\n.disk-space-list-item .user-container .spark-label-1 {\r\n    font-size: 11px;\r\n}"},function(e,t){e.exports='<div side-inset side-inset-width="30" side-inset-button-top="100px">\r\n  <div class="main-content wrapper-content" >\r\n    <!-- Main page content -->\r\n  </div>\r\n  <div class="side-inset">\r\n    <!-- Side Panel content -->\r\n  </div>\r\n</div>'},function(e,t){e.exports='<div side-inset side-inset-width="30" side-inset-button-top="100px">\r\n\r\n    <div class="main-content wrapper-content">\r\n        <p>\r\n            The Side Inset layout is a page pattern which provides an animated side panel for presenting additional information. The\r\n            side panel is hidden or shown using the toggle button. The side panel is inset in the page and not overlaid,\r\n            so the width of the main content area will be reduced to make space for the side panel.</p>\r\n\r\n        <p>To use the Side Inset layout, structure your page as follows:</p>\r\n\r\n        <ul>\r\n            <li>A wrapper <code>div</code> following the page heading, with the <code>side-inset</code> attribute directive set.\r\n                <ul>\r\n                    <li>A <code>div</code> containing the main page content, which needs to have the <code>main-content</code>\r\n                    class.</li>\r\n                    <li>A <code>div</code> containing the side panel, which needs to have the <code>side-inset</code> class.</li>\r\n                </ul>\r\n            </li>\r\n        </ul>\r\n\r\n        <p>The order of the child elements will determine the position of the side panel - if the <code>side-inset</code> div\r\n            is declared in the HTML before the <code>main-content</code>, then the side panel will display on the <em>left</em>\r\n            of the screen. To place the side panel on the <em>right</em> of the screen, declare it after the <code>main-content</code>\r\n            in the HTML.</p>\r\n\r\n        <p>On the wrapper element where the <code>side-inset</code> directive is declared, the following additional properties\r\n            can be configured:\r\n        </p>\r\n        <div class="demo-attributes table-responsive">\r\n            <table class="table m-t">\r\n                <tbody>\r\n                    <tr>\r\n                        <th>Name</th>\r\n                        <th>Type</th>\r\n                        <th>Binding</th>\r\n                        <th>Description</th>\r\n                        <th>Optional</th>\r\n                    </tr>\r\n                    <tr>\r\n                        <td class="attribute">side-inset-width</td>\r\n                        <td>number</td>\r\n                        <td>literal</td>\r\n                        <td>A value between 0 and 100, this is the percentage width of the parent element the expanded side inset\r\n                            panel will occupy (Default: 20).</td>\r\n                        <td>true</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td class="attribute">side-inset-button-top</td>\r\n                        <td>string</td>\r\n                        <td>literal</td>\r\n                        <td>A string that will be set as the <code>top</code> CSS position property of the toggle button, allowing\r\n                            its vertical placement to be configured (Default: \'0px\').</td>\r\n                        <td>true</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    </div>\r\n\r\n    <div class="side-inset">\r\n        <div class="side-inset-demo">\r\n            <div class="hpebox">\r\n                <div class="hpebox-title">\r\n                    <h4>Notifications</h4>\r\n                </div>\r\n                <div class="hpebox-content">\r\n                    <i class="hpe-icon hpe-chat hp-fw text-muted"></i> You have 16 messages\r\n                </div>\r\n            </div>\r\n\r\n            <div class="hpebox">\r\n                <div class="hpebox-title">\r\n                    <h4>Requests</h4>\r\n                </div>\r\n                <div class="hpebox-content">\r\n                    <i class="hpe-icon hpe-social-twitter hp-fw text-muted"></i> 3 New Followers\r\n                </div>\r\n            </div>\r\n\r\n            <div class="hpebox">\r\n                <div class="hpebox-title">\r\n                    <h4>System Status</h4>\r\n                </div>\r\n                <div class="hpebox-content">\r\n                    <i class="hpe-icon hpe-cloud hp-fw text-muted"></i> Server Rebooted\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</div>'},function(e,t){e.exports='<div class="side-inset">\r\n  <div class="side-inset-demo">\r\n    <div class="hpebox">\r\n      <div class="hpebox-title">\r\n        <h4>Notifications</h4>\r\n      </div>\r\n      <div class="hpebox-content">\r\n        <i class="hpe-icon hpe-chat hp-fw text-muted"></i> You have 16 messages\r\n      </div>\r\n    </div>\r\n    <!-- Etc. -->\r\n  </div>\r\n</div>'},function(e,t){e.exports=".side-inset-demo {\r\n    height: 400px;\r\n    padding: 15px;\r\n}"},function(e,t){e.exports='angular.module(\'app\').controller(\'PopoverDemoCtrl\', PopoverDemoCtrl);\r\n\r\nfunction PopoverDemoCtrl() {\r\n    var vm = this;\r\n\r\n    vm.senders = [{\r\n        name: "Simona Terrace",\r\n        title: "Equity Trader",\r\n        email: "simona.terrace@enron.com",\r\n        radioModel: 4\r\n    }];\r\n\r\n    vm.recipients = [\r\n        {\r\n            name: "Luke French",\r\n            email: "luke.french@pxc.com",\r\n            radioModel: 4\r\n        }, {\r\n            name: "Irene Beck",\r\n            email: "irene.beck@pxc.com",\r\n            radioModel: 4\r\n        }\r\n    ];\r\n\r\n    vm.radioOptions = {\r\n        option1: 1,\r\n        option2: 2,\r\n        option3: 3,\r\n        option4: 4\r\n    };\r\n}'},function(e,t){e.exports='<p popover-template="\'popoverLayout.html\'" popover-is-open="vm.isOpen" popover-placement="bottom"\r\n    popover-trigger="insideHover" popover-inside-delay="500" class="popover-example m-t-md"\r\n    popover-class="popover-example-class">\r\n    <span class="hpe-icon hpe-user-manager"></span>\r\n    <span ng-class="{ \'popover-example-highlight\': vm.isOpen }">\r\n            Simona Terrance to \r\n            <span class="hpe-icon hpe-user"></span> luke.french@pxc.com, irene.beck@pxc.com\r\n    </span>\r\n</p>'},function(e,t){e.exports=".popover-example {\r\n    display: inline-block;\r\n    margin-left: 20px;\r\n}\r\n\r\n.popover-example .popover-example-highlight {\r\n    background-color: rgba(123, 99, 163, 0.3);\r\n    color: black;\r\n}\r\n\r\n.popover-example-class {\r\n    min-width: 400px;\r\n    padding: 0px;\r\n    border-radius: 0px;\r\n    box-shadow: 1px 2px 8px -2px #999999;\r\n}\r\n\r\n.popover-example-class.bottom {\r\n    margin-top: 0px;\r\n}\r\n\r\n.popover-example-class > .arrow {\r\n    display: none;\r\n}\r\n\r\n.popover-example-class .popover-content {\r\n    padding: 0px;\r\n}\r\n\r\n.popover-email-example {\r\n    padding: 20px 10px 15px 20px;\r\n}\r\n\r\n.popover-email-example .hpe-more {\r\n    right: 20px;\r\n    position: absolute;\r\n    margin-top: 5px;\r\n    transition: all 0.1s;\r\n}\r\n\r\n.popover-email-example .hpe-more:hover {\r\n    color: #3f3f3f;\r\n    cursor: pointer;\r\n}\r\n\r\n.popover-recipient {\r\n    display: flex;\r\n}\r\n\r\n.popover-recipient-to-from {\r\n    opacity: 0.9;\r\n    width: 60px;\r\n}\r\n\r\n.popover-person-container {\r\n    display: flex;\r\n}\r\n\r\n.popover-person-container p {\r\n    margin-bottom: -5px;\r\n}\r\n\r\n.popover-person-details-container {\r\n    margin-left: 12px;\r\n}\r\n\r\n.popover-person-name {\r\n    color: black;\r\n}\r\n\r\n.popover-person-search {\r\n    display: inline-block;\r\n    opacity: 0.9;\r\n    margin-left: 5px;\r\n    font-size: 11px;\r\n}\r\n\r\n.popover-person-container .hpe-user, .popover-person-container .hpe-user-manager {\r\n    color: #999;\r\n    margin-top: 8px;\r\n}\r\n\r\n.popover-footer {\r\n    height: 40px;\r\n    background-color: #D6DDE5;\r\n    padding: 0px 10px;\r\n    align-items: center;\r\n}\r\n\r\n.popover-footer .icon-left {\r\n    position: absolute; \r\n    left: 20px;\r\n    opacity: 0.8;\r\n    margin-top: 7px;\r\n}\r\n\r\n.popover-footer .icon-right {\r\n    position: absolute; \r\n    right: 25px;\r\n    opacity: 0.8;\r\n    margin-top: 7px;\r\n}\r\n\r\n.radio-popover {\r\n    padding: 20px;\r\n    width: 200px;\r\n    border-radius: 1px;\r\n    box-shadow: 1px 2px 8px -5px #999999;\r\n}\r\n\r\n.radio-popover label {\r\n    display: block;\r\n}"},function(e,t){e.exports="angular.module('app').controller('ProgressBarDemoCtrl', ProgressBarDemoCtrl);\r\n\r\nfunction ProgressBarDemoCtrl() {\r\n    var vm = this;\r\n\r\n    vm.percentComplete = 15;\r\n\r\n    vm.random = function () {\r\n        vm.percentComplete = Math.floor((Math.random() * 100) + 1);\r\n    };\r\n}"},function(e,t){e.exports='<progressbar value="vm.percentComplete" type="accent" max="100">\r\n    <span ng-bind="vm.percentComplete+\'%\'"></span>\r\n</progressbar>\r\n<button type="button" class="btn btn-primary" ng-click="vm.random()">Random</button>'},function(e,t){e.exports="angular.module('app').controller('CustomScrollbarDemoCtrl', CustomScrollbarDemoCtrl);\r\n\r\nfunction CustomScrollbarDemoCtrl() {\r\n    var vm = this;\r\n\r\n    vm.scrollBarConfig = {\r\n        resizeSensor: true,\r\n        showOnlyOnHover: false,\r\n        enableKeyboardNavigation: true,\r\n        isScrollableH: false,\r\n        scrollMargin: 5\r\n    };\r\n}"},function(e,t){e.exports='<div class="scroll-example" scroll-config="vm.scrollBarConfig"\r\n    scroll-pane scroll-name="uxd-scroll-example">\r\n\r\n    <h4>Custom scrollbar example</h4>\r\n    <p>Lorem ipsum dolor sit amet...</p>\r\n\r\n</div>'},function(e,t){e.exports='<div class="scroll-example" scroll-config="vm.scrollBarConfig" scroll-pane scroll-name="uxd-scroll-example">\r\n    <h4>Custom scrollbar example</h4>\r\n    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec in ligula id sem tristique ultrices eget id neque. Duis\r\n        enim turpis, tempus at accumsan vitae, lobortis id sapien. Pellentesque nec orci mi, in pharetra ligula. Nulla facilisi.\r\n        Nulla facilisi. Mauris convallis venenatis massa, quis consectetur felis ornare quis. Sed aliquet nunc ac ante molestie\r\n        ultricies. Nam pulvinar ultricies bibendum. Vivamus diam leo, faucibus et vehicula eu, molestie sit amet dui. Proin\r\n        nec orci et elit semper ultrices. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus\r\n        mus. Sed quis urna mi, ac dignissim mauris. Quisque mollis ornare mauris, sed laoreet diam malesuada quis. Proin\r\n        vel elementum ante. Donec hendrerit arcu ac odio tincidunt posuere. Vestibulum nec risus eu lacus semper viverra.\r\n    </p>\r\n    <p>\r\n        Vestibulum dictum consectetur magna eu egestas. Praesent molestie dapibus erat, sit amet sodales lectus congue ut. Nam adipiscing,\r\n        tortor ac blandit egestas, lorem ligula posuere ipsum, nec faucibus nisl enim eu purus. Quisque bibendum diam quis\r\n        nunc eleifend at molestie libero tincidunt. Quisque tincidunt sapien a sapien pellentesque consequat. Mauris adipiscing\r\n        venenatis augue ut tempor. Donec auctor mattis quam quis aliquam. Nullam ultrices erat in dolor pharetra bibendum.\r\n        Suspendisse eget odio ut libero imperdiet rhoncus. Curabitur aliquet, ipsum sit amet aliquet varius, est urna ullamcorper\r\n        magna, sed eleifend libero nunc non erat. Vivamus semper turpis ac turpis volutpat non cursus velit aliquam. Fusce\r\n        id tortor id sapien porta egestas. Nulla venenatis luctus libero et suscipit. Sed sed purus risus. Donec auctor,\r\n        leo nec eleifend vehicula, lacus felis sollicitudin est, vitae lacinia lectus urna nec libero. Aliquam pellentesque,\r\n        arcu condimentum pharetra vestibulum, lectus felis malesuada felis, vel fringilla dolor dui tempus nisi. In hac habitasse\r\n        platea dictumst. Ut imperdiet mauris vitae eros varius eget accumsan lectus adipiscing.\r\n    </p>\r\n    <p>\r\n        Quisque et massa leo, sit amet adipiscing nisi. Mauris vel condimentum dolor. Duis quis ullamcorper eros. Proin metus dui,\r\n        facilisis id bibendum sed, aliquet non ipsum. Aenean pulvinar risus eu nisi dictum eleifend. Maecenas mattis dolor\r\n        eget lectus pretium eget molestie libero auctor. Praesent sit amet tellus sed nibh convallis semper. Curabitur nisl\r\n        odio, feugiat non dapibus sed, tincidunt ut est. Nullam erat velit, suscipit aliquet commodo sit amet, mollis in\r\n        mauris. Curabitur pharetra dictum interdum. In posuere pretium ultricies. Curabitur volutpat eros vehicula quam ultrices\r\n        varius. Proin volutpat enim a massa tempor ornare. Sed ullamcorper fermentum nisl, ac hendrerit sem feugiat ac. Donec\r\n        porttitor ullamcorper quam. Morbi pretium adipiscing quam, quis bibendum diam congue eget. Sed at lectus at est malesuada\r\n        iaculis. Sed fermentum quam dui. Donec eget ipsum dolor, id mollis nisi. Donec fermentum vehicula porta.\r\n    </p>\r\n    <p>\r\n        Quisque et massa leo, sit amet adipiscing nisi. Mauris vel condimentum dolor. Duis quis ullamcorper eros. Proin metus dui,\r\n        facilisis id bibendum sed, aliquet non ipsum. Aenean pulvinar risus eu nisi dictum eleifend. Maecenas mattis dolor\r\n        eget lectus pretium eget molestie libero auctor. Praesent sit amet tellus sed nibh convallis semper. Curabitur nisl\r\n        odio, feugiat non dapibus sed, tincidunt ut est. Nullam erat velit, suscipit aliquet commodo sit amet, mollis in\r\n        mauris. Curabitur pharetra dictum interdum. In posuere pretium ultricies. Curabitur volutpat eros vehicula quam ultrices\r\n        varius. Proin volutpat enim a massa tempor ornare. Sed ullamcorper fermentum nisl, ac hendrerit sem feugiat ac. Donec\r\n        porttitor ullamcorper quam. Morbi pretium adipiscing quam, quis bibendum diam congue eget. Sed at lectus at est malesuada\r\n        iaculis. Sed fermentum quam dui. Donec eget ipsum dolor, id mollis nisi. Donec fermentum vehicula porta.\r\n    </p>\r\n</div>'},function(e,t){e.exports=".scroll-example {\r\n    overflow: auto;\r\n    height: 300px;\r\n    border: 1px solid #e7eaec;\r\n}\r\n\r\n.scroll-example h4 {\r\n    margin-top: 0;\r\n}"},function(e,t){e.exports="angular.module('app').controller('InfiniteScrollLoadMoreDemoCtrl', InfiniteScrollLoadMoreDemoCtrl);\r\n\r\nInfiniteScrollLoadMoreDemoCtrl.$inject = ['$scope', '$q', 'safeTimeout'];\r\n\r\nfunction InfiniteScrollLoadMoreDemoCtrl($scope, $q, safeTimeout) {\r\n    var vm = this;\r\n\r\n    var safeTimeoutInstance = safeTimeout.create($scope);\r\n    var departments = ['Finance', 'Operations', 'Investor Relations', 'Technical', 'Auditing', 'Labs'];\r\n\r\n    vm.infiniteScrollbarConfig = {\r\n        resizeSensor: true,\r\n        enableKeyboardNavigation: true\r\n    };\r\n\r\n    vm.pageSize = 20;\r\n    vm.scrollPosition = 95;\r\n    vm.containerId = 'user-container';\r\n    vm.itemTemplate = 'itemTemplate.html';\r\n    vm.loadMoreButton = {\r\n        show: true\r\n    };\r\n\r\n    vm.pageFunction = function (pageNumber, pageSize) {\r\n\r\n        //create a deferred object\r\n        var defer = $q.defer();\r\n\r\n        //use a timeout to simulate server request\r\n        safeTimeoutInstance.timeout(function () {\r\n            //create an array contain user name, department and email address\r\n            var users = [];\r\n\r\n            //generate user information\r\n            for (var i = 0; i < pageSize; i++) {\r\n                var name = chance.name();\r\n\r\n                users.push({\r\n                    id: (pageNumber * pageSize) + i + 1,\r\n                    name: name,\r\n                    email: nameToEmail(name),\r\n                    department: departments[Math.floor(Math.random() * 6)]\r\n                });\r\n            }\r\n\r\n            defer.resolve(users);\r\n        }, 1000);\r\n\r\n        return defer.promise;\r\n    };\r\n\r\n    function nameToEmail(name) {\r\n        return name.toLowerCase().replace(' ', '.') + '@business.com';\r\n    }\r\n}"},function(e,t){e.exports='<div class="row">\r\n    <div class="col-md-6">\r\n        <div class="employee-list-container">\r\n            <div class="employee-list" scroll-pane scroll-config="vm.infiniteScrollbarConfig"\r\n                scroll-name="infiniteScrollExample"\r\n                infinite-scroll page-size="vm.pageSize" page-fn="vm.pageFunction"\r\n                page-position="vm.scrollPosition" container-id="vm.containerId"\r\n                item-template="vm.itemTemplate" load-more-button="vm.loadMoreButton">\r\n\r\n                <!-- Users will be added to this element -->\r\n                <div infinite-scroll-container="user-container"></div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>'},function(e,t){e.exports=".employee-list-container {\r\n  border: 1px solid #ddd;\r\n  padding: 5px;\r\n  padding-left: 0;  \r\n}\r\n\r\n.employee-list {\r\n  width: 100%;\r\n  height: 250px;\r\n}\r\n\r\n.employee-item {\r\n  width: 100%;\r\n  height: 65px;\r\n  padding: 10px 20px;\r\n  border-bottom: 1px solid #eee;\r\n}\r\n\r\n.body-dark .employee-list {\r\n  border: 1px solid #666666;\r\n}\r\n\r\n.body-dark .employee-item {\r\n  border-bottom: 1px solid #666666;\r\n}\r\n\r\n.body-dark .employee-item .text-black {\r\n  color: #fff !important;\r\n}"},function(e,t){e.exports="angular.module('app').controller('InfiniteScrollDemoCtrl', InfiniteScrollDemoCtrl);\r\n\r\nInfiniteScrollDemoCtrl.$inject = ['$scope', '$q', 'safeTimeout'];\r\n\r\nfunction InfiniteScrollDemoCtrl($scope, $q, safeTimeout) {\r\n    var vm = this;\r\n\r\n    var safeTimeoutInstance = safeTimeout.create($scope);\r\n    var departments = ['Finance', 'Operations', 'Investor Relations', 'Technical', 'Auditing', 'Labs'];\r\n\r\n    vm.infiniteScrollbarConfig = {\r\n        resizeSensor: true,\r\n        enableKeyboardNavigation: true\r\n    };\r\n\r\n    vm.pageSize = 20;\r\n    vm.scrollPosition = 95;\r\n    vm.containerId = 'user-container';\r\n    vm.itemTemplate = 'itemTemplate.html';\r\n    vm.loadMoreButton = {\r\n        show: false\r\n    };\r\n\r\n    vm.pageFunction = function (pageNumber, pageSize) {\r\n\r\n        //create a deferred object\r\n        var defer = $q.defer();\r\n\r\n        //use a timeout to simulate server request\r\n        safeTimeoutInstance.timeout(function () {\r\n            //create an array contain user name, department and email address\r\n            var users = [];\r\n\r\n            //generate user information\r\n            for (var i = 0; i < pageSize; i++) {\r\n                var name = chance.name();\r\n\r\n                users.push({\r\n                    id: (pageNumber * pageSize) + i + 1,\r\n                    name: name,\r\n                    email: nameToEmail(name),\r\n                    department: departments[Math.floor(Math.random() * 6)]\r\n                });\r\n            }\r\n\r\n            defer.resolve(users);\r\n        }, 1000);\r\n\r\n        return defer.promise;\r\n    };\r\n\r\n    function nameToEmail(name) {\r\n        return name.toLowerCase().replace(' ', '.') + '@business.com';\r\n    }\r\n}"},function(e,t){e.exports='<div class="row">\r\n    <div class="col-md-6">\r\n        <div class="employee-list-container">\r\n            <div class="employee-list" scroll-pane scroll-config="vm.infiniteScrollbarConfig"\r\n                scroll-name="infiniteScrollExample"\r\n                infinite-scroll page-size="vm.pageSize" page-fn="vm.pageFunction"\r\n                page-position="vm.scrollPosition" container-id="vm.containerId"\r\n                item-template="vm.itemTemplate" load-more-button="vm.loadMoreButton">\r\n\r\n                <!-- Users will be added to this element -->\r\n                <div infinite-scroll-container="user-container"></div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>'},function(e,t){e.exports=".employee-list-container {\r\n  border: 1px solid #ddd;\r\n  padding: 5px;\r\n  padding-left: 0;  \r\n}\r\n\r\n.employee-list {\r\n  width: 100%;\r\n  height: 250px;\r\n}\r\n\r\n.employee-item {\r\n  width: 100%;\r\n  height: 65px;\r\n  padding: 10px 20px;\r\n  border-bottom: 1px solid #eee;\r\n}\r\n\r\n.body-dark .employee-list {\r\n  border: 1px solid #666666;\r\n}\r\n\r\n.body-dark .employee-item {\r\n  border-bottom: 1px solid #666666;\r\n}\r\n\r\n.body-dark .employee-item .text-black {\r\n  color: #fff !important;\r\n}"},function(e,t){e.exports="angular.module('app').controller('AddFieldPanelCtrl', AddFieldPanelCtrl);\r\n\r\nAddFieldPanelCtrl.$inject = ['$scope', 'searchBuilderPanel', 'searchBuilderId'];\r\n\r\nfunction AddFieldPanelCtrl($scope, searchBuilderPanel, searchBuilderId) {\r\n    var vm = this;\r\n\r\n    vm.searchQuery = $scope.$parent.vm.searchQuery || {};\r\n\r\n    //store the filter text\r\n    vm.filterText = '';\r\n\r\n    //store all the possible fields\r\n    vm.fields = [{\r\n        name: 'Author',\r\n        component: 'author'\r\n    }, {\r\n        name: 'Custodian',\r\n        component: 'custodian'\r\n    }, {\r\n        name: 'Date Range',\r\n        component: 'daterange'\r\n    }, {\r\n        name: 'File Name',\r\n        component: 'filename'\r\n    }, {\r\n        name: 'File Type',\r\n        component: 'filetypes'\r\n    }, {\r\n        name: 'Repository',\r\n        component: 'repository'\r\n    }, {\r\n        name: 'Text',\r\n        component: 'text'\r\n    }];\r\n\r\n    vm.selectField = function (field) {\r\n        //resolve the deferred object\r\n        searchBuilderPanel.closePanel({\r\n            id: searchBuilderId.generateComponentId(field.component, vm.searchQuery),\r\n            component: field.component\r\n        });\r\n    };\r\n}"},function(e,t){e.exports="vm.components = [{\r\n    name: 'author',\r\n    templateUrl: 'authorComponent.html'\r\n}, {\r\n    name: 'custodian',\r\n    templateUrl: 'custodianComponent.html'\r\n}];"},function(e,t){e.exports="angular.module('app').controller('SearchBuilderDemoCtrl', SearchBuilderDemoCtrl);\r\n\r\nSearchBuilderDemoCtrl.$inject = ['$modal'];\r\n\r\nfunction SearchBuilderDemoCtrl($modal) {\r\n    var vm = this;\r\n\r\n    // store a stringified version of the search query object\r\n    vm.searchQuery = JSON.stringify({\r\n        \"keywords\": {\r\n            \"keyword-0\": {\r\n                \"component\": \"keyword\",\r\n                \"value\": null\r\n            }\r\n        }\r\n    }, null, 4);\r\n\r\n\r\n    vm.openModal = function () {\r\n\r\n        var modalInstance = $modal.open({\r\n            animation: false,\r\n            templateUrl: 'modalLayout.html',\r\n            controller: 'SearchBuilderDemoModalCtrl',\r\n            controllerAs: 'vm',\r\n            keyboard: 'true',\r\n            size: 'lg',\r\n            windowClass: 'search-builder-modal-window',\r\n            resolve: {\r\n                searchQuery: function () {\r\n                    //provide the modal with the existing search query if there is one\r\n                    return JSON.parse(vm.searchQuery);\r\n                }\r\n            }\r\n        });\r\n\r\n        modalInstance.result.then(function (result) {\r\n            if (result === \"cancel\") return;\r\n\r\n            //store the search query as a stringified version of the object\r\n            vm.searchQuery = JSON.stringify(result, null, 4);\r\n        });\r\n    };\r\n}"},function(e,t){e.exports="angular.module('app').controller('CustodianComponentCtrl', CustodianComponentCtrl);\r\n\r\nCustodianComponentCtrl.$inject = ['$scope', 'searchBuilderPanel'];\r\n\r\nfunction CustodianComponentCtrl($scope, searchBuilderPanel) {\r\n    var vm = this;\r\n\r\n    //use this to allow the side panel to select options\r\n    vm.deferred = null;\r\n\r\n    vm.selectOptions = {\r\n        placeholder: 'Select Custodians'\r\n    };\r\n\r\n    vm.custodians = [\r\n        'Flora Morris',\r\n        'Micheal Gilbert',\r\n        'Isabella Goodman',\r\n        'Eleanor Diaz',\r\n        'Ellen Holt',\r\n        'Kate Manning',\r\n        'Ryan Fisher',\r\n        'Lily White',\r\n        'Bernice Harrison',\r\n        'Eddie Smith',\r\n        'Violet Schneider',\r\n        'Jordan Burns',\r\n        'Ellen Tate',\r\n        'Rena Gomes',\r\n        'Ann Garcia'\r\n    ];\r\n\r\n    vm.showPanel = function () {\r\n        searchBuilderPanel.setPanelHeader('Select Custodians');\r\n        searchBuilderPanel.setPanelTemplate('custodianPanel.html');\r\n\r\n        //pass in all custodians and the currently selected custodians\r\n        vm.deferred = searchBuilderPanel.openPanel({\r\n            custodians: vm.custodians,\r\n            selected: $scope.model\r\n        });\r\n\r\n        //wait for an update on selected repositories\r\n        vm.deferred.then(function (selectedCustodians) {\r\n            $scope.model = selectedCustodians;\r\n        });\r\n    };\r\n\r\n}"},function(e,t){e.exports="angular.module('app').controller('CustodianPanelCtrl', CustodianPanelCtrl);\r\n\r\nCustodianPanelCtrl.$inject = ['$scope', 'searchBuilderPanel'];\r\n\r\nfunction CustodianPanelCtrl($scope, searchBuilderPanel) {\r\n    var vm = this;\r\n\r\n    //store the filter text\r\n    vm.filterText = '';\r\n\r\n    //store all the possible fields\r\n    vm.custodians = [];\r\n\r\n    vm.selectCustodian = function (custodian) {\r\n        custodian.checked = !custodian.checked;\r\n    };\r\n\r\n    //when the panel is dismissed resolve the deferred object\r\n    searchBuilderPanel.onDismiss(function (deferred) {\r\n        var selectedCustodians = vm.custodians.filter(function (custodian) {\r\n            return custodian.checked;\r\n        });\r\n\r\n        //we only want to return custodians names\r\n        var custodians = [];\r\n\r\n        selectedCustodians.forEach(function (custodian) {\r\n            custodians.push(custodian.name);\r\n        });\r\n\r\n        if (deferred) deferred.resolve(custodians);\r\n    });\r\n\r\n    //check any items already selected in the search component\r\n    prepareItems();\r\n\r\n    function prepareItems() {\r\n        var data = searchBuilderPanel.getData();\r\n\r\n        var custodians = data.custodians;\r\n\r\n        custodians.forEach(function (custodian) {\r\n            vm.custodians.push({\r\n                name: custodian,\r\n                checked: false\r\n            });\r\n        });\r\n\r\n        //if there are no selected custodians then stop here\r\n        if (!data.selected) return;\r\n\r\n        data.selected.forEach(function (selected) {\r\n            vm.custodians.forEach(function (custodian) {\r\n                //if it is a match set the checked value to true\r\n                if (custodian.name === selected) custodian.checked = true;\r\n            });\r\n        });\r\n    }\r\n}"},function(e,t){e.exports="angular.module('app').controller('DateRangeComponentCtrl', DateRangeComponentCtrl);\r\n\r\nfunction DateRangeComponentCtrl() {\r\n    var vm = this;\r\n\r\n    vm.fromOpened = false;\r\n    vm.toOpened = false;\r\n\r\n    vm.fromOpen = function (event) {\r\n        vm.fromOpened = true;\r\n        event.stopPropagation();\r\n    };\r\n\r\n    vm.toOpen = function (event) {\r\n        vm.toOpened = true;\r\n        event.stopPropagation();\r\n    };\r\n}"},function(e,t){e.exports='angular.module(\'app\').controller(\'FileTypesComponentCtrl\', FileTypesComponentCtrl);\r\n\r\nFileTypesComponentCtrl.$inject = [\'$scope\', \'searchBuilderPanel\'];\r\n\r\nfunction FileTypesComponentCtrl($scope, searchBuilderPanel) {\r\n\r\n    var vm = this;\r\n\r\n    //use this to allow the side panel to select options\r\n    vm.deferred = null;\r\n\r\n    vm.selectOptions = {\r\n        placeholder: \'Select File Types\'\r\n    };\r\n\r\n    vm.fileTypes = ["AVI", "BMP", "CSV", "DOC", "EXE", "GIF", "JPG", "MOV", "PDF", "PNG", "PPT", "RTF", "TXT", "XLS", "ZIP"];\r\n\r\n    vm.showPanel = function () {\r\n        searchBuilderPanel.setPanelHeader(\'Select File Types\');\r\n        searchBuilderPanel.setPanelTemplate(\'fileTypesPanel.html\');\r\n\r\n        //pass in any currently selected file types\r\n        vm.deferred = searchBuilderPanel.openPanel({\r\n            fileTypes: vm.fileTypes,\r\n            selected: $scope.model\r\n        });\r\n\r\n        //wait for an update on selected repositories\r\n        vm.deferred.then(function (selectedFileTypes) {\r\n            $scope.model = selectedFileTypes;\r\n        });\r\n    };\r\n}'},function(e,t){e.exports="angular.module('app').controller('FileTypesPanelCtrl', FileTypesPanelCtrl);\r\n\r\nFileTypesPanelCtrl.$inject = ['$scope', 'searchBuilderPanel'];\r\n\r\nfunction FileTypesPanelCtrl($scope, searchBuilderPanel) {\r\n    var vm = this;\r\n\r\n    //store the filter text\r\n    vm.filterText = '';\r\n\r\n    //store all the possible fields\r\n    vm.fileTypes = [];\r\n\r\n    vm.selectFileType = function (fileType) {\r\n        fileType.checked = !fileType.checked;\r\n    };\r\n\r\n    //when the panel is dismissed resolve the deferred object\r\n    searchBuilderPanel.onDismiss(function (deferred) {\r\n        var selectedFileTypes = vm.fileTypes.filter(function (fileType) {\r\n            return fileType.checked;\r\n        });\r\n\r\n        //we only want to return file types names\r\n        var fileTypes = [];\r\n\r\n        selectedFileTypes.forEach(function (fileType) {\r\n            fileTypes.push(fileType.name);\r\n        });\r\n\r\n        if (deferred) deferred.resolve(fileTypes);\r\n    });\r\n\r\n    //check any items already selected in the search component\r\n    prepareItems();\r\n\r\n    function prepareItems() {\r\n        var data = searchBuilderPanel.getData();\r\n\r\n        var fileTypes = data.fileTypes;\r\n\r\n        fileTypes.forEach(function (fileType) {\r\n            vm.fileTypes.push({\r\n                name: fileType,\r\n                checked: false\r\n            });\r\n        });\r\n\r\n        //if there are no selected file types then stop here\r\n        if (!data.selected) return;\r\n\r\n        data.selected.forEach(function (selected) {\r\n            vm.fileTypes.forEach(function (fileType) {\r\n                //if it is a match set the checked value to true\r\n                if (fileType.name === selected) fileType.checked = true;\r\n            });\r\n        });\r\n    }\r\n}"},function(e,t){e.exports='<button type="button" class="btn button-primary" ng-click="vm.openModal()">\r\n  <span class="hpe-icon hpe-deployment" aria-hidden="true"></span>&nbsp;Launch Search Builder Modal\r\n</button>'},function(e,t){e.exports="angular.module(\"app\").controller(\"SearchBuilderDemoModalCtrl\", SearchBuilderDemoModalCtrl);\r\n\r\nSearchBuilderDemoModalCtrl.$inject = ['$modalInstance', '$scope', 'searchBuilderPanel', 'searchBuilderId', 'searchQuery'];\r\n\r\nfunction SearchBuilderDemoModalCtrl($modalInstance, $scope, searchBuilderPanel, searchBuilderId, searchQuery) {\r\n    var vm = this;\r\n\r\n    //show previous search query where possible\r\n    vm.searchQuery = searchQuery ? searchQuery : {};\r\n\r\n    // scrollbar conguration\r\n    vm.scrollBarConfig = {\r\n        resizeSensor: true,\r\n        enableKeyboardNavigation: true\r\n    };\r\n\r\n    //use a service to store these values - make them more accessible by all modal contents\r\n    vm.panelService = searchBuilderPanel;\r\n\r\n    // modal data\r\n    vm.searchPercentage = 0;\r\n    vm.type = 'spark-primary';\r\n    vm.searchEstimateLabel = \"<span class='spark-label hidden-xxxs'><span class='medium light'>MATCHING ITEMS</span></span>\";\r\n    updateApproxLabel('Unavailable');\r\n\r\n    //must provide information on all possible components\r\n    vm.components = [{\r\n        name: 'author',\r\n        templateUrl: 'authorComponent.html'\r\n    }, {\r\n        name: 'custodian',\r\n        templateUrl: 'custodianComponent.html'\r\n    }, {\r\n        name: 'daterange',\r\n        templateUrl: 'dateRangeComponent.html'\r\n    }, {\r\n        name: 'keyword',\r\n        templateUrl: 'keywordComponent.html'\r\n    }, {\r\n        name: 'filename',\r\n        templateUrl: 'fileNameComponent.html'\r\n    }, {\r\n        name: 'filetypes',\r\n        templateUrl: 'fileTypesComponent.html'\r\n    }, {\r\n        name: 'repository',\r\n        templateUrl: 'repositoryComponent.html'\r\n    }, {\r\n        name: 'text',\r\n        templateUrl: 'textComponent.html'\r\n    }, {\r\n        name: 'custodians',\r\n        templateUrl: 'custodianComponent.html'\r\n    }];\r\n\r\n    // modal properties\r\n    vm.ok = function () {\r\n        $modalInstance.close(vm.searchQuery);\r\n    };\r\n\r\n    vm.cancel = function () {\r\n        $modalInstance.dismiss(\"cancel\");\r\n    };\r\n\r\n    //ensure we dismiss any open panel if the modal is closing\r\n    $scope.$on('modal.closing', function () {\r\n        searchBuilderPanel.closePanel();\r\n    });\r\n\r\n    //adding a simple field that will be the same component everytime\r\n    vm.addKeywordField = function () {\r\n        return {\r\n            id: searchBuilderId.generateComponentId('keyword', vm.searchQuery),\r\n            component: 'keyword'\r\n        };\r\n    };\r\n\r\n    //adding a field that may be a different component everytime\r\n    vm.addCustomField = function () {\r\n\r\n        //set the appropriate panel content\r\n        vm.panelService.setPanelHeader('Add Field');\r\n        vm.panelService.setPanelTemplate('addFieldPanel.html');\r\n\r\n        //the open panel function returns a deferred object which will be resolved or rejected accordingly\r\n        return vm.panelService.openPanel();\r\n    };\r\n\r\n    //this emulates the number of search results - and fakes approximate number of matching documents\r\n    $scope.$watch('vm.searchQuery', function (nv, ov) {\r\n        if (!angular.equals(nv, ov)) {\r\n            var complexity = vm.calculateComplexity(vm.searchQuery);\r\n\r\n            if (complexity === 0) {\r\n                vm.searchPercentage = 0;\r\n                updateApproxLabel('Unavailable');\r\n                return;\r\n            }\r\n\r\n            vm.searchPercentage = Math.max(100 - (complexity * 10), 0);\r\n\r\n            //set the color of the spark chart based on the search percentage\r\n            if (vm.searchPercentage > 70) vm.type = 'spark-critical';\r\n            else if (vm.searchPercentage > 50) vm.type = 'spark-warning';\r\n            else vm.type = 'spark-ok';\r\n\r\n            //update the label to the correct number of items\r\n            updateApproxLabel('Approx ' + vm.searchPercentage + 'k items');\r\n        }\r\n    }, true);\r\n\r\n    // this function returns dummy data for the number of search results based on search complexity\r\n    vm.calculateComplexity = function (node) {\r\n        var count = 0;\r\n\r\n        for (var key in node) {\r\n            if (key === 'value') {\r\n                if (!node[key] || (typeof node[key] === 'string' && node[key].trim().length === 0) ||\r\n                    (Array.isArray(node[key]) && node[key].length === 0)) {\r\n                    return 0;\r\n                }\r\n                return 1;\r\n            }\r\n\r\n            if (typeof node[key] === 'object')\r\n                count += vm.calculateComplexity(node[key]);\r\n        }\r\n\r\n        return count;\r\n    };\r\n\r\n    function updateApproxLabel(value) {\r\n        vm.approxItemLabel = \"<span class='spark-label hidden-xxxs'><span class='medium light'>\" + value + \"</span></span>\";\r\n    }\r\n}"},function(e,t){e.exports='<div class="dismiss">\r\n    <button class="btn btn-icon button-dark btn-circular btn-close" ng-click="vm.cancel()">\r\n        <i class="hpe-icon hpe-close"></i>\r\n    </button>\r\n</div>\r\n\r\n<div class="search-builder-header">\r\n    <div class="search-builder-header-inline">\r\n        <div class="search-icon"></div>\r\n        <h1 class="search-builder-title">Search builder</h1>\r\n    </div>\r\n</div>\r\n\r\n<div class="search-builder-scroll-container">\r\n    <div class="search-builder-scroller" scroll-config="vm.scrollBarConfig" scroll-pane scroll-name="search-builder">\r\n        <div class="search-builder-body">\r\n\r\n            <!-- Search Builder Should Go Here -->\r\n\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class="search-builder-footer">\r\n    <button type="button" class="btn button-primary m-r-xs" ng-click="vm.ok()">Search</button>\r\n    <button type="button" class="btn button-secondary" ng-click="vm.cancel()">Cancel</button>\r\n</div>'},function(e,t){e.exports="angular.module('app').controller('RepositoryComponentCtrl', RepositoryComponentCtrl);\r\n\r\nRepositoryComponentCtrl.$inject = ['$scope', 'searchBuilderPanel'];\r\n\r\nfunction RepositoryComponentCtrl($scope, searchBuilderPanel) {\r\n\r\n    var vm = this;\r\n\r\n    //use this to allow the side panel to select options\r\n    vm.deferred = null;\r\n\r\n    vm.selectOptions = {\r\n        placeholder: 'Select Repositories'\r\n    };\r\n\r\n    vm.repositories = [\r\n        \"Filesystem\",\r\n        \"Records Manager\",\r\n        \"Email\",\r\n        \"Legacy Email\",\r\n        \"Archives\",\r\n        \"Legacy Archives\",\r\n        \"Miscellaneous\"\r\n    ];\r\n\r\n    vm.showPanel = function () {\r\n        searchBuilderPanel.setPanelHeader('Select Repositories');\r\n        searchBuilderPanel.setPanelTemplate('repositoryPanel.html');\r\n\r\n        //pass in any currently selected repositories\r\n        vm.deferred = searchBuilderPanel.openPanel({\r\n            repositories: vm.repositories,\r\n            selected: $scope.model\r\n        });\r\n\r\n        //wait for an update on selected repositories\r\n        vm.deferred.then(function (selectedRepositories) {\r\n            $scope.model = selectedRepositories;\r\n        });\r\n    };\r\n}"},function(e,t){e.exports="angular.module('app').controller('RepositoryPanelCtrl', RepositoryPanelCtrl);\r\n\r\nRepositoryPanelCtrl.$inject = ['$scope', 'searchBuilderPanel'];\r\n\r\nfunction RepositoryPanelCtrl($scope, searchBuilderPanel) {\r\n    var vm = this;\r\n\r\n    //store the filter text\r\n    vm.filterText = '';\r\n\r\n    //store all the possible fields\r\n    vm.repositories = [];\r\n\r\n    vm.selectRepository = function (repository) {\r\n        repository.checked = !repository.checked;\r\n    };\r\n\r\n    //when the panel is dismissed resolve the deferred object\r\n    searchBuilderPanel.onDismiss(function (deferred) {\r\n        var selectedRepositories = vm.repositories.filter(function (repo) {\r\n            return repo.checked;\r\n        });\r\n\r\n        //we only want to return repository names\r\n        var repositoryNames = [];\r\n\r\n        selectedRepositories.forEach(function (repo) {\r\n            repositoryNames.push(repo.name);\r\n        });\r\n\r\n        if (deferred) deferred.resolve(repositoryNames);\r\n    });\r\n\r\n    //check any items already selected in the search component\r\n    prepareItems();\r\n\r\n    function prepareItems() {\r\n        var data = searchBuilderPanel.getData();\r\n\r\n        var repositories = data.repositories;\r\n\r\n        repositories.forEach(function (repository) {\r\n            vm.repositories.push({\r\n                name: repository,\r\n                checked: false\r\n            });\r\n        });\r\n\r\n        //if there are no selected repositories then stop here\r\n        if (!data.selected) return;\r\n\r\n        data.selected.forEach(function (selected) {\r\n            vm.repositories.forEach(function (repository) {\r\n                //if it is a match set the checked value to true\r\n                if (repository.name === selected) repository.checked = true;\r\n            });\r\n        });\r\n    }\r\n}"},function(e,t){e.exports="angular.module('app').service('searchBuilderId', searchBuilderId);\r\n\r\nfunction searchBuilderId() {\r\n    var vm = this;\r\n\r\n    vm.generateComponentId = function (componentName, searchQuery) {\r\n        //initialise or increments\r\n\r\n        vm.existingIds = [];\r\n\r\n        //Get all IDs which have currently been assigned for each component\r\n        for (var groupName in searchQuery) {\r\n            var group = searchQuery[groupName];\r\n\r\n            //build up list of all component ids\r\n            for (var component in group) vm.existingIds.push(component);\r\n        }\r\n\r\n        var index = 0;\r\n        var componentId;\r\n\r\n        //setting upper limit to avoid an infinte loop\r\n        while (index < 1000) {\r\n            var desiredId = componentName + \"-\" + index;\r\n\r\n            if (vm.existingIds.indexOf(desiredId) === -1) {\r\n                componentId = desiredId;\r\n                break;\r\n            }\r\n\r\n            index++;\r\n        }\r\n\r\n        return componentId;\r\n\r\n    };\r\n\r\n    return vm;\r\n}"},function(e,t){e.exports="angular.module('app').service('searchBuilderPanel', searchBuilderPanel);\r\n\r\nsearchBuilderPanel.$inject = ['$q'];\r\n\r\nfunction searchBuilderPanel($q) {\r\n    var vm = this;\r\n\r\n    //store basic panel properties\r\n    vm.panelOpen = false;\r\n    vm.panelWidth = 400;\r\n    vm.panelSide = 'right';\r\n\r\n    //store content properties\r\n    vm.panelHeader = '';\r\n    vm.panelTemplate = '';\r\n\r\n    //store a deferred object to allow returning of values\r\n    vm.deferred = null;\r\n\r\n    //allow the storing of some data while the panel is open\r\n    vm.data = null;\r\n\r\n    // allow custom on dismiss event\r\n    vm.dismissEventHandlers = [];\r\n\r\n    //action functions\r\n    vm.openPanel = function (data) {\r\n        vm.deferred = $q.defer();\r\n\r\n        //store any new data - replace any exisiting data\r\n        vm.data = data;\r\n\r\n        //reset dismiss event handlers\r\n        vm.dismissEventHandlers = [];\r\n\r\n        //show panel\r\n        vm.panelOpen = true;\r\n\r\n        return vm.deferred.promise;\r\n    };\r\n\r\n    vm.closePanel = function (result) {\r\n        //if deferred is not null then either resolve or reject deferred\r\n        if (vm.deferred !== null) {\r\n            if (result) vm.deferred.resolve(result);\r\n            else vm.deferred.reject();\r\n        }\r\n\r\n        //we no longer need the deferred object - it has been resolved or rejected\r\n        vm.deferred = null;\r\n\r\n        //hide the panel\r\n        vm.panelOpen = false;\r\n\r\n        //remove any template so everything is reinstantiated correctly\r\n        vm.setPanelHeader('');\r\n        vm.setPanelTemplate('');\r\n    };\r\n\r\n    vm.onDismiss = function (eventHandler) {\r\n\r\n        //if an argument was passed then we can assume that this is subscribing to the dismiss event\r\n        if (eventHandler) {\r\n            vm.dismissEventHandlers.push(eventHandler);\r\n            return;\r\n        }\r\n\r\n        //allow a handler to resolve deferred\r\n        var resolved = false;\r\n\r\n        //otherwise call all event handlers and pass them the deferred object in case they want to resolve it\r\n        for (var i = 0; i < vm.dismissEventHandlers.length; i++) {\r\n            var handler = vm.dismissEventHandlers[i];\r\n\r\n            //call function with deferred\r\n            var didResolved = handler(vm.deferred);\r\n\r\n            if (didResolved === true) resolved = true;\r\n        }\r\n\r\n        //if deferred has not yet been resolved then reject\r\n        if (resolved === false && vm.deferred) vm.deferred.reject();\r\n\r\n        //remove any template so everything is reinstantiated correctly\r\n        vm.setPanelHeader('');\r\n        vm.setPanelTemplate('');\r\n    };\r\n\r\n    //setters\r\n    vm.setPanelHeader = function (header) {\r\n        vm.panelHeader = header;\r\n    };\r\n\r\n    vm.setPanelTemplate = function (template) {\r\n        vm.panelTemplate = template;\r\n    };\r\n\r\n    vm.setData = function (data) {\r\n        vm.data = data;\r\n    };\r\n\r\n    //getters\r\n    vm.getPanelWidth = function () {\r\n        return vm.panelWidth;\r\n    };\r\n\r\n    vm.getPanelSide = function () {\r\n        return vm.panelSide;\r\n    };\r\n\r\n    vm.getPanelHeader = function () {\r\n        return vm.panelHeader;\r\n    };\r\n\r\n    vm.getPanelTemplate = function () {\r\n        return vm.panelTemplate;\r\n    };\r\n\r\n    vm.getData = function () {\r\n        return vm.data;\r\n    };\r\n\r\n    return vm;\r\n}"},function(e,t){e.exports='<search-builder search-query="vm.searchQuery" components="vm.components">\r\n  <search-group group-id="\'keywords\'" group-title="\'Text Keywords\'" operator="\'or\'"\r\n    button-text="\'Add text keywords\'" add-field="vm.addKeywordField"></search-group>\r\n  <search-group group-id="\'locations\'" group-title="\'ANY of the following\'" operator="\'or\'"\r\n    button-text="\'Add a field\'" add-field="vm.addCustomField"></search-group>\r\n  <search-group group-id="\'type\'" group-title="\'ALL of the following\'" operator="\'and\'"\r\n    button-text="\'Add a field\'" add-field="vm.addCustomField"></search-group>\r\n  <search-group group-id="\'exclusions\'" group-title="\'NONE of the following\'" operator="\'not\'"\r\n    button-text="\'Add a field\'" add-field="vm.addCustomField"></search-group>\r\n</search-builder>'},function(e,t){e.exports='{\r\n    "keywords": {\r\n        "keyword-0": {\r\n            "component": "keyword",\r\n            "value": "Austin"\r\n        },\r\n        "keyword-1": {\r\n            "component": "keyword",\r\n            "value": "Dallas"\r\n        }\r\n    },\r\n    "locations": {\r\n        "repository-0": {\r\n            "component": "repository",\r\n            "value": [\r\n                "Email",\r\n                "Archives"\r\n            ]\r\n        }\r\n    },\r\n    "type": {\r\n        "daterange-0": {\r\n            "component": "daterange",\r\n            "value": {\r\n                "from": "2016-03-02T00:00:00.000Z",\r\n                "to": "2016-03-22T00:00:00.000Z"\r\n            }\r\n        },\r\n        "filetypes-0": {\r\n            "component": "filetypes",\r\n            "value": [\r\n                "DOC",\r\n                "PDF",\r\n                "PPT"\r\n            ]\r\n        }\r\n    }\r\n}'},function(e,t){e.exports=".search-builder-title-icon {\r\n  font-size: 33px;\r\n  margin-right: 15px;\r\n}\r\n\r\n.add-field-list {\r\n  list-style-type: none;\r\n  padding: 0;\r\n  margin: 8px 5px;\r\n}\r\n\r\n.add-field-list .field-name {\r\n  font-size: 17px;\r\n  padding: 3px 10px;\r\n  cursor: pointer;\r\n}\r\n\r\n.add-field-list .field-name:hover {\r\n  background-color: #f2f2f2;\r\n}\r\n\r\n.body-dark .add-field-list .field-name:hover {\r\n  background-color: #262626;\r\n}\r\n\r\n.add-field-list .field-name .repository-check {\r\n  margin-right: 10px;\r\n  transition: opacity 0.2s linear;\r\n}\r\n\r\n.add-field-list .field-name.option-deselected .option-check {\r\n  opacity: 0;\r\n}\r\n\r\n.add-field-list .field-name.option-deselected:hover .option-check {\r\n  opacity: 0.5;\r\n}\r\n\r\n.add-field-list .field-name.option-selected .option-check {\r\n  opacity: 1;\r\n}\r\n\r\n.show-panel-btn {\r\n  cursor: pointer;\r\n}"},function(e,t){e.exports="angular.module('app').controller('SearchHistoryDemoCtrl', SearchHistoryDemoCtrl);\r\n\r\nSearchHistoryDemoCtrl.$inject = ['$scope', '$modal'];\r\n\r\nfunction SearchHistoryDemoCtrl($scope, $modal) {\r\n    var vm = this;\r\n\r\n    vm.scrollConfig = {\r\n        autoReinitialise: true,\r\n        showOnlyOnHover: false,\r\n        enableKeyboardNavigation: true,\r\n        isScrollableH: false,\r\n        scrollMargin: 5\r\n    };\r\n\r\n    vm.searches = [\r\n        {\r\n            icon: 'hpe-search',\r\n            text: '\"periwinkle documents\" AND (\"Emma Hart\" OR \"ehart\")',\r\n            any: 'PDF, DOC, DOCX, XLS, PPT',\r\n            all: '16/03/2016 - 18/11/2016',\r\n            exclude: '\"Recycle Bin\", \"Trash\"'\r\n        }, {\r\n            icon: 'hpe-search',\r\n            text: '\"attendance record\" AND \"Tim Walsh\"',\r\n            any: 'XLS, XLSX',\r\n            all: 'File Archives, Time Off Docs',\r\n            exclude: '\"Recycle Bin\", \"Trash\"'\r\n        }, {\r\n            icon: 'hpe-folder',\r\n            text: 'Helena\\'s Workbook'\r\n        }, {\r\n            icon: 'hpe-user',\r\n            text: 'Lauren Scott'\r\n        }, {\r\n            icon: 'hpe-search',\r\n            text: '\"meeting notes\"',\r\n            exclude: '\"Recycle Bin\", \"Trash\"'\r\n        }, {\r\n            icon: 'hpe-search',\r\n            text: '\"time off allowance\"',\r\n            exclude: '\"Recycle Bin\", \"Trash\"'\r\n        }, {\r\n            icon: 'hpe-folder',\r\n            text: 'Gabriel\\'s Workbook'\r\n        }, {\r\n            icon: 'hpe-search',\r\n            text: '\"hr links\" AND (\"hr connect\" OR \"hr@company.com\")',\r\n            any: \"HR, Human Resources, HR Connect\",\r\n            all: \"12/09/2016 - 22/10/2016\",\r\n            exclude: '\"Mail\"'\r\n        }, {\r\n            icon: 'hpe-user-manager',\r\n            text: 'Joshua Smith'\r\n        }, {\r\n            icon: 'hpe-mail',\r\n            text: '\"weekly rota\"',\r\n            any: \"Joshua Smith, Michael Tucker\",\r\n            all: \"10/11/2016\",\r\n            exclude: \"Donny Piper\"\r\n        }\r\n    ];\r\n\r\n    storeSearches();\r\n\r\n    vm.getHistory = function () {\r\n        vm.searches = JSON.parse(localStorage.getItem('mySearches'));\r\n    };\r\n\r\n    vm.openModal = function () {\r\n        var modalInstance = $modal.open({\r\n            animation: false,\r\n            templateUrl: 'search-history-ng1/modalLayout.html',\r\n            controller: 'SearchHistoryModalDemoCtrl',\r\n            controllerAs: 'vm',\r\n            keyboard: 'true',\r\n            size: 'md',\r\n            windowClass: 'square-modal-window'\r\n        });\r\n\r\n        modalInstance.result.then(function (result) {\r\n            if (result === \"cancel\") return;\r\n\r\n            vm.searches = JSON.parse(localStorage.getItem('mySearches'));\r\n            vm.searches.unshift(result);\r\n            vm.searches.pop();\r\n\r\n            storeSearches();\r\n        });\r\n    };\r\n\r\n    vm.search = function (search) {\r\n        vm.searches.unshift(search);\r\n        vm.searches.pop();\r\n        storeSearches();\r\n    };\r\n\r\n    function storeSearches() {\r\n        localStorage.setItem('mySearches', JSON.stringify(vm.searches));\r\n    }\r\n}"},function(e,t){e.exports='<div class="btn-group" dropdown>\r\n    <button type="button" class="btn button-secondary" ng-click="vm.openModal()" disabled>NEW SEARCH</button>\r\n    <button type="button" class="btn button-secondary dropdown-toggle" dropdown-toggle aria-haspopup="true"\r\n        aria-expanded="false" ng-click="vm.getHistory()">\r\n        <span class="hpe-icon hpe-history" aria-hidden="true"></span>\r\n    </button>\r\n    <ul class="dropdown-menu search-history-container" role="menu">\r\n        <div class="search-history-scrollpane" scroll-config="vm.scrollConfig"\r\n            scroll-pane scroll-name="searchHistoryScroller">\r\n            <li ng-repeat="search in vm.searches track by $index" class="search-history-item" ng-click="vm.search(search)">\r\n                <div class="search-history">\r\n                    <i class="hpe-icon hpe-lg search-history-icon text-primary" ng-class="search.icon" aria-hidden="true"></i>\r\n                    <div class="search-history-detail">\r\n                        <p ng-bind="search.text"></p>\r\n                        <p class="search-criteria" ng-if="search.any">ANY OF <span ng-bind="search.any"></span></p>\r\n                        <p class="search-criteria" ng-if="search.all">ALL OF <span ng-bind="search.all"></span></p>\r\n                        <p class="search-criteria" ng-if="search.exclude">NONE OF <span ng-bind="search.exclude"></span></p>\r\n                    </div>\r\n                </div>\r\n                <hr>\r\n            </li>\r\n        </div>\r\n    </ul>\r\n</div>'},function(e,t){e.exports='angular.module("app").controller(\'SearchHistoryDemoModalCtrl\', SearchHistoryDemoModalCtrl);\r\n\r\nSearchHistoryDemoModalCtrl.$inject = [\'$modalInstance\'];\r\n\r\nfunction SearchHistoryDemoModalCtrl($modalInstance) {\r\n    var vm = this;\r\n\r\n    vm.selectOptions = {\r\n        placeholder: \'Select a type\',\r\n        scroll: false\r\n    };\r\n\r\n    vm.types = ["String", "User", "File", "Mail"];\r\n\r\n    vm.selectedType = "";\r\n    vm.text = "";\r\n    vm.any = "";\r\n    vm.all = "";\r\n    vm.exclude = "";\r\n\r\n    var typeIcon = {\r\n        string: \'hpe-search\',\r\n        user: \'hpe-user\',\r\n        file: \'hpe-folder\',\r\n        mail: \'hpe-mail\'\r\n    };\r\n\r\n    vm.search = function () {\r\n        var searchObj = {\r\n            icon: typeIcon[vm.selectedType.toLowerCase()],\r\n            text: vm.text,\r\n            any: vm.any,\r\n            all: vm.all,\r\n            exclude: vm.exclude\r\n        };\r\n        $modalInstance.close(searchObj);\r\n    };\r\n\r\n    vm.cancel = function () {\r\n        $modalInstance.dismiss("cancel");\r\n    };\r\n}'},function(e,t){e.exports=".search-history-container {\r\n  width: 350px;\r\n  height: 600px;\r\n  overflow: auto;\r\n}\r\n\r\n.search-history-scrollpane {\r\n  height: 100%;\r\n}\r\n\r\n.search-history-container .search-history {\r\n\tdisplay: flex;\r\n\tflex-direction: row;\r\n  padding: 10px 10px 8px 15px;\r\n}\r\n\r\n.search-history-container .search-history .search-history-icon {\r\n\tflex: none;\r\n  vertical-align: middle;\r\n  margin-top: 3px;\r\n} \r\n\r\n.search-history-container .search-history .search-history-detail {\r\n\tflex: 1;\r\n  padding: 0px 15px;\r\n  overflow: hidden;\r\n}\r\n\r\n.search-history-container .search-history .search-history-detail p {\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  height: 25px;\r\n  margin-bottom: 3px;\r\n}\r\n\r\n.search-history-container .search-history .search-history-detail .search-criteria {\r\n\tfont-size: 13px;\r\n}\r\n\r\n.search-history-container .search-history .search-history-detail .search-criteria span {\r\n \tfont-size: 16px;\r\n  margin-left: 5px;\r\n}\r\n\r\n.search-history-container .search-history .search-history-detail .search-criteria:last-of-type span {\r\n\tcolor: #CE6A79;\r\n  font-size: 16px;\r\n  margin-left: 5px;\r\n}\r\n\r\n.search-history-container li:last-of-type hr {\r\n\tdisplay: none;\r\n}\r\n\r\n.search-history-container li hr {\r\n\tmargin: 0px;\r\n}\r\n\r\n.search-history-container li:hover {\r\n\tbackground-color: #F6F7F8;\r\n\tcursor: pointer;\r\n}\r\n\r\n.search-history-modal-header {\r\n\tdisplay: flex;\r\n\tbackground-color: #f2f2f2;\r\n\tpadding: 20px;\r\n}\r\n\r\n.search-history-modal-header-title {\r\n\tmargin-top: 0px;\r\n\tcolor: black;\r\n}\r\n\r\n.search-history-modal-content {\r\n\tpadding: 0px 20px 10px 20px;\r\n}\r\n\r\n.search-history-modal-content .section {\r\n\tmargin-top: 20px;\r\n}\r\n\r\n.search-history-modal-footer {\r\n\tpadding: 20px;\r\n\ttext-align: right;\r\n}"},function(e,t){e.exports="angular.module('app').controller('SearchToolbarDemoCtrl', SearchToolbarDemoCtrl);\r\n\r\nfunction SearchToolbarDemoCtrl() {\r\n    var vm = this;\r\n\r\n    vm.list = [];\r\n    for (var i = 0; i < 15; i += 1) {\r\n        vm.list.push(chance.name());\r\n    }\r\n\r\n    vm.search = function (text) {\r\n        // Search logic goes here\r\n    };\r\n}"},function(e,t){e.exports='<div class="row">\r\n    <div class="col-sm-12">\r\n        <search-toolbar place-holder="Search..."\r\n            on-search="vm.search"\r\n            close-search="Cancel"\r\n            search-typeahead="vm.list">\r\n        </search-toolbar>\r\n    </div>\r\n</div>'},function(e,t){e.exports='<div class="row">\r\n    <div class="col-md-5">\r\n        <div class="row">\r\n            <div class="col-md-6 col-sm-6">\r\n                <label class="m-l-sm m-t-xs"><b ng-bind="vm.heading"></b></label>\r\n            </div>\r\n            <div class="col-md-6 col-sm-6">\r\n                <input type="text" ng-model="vm.searchText" ng-change="vm.clearSelection()" placeholder="Search" class="form-control">\r\n            </div>\r\n            <br/>\r\n            <br/>\r\n        </div>\r\n        <select-table values="vm.authors" selected="vm.multipleSelectedVals" select-key="vm.selectKey" search-text="vm.searchText"\r\n            multiple-select="true"></select-table>\r\n        <br/>\r\n        <p>Ids of the selected values are: <b ng-bind="vm.getSelectedIds()"></b></p>\r\n    </div>\r\n</div>'},function(e,t){e.exports='angular.module("app").controller("MultipleSelectTableCtrl", MultipleSelectTableCtrl);\r\n\r\nfunction MultipleSelectTableCtrl($timeout, $filter, $q) {\r\n  var vm = this;\r\n  vm.multipleSelectedVals = [];\r\n  vm.searchText = "";\r\n  vm.heading = "Select an author";\r\n  vm.selectKey = "name";\r\n\r\n  vm.authors = [\r\n      {\r\n          id: "1",\r\n          name: chance.name()\r\n      }, {\r\n          id: "2",\r\n          name: chance.name()\r\n      }, {\r\n          ...\r\n      }, {\r\n          id: "40",\r\n          name: chance.name()\r\n      }\r\n  ];\r\n\r\n  vm.getSelectedIds = function () {\r\n    return vm.multipleSelectedVals.map(function (elem) {\r\n      return elem.id\r\n    }).join(\', \');\r\n  };\r\n\r\n  vm.clearSelection = function() {\r\n    vm.multipleSelectedVals = [];\r\n  };\r\n}'},function(e,t){e.exports="angular.module('app').controller('MultipleSelectTableCtrl', MultipleSelectTableCtrl);\r\n\r\nfunction MultipleSelectTableCtrl() {\r\n    var vm = this;\r\n\r\n    vm.multipleSelectedVals = [];\r\n    vm.searchText = '';\r\n    vm.heading = 'Select an author';\r\n    vm.selectKey = 'name';\r\n\r\n    vm.authors = getRandomNameList(40);\r\n\r\n    vm.getSelectedIds = function () {\r\n        return vm.multipleSelectedVals.map(function (elem) {\r\n            return elem.id;\r\n        }).join(', ');\r\n    };\r\n\r\n    vm.clearSelection = function () {\r\n        vm.multipleSelectedVals = [];\r\n    };\r\n\r\n    function getRandomNameList(total) {\r\n        var list = [];\r\n        for (var i = 0; i < total; i++) {\r\n            list.push({\r\n                'id': i + 1,\r\n                'name': chance.name()\r\n            });\r\n        }\r\n        return list;\r\n\r\n    }\r\n\r\n}"},function(e,t){e.exports='{ id: 1, name: "Eric Carpenter" }'},function(e,t){e.exports='<div class="row">\r\n    <div class="col-sm-6 col-xs-12">\r\n        <h4>Single Select</h4>\r\n        <div class="form-group m-nil">\r\n            <dynamic-select ng-model="vm.singleSelectLocation" source="vm.locations" options="vm.singleSelectOptions" ng-disabled="vm.disabled">\r\n            </dynamic-select>\r\n        </div>\r\n        <p class="m-t">\r\n            Selected location: <span ng-bind="vm.singleSelectLocation"></span>\r\n        </p>\r\n    </div>\r\n    <div class="col-sm-6 col-xs-12">\r\n        <div class="form-group m-nil">\r\n            <h4>Multiple Select</h4>\r\n            <dynamic-select multiple ng-model="vm.multipleSelectLocations" source="vm.locationObjects" select-as="country" track-by="id"\r\n                options="vm.multipleSelectOptions" ng-disabled="vm.disabled">\r\n            </dynamic-select>\r\n        </div>\r\n        <p class="m-t">\r\n            Selected locations:\r\n            <span ng-repeat="loc in vm.multipleSelectLocations" ng-bind="loc.country + ($last ? \'\' : \', \')"></span>\r\n        </p>\r\n    </div>\r\n</div>\r\n<div class="row m-t-lg">\r\n    <div class="col-sm-6 col-xs-12">\r\n        <h4>Single Select with Paging</h4>\r\n        <div class="form-group m-nil">\r\n            <dynamic-select ng-model="vm.singleSelectPagingLocation" source="vm.locationPageFn" options="vm.singleSelectOptions" ng-disabled="vm.disabled">\r\n            </dynamic-select>\r\n        </div>\r\n        <p class="m-t">\r\n            Selected location: <span ng-bind="vm.singleSelectPagingLocation"></span>\r\n        </p>\r\n    </div>\r\n    <div class="col-sm-6 col-xs-12">\r\n        <div class="form-group m-nil">\r\n            <h4>Multiple Select with Paging</h4>\r\n            <dynamic-select multiple ng-model="vm.multipleSelectPagingLocations" source="vm.locationObjectPageFn" select-as="country"\r\n                track-by="id" options="vm.multipleSelectOptions" ng-disabled="vm.disabled">\r\n            </dynamic-select>\r\n        </div>\r\n        <p class="m-t">\r\n            Selected locations:\r\n            <span ng-repeat="loc in vm.multipleSelectPagingLocations" ng-bind="loc.country + ($last ? \'\' : \', \')"></span>\r\n        </p>\r\n    </div>\r\n</div>\r\n<div class="row m-t">\r\n    <div class="col-sm-6 col-xs-12">\r\n        <checkbox ng-model="vm.disabled">Disable</checkbox>\r\n    </div>\r\n</div>'},function(e,t){e.exports='angular.module("app").controller("SelectDemoCtrl", SelectDemoCtrl);\r\n\r\nSelectDemoCtrl.$inject = [\'$timeout\', \'$filter\', \'$q\'];\r\n\r\nfunction SelectDemoCtrl($timeout, $filter, $q) {\r\n    var vm = this;\r\n\r\n    // Configuration options for the single select controls\r\n    vm.singleSelectOptions = {\r\n        placeholder: "Select a location",\r\n        pageSize: 20\r\n    };\r\n\r\n    // Configuration options for the multiple select controls\r\n    vm.multipleSelectOptions = {\r\n        placeholder: "Select some locations",\r\n        pageSize: 20\r\n    };\r\n\r\n    // Data source with strings\r\n    vm.locations = [\r\n        "United States",\r\n        "United Kingdom",\r\n        "Afghanistan",\r\n        "Aland Islands",\r\n        "Albania",\r\n        ...\r\n    ];\r\n\r\n    // Data source with objects\r\n    vm.locationObjects = [];\r\n    for (var i in vm.locations) {\r\n        vm.locationObjects.push({\r\n            country: vm.locations[i],\r\n            id: i\r\n        });\r\n    }\r\n\r\n    // Properties to bind to the ng-model attribute of each control\r\n    vm.singleSelectLocation = "";\r\n    vm.multipleSelectLocations = [];\r\n    vm.singleSelectPagingLocation = "";\r\n    vm.multipleSelectPagingLocations = [];\r\n\r\n    // Paging function which returns a promise, and simulates an asynchronous data request\r\n    // Fetches from vm.locations\r\n    vm.locationPageFn = function(pageNumber, pageSize, searchString) {\r\n        var deferred = $q.defer();\r\n        // Simulate a server request using a timeout\r\n        $timeout(function() {\r\n            var results;\r\n            results = $filter(\'filter\')(vm.locations, searchString);\r\n            results = results.slice(pageNumber * pageSize, (pageNumber + 1) * pageSize);\r\n            deferred.resolve(results);\r\n        }, 1000);\r\n        return deferred.promise;\r\n    };\r\n\r\n    // Paging function which returns a promise, and simulates an asynchronous data request\r\n    // Fetches from vm.locationObjects\r\n    vm.locationObjectPageFn = function(pageNumber, pageSize, searchString) {\r\n        var deferred = $q.defer();\r\n        // Simulate a server request using a timeout\r\n        $timeout(function() {\r\n            var results;\r\n            results = $filter(\'filter\')(vm.locationObjects, searchString);\r\n            results = results.slice(pageNumber * pageSize, (pageNumber + 1) * pageSize);\r\n            deferred.resolve(results);\r\n        }, 1000);\r\n        return deferred.promise;\r\n    };\r\n}'},function(e,t){e.exports='angular.module("app").controller("SelectDemoCtrl", SelectDemoCtrl);\r\n\r\nSelectDemoCtrl.$inject = [\'$timeout\', \'$filter\', \'$q\'];\r\n\r\nfunction SelectDemoCtrl($timeout, $filter, $q) {\r\n    var vm = this;\r\n\r\n    // Configuration options for the single select controls\r\n    vm.singleSelectOptions = {\r\n        placeholder: "Select a location",\r\n        pageSize: 20\r\n    };\r\n\r\n    // Configuration options for the multiple select controls\r\n    vm.multipleSelectOptions = {\r\n        placeholder: "Select some locations",\r\n        pageSize: 20\r\n    };\r\n\r\n    // Data source with strings\r\n    vm.locations = [\r\n        "United States",\r\n        "United Kingdom",\r\n        "Afghanistan",\r\n        "Aland Islands",\r\n        "Albania",\r\n        "Algeria",\r\n        "American Samoa",\r\n        "Andorra",\r\n        "Angola",\r\n        "Anguilla",\r\n        "Antarctica",\r\n        "Antigua and Barbuda",\r\n        "Argentina",\r\n        "Armenia",\r\n        "Aruba",\r\n        "Australia",\r\n        "Austria",\r\n        "Azerbaijan",\r\n        "Bahamas",\r\n        "Bahrain",\r\n        "Bangladesh",\r\n        "Barbados",\r\n        "Belarus",\r\n        "Belgium",\r\n        "Belize",\r\n        "Benin",\r\n        "Bermuda",\r\n        "Bhutan",\r\n        "Bolivia, Plurinational State of",\r\n        "Bonaire, Sint Eustatius and Saba",\r\n        "Bosnia and Herzegovina",\r\n        "Botswana",\r\n        "Bouvet Island",\r\n        "Brazil",\r\n        "British Indian Ocean Territory",\r\n        "Brunei Darussalam",\r\n        "Bulgaria",\r\n        "Burkina Faso",\r\n        "Burundi",\r\n        "Cambodia",\r\n        "Cameroon",\r\n        "Canada",\r\n        "Cape Verde",\r\n        "Cayman Islands",\r\n        "Central African Republic",\r\n        "Chad",\r\n        "Chile",\r\n        "China",\r\n        "Christmas Island",\r\n        "Cocos (Keeling) Islands",\r\n        "Colombia",\r\n        "Comoros",\r\n        "Congo",\r\n        "Congo, The Democratic Republic of The",\r\n        "Cook Islands",\r\n        "Costa Rica",\r\n        "Cote D\'ivoire",\r\n        "Croatia",\r\n        "Cuba",\r\n        "Curacao",\r\n        "Cyprus",\r\n        "Czech Republic",\r\n        "Denmark",\r\n        "Djibouti",\r\n        "Dominica",\r\n        "Dominican Republic",\r\n        "Ecuador",\r\n        "Egypt",\r\n        "El Salvador",\r\n        "Equatorial Guinea",\r\n        "Eritrea",\r\n        "Estonia",\r\n        "Ethiopia",\r\n        "Falkland Islands (Malvinas)",\r\n        "Faroe Islands",\r\n        "Fiji",\r\n        "Finland",\r\n        "France",\r\n        "French Guiana",\r\n        "French Polynesia",\r\n        "French Southern Territories",\r\n        "Gabon",\r\n        "Gambia",\r\n        "Georgia",\r\n        "Germany",\r\n        "Ghana",\r\n        "Gibraltar",\r\n        "Greece",\r\n        "Greenland",\r\n        "Grenada",\r\n        "Guadeloupe",\r\n        "Guam",\r\n        "Guatemala",\r\n        "Guernsey",\r\n        "Guinea",\r\n        "Guinea-bissau",\r\n        "Guyana",\r\n        "Haiti",\r\n        "Heard Island and Mcdonald Islands",\r\n        "Holy See (Vatican City State)",\r\n        "Honduras",\r\n        "Hong Kong",\r\n        "Hungary",\r\n        "Iceland",\r\n        "India",\r\n        "Indonesia",\r\n        "Iran, Islamic Republic of",\r\n        "Iraq",\r\n        "Ireland",\r\n        "Isle of Man",\r\n        "Israel",\r\n        "Italy",\r\n        "Jamaica",\r\n        "Japan",\r\n        "Jersey",\r\n        "Jordan",\r\n        "Kazakhstan",\r\n        "Kenya",\r\n        "Kiribati",\r\n        "Korea, Democratic People\'s Republic of",\r\n        "Korea, Republic of",\r\n        "Kuwait",\r\n        "Kyrgyzstan",\r\n        "Lao People\'s Democratic Republic",\r\n        "Latvia",\r\n        "Lebanon",\r\n        "Lesotho",\r\n        "Liberia",\r\n        "Libya",\r\n        "Liechtenstein",\r\n        "Lithuania",\r\n        "Luxembourg",\r\n        "Macao",\r\n        "Macedonia, The Former Yugoslav Republic of",\r\n        "Madagascar",\r\n        "Malawi",\r\n        "Malaysia",\r\n        "Maldives",\r\n        "Mali",\r\n        "Malta",\r\n        "Marshall Islands",\r\n        "Martinique",\r\n        "Mauritania",\r\n        "Mauritius",\r\n        "Mayotte",\r\n        "Mexico",\r\n        "Micronesia, Federated States of",\r\n        "Moldova, Republic of",\r\n        "Monaco",\r\n        "Mongolia",\r\n        "Montenegro",\r\n        "Montserrat",\r\n        "Morocco",\r\n        "Mozambique",\r\n        "Myanmar",\r\n        "Namibia",\r\n        "Nauru",\r\n        "Nepal",\r\n        "Netherlands",\r\n        "New Caledonia",\r\n        "New Zealand",\r\n        "Nicaragua",\r\n        "Niger",\r\n        "Nigeria",\r\n        "Niue",\r\n        "Norfolk Island",\r\n        "Northern Mariana Islands",\r\n        "Norway",\r\n        "Oman",\r\n        "Pakistan",\r\n        "Palau",\r\n        "Palestinian Territory, Occupied",\r\n        "Panama",\r\n        "Papua New Guinea",\r\n        "Paraguay",\r\n        "Peru",\r\n        "Philippines",\r\n        "Pitcairn",\r\n        "Poland",\r\n        "Portugal",\r\n        "Puerto Rico",\r\n        "Qatar",\r\n        "Reunion",\r\n        "Romania",\r\n        "Russian Federation",\r\n        "Rwanda",\r\n        "Saint Barthelemy",\r\n        "Saint Helena, Ascension and Tristan da Cunha",\r\n        "Saint Kitts and Nevis",\r\n        "Saint Lucia",\r\n        "Saint Martin (French part)",\r\n        "Saint Pierre and Miquelon",\r\n        "Saint Vincent and The Grenadines",\r\n        "Samoa",\r\n        "San Marino",\r\n        "Sao Tome and Principe",\r\n        "Saudi Arabia",\r\n        "Senegal",\r\n        "Serbia",\r\n        "Seychelles",\r\n        "Sierra Leone",\r\n        "Singapore",\r\n        "Sint Maarten (Dutch part)",\r\n        "Slovakia",\r\n        "Slovenia",\r\n        "Solomon Islands",\r\n        "Somalia",\r\n        "South Africa",\r\n        "South Georgia and The South Sandwich Islands",\r\n        "South Sudan",\r\n        "Spain",\r\n        "Sri Lanka",\r\n        "Sudan",\r\n        "Suriname",\r\n        "Svalbard and Jan Mayen",\r\n        "Swaziland",\r\n        "Sweden",\r\n        "Switzerland",\r\n        "Syrian Arab Republic",\r\n        "Taiwan, Province of China",\r\n        "Tajikistan",\r\n        "Tanzania, United Republic of",\r\n        "Thailand",\r\n        "Timor-leste",\r\n        "Togo",\r\n        "Tokelau",\r\n        "Tonga",\r\n        "Trinidad and Tobago",\r\n        "Tunisia",\r\n        "Turkey",\r\n        "Turkmenistan",\r\n        "Turks and Caicos Islands",\r\n        "Tuvalu",\r\n        "Uganda",\r\n        "Ukraine",\r\n        "United Arab Emirates",\r\n        "United States Minor Outlying Islands",\r\n        "Uruguay",\r\n        "Uzbekistan",\r\n        "Vanuatu",\r\n        "Venezuela, Bolivarian Republic of",\r\n        "Viet Nam",\r\n        "Virgin Islands, British",\r\n        "Virgin Islands, U.S.",\r\n        "Wallis and Futuna",\r\n        "Western Sahara",\r\n        "Yemen",\r\n        "Zambia",\r\n        "Zimbabwe"\r\n    ];\r\n\r\n    // Data source with objects\r\n    vm.locationObjects = [];\r\n    for (var i in vm.locations) {\r\n        vm.locationObjects.push({\r\n            country: vm.locations[i],\r\n            id: i\r\n        });\r\n    }\r\n\r\n    // Properties to bind to the ng-model attribute of each control\r\n    vm.singleSelectLocation = "";\r\n    vm.multipleSelectLocations = [];\r\n    vm.singleSelectPagingLocation = "";\r\n    vm.multipleSelectPagingLocations = [];\r\n\r\n    // Paging function which returns a promise, and simulates an asynchronous data request\r\n    // Fetches from vm.locations\r\n    vm.locationPageFn = function(pageNumber, pageSize, searchString) {\r\n        var deferred = $q.defer();\r\n        // Simulate a server request using a timeout\r\n        $timeout(function() {\r\n            var results;\r\n            results = $filter(\'filter\')(vm.locations, searchString);\r\n            results = results.slice(pageNumber * pageSize, (pageNumber + 1) * pageSize);\r\n            deferred.resolve(results);\r\n        }, 1000);\r\n        return deferred.promise;\r\n    };\r\n\r\n    // Paging function which returns a promise, and simulates an asynchronous data request\r\n    // Fetches from vm.locationObjects\r\n    vm.locationObjectPageFn = function(pageNumber, pageSize, searchString) {\r\n        var deferred = $q.defer();\r\n        // Simulate a server request using a timeout\r\n        $timeout(function() {\r\n            var results;\r\n            results = $filter(\'filter\')(vm.locationObjects, searchString);\r\n            results = results.slice(pageNumber * pageSize, (pageNumber + 1) * pageSize);\r\n            deferred.resolve(results);\r\n        }, 1000);\r\n        return deferred.promise;\r\n    };\r\n}'},function(e,t){e.exports='<div class="row">\r\n    <div class="col-md-5">\r\n        <div class="row">\r\n            <div class="col-md-6 col-sm-6">\r\n                <label class="m-l-sm m-t-xs"><b ng-bind="::vm.heading"></b></label>\r\n            </div>\r\n            <div class="col-md-6 col-sm-6">\r\n                <input type="text" ng-model="vm.searchTextSingle" ng-change="vm.clearSelection()" placeholder="Search" class="form-control">\r\n            </div>\r\n            <br/>\r\n            <br/>\r\n        </div>\r\n        <select-table values="vm.authors" selected="vm.selectedVal" select-key="vm.selectKey" search-text="vm.searchTextSingle"></select-table>\r\n        <br/>\r\n        <p>Id of the selected value is : <b ng-bind="vm.selectedVal.id"></b></p>\r\n    </div>\r\n</div>'},function(e,t){e.exports='angular.module("app").controller("AdvancedInputCtrl", AdvancedInputCtrl);\r\n\r\nfunction AdvancedInputCtrl() {\r\n    var vm = this;\r\n    vm.selectedVal = "";\r\n    vm.searchTextSingle = "";\r\n    vm.heading = "Select an author";\r\n    vm.selectKey = "name";\r\n\r\n    vm.authors = [{\r\n            id: "1",\r\n            name: chance.name()\r\n        },\r\n        {\r\n            id: "2",\r\n            name: chance.name()\r\n        },\r\n        ...{\r\n            id: "39",\r\n            name: chance.name()\r\n        },\r\n        {\r\n            id: "40",\r\n            name: chance.name()\r\n        }\r\n    ];\r\n}'},function(e,t){e.exports='angular.module("app").controller("SingleSelectTableCtrl", SingleSelectTableCtrl);\r\n\r\nfunction SingleSelectTableCtrl() {\r\n  var vm = this;\r\n\r\n  vm.selectedVal = "";\r\n  vm.tableId = "example-table";\r\n  vm.searchTextSingle = "";\r\n  vm.heading = "Select an author";\r\n  vm.selectKey="name";\r\n  vm.authors = getRandomNameList(40);\r\n\r\n  function getRandomNameList(total) {\r\n    var list = [];\r\n    for (var i = 0; i < total; i++) {\r\n      list.push({"id":i+1,"name":getRandomName(i)});\r\n    }\r\n    return list;\r\n\r\n  }\r\n  function getRandomName(seed) {\r\n    if (window.chance) {\r\n      return window.chance.name();\r\n    }\r\n    return "Mark Brown";\r\n  }\r\n}'},function(e,t){e.exports='angular.module(\'app\').controller(\'LayoutSwitchingSplitterDemoCtrl\', LayoutSwitchingSplitterDemoCtrl);\r\n\r\nfunction LayoutSwitchingSplitterDemoCtrl() {\r\n    var vm = this;\r\n\r\n    vm.middlePanelHidden = false;\r\n    vm.topPanelHidden = false;\r\n    vm.hideMiddle = function() {\r\n        var panel = angular.element("#splitter-panel-to-remove-middle");\r\n        if (!vm.middlePanelHidden) {\r\n            panel.attr("splitter-panel-collapsed", "");\r\n            vm.middlePanelHidden = true;\r\n        } else {\r\n            panel.attr("splitter-panel-collapsed", null);\r\n            vm.middlePanelHidden = false;\r\n        }\r\n        vm.reinitOuter();\r\n    };\r\n\r\n    vm.hideTop = function() {\r\n        var panel = angular.element("#splitter-panel-to-remove-top");\r\n        if (!vm.topPanelHidden) {\r\n            panel.attr("splitter-panel-collapsed", "");\r\n            vm.topPanelHidden = true;\r\n        } else {\r\n            panel.attr("splitter-panel-collapsed", null);\r\n            vm.topPanelHidden = false;\r\n        }\r\n        vm.reinitInner();\r\n    };\r\n\r\n    vm.reinitOuter = {};\r\n    vm.reinitInner = {};\r\n}'},function(e,t){e.exports='<div class="m-b-md">\r\n    <button type="button" class="btn button-secondary" aria-label="Add" ng-click="vm.hideMiddle()" style="min-width:220px;">\r\n\r\n      <span class="hpe-icon hpe-link-top hp-rotate-90" aria-hidden="true" ng-show="!vm.middlePanelHidden"></span>\r\n      <span class="hpe-icon hpe-link-bottom hp-rotate-90" aria-hidden="true" ng-show="!vm.middlePanelHidden"></span>\r\n\r\n      <span class="hpe-icon hpe-link-top hp-rotate-270" aria-hidden="true" ng-show="vm.middlePanelHidden"></span>\r\n      <span class="hpe-icon hpe-link-bottom hp-rotate-270" aria-hidden="true" ng-show="vm.middlePanelHidden"></span>\r\n      &nbsp;\r\n      <span ng-show="!vm.middlePanelHidden">Collapse Middle Panel</span>\r\n      <span ng-show="vm.middlePanelHidden">Show Middle Panel</span>\r\n    </button> &nbsp;\r\n\r\n    <button type="button" class="btn button-secondary" aria-label="Add" ng-disabled="vm.middlePanelHidden" ng-click="vm.hideTop()">\r\n\r\n      <span class="hpe-icon hpe-link-top" aria-hidden="true" ng-show="!vm.topPanelHidden"></span>\r\n      <span class="hpe-icon hpe-link-bottom" aria-hidden="true" ng-show="vm.topPanelHidden"></span>\r\n      &nbsp;\r\n      <span ng-show="!vm.topPanelHidden">Collapse Top Panel</span>\r\n      <span ng-show="vm.topPanelHidden">Show Top Panel</span>\r\n    </button>\r\n\r\n</div>\r\n\r\n<div class="splitter-demo">\r\n\r\n    <splitter direction="horizontal" reinitialize="vm.reinitOuter">\r\n\r\n        <splitter-panel size="30" min-size="50">\r\n            <div class="p-md">\r\n                <h3 class="m-t-nil">Lorem Ipsum Nedir?</h3>\r\n                <p>\r\n                    Lorem ipsum dolor sit amet, ut sit eius erant graecis, in solet iriure prompta vis. Movet noster vix ad. Eu has\r\n                    habeo reque cetero, ne harum iudico sanctus mei. Purto admodum pertinacia in est, vix magna\r\n                    recusabo an, lorem feugait epicuri an eos. Quo eruditi legimus ne.<br /><br\r\n                    /> Qui quot praesent tractatos te, ei has summo gubergren efficiendi. Id quo fabulas facilis,\r\n                    id nam adhuc nulla delicata. Ea duo ubique contentiones. Te est iuvaret utroque eleifend. In\r\n                    eum suas mazim, brute paulo gubergren nam et.<br /><br /> Ea verterem repudiare vel, nec movet\r\n                    definiebas percipitur ei. His in unum posse reprehendunt. Ipsum oportere sea at. Vel ei modus\r\n                    consetetur argumentum. Ius ut facilis interpretaris, ad sea movet munere salutandi. Iuvaret\r\n                    veritus assueverit ut eos, ad qualisque aliquando qui.\r\n                </p>\r\n            </div>\r\n        </splitter-panel>\r\n\r\n        <splitter-panel size="40" min-size="100" id="splitter-panel-to-remove-middle">\r\n\r\n            <splitter direction="vertical" reinitialize="vm.reinitInner">\r\n\r\n                <splitter-panel size="50" min-size="50" id="splitter-panel-to-remove-top">\r\n                    <div class="p-md">\r\n                        <h3 class="m-t-nil">Nereden Gelir</h3>\r\n                        <p>\r\n                            Et per natum atomorum, nostrud comprehensam ne nec. Vim no elitr malorum. Ei timeam nostrud pro, sea habeo rationibus\r\n                            te. His mentitum consulatu in, causae expetenda reprehendunt nec at, te sea quas aliquip.\r\n                            Ne graece ornatus ceteros vim, aeterno adversarium eu vix.\r\n                        </p>\r\n                    </div>\r\n                </splitter-panel>\r\n\r\n                <splitter-panel size="50" min-size="50">\r\n                    <div class="p-md">\r\n                        <h3 class="m-t-nil">Consequat Comprehensam</h3>\r\n                        <p>\r\n                            At eum feugait deserunt, eu vitae fabulas suscipiantur cum, nam soleat suscipit ex. Fugit scaevola definiebas sea\r\n                            te. Augue offendit laboramus nam ei, qui ex legimus civibus necessitatibus. Malis impedit\r\n                            pri cu. In esse iuvaret eam. Ut delicata iracundia vis, te mundi semper pri, sit id\r\n                            graece audire electram.\r\n                        </p>\r\n                    </div>\r\n                </splitter-panel>\r\n\r\n            </splitter>\r\n\r\n        </splitter-panel>\r\n\r\n        <splitter-panel size="30" min-size="50">\r\n            <div class="p-md">\r\n                <h3 class="m-t-nil">Lorem Ipsum Nedir?</h3>\r\n                <p>\r\n                    Lorem ipsum dolor sit amet, ut sit eius erant graecis, in solet iriure prompta vis. Movet noster vix ad. Eu has\r\n                    habeo reque cetero, ne harum iudico sanctus mei. Purto admodum pertinacia in est, vix magna\r\n                    recusabo an, lorem feugait epicuri an eos. Quo eruditi legimus ne.<br /><br\r\n                    /> Qui quot praesent tractatos te, ei has summo gubergren efficiendi. Id quo fabulas facilis,\r\n                    id nam adhuc nulla delicata. Ea duo ubique contentiones. Te est iuvaret utroque eleifend. In\r\n                    eum suas mazim, brute paulo gubergren nam et.<br /><br /> Ea verterem repudiare vel, nec movet\r\n                    definiebas percipitur ei. His in unum posse reprehendunt. Ipsum oportere sea at. Vel ei modus\r\n                    consetetur argumentum. Ius ut facilis interpretaris, ad sea movet munere salutandi. Iuvaret\r\n                    veritus assueverit ut eos, ad qualisque aliquando qui.\r\n                </p>\r\n            </div>\r\n        </splitter-panel>\r\n\r\n    </splitter>\r\n\r\n</div>'},function(e,t){e.exports=".splitter-demo {\r\n    width: 100%;\r\n    max-width: 1000px;\r\n    height: 400px;\r\n    border: 1px solid #f2f2f2;\r\n}"},function(e,t){e.exports='<div class="splitter-demo">\r\n\r\n    <splitter direction="horizontal">\r\n\r\n        <splitter-panel size="60" min-size="200">\r\n            <div class="p-sm">\r\n                <h3 class="m-t-nil">Lorem Ipsum Nedir?</h3>\r\n                <p>\r\n                    Lorem ipsum dolor sit amet, ut sit eius erant graecis...\r\n                </p>\r\n            </div>\r\n        </splitter-panel>\r\n\r\n        <splitter-panel size="40" min-size="200">\r\n\r\n            <splitter direction="vertical">\r\n\r\n                <splitter-panel size="50" min-size="100">\r\n                    <div class="p-sm">\r\n                        <h3 class="m-t-nil">Nereden Gelir</h3>\r\n                        <p>\r\n                            Et per natum atomorum, nostrud comprehensam ne nec...\r\n                    </div>\r\n                </splitter-panel>\r\n\r\n                <splitter-panel size="50" min-size="100">\r\n                    <div class="p-sm">\r\n                        <h3 class="m-t-nil">Consequat Comprehensam</h3>\r\n                        <p>\r\n                            At eum feugait deserunt, eu vitae fabulas suscipiantur cum...\r\n                        </p>\r\n                    </div>\r\n                </splitter-panel>\r\n\r\n            </splitter>\r\n\r\n        </splitter-panel>\r\n\r\n    </splitter>\r\n\r\n</div>'},function(e,t){e.exports='<div class="splitter-demo">\r\n\r\n    <splitter direction="horizontal">\r\n\r\n        <splitter-panel size="60" min-size="200">\r\n            <div class="p-sm">\r\n                <h3 class="m-t-nil">Lorem Ipsum Nedir?</h3>\r\n                <p>\r\n                    Lorem ipsum dolor sit amet, ut sit eius erant graecis, in solet iriure prompta vis. Movet noster vix ad. Eu has\r\n                    habeo reque cetero, ne harum iudico sanctus mei. Purto admodum pertinacia in est, vix magna\r\n                    recusabo an, lorem feugait epicuri an eos. Quo eruditi legimus ne.<br /><br\r\n                    /> Qui quot praesent tractatos te, ei has summo gubergren efficiendi. Id quo fabulas facilis,\r\n                    id nam adhuc nulla delicata. Ea duo ubique contentiones. Te est iuvaret utroque eleifend. In\r\n                    eum suas mazim, brute paulo gubergren nam et.<br /><br /> Ea verterem repudiare vel, nec movet\r\n                    definiebas percipitur ei. His in unum posse reprehendunt. Ipsum oportere sea at. Vel ei modus\r\n                    consetetur argumentum. Ius ut facilis interpretaris, ad sea movet munere salutandi. Iuvaret\r\n                    veritus assueverit ut eos, ad qualisque aliquando qui.\r\n                </p>\r\n            </div>\r\n        </splitter-panel>\r\n\r\n        <splitter-panel size="40" min-size="200">\r\n\r\n            <splitter direction="vertical">\r\n\r\n                <splitter-panel size="50" min-size="100">\r\n                    <div class="p-sm">\r\n                        <h3 class="m-t-nil">Nereden Gelir</h3>\r\n                        <p>\r\n                            Et per natum atomorum, nostrud comprehensam ne nec. Vim no elitr malorum. Ei timeam nostrud pro, sea habeo rationibus\r\n                            te. His mentitum consulatu in, causae expetenda reprehendunt nec at, te sea quas aliquip.\r\n                            Ne graece ornatus ceteros vim, aeterno adversarium eu vix.\r\n                        </p>\r\n                    </div>\r\n                </splitter-panel>\r\n\r\n                <splitter-panel size="50" min-size="100">\r\n                    <div class="p-sm">\r\n                        <h3 class="m-t-nil">Consequat Comprehensam</h3>\r\n                        <p>\r\n                            At eum feugait deserunt, eu vitae fabulas suscipiantur cum, nam soleat suscipit ex. Fugit scaevola definiebas sea\r\n                            te. Augue offendit laboramus nam ei, qui ex legimus civibus necessitatibus. Malis impedit\r\n                            pri cu. In esse iuvaret eam. Ut delicata iracundia vis, te mundi semper pri, sit id\r\n                            graece audire electram.\r\n                        </p>\r\n                    </div>\r\n                </splitter-panel>\r\n\r\n            </splitter>\r\n\r\n        </splitter-panel>\r\n\r\n    </splitter>\r\n\r\n</div>'},function(e,t){e.exports=".splitter-demo {\r\n    width: 100%;\r\n    max-width: 1000px;\r\n    height: 400px;\r\n    border: 1px solid #f2f2f2;\r\n}"},function(e,t){e.exports="angular.module('app').controller('SideInsetPanelSplitterDemoCtrl', SideInsetPanelSplitterDemoCtrl);\r\n\r\nfunction SideInsetPanelSplitterDemoCtrl() {\r\n    var vm = this;\r\n}"},function(e,t){e.exports='<splitter direction="horizontal">\r\n\r\n    <splitter-panel size="50" min-size="10" splitter-side>\r\n        <div class="p-sm p-t-lg">\r\n            <h3 class="m-t-nil">Nereden Gelir</h3>\r\n            <p>\r\n                Et per natum atomorum, nostrud comprehensam ne nec...\r\n            </p>\r\n        </div>\r\n    </splitter-panel>\r\n\r\n    <splitter-panel size="50" min-size="10" splitter-main>\r\n        <div class="p-sm p-t-lg">\r\n            <h3 class="m-t-nil">Consequat Comprehensam</h3>\r\n            <p>\r\n                At eum feugait deserunt, eu vitae fabulas suscipiantur cum...\r\n            </p>\r\n        </div>\r\n    </splitter-panel>\r\n\r\n</splitter>'},function(e,t){e.exports='<div class="splitter-demo">\r\n\r\n    <splitter direction="horizontal">\r\n\r\n        <splitter-panel size="50" min-size="10" splitter-side>\r\n            <div class="p-sm p-t-lg">\r\n                <h3 class="m-t-nil">Nereden Gelir</h3>\r\n                <p>\r\n                    Et per natum atomorum, nostrud comprehensam ne nec. Vim no elitr malorum. Ei timeam nostrud pro, sea habeo rationibus\r\n                    te. His mentitum consulatu in, causae expetenda reprehendunt nec at, te sea quas aliquip. Ne\r\n                    graece ornatus ceteros vim, aeterno adversarium eu vix. Et per natum atomorum, nostrud comprehensam\r\n                    ne nec. Vim no elitr malorum. Ei timeam nostrud pro, sea habeo rationibus te. His mentitum\r\n                    consulatu in, causae expetenda reprehendunt nec at, te sea quas aliquip. Ne graece ornatus\r\n                    ceteros vim, aeterno adversarium eu vix.\r\n                </p>\r\n            </div>\r\n        </splitter-panel>\r\n\r\n        <splitter-panel size="50" min-size="10" splitter-main>\r\n            <div class="p-sm p-t-lg">\r\n                <h3 class="m-t-nil">Consequat Comprehensam</h3>\r\n                <p>\r\n                    At eum feugait deserunt, eu vitae fabulas suscipiantur cum, nam soleat suscipit ex. Fugit scaevola definiebas sea\r\n                    te. Augue offendit laboramus nam ei, qui ex legimus civibus necessitatibus. Malis impedit pri\r\n                    cu. In esse iuvaret eam. Ut delicata iracundia vis, te mundi semper pri, sit id graece audire\r\n                    electram. At eum feugait deserunt, eu vitae fabulas suscipiantur cum, nam soleat suscipit ex.\r\n                    Fugit scaevola definiebas sea te. Augue offendit laboramus nam ei, qui ex legimus civibus necessitatibus.\r\n                    Malis impedit pri cu. In esse iuvaret eam. Ut delicata iracundia vis, te mundi semper pri,\r\n                    sit id graece audire electram.\r\n                </p>\r\n            </div>\r\n        </splitter-panel>\r\n\r\n    </splitter>\r\n\r\n</div>\r\n\r\n<div class="splitter-demo m-t-lg">\r\n\r\n    <splitter direction="vertical">\r\n\r\n        <splitter-panel size="50" min-size="10" splitter-main>\r\n            <div class="p-sm">\r\n                <h3 class="m-t-nil">Sed Euismod</h3>\r\n                <p>\r\n                    Sed euismod sollicitudin ipsum, consequat interdum dolor. Nulla luctus ultrices lectus, cursus faucibus odio euismod\r\n                    et. Mauris feugiat et lectus id faucibus. Nunc semper fermentum diam. Aliquam finibus sed dui\r\n                    eu molestie. Mauris in velit eu augue fringilla auctor vel viverra nibh. Donec ultrices arcu\r\n                    ipsum, a porttitor leo aliquam eu. Etiam scelerisque libero sed turpis tristique consequat.\r\n                    Fusce non eleifend ligula, eu interdum mauris.\r\n                </p>\r\n            </div>\r\n        </splitter-panel>\r\n\r\n        <splitter-panel size="50" min-size="10" splitter-side>\r\n            <div class="p-sm">\r\n                <h3 class="m-t-nil">Lorem Ipsum</h3>\r\n                <p>\r\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna\r\n                    aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip\r\n                    ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum\r\n                    dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa\r\n                    qui officia deserunt mollit anim id est laborum.\r\n                </p>\r\n            </div>\r\n        </splitter-panel>\r\n\r\n    </splitter>\r\n\r\n</div>'},function(e,t){e.exports=".splitter-demo {\r\n    width: 100%;\r\n    max-width: 1000px;\r\n    height: 400px;\r\n    border: 1px solid #f2f2f2;\r\n}"},function(e,t){e.exports="angular.module('app').controller('SplitterDemoCtrl', SplitterDemoCtrl);\r\n\r\nfunction SplitterDemoCtrl() {\r\n    var vm = this;\r\n\r\n    vm.dragStart = function () {\r\n        //this will be called when the user begins to drag\r\n    };\r\n\r\n    vm.drag = function () {\r\n        //this will be called when the moves the divider\r\n    };\r\n\r\n    vm.dragEnd = function () {\r\n        //this will be called when the user has finished dragging\r\n    };\r\n}"},function(e,t){e.exports="body, .wrapper, .page-content , .page-content  > div  {\r\n  height: 100%;\r\n}\r\n\r\n.splitter-container{\r\n  height:calc(100% - 57px);\r\n}"},function(e,t){e.exports='<div class="splitter-demo">\r\n\r\n    <splitter direction="horizontal" gutter-size="10" snap-offset="30" on-drag-start="vm.dragStart" on-drag="vm.drag"\r\n        on-drag-end="vm.dragEnd">\r\n\r\n        <splitter-panel size="40" min-size="200">\r\n            <div class="p-sm">\r\n                <h3 class="m-t-nil">Lorem Ipsum Nedir?</h3>\r\n                <p>\r\n                    Lorem ipsum dolor sit amet, ut sit eius erant graecis...\r\n                </p>\r\n            </div>\r\n        </splitter-panel>\r\n\r\n        <splitter-panel size="60" min-size="200">\r\n            <div class="p-sm">\r\n                <h3 class="m-t-nil">Nereden Gelir</h3>\r\n                <p>\r\n                    Et per natum atomorum, nostrud comprehensam ne nec...\r\n                </p>\r\n            </div>\r\n        </splitter-panel>\r\n\r\n    </splitter>\r\n\r\n</div>'},function(e,t){e.exports='<div class="splitter-demo">\r\n\r\n    <splitter direction="horizontal" gutter-size="10" snap-offset="30" on-drag-start="vm.dragStart" on-drag="vm.drag"\r\n        on-drag-end="vm.dragEnd">\r\n\r\n        <splitter-panel size="40" min-size="200">\r\n            <div class="p-sm">\r\n                <h3 class="m-t-nil">Lorem Ipsum Nedir?</h3>\r\n                <p>\r\n                    Lorem ipsum dolor sit amet, ut sit eius erant graecis, in solet iriure prompta vis. Movet noster vix ad. Eu has\r\n                    habeo reque cetero, ne harum iudico sanctus mei. Purto admodum pertinacia in est, vix magna\r\n                    recusabo an, lorem feugait epicuri an eos. Quo eruditi legimus ne.<br /><br\r\n                    /> Qui quot praesent tractatos te, ei has summo gubergren efficiendi. Id quo fabulas facilis,\r\n                    id nam adhuc nulla delicata. Ea duo ubique contentiones. Te est iuvaret utroque eleifend. In\r\n                    eum suas mazim, brute paulo gubergren nam et.\r\n                </p>\r\n            </div>\r\n        </splitter-panel>\r\n\r\n        <splitter-panel size="60" min-size="200">\r\n            <div class="p-sm">\r\n                <h3 class="m-t-nil">Nereden Gelir</h3>\r\n                <p>\r\n                    Et per natum atomorum, nostrud comprehensam ne nec. Vim no elitr malorum. Ei timeam nostrud pro, sea habeo rationibus\r\n                    te. His mentitum consulatu in, causae expetenda reprehendunt nec at, te sea quas aliquip. Ne\r\n                    graece ornatus ceteros vim, aeterno adversarium eu vix.\r\n                    <br /><br /> Zril soleat definiebas cum te, intellegat repudiandae est ei, nemore quaeque denique\r\n                    eos te. Ex alii nulla eos, percipit tincidunt ut vim. Sed cu harum salutatus posidonium. Nec\r\n                    agam etiam iudico ut, ea rebum mucius dictas vix, posse assum ut mel.\r\n                    <br /><br /> Consequat comprehensam ut vim. Velit rationibus consequuntur mel ex, aperiam integre\r\n                    ad vix. Vim et eius oblique philosophia. Ei sea accumsan detracto corrumpit.\r\n                </p>\r\n            </div>\r\n        </splitter-panel>\r\n\r\n    </splitter>\r\n\r\n</div>'},function(e,t){e.exports=".splitter-demo {\r\n    width: 100%;\r\n    max-width: 1000px;\r\n    height: 400px;\r\n    border: 1px solid #f2f2f2;\r\n}"},function(e,t){e.exports='angular.module("app").controller("ColumnVisibilityCtrl", ColumnVisibilityCtrl);\r\n\r\nfunction ColumnVisibilityCtrl() {\r\n    var vm = this;\r\n\r\n    vm.columns = {\r\n        id: true,\r\n        data: true,\r\n        user: true,\r\n        value: true\r\n    };\r\n\r\n    vm.tableData = [{\r\n        data: 156,\r\n        user: chance.name(),\r\n        value: 40\r\n    }, {\r\n        data: 226,\r\n        user: chance.name(),\r\n        value: -20\r\n    }, {\r\n        data: 52,\r\n        user: chance.name(),\r\n        value: 26\r\n    }, {\r\n        data: 461,\r\n        user: chance.name(),\r\n        value: -23\r\n    }, {\r\n        data: 119,\r\n        user: chance.name(),\r\n        value: 16\r\n    }];\r\n}'},function(e,t){e.exports='<table class="table table-hover">\r\n    <thead>\r\n        <tr>\r\n            <th ng-if="vm.columns.id">ID</th>\r\n            <th ng-if="vm.columns.data">Data</th>\r\n            <th ng-if="vm.columns.user">User</th>\r\n            <th ng-if="vm.columns.value">Value</th>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        <tr ng-repeat="item in vm.tableData">\r\n            <td ng-if="vm.columns.id" ng-bind="::$index + 1"></td>\r\n            <td ng-if="vm.columns.data" ng-bind="::item.data"></td>\r\n            <td ng-if="vm.columns.user" ng-bind="::item.user"></td>\r\n            <td ng-if="vm.columns.value" ng-class="{ \'text-success\': item.value >= 0, \'chart-purple\': item.value < 0 }">\r\n                <i class="hpe-icon" ng-class="{ \'hpe-ascend\': item.value >= 0, \'hpe-descend\': item.value < 0 }"></i>\r\n                <span ng-bind="::item.value"></span>%\r\n            </td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n\r\n<br>\r\n<h4>Toggle Visibility of Table Columns:</h4>\r\n<br>\r\n<div class="row">\r\n    <div class="col-md-3 col-sm-6">\r\n        <checkbox ng-model="vm.columns.id">Show ID Column</checkbox>\r\n    </div>\r\n    <div class="col-md-3 col-sm-6">\r\n        <checkbox ng-model="vm.columns.data">Show Data Column</checkbox>\r\n    </div>\r\n    <div class="col-md-3 col-sm-6">\r\n        <checkbox ng-model="vm.columns.user">Show User Column</checkbox>\r\n    </div>\r\n    <div class="col-md-3 col-sm-6">\r\n        <checkbox ng-model="vm.columns.value">Show Value Column</checkbox>\r\n    </div>\r\n</div>'},function(e,t){e.exports="/*\r\n    Custom Responsive Table\r\n*/\r\n.custom-responsive-narrow-column {\r\n    width: 50px;\r\n}"},function(e,t){e.exports='<div class="row m-b-xs">\r\n    <div class="col-sm-5">\r\n        <dynamic-select ng-model="vm.selected" source="vm.items" options="{ scroll: false }"></dynamic-select>\r\n    </div>\r\n    <div class="col-sm-4 ">\r\n        <div aria-label="Timespan" class="btn-group" data-toggle="buttons">\r\n            <label class="btn  btn-white btn-grouped">\r\n            <input id="option1" name="options" type="radio">\r\n            Day\r\n        </label>\r\n            <label class="btn btn-white btn-grouped active">\r\n            <input id="option2" name="options" type="radio">\r\n            Week\r\n        </label>\r\n            <label class="btn  btn-white btn-grouped">\r\n            <input id="option3" name="options" type="radio">\r\n            Month\r\n        </label>\r\n        </div>\r\n    </div>\r\n    <div class="col-sm-3">\r\n        <div class="input-group">\r\n            <label class="sr-only" for="search">Search for</label>\r\n            <input class="input form-control" name="search" placeholder="Search" type="text">\r\n            <span class="input-group-btn">\r\n                <button class="btn button-accent" type="button">Go</button>\r\n            </span>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class="horizontal-scrollbar">\r\n    <table class="table table-hover">\r\n        <thead>\r\n            <tr>\r\n                <th></th>\r\n                <th>Project</th>\r\n                <th>Completed</th>\r\n                <th>Task</th>\r\n                <th>Date</th>\r\n                <th>Action</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr>\r\n                <td class="custom-responsive-narrow-column">\r\n                    <checkbox ng-model="checked1"></checkbox>\r\n                </td>\r\n                <td>UX Aspects\r\n                    <small>UI project</small>\r\n                </td>\r\n                <td>20</td>\r\n                <td>20%</td>\r\n                <td>Jul 14, 2013</td>\r\n                <td>\r\n                    <span class="hpe-icon hpe-checkmark text-secondary"></span>\r\n                </td>\r\n            </tr>\r\n            <tr>\r\n                <td class="custom-responsive-narrow-column">\r\n                    <checkbox ng-model="checked2"></checkbox>\r\n                </td>\r\n                <td>Hardware project</td>\r\n                <td>4</td>\r\n                <td>40%</td>\r\n                <td>Jul 16, 2013</td>\r\n                <td>\r\n                    <span class="hpe-icon hpe-checkmark text-secondary"></span>\r\n                </td>\r\n            </tr>\r\n            <tr>\r\n                <td class="custom-responsive-narrow-column">\r\n                    <checkbox ng-model="checked3"></checkbox>\r\n                </td>\r\n                <td>Cloud project</td>\r\n                <td>9</td>\r\n                <td>75%</td>\r\n                <td>Jul 18, 2013</td>\r\n                <td>\r\n                    <span class="hpe-icon hpe-checkmark text-secondary"></span>\r\n                </td>\r\n            </tr>\r\n            <tr>\r\n                <td class="custom-responsive-narrow-column">\r\n                    <checkbox ng-model="checked4"></checkbox>\r\n                </td>\r\n                <td>Client project</td>\r\n                <td>34</td>\r\n                <td>18%</td>\r\n                <td>Jul 22, 2013</td>\r\n                <td>\r\n                    <span class="hpe-icon hpe-checkmark text-secondary"></span>\r\n                </td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n</div>'},function(e,t){e.exports="angular.module('app').controller('CustomResponsiveTableCtrl', CustomResponsiveTableCtrl);\r\n\r\nfunction CustomResponsiveTableCtrl() {\r\n    var vm = this;\r\n\r\n    vm.items = ['Option 1', 'Option 2', 'Option 3', 'Options 4'];\r\n    vm.selected = vm.items[0];\r\n}"},function(e,t){e.exports='angular.module("app").controller("DetailRowResponsiveTableCtrl", DetailRowResponsiveTableCtrl);\r\n\r\nDetailRowResponsiveTableCtrl.$inject = ["$scope", "exampleDataService"];\r\n\r\nfunction DetailRowResponsiveTableCtrl($scope, exampleDataService) {\r\n\r\n    var vm = this;\r\n    vm.service = exampleDataService;\r\n\r\n    vm.detailRowHeaders = [{\r\n            title: "Type",\r\n            class: "col-xs-1"\r\n        },\r\n        {\r\n            title: "Participant",\r\n            class: "col-xs-3"\r\n        },\r\n        {\r\n            title: "From Address",\r\n            class: "col-xs-3",\r\n            sort: "address",\r\n            filter: "detailRowHeaderPopover.html",\r\n            filterClass: "demo-filter"\r\n        },\r\n        {\r\n            title: "Subject",\r\n            class: "col-xs-3",\r\n            sort: "subject"\r\n        },\r\n        {\r\n            title: "Message Score",\r\n            class: "col-xs-2",\r\n            sort: "percent"\r\n        }\r\n    ];\r\n\r\n    vm.activeSorter = [null, null, null];\r\n    vm.sortOrder = ["none", "none", "none"];\r\n    vm.detailRowTable = vm.service.getDetailRowTable(vm.activeSorter, vm.sortOrder);\r\n\r\n    //An example method which finds the active sorter from the select() function\r\n    vm.applySorter = function () {\r\n        vm.detailRowHeaders.forEach(function (detailRowHeaders) {\r\n            detailRowHeaders.select = function (activeSorter, ascending) {\r\n                vm.activeSorter = activeSorter;\r\n                vm.sortOrder = ascending;\r\n                vm.detailRowTable = vm.service.getDetailRowTable(vm.activeSorter, vm.sortOrder);\r\n            };\r\n        });\r\n    };\r\n\r\n    vm.applySorter();\r\n\r\n    //watches for when the filter has been added before updating the table\r\n    $scope.$on(\'detailRowTableUpdated\', function () {\r\n        vm.detailRowTable = vm.service.getDetailRowTable(vm.activeSorter, vm.sortOrder);\r\n    });\r\n\r\n}'},function(e,t){e.exports='<scrollable-table watch="sampleTableData" container-height="400" header-height="35">\r\n  <table class="table table-hover">\r\n    <thead>\r\n      <tr>\r\n        <th detail-row-header headers="vm.detailRowHeaders"></th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n    <tr ng-repeat="item in vm.detailRowTable" class="detail-table clickable" ng-click="details()">\r\n      <td>\r\n        <div class="row m-b-xs rowitem">\r\n          <div class="col-xs-1 m-t-xs">\r\n            <i class="hpe-icon" ng-class="item.rowType" aria-hidden="true"></i>\r\n          </div>\r\n          <div class="col-xs-3">\r\n            <contact-group contacts="item.contacts" organization="item.organization" size="item.medium" colors="item.colorsPrimary"></contact-group>\r\n          </div>\r\n          <div class="col-xs-3 m-t-xs">\r\n            <div ng-bind="::item.address" single-line-overflow-tooltip></div>\r\n          </div>\r\n          <div class="col-xs-3 m-t-xs">\r\n            <div ng-bind="::item.subject" single-line-overflow-tooltip></div>\r\n          </div>\r\n          <div class="col-xs-2 m-t-xs">\r\n            <spark type="item.type" value="item.percent" fillheight="3" inline-label="item.sparklabel"  top="13"></spark>\r\n          </div>\r\n        </div>\r\n        <div class="row">\r\n          <div class="col-xs-1"></div>\r\n          <div class="col-xs-9 overflow" ng-bind="::item.detail" overflow-tooltip></div>\r\n          <div class="col-xs-2"></div>\r\n        </div>\r\n      </td>\r\n    </tr>\r\n    </tbody>\r\n  </table>\r\n</scrollable-table>'},function(e,t){e.exports='angular.module("app").controller("DetailRowHeaderPopoverCtrl", DetailRowHeaderPopoverCtrl);\r\n\r\nDetailRowHeaderPopoverCtrl.$inject = ["$scope", "exampleDataService"];\r\n\r\nfunction DetailRowHeaderPopoverCtrl($scope, exampleDataService) {\r\n    var vm = this;\r\n\r\n    vm.scrollBarConfig = {\r\n        autoReinitialise: true,\r\n        autoReinitialiseDelay: 50,\r\n        enableKeyboardNavigation: true,\r\n        scrollMargin: 5\r\n    };\r\n\r\n    // public values\r\n    vm.filterList = [];\r\n\r\n    vm.updateSelected = function (value) {\r\n        value.active = !value.active;\r\n    };\r\n\r\n    // private values\r\n    var activeFilters = [];\r\n    var addresses = exampleDataService.getFilterList();\r\n\r\n    for (var i = 0; i < addresses.length; i++) {\r\n        var address = {\r\n            address: addresses[i],\r\n            active: false\r\n        };\r\n        vm.filterList.push(address);\r\n    }\r\n\r\n    vm.apply = function () {\r\n        activeFilters = [];\r\n        for (var i = 0; i < vm.filterList.length; i++) {\r\n            if (vm.filterList[i].active) {\r\n                activeFilters.push(vm.filterList[i].address);\r\n            }\r\n        }\r\n        if (activeFilters.length > 0) {\r\n            $scope.setFilterActive(true);\r\n        } else {\r\n            $scope.setFilterActive(false);\r\n        }\r\n        exampleDataService.applyFilters(activeFilters);\r\n        $scope.closePopover();\r\n    };\r\n\r\n    vm.reset = function () {\r\n        activeFilters = [];\r\n        for (var i = 0; i < vm.filterList.length; i++) {\r\n            vm.filterList[i].active = false;\r\n        }\r\n        $scope.setFilterActive(false);\r\n        exampleDataService.applyFilters(activeFilters);\r\n    };\r\n\r\n    vm.cancel = function () {\r\n        $scope.closePopover();\r\n    };\r\n\r\n    $scope.$on("detailRowHeaderPopoverClosed", function () {\r\n        for (var i = 0; i < vm.filterList.length; i++) {\r\n            if (activeFilters.indexOf(vm.filterList[i].address) > -1) {\r\n                vm.filterList[i].active = true;\r\n            } else {\r\n                vm.filterList[i].active = false;\r\n            }\r\n        }\r\n    });\r\n}'},function(e,t){e.exports='<div ng-controller="DetailRowHeaderPopoverCtrl as vm">\r\n\r\n  <div class="detail-row-popover" scroll-config="vm.scrollBarConfig" scroll-pane scroll-name="scrollExample1">\r\n\r\n    <table class="table table-hover m-b-nil">\r\n      <tbody>\r\n        <tr ng-repeat="filter in vm.filterList" ng-click="vm.updateSelected(filter)">\r\n          <td>\r\n            <checkbox ng-model="filter.active" simplified="true">\r\n                <span class="listview-text-emphasis" ng-bind="filter.address"></span>\r\n            </checkbox>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n\r\n  </div>\r\n\r\n  <div class="dropdown-footer">\r\n    <button type="button" class="btn btn-w-m btn-white m-r-lg m-l-sm" ng-click="vm.reset()">Reset</button>\r\n    <button type="button" class="btn btn-w-m btn-primary m-r-sm" ng-click="vm.apply()">Apply</button>\r\n    <button type="button" class="btn btn-w-m btn-white m-cancel" ng-click="vm.cancel()">Cancel</button>\r\n  </div>\r\n\r\n</div>'},function(e,t){e.exports="//the sorting and filtering on the table must be handled in a service, below is an example of how this can be achieved.\r\nangular.module(\"app\").service(\"exampleDataService\", exampleDataService);\r\n\r\nexampleDataService.$inject = [\"$rootScope\", \"$colorService\"];\r\n\r\nfunction exampleDataService($rootScope, $colorService) {\r\n    var detailRowTable = [{\r\n        id: 1,\r\n        rowType: 'hpe-mail',\r\n        address: 'jessica.hardacre@business.com',\r\n        contacts: [{\r\n            text: \"Jessica  Hardacre\",\r\n        }],\r\n        organization: {\r\n            text: \"Trading\",\r\n        },\r\n        colorsPrimary: {\r\n            primary: $colorService.getColor('primary').toHex(),\r\n            secondary: \"#ffffff\"\r\n        },\r\n        medium: 'small',\r\n        percent: 39,\r\n        type: \"spark-primary\",\r\n        sparklabel: \"<span class=\\'hidden-spark\\'>0.39</span>\",\r\n        subject: 're: hi, This is a test email.',\r\n        detail: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris fringilla, nunc sit amet faucibus' +\r\n            'dapibus, est purus luctus magna, ut tempus orci quam vitae diam. Aenean congue ultricies leo, ut aliquam nibh.' +\r\n            'Integer facilisis tortor id ligula mollis, eget pretium sapien tempor.' +\r\n            ' Suspendisse quis tempus ante. Curabitur vulputate, felis non blandit dapibus.'\r\n\r\n    }, {\r\n        id: 2,\r\n        rowType: 'hpe-mail',\r\n        address: 'oliver.hudson@business.com',\r\n        contacts: [{\r\n            text: \"Oliver Hudson\",\r\n        }],\r\n        organization: {\r\n            text: \"Trading\",\r\n        },\r\n        colorsPrimary: {\r\n            primary: $colorService.getColor('primary').toHex(),\r\n            secondary: \"#ffffff\"\r\n        },\r\n        medium: 'small',\r\n        subject: 're: hi, Attention! This email is high priority.',\r\n        percent: 55,\r\n        type: \"spark-primary\",\r\n        sparklabel: \"<span class=\\'hidden-spark\\'>0.55</span>\",\r\n        detail: 'Aenean congue ultricies leo, ut aliquam nibh. Integer facilisis tortor id ligula mollis, eget pretium sapien tempor.' +\r\n            ' Suspendisse quis tempus ante. Curabitur vulputate, felis non blandit dapibus. Duis volutpat nunc vel volutpat nunc vel metus ultrices.'\r\n    }, {\r\n        id: 3,\r\n        rowType: 'hpe-mail',\r\n        address: 'adam.parker@business.com',\r\n        contacts: [{\r\n            text: \"Adam Parker\",\r\n        }],\r\n        organization: {\r\n            text: \"HR\",\r\n        },\r\n        colorsPrimary: {\r\n            primary: $colorService.getColor('accent').toHex(),\r\n            secondary: \"#ffffff\"\r\n        },\r\n        medium: 'small',\r\n        subject: 're: hi, There is something related.',\r\n        percent: 44,\r\n        type: \"spark-primary\",\r\n        sparklabel: \"<span class=\\'hidden-spark\\'>0.44</span>\",\r\n        detail: 'Duis volutpat nunc vel metus ultrices, vel cursus nisl scelerisque. Nulla facilisis ipsum ligula, nec' +\r\n            'blandit dolor aliquam a. Aenean posuere enim ligula, eu convallis mauris pulvinar nec.' +\r\n            'Praesent risus massa, rhoncus pretium massa non, blandit gravida risus. Duis ut orci dolor. Sed congue' +\r\n            'fermentum ante, a pellentesque quam gravida vel.'\r\n    }, {\r\n        id: 4,\r\n        rowType: 'hpe-mail',\r\n        address: 'adam.jackson@business.com',\r\n        contacts: [{\r\n            text: \"Adam Jackson\",\r\n        }],\r\n        organization: {\r\n            text: \"Investing\",\r\n        },\r\n        colorsPrimary: {\r\n            primary: $colorService.getColor('primary').toHex(),\r\n            secondary: \"#ffffff\"\r\n        },\r\n        medium: 'small',\r\n        subject: 're: hi, This is an example.',\r\n        percent: 67,\r\n        type: \"spark-primary\",\r\n        sparklabel: \"<span class=\\'hidden-spark\\'>0.67</span>\",\r\n        detail: 'Praesent risus massa, rhoncus pretium massa non, blandit gravida risus. Duis ut orci dolor. Sed congue' +\r\n            'fermentum ante, a pellentesque quam gravida vel. Praesent risus massa, rhoncus pretium massa non.'\r\n    }, {\r\n        id: 5,\r\n        rowType: 'hpe-mail',\r\n        address: 'arthur.curry@business.com',\r\n        contacts: [{\r\n            text: \"Arthur Curry\",\r\n        }],\r\n        organization: {\r\n            text: \"Investing\",\r\n        },\r\n        colorsPrimary: {\r\n            primary: $colorService.getColor('primary').toHex(),\r\n            secondary: \"#ffffff\"\r\n        },\r\n        medium: 'small',\r\n        subject: 'UX Aspects',\r\n        percent: 98,\r\n        type: \"spark-primary\",\r\n        sparklabel: \"<span class=\\'hidden-spark\\'>0.98</span>\",\r\n        detail: 'Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.'\r\n    }, {\r\n        id: 6,\r\n        rowType: 'hpe-mail',\r\n        address: 'arthur.curry@business.com',\r\n        contacts: [{\r\n            text: \"Arthur Curry\",\r\n        }],\r\n        organization: {\r\n            text: \"Investing\",\r\n        },\r\n        colorsPrimary: {\r\n            primary: $colorService.getColor('primary').toHex(),\r\n            secondary: \"#ffffff\"\r\n        },\r\n        medium: 'small',\r\n        subject: 're: UX Aspects',\r\n        percent: 92,\r\n        type: \"spark-primary\",\r\n        sparklabel: \"<span class=\\'hidden-spark\\'>0.92</span>\",\r\n        detail: 'Ut enim ad minima veniam, quis nostrum exercitationem ullam corporis suscipit laboriosam, nisi ut aliquid ex ea commodi consequatur?'\r\n    }, {\r\n        id: 7,\r\n        rowType: 'hpe-mail',\r\n        address: 'andrew.robinson@business.com',\r\n        contacts: [{\r\n            text: \"Andrew Robinson\",\r\n        }],\r\n        organization: {\r\n            text: \"Investing\",\r\n        },\r\n        colorsPrimary: {\r\n            primary: $colorService.getColor('primary').toHex(),\r\n            secondary: \"#ffffff\"\r\n        },\r\n        medium: 'small',\r\n        subject: 'Software',\r\n        percent: 43,\r\n        type: \"spark-primary\",\r\n        sparklabel: \"<span class=\\'hidden-spark\\'>0.43</span>\",\r\n        detail: 'Quis autem vel eum iure reprehenderit qui in ea voluptate velit esse quam nihil ' +\r\n            'molestiae consequatur, vel illum qui dolorem eum fugiat quo voluptas nulla pariatur?'\r\n    }, {\r\n        id: 8,\r\n        rowType: 'hpe-mail',\r\n        address: 'john.munn@business.com',\r\n        contacts: [{\r\n            text: \"John Munn\",\r\n        }],\r\n        organization: {\r\n            text: \"Investing\",\r\n        },\r\n        colorsPrimary: {\r\n            primary: $colorService.getColor('primary').toHex(),\r\n            secondary: \"#ffffff\"\r\n        },\r\n        medium: 'small',\r\n        subject: 'CAF',\r\n        percent: 13,\r\n        type: \"spark-primary\",\r\n        sparklabel: \"<span class=\\'hidden-spark\\'>0.13</span>\",\r\n        detail: 'Nam libero tempore, cum soluta nobis est eligendi optio cumque nihil impedit quo minus id quod maxime placeat facere possimus,' +\r\n            'omnis voluptas assumenda est, omnis dolor repellendus'\r\n    }, {\r\n        id: 9,\r\n        rowType: 'hpe-mail',\r\n        address: 'lauren.thompson@business.com',\r\n        contacts: [{\r\n            text: \"Lauren Thompson\",\r\n        }],\r\n        organization: {\r\n            text: \"HR\",\r\n        },\r\n        colorsPrimary: {\r\n            primary: $colorService.getColor('accent').toHex(),\r\n            secondary: \"#ffffff\"\r\n        },\r\n        medium: 'small',\r\n        subject: 'News',\r\n        percent: 83,\r\n        type: \"spark-primary\",\r\n        sparklabel: \"<span class=\\'hidden-spark\\'>0.83</span>\",\r\n        detail: 'At vero eos et accusamus et iusto odio dignissimos ducimus qui blanditiis praesentium voluptatum deleniti atque corrupti quos dolores' +\r\n            'et quas molestias excepturi sint occaecati cupiditate non provident, similique sunt in culpa qui officia deserunt mollitia animi, id est' +\r\n            'laborum et dolorum fuga.'\r\n    }, {\r\n        id: 10,\r\n        rowType: 'hpe-mail',\r\n        address: 'bruce.grant@business.com',\r\n        contacts: [{\r\n            text: \"Bruce Grant\",\r\n        }],\r\n        organization: {\r\n            text: \"HR\",\r\n        },\r\n        colorsPrimary: {\r\n            primary: $colorService.getColor('accent').toHex(),\r\n            secondary: \"#ffffff\"\r\n        },\r\n        medium: 'small',\r\n        subject: 'News',\r\n        percent: 87,\r\n        type: \"spark-primary\",\r\n        sparklabel: \"<span class=\\'hidden-spark\\'>0.87</span>\",\r\n        detail: 'Nam libero tempore, cum soluta nobis est eligendi optio cumque nihil impedit quo minus id quod maxime placeat facere possimus,' +\r\n            'omnis voluptas assumenda est, omnis dolor repellendus'\r\n    }, {\r\n        id: 11,\r\n        rowType: 'hpe-mail',\r\n        address: 'bruce.grant@business.com',\r\n        contacts: [{\r\n            text: \"Bruce Grant\",\r\n        }],\r\n        organization: {\r\n            text: \"HR\",\r\n        },\r\n        colorsPrimary: {\r\n            primary: $colorService.getColor('accent').toHex(),\r\n            secondary: \"#ffffff\"\r\n        },\r\n        medium: 'small',\r\n        subject: 'News',\r\n        percent: 17,\r\n        type: \"spark-primary\",\r\n        sparklabel: \"<span class=\\'hidden-spark\\'>0.17</span>\",\r\n        detail: 'At vero eos et accusamus et iusto odio dignissimos ducimus qui blanditiis praesentium voluptatum deleniti atque corrupti quos dolores' +\r\n            'et quas molestias excepturi sint occaecati cupiditate non provident, similique sunt in culpa qui officia deserunt mollitia animi, id est' +\r\n            'laborum et dolorum fuga.'\r\n    }, {\r\n        id: 12,\r\n        rowType: 'hpe-mail',\r\n        address: 'thomas.baker@business.com',\r\n        contacts: [{\r\n            text: \"Thomas Baker\",\r\n        }],\r\n        organization: {\r\n            text: \"Investing\",\r\n        },\r\n        colorsPrimary: {\r\n            primary: $colorService.getColor('primary').toHex(),\r\n            secondary: \"#ffffff\"\r\n        },\r\n        medium: 'small',\r\n        subject: 're: UX Aspects',\r\n        percent: 38,\r\n        type: \"spark-primary\",\r\n        sparklabel: \"<span class=\\'hidden-spark\\'>0.38</span>\",\r\n        detail: 'Ut enim ad minima veniam, quis nostrum exercitationem ullam corporis suscipit laboriosam, nisi ut aliquid ex ea commodi consequatur?'\r\n    }];\r\n\r\n    var detailRowOriginal = detailRowTable;\r\n\r\n    return {\r\n        getDetailRowTable: getDetailRowTable,\r\n        getFilterList: getFilterList,\r\n        applyFilters: applyFilters\r\n    }\r\n\r\n    function detailRowSortByKey(array, key, ascending) {\r\n        return array.sort(function (a, b) {\r\n\r\n            var ascend0 = 1;\r\n            var ascend1 = 2;\r\n            var ascend2 = 4;\r\n\r\n            if (ascending[0] === true) ascend0 = 0;\r\n            if (ascending[1] === true) ascend1 = 0;\r\n            if (ascending[2] === true) ascend2 = 0;\r\n\r\n            var sortCase = ascend0 + ascend1 + ascend2;\r\n            var x0 = a[key[0]];\r\n            var y0 = b[key[0]];\r\n            var x1 = a[key[1]];\r\n            var y1 = b[key[1]];\r\n            var x2 = a[key[2]];\r\n            var y2 = b[key[2]];\r\n            \r\n            switch (sortCase) {\r\n                case 0:\r\n                    return ((x0 < y0) ? -1 : ((x0 > y0) ? 1 : ((x1 < y1) ? -1 : ((x1 > y1) ? 1 : ((x2 < y2) ? -1 : ((x2 > y2) ? 1 : ((a['id'] < b['id']) ? -1 : 1)))))));\r\n                case 1:\r\n                    return ((x0 < y0) ? 1 : ((x0 > y0) ? -1 : ((x1 < y1) ? -1 : ((x1 > y1) ? 1 : ((x2 < y2) ? -1 : ((x2 > y2) ? 1 : ((a['id'] < b['id']) ? -1 : 1)))))));\r\n                case 2:\r\n                    return ((x0 < y0) ? -1 : ((x0 > y0) ? 1 : ((x1 < y1) ? 1 : ((x1 > y1) ? -1 : ((x2 < y2) ? -1 : ((x2 > y2) ? 1 : ((a['id'] < b['id']) ? -1 : 1)))))));\r\n                case 3:\r\n                    return ((x0 < y0) ? 1 : ((x0 > y0) ? -1 : ((x1 < y1) ? 1 : ((x1 > y1) ? -1 : ((x2 < y2) ? -1 : ((x2 > y2) ? 1 : ((a['id'] < b['id']) ? -1 : 1)))))));\r\n                case 4:\r\n                    return ((x0 < y0) ? -1 : ((x0 > y0) ? 1 : ((x1 < y1) ? -1 : ((x1 > y1) ? 1 : ((x2 < y2) ? 1 : ((x2 > y2) ? -1 : ((a['id'] < b['id']) ? -1 : 1)))))));\r\n                case 5:\r\n                    return ((x0 < y0) ? 1 : ((x0 > y0) ? -1 : ((x1 < y1) ? -1 : ((x1 > y1) ? 1 : ((x2 < y2) ? 1 : ((x2 > y2) ? -1 : ((a['id'] < b['id']) ? -1 : 1)))))));\r\n                case 6:\r\n                    return ((x0 < y0) ? -1 : ((x0 > y0) ? 1 : ((x1 < y1) ? 1 : ((x1 > y1) ? -1 : ((x2 < y2) ? 1 : ((x2 > y2) ? -1 : ((a['id'] < b['id']) ? -1 : 1)))))));\r\n                case 7:\r\n                    return ((x0 < y0) ? 1 : ((x0 > y0) ? -1 : ((x1 < y1) ? 1 : ((x1 > y1) ? -1 : ((x2 < y2) ? 1 : ((x2 > y2) ? -1 : ((a['id'] < b['id']) ? -1 : 1)))))));\r\n            }\r\n        });\r\n    }\r\n\r\n    function applyFilters(filters) {\r\n        detailRowTable = [];\r\n        if (filters.length !== 0) {\r\n            for (var i = 0; i < detailRowOriginal.length; i++) {\r\n                for (var j = 0; j < filters.length; j++) {\r\n                    if (detailRowOriginal[i].address === filters[j]) {\r\n                        detailRowTable.push(detailRowOriginal[i]);\r\n                    }\r\n                }\r\n            }\r\n        } else\r\n            detailRowTable = detailRowOriginal;\r\n        $rootScope.$broadcast('detailRowTableUpdated');\r\n    }\r\n\r\n    function getFilterList() {\r\n        var filterList = [];\r\n        for (var i = 0; i < detailRowOriginal.length; i++) {\r\n            if (filterList.indexOf(detailRowOriginal[i].address) < 0) {\r\n                filterList.push(detailRowOriginal[i].address);\r\n            }\r\n        }\r\n        return filterList;\r\n    }\r\n\r\n\r\n    function getDetailRowTable(sorter, ascending) {\r\n        detailRowSortByKey(detailRowTable, sorter, ascending);\r\n        return detailRowTable;\r\n    }\r\n\r\n}"},function(e,t){e.exports=".detail-row-popover {\r\n  overflow: auto;\r\n  height: 300px;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.detail-row-popover .facets-container {\r\n  padding: 0;\r\n}\r\n\r\n.detail-row-popover .facets-selected-container {\r\n  margin-bottom: 0;\r\n}\r\n\r\n.detail-row-header-popover {\r\n  padding: 0;\r\n}\r\n\r\n.detail-row-header-popover .dropdown-footer {\r\n  margin: 0;\r\n  padding: 0;\r\n  width: 100%;\r\n  padding-top: 15px;\r\n  padding-bottom: 15px;\r\n  margin-top: 5px;\r\n  text-align: right;\r\n  border-top: 1px solid #e5e5e5; \r\n}\r\n\r\n.detail-row-header-popover .popover-content {\r\n  padding: 0;\r\n}\r\n\r\n.detail-row-header-popover .dropdown-footer .m-cancel {\r\n  margin-right: 17px;\r\n}\r\n\r\n.detail-row-popover .table > tbody > tr:first-child > td {\r\n  border-top: none;\r\n}\r\n\r\n.detail-row-popover .table > tbody > tr > td {\r\n  padding: 0;\r\n}\r\n\r\n.detail-row-popover .table > tbody > tr > td > label {\r\n  width: 100%;\r\n  margin: 0;\r\n  padding: 10px;\r\n  padding-bottom: 12px;\r\n}"},function(e,t){e.exports='<div class="container-fluid m-t-md">\r\n    <div class="white-space-normal table-responsive">\r\n        <table class="table table-hover detail-row-responsive-demo">\r\n            <thead>\r\n                <tr>\r\n                    <th>\r\n                        <div class="row">\r\n                            <div class="col-xs-1">\r\n                                Type\r\n                            </div>\r\n                            <div class="col-xs-3">\r\n                                Participant\r\n                            </div>\r\n                            <div class="col-xs-3">\r\n                                From Address\r\n                            </div>\r\n                            <div class="col-xs-3">\r\n                                Subject\r\n                            </div>\r\n                            <div class="col-xs-2">\r\n                                Message Score\r\n                            </div>\r\n                        </div>\r\n                    </th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr ng-repeat="item in ::vm.detailRowTableStatic" class="detail-table clickable" ng-click="details()">\r\n                    <td>\r\n                        <div class="row m-b-xs rowitem">\r\n                            <div class="col-xs-1 m-t-xs">\r\n                                <i class="hpe-icon" ng-class="item.rowType" aria-hidden="true"></i>\r\n                            </div>\r\n                            <div class="col-xs-3">\r\n                                <contact-group contacts="item.contacts" organization="item.organization" size="item.medium" colors="item.colorsPrimary"></contact-group>\r\n                            </div>\r\n                            <div class="col-xs-3 m-t-xs">\r\n                                <div ng-bind="::item.address" single-line-overflow-tooltip></div>\r\n                            </div>\r\n                            <div class="col-xs-3 m-t-xs">\r\n                                <div ng-bind="::item.subject" single-line-overflow-tooltip></div>\r\n                            </div>\r\n                            <div class="col-xs-2 m-t-xs">\r\n                                <spark type="item.type" value="item.percent" fillheight="3" inline-label="item.sparklabel" top="13"></spark>\r\n                            </div>\r\n                        </div>\r\n                        <div class="row">\r\n                            <div class="col-xs-1"></div>\r\n                            <div class="col-xs-9 overflow" ng-bind="::item.detail" overflow-tooltip></div>\r\n                            <div class="col-xs-2"></div>\r\n                        </div>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n</div>'},function(e,t){e.exports="angular.module(\"app\").controller(\"DetailRowResponsiveTableCtrl\", DetailRowResponsiveTableCtrl);\r\n\r\nDetailRowResponsiveTableCtrl.$inject = ['$colorService'];\r\n\r\nfunction DetailRowResponsiveTableCtrl($colorService) {\r\n\r\n    var vm = this;\r\n\r\n    vm.detailRowTableStatic = [\r\n         {\r\n          id: 1,\r\n          rowType: 'hpe-mail',\r\n          address: 'rosie.hunt@business.com',\r\n          contacts: [{\r\n            text: \"Rosie Hunt\",\r\n          }],\r\n          organization: {\r\n            text: \"Trading\",\r\n          },\r\n          colorsPrimary: {\r\n            primary: $colorService.getColor('primary').toHex(),\r\n            secondary: \"#ffffff\"\r\n          },\r\n          medium: 'small',\r\n          percent: 39,\r\n          type: \"spark-primary\",\r\n          sparklabel: \"<span class=\\'hidden-spark\\'>0.39</span>\",\r\n          subject: 're: hi, This is a test email.',\r\n          detail: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris fringilla, nunc sit amet faucibus' +\r\n            'dapibus, est purus luctus magna, ut tempus orci quam vitae diam. Aenean congue ultricies leo, ut aliquam nibh.' +\r\n            'Integer facilisis tortor id ligula mollis, eget pretium sapien tempor.' +\r\n            ' Suspendisse quis tempus ante. Curabitur vulputate, felis non blandit dapibus.'\r\n\r\n        }, {\r\n          id: 2,\r\n          rowType: 'hpe-mail',\r\n          address: 'james.bryson@business.com',\r\n          contacts: [{\r\n            text: \"James Bryson\",\r\n          }],\r\n          organization : {\r\n              text: \"Trading\",\r\n           },\r\n          colorsPrimary : {\r\n              primary: $colorService.getColor('primary').toHex(),\r\n              secondary: \"#ffffff\"\r\n          },\r\n          medium: 'small',\r\n          subject: 're: hi, Attention! This email is high priority.',\r\n          percent: 55,\r\n          type : \"spark-primary\",\r\n          sparklabel:  \"<span class=\\\"hidden-spark\\\">0.55</span>\",\r\n          detail: 'Aenean congue ultricies leo, ut aliquam nibh. Integer facilisis tortor id ligula mollis, eget pretium sapien tempor.' +\r\n                    ' Suspendisse quis tempus ante. Curabitur vulputate, felis non blandit dapibus. Duis volutpat nunc vel volutpat nunc vel metus ultrices.'\r\n         },\r\n         {\r\n           id: 3,\r\n           rowType: 'hpe-mail',\r\n           address: 'adam.parker@business.com',\r\n           contacts : [{\r\n             text: \"Adam Parker\",\r\n           }],\r\n           organization : {\r\n               text: \"HR\",\r\n           },\r\n           colorsPrimary : {\r\n              primary: $colorService.getColor('accent').toHex(),\r\n              secondary: \"#ffffff\"\r\n           },\r\n           medium: 'small',\r\n           subject: 're: hi, There is something related.',\r\n           percent : 44,\r\n           type : \"spark-primary\",\r\n           sparklabel: \"<span class=\\\"hidden-spark\\\">-0.44</span>\",\r\n           detail:  'Duis volutpat nunc vel metus ultrices, vel cursus nisl scelerisque. Nulla facilisis ipsum ligula, nec' +\r\n                     'blandit dolor aliquam a. Aenean posuere enim ligula, eu convallis mauris pulvinar nec.' +\r\n                     'Praesent risus massa, rhoncus pretium massa non, blandit gravida risus. Duis ut orci dolor. Sed congue' +\r\n                     'fermentum ante, a pellentesque quam gravida vel.'\r\n         },\r\n         {\r\n           id: 4,\r\n           rowType: 'hpe-mail',\r\n           address: 'adam.jackson@business.com',\r\n           contacts : [{\r\n             text: \"Adam Jackson\",\r\n           }],\r\n           organization : {\r\n               text: \"Investing\",\r\n           },\r\n           colorsPrimary : {\r\n              primary: $colorService.getColor('primary').toHex(),\r\n              secondary: \"#ffffff\"\r\n           },\r\n           medium: 'small',\r\n           subject: 're: hi, This is an example.',\r\n           percent: 67,\r\n           type: \"spark-primary\",\r\n           sparklabel: \"<span class=\\\"hidden-spark\\\">-0.67</span>\",\r\n           detail: 'Praesent risus massa, rhoncus pretium massa non, blandit gravida risus. Duis ut orci dolor. Sed congue' +\r\n                    'fermentum ante, a pellentesque quam gravida vel. Praesent risus massa, rhoncus pretium massa non.'\r\n         },\r\n      ];\r\n}"},function(e,t){e.exports="$scope.detailRowTable = [\r\n   {\r\n    rowType: 'hpe-mail',\r\n    address: 'rosie.hunt@business.com',\r\n     contacts : [{\r\n       text: \"Rosie Hunt\",\r\n     }],\r\n     organization : {\r\n         text: \"Trading\",\r\n     },\r\n    colorsPrimary : {\r\n        primary: \"#7B63A3\",\r\n        secondary: \"#ffffff\"\r\n    },\r\n    medium: 'small',\r\n    percent: 39,\r\n    type: \"spark-primary\",\r\n    sparklabel : \"0.39\",\r\n    subject: 're: hi, This is a test email.',\r\n    detail: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris fringilla, nunc sit amet faucibus'+\r\n             'dapibus, est purus luctus magna, ut tempus orci quam vitae diam. Aenean congue ultricies leo, ut aliquam nibh.'+\r\n              'Integer facilisis tortor id ligula mollis, eget pretium sapien tempor.' +\r\n             ' Suspendisse quis tempus ante. Curabitur vulputate, felis non blandit dapibus.'\r\n\r\n   },\r\n   ...\r\n   ...\r\n];"},function(e,t){e.exports='<div class="white-space-normal table-responsive">\r\n    <table class="table table-hover detail-row-responsive-demo">\r\n        <thead>\r\n            <tr>\r\n                <th>\r\n                    <div class="row">\r\n                        <div class="col-xs-1">\r\n                            Type\r\n                        </div>\r\n                        <div class="col-xs-3">\r\n                            Participant\r\n                        </div>\r\n                        <div class="col-xs-3">\r\n                            From Address\r\n                        </div>\r\n                        <div class="col-xs-3">\r\n                            Subject\r\n                        </div>\r\n                        <div class="col-xs-2">\r\n                            Message Score\r\n                        </div>\r\n                    </div>\r\n                </th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr ng-repeat="item in detailRowTable" class="detail-table clickable" ng-click="details()">\r\n                <td>\r\n                    <div class="row m-b-xs rowitem">\r\n                        <div class="col-xs-1 m-t-xs">\r\n                            <i class="hpe-icon" ng-class="item.rowType" aria-hidden="true"></i>\r\n                        </div>\r\n                        <div class="col-xs-3">\r\n                            <contact-group contacts="item.contacts" organization="item.organization" size="item.medium" colors="item.colorsPrimary"></contact-group>\r\n                        </div>\r\n                        <div class="col-xs-3 m-t-xs">\r\n                            <div ng-bind="::item.address" single-line-overflow-tooltip></div>\r\n                        </div>\r\n                        <div class="col-xs-3 m-t-xs">\r\n                            <div ng-bind="::item.subject" single-line-overflow-tooltip></div>\r\n                        </div>\r\n                        <div class="col-xs-2 m-t-xs">\r\n                            <spark type="item.type" value="item.percent" fillheight="3" inline-label="item.sparklabel" top="13"></spark>\r\n                        </div>\r\n                    </div>\r\n                    <div class="row">\r\n                        <div class="col-xs-1"></div>\r\n                        <div class="col-xs-9 overflow" ng-bind="item.detail" overflow-tooltip></div>\r\n                        <div class="col-xs-2"></div>\r\n                    </div>\r\n                </td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n</div>'},function(e,t){e.exports=".white-space-normal.table-responsive>.table>tbody>tr>th,\r\n.white-space-normal.table-responsive>.table>tbody>tr>td {\r\n    white-space: normal;\r\n}\r\n\r\n.detail-row-responsive-demo {\r\n    width: 99%;\r\n    min-width: 600px;\r\n    max-width: 800px;\r\n    min-height: 400px;\r\n}\r\n\r\n.detail-row-responsive-demo .contacts-list-container {\r\n  position: absolute;\r\n  top: 0;\r\n}"},function(e,t){e.exports='angular.module("app").controller("FixedHeaderCtrl", ["$scope", FixedHeaderCtrl]);\r\n\r\nfunction FixedHeaderCtrl($scope) {\r\n\r\n    $scope.sampleTableData = [];\r\n\r\n    for (var i = 0; i < 15; i++) {\r\n        $scope.sampleTableData.push({\r\n            id: i,\r\n            Data: chance.integer({\r\n                min: 0,\r\n                max: 500\r\n            }),\r\n            User: chance.name(),\r\n            Task: chance.integer({\r\n                min: 0,\r\n                max: 100\r\n            }) + \'%\',\r\n            Date: chance.date()\r\n        });\r\n    }\r\n}'},function(e,t){e.exports="angular.module(\"app\").controller(\"LayoutCtrl\", [\"$scope\", LayoutCtrl]);\r\n\r\nfunction LayoutCtrl($scope) {\r\n    \r\n    $scope.sampleTableData = [{\r\n            id: 1,\r\n            Data: 156,\r\n            User: chance.name(),\r\n            Task: '40%',\r\n            Date: 'July 14, 2016'\r\n        }, {\r\n            id: 2,\r\n            Data: 226,\r\n            User: chance.name(),\r\n            Task: '-20%',\r\n            Date: 'July 15, 2016'\r\n        },\r\n        ....\r\n        ....\r\n        .... \r\n        {\r\n            id: 9,\r\n            Data: 240,\r\n            User: chance.name(),\r\n            Task: '-22%',\r\n            Date: 'November 14, 2016'\r\n        }\r\n    ];\r\n}"},function(e,t){e.exports='<scrollable-table watch="sampleTableData" container-height="300" header-height="35">\r\n    <table class="table table-hover">\r\n        <thead>\r\n            <tr>\r\n                <th>id</th>\r\n                <th>Data</th>\r\n                <th>User</th>\r\n                <th>Task</th>\r\n                <th>Date</th>\r\n                <th>Action</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr ng-repeat="value in sampleTableData">\r\n                <td ng-bind="value.id"></td>\r\n                <td ng-bind="value.Data"></td>\r\n                <td ng-bind="value.User"></td>\r\n                <td ng-bind="value.Task"></td>\r\n                <td ng-bind="value.Date"></td>\r\n                <td>\r\n                    <span class="hpe-icon hpe-checkmark text-secondary"></span>\r\n                </td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n</scrollable-table>'},function(e,t){e.exports="angular.module('app').controller('HoverActionCtrl', HoverActionCtrl);\r\n\r\nfunction HoverActionCtrl() {\r\n    var vm = this;\r\n\r\n    vm.view = function () {\r\n        //add view logic here\r\n    };\r\n\r\n    vm.edit = function () {\r\n        //add edit logic here\r\n    };\r\n\r\n    vm.remove = function () {\r\n        //add remove logic here\r\n    };\r\n}"},function(e,t){e.exports='<div class="hover-actions-demo-container">\r\n    <div class="icon">\r\n        <span class="hpe-icon hpe-location-pin"></span>\r\n    </div>\r\n    <div class="text">\r\n        <span>Location</span>\r\n    </div>\r\n    <div class="description">\r\n        <span>International or Domestic</span>\r\n    </div>\r\n    <div class="actions">\r\n        <hover-actions hover-element=".hover-actions-demo-container">\r\n            <hover-action name="View" icon="hpe-view" click="vm.view()"></hover-action>\r\n            <hover-action name="Edit" icon="hpe-edit" click="vm.edit()"></hover-action>\r\n            <hover-action name="Remove" icon="hpe-trash" click="vm.remove()"></hover-action>\r\n        </hover-actions>\r\n    </div>\r\n</div>'},function(e,t){e.exports=".hover-actions-demo-container {\r\n    display: table;\r\n    width: 475px;\r\n    height: 50px;\r\n    border: 1px solid #ccc;\r\n    border-radius: 5px;\r\n    background-color: #F5F5F5;\r\n    padding: 10px 15px;\r\n    margin: 10px 10px 20px;\r\n}\r\n\r\n.hover-actions-demo-container .icon {\r\n    display: table-cell;\r\n    font-size: 20px;\r\n    color: #60798D;\r\n    vertical-align: middle;\r\n    width: 35px;\r\n}\r\n\r\n.hover-actions-demo-container .text {\r\n    display: table-cell;\r\n    vertical-align: middle;\r\n    color: #333;\r\n    font-size: 18px;\r\n    width: 60px;\r\n}\r\n\r\n.hover-actions-demo-container .description {\r\n    display: table-cell;\r\n    vertical-align: middle;\r\n    color: #888;\r\n    font-size: 18px;\r\n    width: 140px;\r\n}\r\n\r\n.hover-actions-demo-container .actions {\r\n    display: table-cell;\r\n    vertical-align: middle;\r\n    width: 60px;\r\n}"},function(e,t){e.exports='<layout-switcher-container selected="vm.selectedLayout">\r\n    <layout-switcher-item name="grid" layout="gridView.html" collapse-layout="card" collapse-size="700"></layout-switcher-item>\r\n    <layout-switcher-item name="card">\r\n        <div class="container-fluid">\r\n            <div class="row">\r\n                <div class="col-md-12">\r\n                    <ul class="card-view card-hover">\r\n                        <li class="card">...</li>\r\n                        ...\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </layout-switcher-item>\r\n</layout-switcher-container>'},function(e,t){e.exports='<table class="table table-hover">\r\n    <thead>\r\n        <tr>\r\n            <th>\r\n                ...\r\n            </th>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        <tr ng-repeat="item in vm.items">\r\n            <td>\r\n                ...\r\n            </td>\r\n            <td class="text-center item-actions">\r\n                <div class="hpe-icon hpe-active text-primary"></div>\r\n                <list-hover-actions>\r\n                    <list-hover-action name="New" icon="hpe-add" click="vm.primaryHoverAction(item)"></list-hover-action>\r\n                    <list-hover-action name="Remove" icon="hpe-close" click="vm.secondaryHoverAction(item)"></list-hover-action>\r\n                </list-hover-actions>\r\n            </td>\r\n        </tr>\r\n    </tbody>\r\n</table>'},function(e,t){e.exports='<table class="table table-hover fixed-layout">\r\n    <thead class="table-header-dark sorter-header-sm" multi-sortable-header headers="vm.sorterHeaders" default-sorter="vm.activeSorter"\r\n        default-order="vm.orderDesc">\r\n    </thead>\r\n    <tbody>\r\n        <tr class="clickable" ng-repeat="item in vm.sortableTable">\r\n            <td>\r\n                <div class="listview-page-icon"></div>\r\n            </td>\r\n            <td ng-bind="::item.name"></td>\r\n            <td ng-bind="::item.author"></td>\r\n            <td ng-bind="::item.date"></td>\r\n            <td>\r\n                <spark type="::\'spark-chart2\'" value="::item.complete" fillheight="3" inline-label="::item.complete" top="13"></spark>\r\n            </td>\r\n            <td class="text-center">\r\n                <div class="hpe-icon" ng-class="::{\'text-accent\': item.active, \'hpe-checkmark\':item.active}"></div>\r\n            </td>\r\n        </tr>\r\n    </tbody>\r\n</table>'},function(e,t){e.exports='angular.module(\'app\').controller(\'MultipleColumnSortingCtrl\', MultipleColumnSortingCtrl);\r\n\r\nfunction MultipleColumnSortingCtrl() {\r\n    var vm = this;\r\n\r\n    vm.activeSorter = ["none", "none", "none"]; //initially setting these values to "none" results in no default sorting\r\n    vm.orderDesc = ["none", "none", "none"];\r\n\r\n    vm.sorterHeaders = [{\r\n            sorterHeader: "",\r\n            sortable: false,\r\n            fixedClass: "table-col-icon"\r\n        },\r\n        {\r\n            sorterHeader: "NAME",\r\n            sortable: true,\r\n            sort: "name",\r\n            fixedClass: "table-col-md"\r\n        },\r\n        {\r\n            sorterHeader: "AUTHOR",\r\n            sortable: true,\r\n            sort: "author",\r\n            fixedClass: "table-col-md"\r\n        },\r\n        {\r\n            sorterHeader: "DATE MODIFIED",\r\n            sortable: true,\r\n            sort: "date",\r\n            fixedClass: "table-col-md"\r\n        },\r\n        {\r\n            sorterHeader: "WORK COMPLETED (%)",\r\n            sortable: true,\r\n            sort: "complete",\r\n            fixedClass: "table-col-md"\r\n        },\r\n        {\r\n            sorterHeader: "STATUS",\r\n            sortable: false,\r\n            center: true,\r\n            fixedClass: "table-col-md"\r\n        }\r\n    ];\r\n\r\n    vm.sortableTable = [{\r\n        id: 1,\r\n        name: "Document",\r\n        author: chance.name(),\r\n        date: "18 Dec 2016",\r\n        complete: 97,\r\n        active: true\r\n    }, {\r\n        id: 2,\r\n        name: "Email",\r\n        author: chance.name(),\r\n        date: "22 Dec 2016",\r\n        complete: 15,\r\n        active: false\r\n    }, {\r\n        id: 3,\r\n        name: "Email",\r\n        author: chance.name(),\r\n        date: "12 Dec 2016",\r\n        complete: 20,\r\n        active: true\r\n    }, {\r\n        id: 4,\r\n        name: "Email",\r\n        author: chance.name(),\r\n        date: "16 Dec 2016",\r\n        complete: 74,\r\n        active: true\r\n    }, {\r\n        id: 5,\r\n        name: "Email",\r\n        author: chance.name(),\r\n        date: "17 Dec 2016",\r\n        complete: 63,\r\n        active: false\r\n    }, {\r\n        id: 6,\r\n        name: "Document",\r\n        author: chance.name(),\r\n        date: "21 Dec 2016",\r\n        complete: 21,\r\n        active: true\r\n    }, {\r\n        id: 7,\r\n        name: "Document",\r\n        author: chance.name(),\r\n        date: "17 Dec 2016",\r\n        complete: 85,\r\n        active: false\r\n    }, {\r\n        id: 8,\r\n        name: "Document",\r\n        author: chance.name(),\r\n        date: "17 Dec 2016",\r\n        complete: 11,\r\n        active: true\r\n    }];\r\n\r\n    vm.sortByKey = function (array, key, descending) {\r\n        return array.sort(function (a, b) {\r\n            var desc0 = 0,\r\n                desc1 = 0,\r\n                desc2 = 0;\r\n\r\n            if (descending[0] === true) {\r\n                desc0 = 1;\r\n            }\r\n            if (descending[1] === true) {\r\n                desc1 = 2;\r\n            }\r\n            if (descending[2] === true) {\r\n                desc2 = 4;\r\n            }\r\n            var sortCase = desc0 + desc1 + desc2;\r\n            var x0 = a[key[0]];\r\n            var y0 = b[key[0]];\r\n            var x1 = a[key[1]];\r\n            var y1 = b[key[1]];\r\n            var x2 = a[key[2]];\r\n            var y2 = b[key[2]];\r\n\r\n            switch (sortCase) {\r\n                case 0:\r\n                    return ((x0 < y0) ? -1 : ((x0 > y0) ? 1 : ((x1 < y1) ? -1 : ((x1 > y1) ? 1 : ((x2 < y2) ? -1 : ((x2 > y2) ? 1 : ((a.id < b.id) ? -1 : 1)))))));\r\n                case 1:\r\n                    return ((x0 < y0) ? 1 : ((x0 > y0) ? -1 : ((x1 < y1) ? -1 : ((x1 > y1) ? 1 : ((x2 < y2) ? -1 : ((x2 > y2) ? 1 : ((a.id < b.id) ? -1 : 1)))))));\r\n                case 2:\r\n                    return ((x0 < y0) ? -1 : ((x0 > y0) ? 1 : ((x1 < y1) ? 1 : ((x1 > y1) ? -1 : ((x2 < y2) ? -1 : ((x2 > y2) ? 1 : ((a.id < b.id) ? -1 : 1)))))));\r\n                case 3:\r\n                    return ((x0 < y0) ? 1 : ((x0 > y0) ? -1 : ((x1 < y1) ? 1 : ((x1 > y1) ? -1 : ((x2 < y2) ? -1 : ((x2 > y2) ? 1 : ((a.id < b.id) ? -1 : 1)))))));\r\n                case 4:\r\n                    return ((x0 < y0) ? -1 : ((x0 > y0) ? 1 : ((x1 < y1) ? -1 : ((x1 > y1) ? 1 : ((x2 < y2) ? 1 : ((x2 > y2) ? -1 : ((a.id < b.id) ? -1 : 1)))))));\r\n                case 5:\r\n                    return ((x0 < y0) ? 1 : ((x0 > y0) ? -1 : ((x1 < y1) ? -1 : ((x1 > y1) ? 1 : ((x2 < y2) ? 1 : ((x2 > y2) ? -1 : ((a.id < b.id) ? -1 : 1)))))));\r\n                case 6:\r\n                    return ((x0 < y0) ? -1 : ((x0 > y0) ? 1 : ((x1 < y1) ? 1 : ((x1 > y1) ? -1 : ((x2 < y2) ? 1 : ((x2 > y2) ? -1 : ((a.id < b.id) ? -1 : 1)))))));\r\n                case 7:\r\n                    return ((x0 < y0) ? 1 : ((x0 > y0) ? -1 : ((x1 < y1) ? 1 : ((x1 > y1) ? -1 : ((x2 < y2) ? 1 : ((x2 > y2) ? -1 : ((a.id < b.id) ? -1 : 1)))))));\r\n            }\r\n        });\r\n    }\r\n\r\n    vm.sorterHeaders.forEach(function (headers) {\r\n        headers.select = function (activeSorter, orderDesc) {\r\n            vm.activeSorter = activeSorter;\r\n            vm.orderDesc = orderDesc;\r\n            vm.sortByKey(vm.sortableTable, activeSorter, orderDesc);\r\n        };\r\n    });\r\n\r\n}\r\n'},function(e,t){e.exports='angular.module("app").controller("PreviewPaneWindowCtrl", ["$scope", "windowCommunicationService", "$timeout", "previewPaneProvider", PreviewPaneWindowCtrl]);\r\n\r\nfunction PreviewPaneWindowCtrl($scope, windowCommunicationService, $timeout, previewPaneProvider) {\r\n    var vm = this;\r\n    vm.childScope = $scope;\r\n\r\n    vm.previewFile = "";\r\n    vm.previewTitle = "";\r\n    vm.previewSubtitle = "";\r\n    vm.previewEmptyText = "No document selected";\r\n    vm.previewName = "preview-pane-example";\r\n    vm.selectedIndex = 0;\r\n\r\n    vm.signed = "";\r\n\r\n    vm.scrollBarConfig = {\r\n        enableKeyboardNavigation: true,\r\n        verticalGutter: -10,\r\n        resizeSensor: true,\r\n        isScrollableH: false\r\n    };\r\n\r\n    vm.tooltip = {\r\n        content: \'Opens another window for a larger or full-screen preview\',\r\n        dismiss: \'HIDE TIP\',\r\n        direction: \'right\',\r\n        position: \'start\'\r\n    };\r\n\r\n    // ensure the preview pane is visible\r\n    previewPaneProvider.preview.previewOn = true;\r\n\r\n    vm.items = [{\r\n        name: "Document 1.html",\r\n        author: chance.name(),\r\n        date: "14 Jun 2016",\r\n        extension: ".html",\r\n        storage: 75,\r\n        active: true\r\n    }, {\r\n        name: "Document 2.doc",\r\n        author: chance.name(),\r\n        date: "22 Mar 2016",\r\n        extension: ".doc",\r\n        storage: 13,\r\n        active: true\r\n    }, {\r\n        name: "Document 3.ppt",\r\n        author: chance.name(),\r\n        date: "19 May 2016",\r\n        extension: ".ppt",\r\n        storage: 66\r\n    }, {\r\n        name: "Document 4.pdf",\r\n        author: chance.name(),\r\n        date: "20 Jun 2016",\r\n        extension: ".pdf"\r\n    }, {\r\n        name: "Document 5.xls",\r\n        author: chance.name(),\r\n        date: "10 Jan 2016",\r\n        extension: ".xls"\r\n    }, {\r\n        name: "Document 6.html",\r\n        author: chance.name(),\r\n        date: "13 Feb 2016",\r\n        extension: ".html",\r\n        storage: 55\r\n    }, {\r\n        name: "Document 7.doc",\r\n        author: chance.name(),\r\n        date: "19 May 2016",\r\n        extension: ".doc",\r\n        storage: 25\r\n    }, {\r\n        name: "Document 8.html",\r\n        author: chance.name(),\r\n        date: "22 Mar 2016",\r\n        extension: ".html",\r\n        storage: 90\r\n    }, {\r\n        name: "Document 9.doc",\r\n        author: chance.name(),\r\n        date: "29 May 2016",\r\n        extension: ".doc",\r\n        storage: 33,\r\n        active: true\r\n    }, {\r\n        name: "Document 10.xls",\r\n        author: chance.name(),\r\n        date: "3 Jun 2016",\r\n        extension: ".xls"\r\n    }, {\r\n        name: "Document 11.ppt",\r\n        author: chance.name(),\r\n        date: "14 Apr 2016",\r\n        extension: ".ppt",\r\n        storage: 25\r\n    }, {\r\n        name: "Document 12.html",\r\n        author: chance.name(),\r\n        date: "9 Feb 2016",\r\n        extension: ".html",\r\n        storage: 25\r\n    }, {\r\n        name: "Document 13.xls",\r\n        author: chance.name(),\r\n        date: "22 Jun 2016",\r\n        extension: ".xls"\r\n    }, {\r\n        name: "Document 14.html",\r\n        author: chance.name(),\r\n        date: "30 Apr 2016",\r\n        extension: ".html",\r\n        storage: 93\r\n    }, {\r\n        name: "Document 15.doc",\r\n        author: chance.name(),\r\n        date: "18 May 2016",\r\n        extension: ".doc",\r\n        storage: 5\r\n    }, {\r\n        name: "Document 16.ppt",\r\n        author: chance.name(),\r\n        date: "2 Jan 2016",\r\n        extension: ".ppt",\r\n        storage: 66\r\n    }];\r\n\r\n    vm.bottomLeftLabel = "<span class=\'spark-bottom-label\'>completed</span>";\r\n\r\n    vm.goToDetails = function (itemIndex) {\r\n        vm.selectedIndex = itemIndex;\r\n        vm.childScope.author = vm.items[itemIndex].author;\r\n        vm.childScope.documentName = vm.items[itemIndex].name;\r\n\r\n        vm.sparklabel = updateSparkline(vm.items[itemIndex]);\r\n\r\n        vm.previewTitle = vm.items[itemIndex].name;\r\n        vm.previewSubtitle = vm.items[itemIndex].date;\r\n\r\n        if (vm.items[itemIndex].extension === ".html") {\r\n            vm.previewFile = \'Preview.html\';\r\n        } else if (vm.items[itemIndex].extension === ".pdf") {\r\n            vm.previewFile = \'PreviewPDF.html\';\r\n        } else if (vm.items[itemIndex].extension === ".doc") {\r\n            vm.previewFile = \'PreviewDOC.html\';\r\n        } else if (vm.items[itemIndex].extension === ".xls") {\r\n            vm.previewFile = \'PreviewXLS.html\';\r\n        } else if (vm.items[itemIndex].extension === ".ppt") {\r\n            vm.previewFile = \'PreviewPPT.html\';\r\n        }\r\n\r\n        // ensure the corresponding item is selected\r\n        $scope.$broadcast(\'$previewPaneItemSelect\', itemIndex);\r\n    };\r\n\r\n    vm.goToPrevious = function () {\r\n        vm.goToDetails(vm.selectedIndex - 1);\r\n    };\r\n\r\n    vm.goToNext = function () {\r\n        vm.goToDetails(vm.selectedIndex + 1);\r\n    };\r\n\r\n    vm.canGoBack = function () {\r\n        return vm.selectedIndex <= 0;\r\n    };\r\n\r\n    vm.canGoForward = function () {\r\n        return vm.selectedIndex >= (vm.items.length - 1);\r\n    };\r\n\r\n    function updateSparkline(item) {\r\n        var vm = this;\r\n\r\n        vm.sparklabel = {\r\n            percentComplete: item.storage,\r\n            inlineLabel: "<span class=\'spark-label\'><span class=\'x-large\'>" + Math.round(item.storage) + "%</span></span>",\r\n            topLeftLabel: "<span class=\'spark-label-1\'>Work completed (%)</span>",\r\n            tooltip: "Spark Line Indicator - " + parseFloat((item.storage / 100) * 8.2).toFixed(2) + "GB of 8.2GB occupied (" + item.storage + "%)",\r\n            type: "spark-secondary3"\r\n        };\r\n\r\n        return vm.sparklabel;\r\n    }\r\n}'},function(e,t){e.exports='<div class="preview-pane-window-footer">\r\n  <div class="btn-pair">\r\n    <button class="btn button-secondary" ng-disabled="vm.canGoBack()" ng-click="vm.goToPrevious()" tabindex="1">\r\n      <i class="hpe-icon hpe-previous"></i>Previous\r\n    </button>\r\n\r\n    <button class="btn button-secondary" ng-disabled="vm.canGoForward()" ng-click="vm.goToNext()" tabindex="1">\r\n      Next<i class="hpe-icon hpe-next"></i> \r\n    </button>\r\n\r\n  </div>\r\n</div>'},function(e,t){e.exports='<div class="ppw-button-container">\r\n    <div class="btn button-secondary ppw-button" static-tooltip content="vm.tooltip.content" dismiss-text="vm.tooltip.dismiss"\r\n        direction="vm.tooltip.direction" position="vm.tooltip.position">\r\n        <preview-pane-window class="ppw-open" preview-name="vm.previewName" tabindex="0"></preview-pane-window>\r\n    </div>\r\n</div>\r\n\r\n<hr/>\r\n<div class="row preview-pane-window">\r\n    <div class="col-xs-12 col-sm-4 p-r-nil">\r\n        <div class="preview-items" scroll-config="::vm.scrollBarConfig" scroll-name="stackscroll" scroll-pane>\r\n            <ul class="card-view stacked list-stack card-hover">\r\n                <li class="card clickable p-r-nil" ng-repeat="item in ::vm.items" preview-pane-item="vm.goToDetails(itemIndex)" keydown-select="true"\r\n                    preselected="{{ ::$index === 0}}" index="{{::$index}}" tabIndex="{{ ::$index > 0 ? -1 : 0 }}">\r\n                    <div class="icon"></div>\r\n                    <div class="content">\r\n                        <h3 class="document-name" ng-bind="::item.name"></h3>\r\n                        <p class="document-description">Authored on <span ng-bind="::item.date"></span> by <span ng-bind="::item.author"></span></p>\r\n                        <spark ng-if="::item.storage" type="\'spark-chart2\'" value="::item.storage" fillheight="3" top-left-label="::item.storage + \'%\'"\r\n                            class="document-progress"></spark>\r\n                    </div>\r\n                    <div class="label" ng-if="::item.active">Active</div>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n\r\n    <div class="col-xs-12 col-sm-8 p-l-nil">\r\n        <preview-pane child-scope="vm.childScope" preview-file="vm.previewFile" preview-title="vm.previewTitle" preview-subtitle="vm.previewSubtitle"\r\n            preview-empty-text="vm.previewEmptyText" shadow="true" preview-name="vm.previewName"></preview-pane>\r\n    </div>\r\n</div>'},function(e,t){e.exports='<preview-pane-window class="ppw-open" preview-name="vm.previewName"></preview-pane-window>\r\n<preview-pane child-scope="vm.childScope" preview-file="vm.previewFile" preview-title="vm.previewTitle" preview-subtitle="vm.previewSubtitle"\r\n    preview-empty-text="vm.previewEmptyText" shadow="true" preview-name="vm.previewName">\r\n</preview-pane>'},function(e,t){e.exports="/*\r\n\tPreview Pane Window\r\n*/\r\n@media screen and (max-width: 769px) {\r\n  .preview-pane-window .preview-items {\r\n    max-height: 445px;\r\n  }\r\n}\r\n\r\n.preview-pane-window .preview-items .card {\r\n  padding: 16px 0 16px 11px;\r\n  height: 105px;\r\n}\r\n\r\n.preview-pane-window .preview-items .card:first-of-type {\r\n  border-top: none;\r\n}\r\n\r\n.preview-pane-window .preview-items .card .icon {\r\n  background-image: url('https://uxaspects.github.io/UXAspects/assets/img/page.png');\r\n  background-repeat: no-repeat;\r\n  width: 24px;\r\n  height: 28px;\r\n  background-size: contain;\r\n}\r\n\r\n.preview-pane-window .preview-items .card .content {\r\n  width: calc(100% - 50px);\r\n  padding-left: 2px;\r\n}\r\n\r\n.preview-pane-window .preview-items .card .content .document-name {\r\n  color: #333;\r\n  font-weight: 200;\r\n  font-size: 1.3rem;\r\n  margin-top: 0;\r\n  margin-bottom: 2px;\r\n  overflow: hidden;\r\n  max-width: calc(100% - 85px);\r\n  white-space: nowrap;\r\n  text-overflow: ellipsis;\r\n  word-break: break-all;\r\n}\r\n\r\n.preview-pane-window .preview-items .card .content .document-description {\r\n  color: #999;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  word-break: break-all;\r\n  text-overflow: ellipsis;\r\n  margin: 0;\r\n  max-width: calc(100% - 20px);\r\n}\r\n\r\n.preview-pane-window .preview-items .card .content .document-description span {\r\n  color: #676a6c;\r\n}\r\n\r\n.preview-pane-window .preview-items .card .content .document-progress {\r\n  margin-right: 20px;\r\n  float: right;\r\n  width: 25%;\r\n}\r\n\r\n.preview-pane-window .preview-items .card .label {\r\n  position: absolute;\r\n  top: 17px;\r\n  right: 25px;\r\n}\r\n\r\n.preview-pane-window .spark-bottom-label {\r\n  font-size: 14px;\r\n}\r\n\r\n@media screen and (max-width: 630px) {\r\n  .preview-pane-window .preview-items .card .card-label {\r\n    display: none;\r\n  }\r\n}\r\n\r\n.pp-toggle {\r\n  display: none;\r\n}\r\n\r\n.ppw-button-container {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n}\r\n\r\n.ppw-button-container .ppw-button {\r\n  padding: 0;\r\n}\r\n\r\n.ppw-button-container .ppw-button .ppw-open {\r\n  padding: 4px 8px;\r\n  display: inline-block;\r\n}\r\n\r\n.spark-chart-pw {\r\n  width: 100%;\r\n  float: left;\r\n  padding-left: 0px;\r\n}\r\n\r\n.spark-chart-pw .spark-label-left {\r\n  width: auto;\r\n}\r\n\r\n.preview-pane-window .preview-pane-right {\r\n  height: 480px;\r\n  max-height: 480px;\r\n  min-height: 480px;\r\n}\r\n\r\n.preview-pane-window .preview-items {\r\n  height: 550px;\r\n  overflow-y: auto;\r\n  border-top: 1px solid #e7eaec;\r\n  border-bottom: 1px solid #e7eaec;\r\n}\r\n\r\n.preview-pane-shadow {\r\n  height: 57px;\r\n}\r\n\r\n.preview-display {\r\n  padding-top: 15px;\r\n  padding-left: 20px;\r\n  padding-right: 20px;\r\n}\r\n"},function(e,t){e.exports="angular.module('app').controller('ReorderableCtrl', ReorderableCtrl);\r\n\r\nfunction ReorderableCtrl() {\r\n    var vm = this;\r\n\r\n    // create an array of documents\r\n    vm.documents = [];\r\n\r\n    // generate some sample data for the documents array\r\n    for (var idx = 1; idx <= 8; idx++) {\r\n        vm.documents.push({\r\n            name: 'Document ' + idx,\r\n            author: chance.name(),\r\n            location: chance.country({\r\n                full: true\r\n            }),\r\n            available: chance.bool()\r\n        });\r\n    }\r\n\r\n    vm.removeRow = function (document) {\r\n\r\n        // find the index of the document\r\n        var index = vm.documents.indexOf(document);\r\n\r\n        // remove the item from the list\r\n        vm.documents.splice(index, 1);\r\n    };\r\n\r\n    vm.on_reorder = function (model) {\r\n        // perform actions here\r\n    };\r\n\r\n    vm.on_reorder_complete = function (model) {\r\n        // perform actions here\r\n    };\r\n}"},function(e,t){e.exports='<div class="reorderable-controls">\r\n    <div class="reorder-up" reorder-up></div>\r\n    <div class="reorder-drag" reorder-drag>\r\n        <span class="hpe-icon hpe-drag"></span>\r\n    </div>\r\n    <div class="reorder-down" reorder-down></div>\r\n</div>'},function(e,t){e.exports='<table class="table table-hover" reorderable-table ng-model="vm.documents" on-reorder="vm.on_reorder" on-reorder-complete="vm.on_reorder_complete">\r\n    <thead>\r\n        <tr>\r\n            <th class="reorder-column"></th>\r\n            <th class="table-header-text">Document</th>\r\n            <th class="table-header-text">Author</th>\r\n            <th class="table-header-text">Location</th>\r\n            <th class="table-header-text text-center">Available</th>\r\n            <th class="remove-column"></th>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        <tr class="table-vertically-center" ng-repeat="document in vm.documents">\r\n            <td class="reorder-column">\r\n                <div class="reorderable-controls">\r\n                    <div class="reorder-up" reorder-up></div>\r\n                    <div class="reorder-drag" reorder-drag>\r\n                        <span class="hpe-icon hpe-drag"></span>\r\n                    </div>\r\n                    <div class="reorder-down" reorder-down></div>\r\n                </div>\r\n            </td>\r\n            <td class="table-primary-text" ng-bind="document.name"></td>\r\n            <td ng-bind="document.author"></td>\r\n            <td ng-bind="document.location"></td>\r\n            <td class="text-center">\r\n                <span class="hpe-icon hpe-active bold-icon text-primary" ng-if="document.available"></span>\r\n                <span class="hpe-icon hpe-close bold-icon text-warning" ng-if="!document.available"></span>\r\n            </td>\r\n            <td>\r\n                <span class="hpe-icon hpe-close remove-row" ng-click="vm.removeRow(document)"></span>\r\n            </td>\r\n        </tr>\r\n    </tbody>\r\n</table>'},function(e,t){e.exports='<span class="hpe-icon hpe-close remove-row" ng-click="vm.removeRow(document)"></span>'},function(e,t){e.exports="vm.removeRow = function (document) {\r\n\r\n    // find the index of the document\r\n    var index = vm.documents.indexOf(document);\r\n\r\n    // remove the item from the list\r\n    vm.documents.splice(index, 1);\r\n};"},function(e,t){e.exports=".table>tbody>tr.table-vertically-center>td {\r\n    vertical-align: middle;\r\n}\r\n\r\ntr.dragging td {\r\n    background-color: #f5f5f5;\r\n}\r\n\r\ntr .remove-row {\r\n    opacity: 0;\r\n    color: #666666;\r\n}\r\n\r\ntr:hover .remove-row {\r\n    opacity: 0.5;\r\n    cursor: pointer;\r\n}\r\n\r\ntr .remove-row:hover {\r\n    opacity: 1;\r\n}\r\n\r\n.reorder-column,\r\n.remove-column {\r\n    width: 36px;\r\n}\r\n\r\n.reorderable-controls {\r\n    width: 20px;\r\n    margin: 0;\r\n    text-align: center;\r\n}\r\n\r\n.reorderable-controls .reorder-up,\r\n.reorderable-controls .reorder-drag,\r\n.reorderable-controls .reorder-down {\r\n    visibility: hidden;\r\n}\r\n\r\ntr:hover .reorderable-controls .reorder-up,\r\ntr:hover .reorderable-controls .reorder-drag,\r\ntr:hover .reorderable-controls .reorder-down,\r\ntr.dragging .reorderable-controls .reorder-up,\r\ntr.dragging .reorderable-controls .reorder-down {\r\n    opacity: 0.5;\r\n    visibility: visible;\r\n}\r\n\r\ntr:hover .reorderable-controls .reorder-up:hover,\r\ntr:hover .reorderable-controls .reorder-drag:hover,\r\ntr:hover .reorderable-controls .reorder-down:hover,\r\ntr.dragging .reorderable-controls .reorder-drag {\r\n    opacity: 1;\r\n    visibility: visible;\r\n}\r\n\r\n.reorderable-controls .reorder-up,\r\n.reorderable-controls .reorder-down {\r\n    margin-left: 4px;\r\n    width: 0;\r\n    height: 0;\r\n    border-style: solid;\r\n    cursor: pointer;\r\n}\r\n\r\n.reorderable-controls .reorder-up {\r\n    border-width: 0 5px 8px 5px;\r\n    border-color: transparent transparent #666666 transparent;\r\n}\r\n\r\n.reorderable-controls .reorder-down {\r\n    border-width: 8px 5px 0 5px;\r\n    border-color: #666 transparent transparent transparent;\r\n}\r\n\r\n.reorderable-controls .reorder-drag {\r\n    color: #666;\r\n    font-size: 15px;\r\n    margin-left: -2px;\r\n    margin-top: 2px;\r\n    cursor: ns-resize;\r\n}\r\n\r\n.table-header-text {\r\n    color: #333;\r\n}\r\n\r\n.table-primary-text {\r\n    color: #333;\r\n}"},function(e,t){e.exports='<table class="table table-hover" reorderable-table ng-model="vm.documents" on-reorder="vm.on_reorder" on-reorder-complete="vm.on_reorder_complete">\r\n    <thead>\r\n        ...\r\n    </thead>\r\n    <tbody>\r\n        <tr class="table-vertically-center" ng-repeat="document in vm.documents">\r\n            ...\r\n        </tr>\r\n    </tbody>\r\n</table>'},function(e,t){e.exports='<table class="table table-hover fixed-layout">\r\n    <thead>\r\n        <tr class="table-header-dark sorter-header-sm" sortable-header headers="vm.sorterHeaders" default-sorter="vm.activeSorter"\r\n            default-order="vm.orderDesc"></tr>\r\n    </thead>\r\n    <tbody>\r\n        <tr class="clickable" ng-repeat="item in vm.sortableTable">\r\n            <td>\r\n                <div class="listview-page-icon"></div>\r\n            </td>\r\n            <td ng-bind="::item.name"></td>\r\n            <td ng-bind="::item.author"></td>\r\n            <td ng-bind="::item.date"></td>\r\n            <td>\r\n                <spark type="::\'spark-chart2\'" value="::item.complete" fillheight="3" inline-label="::item.complete" top="13"></spark>\r\n            </td>\r\n            <td class="text-center">\r\n                <div class="hpe-icon" ng-class="::{\'text-accent\': item.active, \'hpe-checkmark\':item.active}"></div>\r\n            </td>\r\n        </tr>\r\n    </tbody>\r\n</table>'},function(e,t){e.exports='angular.module(\'app\').controller(\'SingleColumnSortingCtrl\', SingleColumnSortingCtrl);\r\n\r\nfunction SingleColumnSortingCtrl() {\r\n    var vm = this;\r\n\r\n    vm.activeSorter = "date";\r\n    vm.orderDesc = false;\r\n    vm.sorterHeaders = [{\r\n            sorterHeader: "",\r\n            sortable: false,\r\n            fixedClass: "table-col-icon"\r\n        },\r\n        {\r\n            sorterHeader: "NAME",\r\n            sortable: true,\r\n            sort: "name",\r\n            fixedClass: "table-col-md"\r\n        },\r\n        {\r\n            sorterHeader: "AUTHOR",\r\n            sortable: true,\r\n            sort: "author",\r\n            fixedClass: "table-col-md"\r\n        },\r\n        {\r\n            sorterHeader: "DATE MODIFIED",\r\n            sortable: true,\r\n            sort: "date",\r\n            fixedClass: "table-col-md"\r\n        },\r\n        {\r\n            sorterHeader: "WORK COMPLETED (%)",\r\n            sortable: true,\r\n            sort: "complete",\r\n            fixedClass: "table-col-md"\r\n        },\r\n        {\r\n            sorterHeader: "STATUS",\r\n            sortable: false,\r\n            center: true,\r\n            fixedClass: "table-col-md"\r\n        }\r\n    ];\r\n\r\n    vm.sortableTable = [{\r\n        id: 1,\r\n        name: "Document 1",\r\n        author: chance.name(),\r\n        date: "18 Dec 2016",\r\n        complete: 97,\r\n        active: true\r\n    }, {\r\n        id: 2,\r\n        name: "Document 2",\r\n        author: chance.name(),\r\n        date: "22 Dec 2016",\r\n        complete: 15,\r\n        active: false\r\n    }, {\r\n        id: 3,\r\n        name: "Document 3",\r\n        author: chance.name(),\r\n        date: "12 Dec 2016",\r\n        complete: 20,\r\n        active: true\r\n    }, {\r\n        id: 4,\r\n        name: "Document 4",\r\n        author: chance.name(),\r\n        date: "16 Dec 2016",\r\n        complete: 74,\r\n        active: true\r\n    }, {\r\n        id: 5,\r\n        name: "Document 5",\r\n        author: chance.name(),\r\n        date: "11 Dec 2016",\r\n        complete: 63,\r\n        active: false\r\n    }, {\r\n        id: 6,\r\n        name: "Document 6",\r\n        author: chance.name(),\r\n        date: "21 Dec 2016",\r\n        complete: 21,\r\n        active: true\r\n    }, {\r\n        id: 7,\r\n        name: "Document 7",\r\n        author: chance.name(),\r\n        date: "17 Dec 2016",\r\n        complete: 85,\r\n        active: false\r\n    }, {\r\n        id: 8,\r\n        name: "Document 8",\r\n        author: chance.name(),\r\n        date: "29 Dec 2016",\r\n        complete: 11,\r\n        active: true\r\n    }];\r\n\r\n    vm.sortByKey = function (array, key, descending) {\r\n        if (descending === true) {\r\n            return array.sort(function (a, b) {\r\n                var x = a[key];\r\n                var y = b[key];\r\n                return ((x < y) ? 1 : ((x > y) ? -1 : ((a.id < b.id) ? -1 : 1)));\r\n            });\r\n        }\r\n        return array.sort(function (a, b) {\r\n            var x = a[key];\r\n            var y = b[key];\r\n            return ((x < y) ? -1 : ((x > y) ? 1 : ((a.id < b.id) ? -1 : 1)));\r\n        });\r\n    };\r\n\r\n    vm.sorterHeaders.forEach(function (headers) {\r\n        headers.select = function (activeSorter, orderDesc) {\r\n            vm.activeSorter = activeSorter;\r\n            vm.orderDesc = orderDesc;\r\n            vm.sortByKey(vm.sortableTable, activeSorter, orderDesc);\r\n        };\r\n    });\r\n\r\n}\r\n'},function(e,t){e.exports='<sort-direction-toggle label="vm.sortDirectionToggle.label" sorters="vm.sortDirectionToggle.sorters"></sort-direction-toggle>'},function(e,t){e.exports="angular.module('app').controller('SortToggleCtrl', SortToggleCtrl);\r\n\r\nfunction SortToggleCtrl() {\r\n\r\n    var vm = this;\r\n\r\n    vm.sortDirectionToggle = {\r\n        label: 'Sort by:',\r\n        sorters: [{\r\n            name: 'Document',\r\n            sort: 'document',\r\n            defaultSorter: true,\r\n            select: function () {\r\n                // Do stuff here when selected\r\n            }\r\n        }, {\r\n            name: 'Name',\r\n            sort: 'name',\r\n            select: function () {\r\n                // Do stuff here when selected\r\n            }\r\n        }, {\r\n            name: 'Date',\r\n            sort: 'date',\r\n            select: function () {\r\n                // Do stuff here when selected\r\n            }\r\n        }]\r\n    };\r\n\r\n    // An example method which finds active sorter from select() function\r\n    vm.applySorter = function () {\r\n        vm.sortDirectionToggle.sorters.forEach(function (sorters) {\r\n            sorters.select = function (activeSorter, orderDesc) {\r\n                vm.activeSorter = activeSorter;\r\n                vm.orderDesc = orderDesc;\r\n                vm.loadPage();\r\n            };\r\n        });\r\n    };\r\n}\r\n"},function(e,t){e.exports='.cardTab {\r\n  padding: 7px 9px;\r\n}\r\n\r\n.cardTab .cardTitle {\r\n  color: #333;\r\n  font-size: 17px;\r\n}\r\n\r\n.cardTab .cardValue {\r\n  text-align: center;\r\n  font-size: 26px;\r\n  color: #686868;\r\n  margin: 0;\r\n}\r\n\r\n.cardTab .cardSubtitle {\r\n  text-align: center;\r\n  color: #B8B8B8;\r\n  margin-bottom: 0;\r\n}\r\n\r\n.cardTab .cardImg {\r\n  width: 100%;\r\n  height: 60px;\r\n  background-repeat: no-repeat;\r\n  background-size: contain;\r\n  background-position: center;\r\n}\r\n\r\n.cardTab .cardImg.img1 {\r\n  background-image: url("https://uxaspects.github.io/UXAspects/assets/img/card-img1.png");\r\n}\r\n\r\n.cardTab .cardImg.img2 {\r\n  background-image: url("https://uxaspects.github.io/UXAspects/assets/img/card-img2.png");\r\n}\r\n\r\n.cardTab .cardImg.img3 {\r\n  background-image: url("https://uxaspects.github.io/UXAspects/assets/img/card-img3.png");\r\n}\r\n\r\n.cardTab .cardImg.img4 {\r\n  background-image: url("https://uxaspects.github.io/UXAspects/assets/img/card-img4.png");\r\n}\r\n\r\n.cardTab .cardImg.img5 {\r\n  background-image: url("https://uxaspects.github.io/UXAspects/assets/img/card-img5.png");\r\n}'},function(e,t){e.exports='<cardset content-position="top">\r\n\r\n  <card ng-repeat="tab in ::vm.cardTabs">\r\n    <div class="cardTab">\r\n      <p class="cardTitle" ng-bind="::tab.title"></p>\r\n      <div class="cardImg" ng-class="tab.image"></div>\r\n      <p class="cardValue" ng-bind-html="::tab.value"></p>\r\n      <p class="cardSubtitle" ng-bind="::tab.subtitle"></p>\r\n    </div>\r\n    <tab-content>\r\n      <h4 ng-bind="::tab.title"></h4>\r\n      <p ng-bind-html="::tab.content"></p>\r\n    </tab-content>\r\n  </card>\r\n\r\n</cardset>'},function(e,t){e.exports="angular.module(\"app\").controller(\"TabsCtrl\", TabsCtrl);\r\n\r\nfunction TabsCtrl() {\r\n    var vm = this;\r\n\r\n    vm.cardTabs = [{\r\n        title: 'Archive Totals',\r\n        image: 'img1',\r\n        value: '637 <small>GB</small>',\r\n        subtitle: '63% licensed storage used',\r\n        content: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam cursus volutpat eros, in varius nibh ultrices a. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Aliquam pellentesque vel augue nec pellentesque. Nullam sollicitudin pulvinar lectus, non eleifend mauris finibus vitae. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.'\r\n    }, {\r\n        title: 'Data Processed',\r\n        image: 'img2',\r\n        value: '1.3 <small>GB</small>',\r\n        subtitle: 'processed this month',\r\n        content: 'Vestibulum faucibus porttitor ligula, vitae sollicitudin tellus efficitur quis. Duis sit amet sollicitudin dui. Praesent mauris tortor, dignissim sit amet convallis et, sollicitudin et risus. Phasellus eget tortor eu est egestas suscipit et eget ante. Vivamus eget ultricies felis. Ut dolor justo, finibus vel metus quis, hendrerit malesuada justo. Donec est nibh, suscipit non feugiat eget, rutrum sed ipsum.'\r\n    }, {\r\n        title: 'Data Retention',\r\n        image: 'img3',\r\n        value: '242 <small>GB</small>',\r\n        subtitle: '39% data on hold',\r\n        content: 'Mauris sit amet condimentum lorem. Aliquam at ante sed quam volutpat ornare. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Nam congue posuere eros sed egestas. Cras gravida viverra ipsum vel porta. Ut at hendrerit velit. Fusce est est, vehicula vel elementum et, ultricies at leo.'\r\n    }, {\r\n        title: 'Users',\r\n        image: 'img4',\r\n        value: '195',\r\n        subtitle: '76 logged in',\r\n        content: 'In hac habitasse platea dictumst. Donec ut nunc mauris. Suspendisse lobortis viverra neque vitae cursus. Proin tempus arcu erat, eu sollicitudin neque efficitur interdum. Cras bibendum eget sapien sit amet hendrerit. Phasellus non dictum urna. Sed fermentum nisl nec turpis euismod lobortis. Pellentesque porta ligula at auctor tempus. Suspendisse non augue nec libero posuere tempus quis nec lectus. Sed non nisl velit.'\r\n    }, {\r\n        title: 'Audit Trail',\r\n        image: 'img5',\r\n        value: '&nbsp;',\r\n        subtitle: 'activity (last 7 days)',\r\n        content: 'Fusce tempus aliquet tristique. Cras mollis cursus eros, ac tincidunt arcu aliquet sed. Fusce magna nisl, euismod eget mattis ut, convallis sit amet mi. Sed tempor nunc ac blandit pretium. Aliquam ut luctus augue. Etiam luctus felis nisi. Cras a ante nec nulla mattis dignissim. Vivamus placerat faucibus ultricies. Aliquam in efficitur elit, nec egestas odio.'\r\n    }];\r\n}"},function(e,t){e.exports='<div class="m-b-lg">\r\n    <tabset type="tabs minimal-tab">\r\n        <tab ng-repeat="tab in ::vm.detailedTabs">\r\n            <tab-heading>\r\n                <span class="tab-title" ng-bind="::tab.title"></span>\r\n            </tab-heading>\r\n            <ng-include src="tab.content"></ng-include>\r\n        </tab>\r\n    </tabset>\r\n</div>'},function(e,t){e.exports="angular.module(\"app\").controller(\"TabsCtrl\", TabsCtrl);\r\n\r\nfunction TabsCtrl() {\r\n\r\n  var vm = this;\r\n\r\n  vm.detailedTabs = [{\r\n      title: 'Bar Chart',\r\n      content: 'tab-bar.html'\r\n  }, {\r\n      title: 'Sankey Chart',\r\n      content: 'tab-sankey.html'\r\n  }, {\r\n      title: 'Fixed Header Table',\r\n      content: 'tab-table.html'\r\n  }];\r\n\r\n}"},function(e,t){e.exports='  angular.module("app").controller("TabsBarCtrl", TabsBarCtrl);\r\n\r\n  TabsBarCtrl.$inject = [\'$colorService\'];\r\n\r\n  function TabsBarCtrl($colorService) {\r\n    var vm = this;\r\n\r\n    var flotChartColors = {\r\n      chartColor: $colorService.getColor(\'chart1\').toRgb(),\r\n      highlightColor: $colorService.getColor("chart1").setAlpha(0.2).toRgba(),\r\n      forecastFillColor: $colorService.getColor("chart1").setAlpha(0.3).toRgba(),\r\n      gridColor: $colorService.getColor(\'grey4\').toHex(),\r\n      tickColor: $colorService.getColor(\'grey6\').toHex(),\r\n      borderColor: $colorService.getColor(\'grey2\').setAlpha(0.5).toRgba(),\r\n      white: \'#ffffff\'\r\n    };\r\n\r\n    vm.barChart = {\r\n      data: [{\r\n        label: "bar",\r\n        data: [\r\n          [1, 34],\r\n          [2, 25],\r\n          [3, 19],\r\n          [4, 34],\r\n          [5, 32],\r\n          [6, 44]\r\n        ],\r\n        forecastData: [\r\n          [7, 50],\r\n          [8, 67]\r\n        ]\r\n      }],\r\n      baroptions: {\r\n        series: {\r\n          bars: {\r\n            show: true,\r\n            fill: true,\r\n            fillColor: {\r\n              colors: [{\r\n                opacity: 0.1\r\n              }, {\r\n                opacity: 0.1\r\n              }]\r\n            },\r\n            barWidth: 0.5,\r\n            lineWidth: 1,\r\n            \'align\': "center"\r\n          },\r\n          highlightColor: [flotChartColors.highlightColor],\r\n          forecastFillColor: [flotChartColors.forecastFillColor],\r\n          forecastColor: [flotChartColors.chartColor],\r\n          forecastHighLightColor: [flotChartColors.highlightColor],\r\n          forecastDashStyle: [5]\r\n        },\r\n        xaxis: {\r\n          tickDecimals: 0,\r\n          color: [flotChartColors.white],\r\n          ticks: [\r\n            [1, ".doc"],\r\n            [2, ".ppt"],\r\n            [3, ".pdf"],\r\n            [4, ".xls"],\r\n            [5, ".html"],\r\n            [6, ".txt"],\r\n            [7, ".csv"],\r\n            [8, ".mht"]\r\n          ]\r\n\r\n        },\r\n        colors: [flotChartColors.chartColor],\r\n        grid: {\r\n          color: [flotChartColors.gridColor],\r\n          hoverable: true,\r\n          clickable: true,\r\n          borderWidth: {\r\n            "left": 1,\r\n            "bottom": 1,\r\n            "right": 0,\r\n            "top": 0\r\n          },\r\n          borderColor: {\r\n            "left": [flotChartColors.borderColor],\r\n            "bottom": [flotChartColors.borderColor]\r\n          }\r\n        },\r\n        legend: {\r\n          show: false\r\n        },\r\n        tooltip: {\r\n          show: true,\r\n          shifts: {\r\n            x: 0,\r\n            y: -30\r\n          },\r\n          content: function (label, xval, yval) {\r\n            var content = "x: " + "%x" + ", y: " + yval;\r\n            return content;\r\n          }\r\n        }\r\n      }\r\n    };\r\n\r\n  }'},function(e,t){e.exports='angular.module("app").controller("TabsSankeyCtrl", TabsSankeyCtrl);\r\n\r\nfunction TabsSankeyCtrl() {\r\n    var vm = this;\r\n    vm.resizeId = null;\r\n\r\n    vm.click = function (elem) {\r\n        console.info(elem);\r\n    };\r\n\r\n    vm.data = {\r\n        "columns": [{\r\n            "id": "data_source",\r\n            "name": "Repository",\r\n            "ordinal": 0\r\n        }, {\r\n            "id": "extraction_type",\r\n            "name": "Extraction",\r\n            "ordinal": 1\r\n        }, {\r\n            "id": "classification",\r\n            "name": "Classification",\r\n            "ordinal": 2\r\n        }, {\r\n            "id": "disposition_type",\r\n            "name": "Disposition",\r\n            "ordinal": 3\r\n        }],\r\n        "nodes": [{\r\n            "name": "Not Classified",\r\n            "type": "classification",\r\n            "id": 0,\r\n            "value": 130,\r\n            "datasize": 362969649\r\n        }, {\r\n            "name": "Classified",\r\n            "type": "classification",\r\n            "id": 1,\r\n            "value": 243,\r\n            "datasize": 326502171\r\n        }, {\r\n            "name": "Phone Records",\r\n            "type": "data_source",\r\n            "id": 2,\r\n            "value": 14,\r\n            "datasize": 512125362\r\n        }, {\r\n            "name": "Lync Conversation",\r\n            "type": "data_source",\r\n            "id": 3,\r\n            "value": 32,\r\n            "datasize": 62160\r\n        }, {\r\n            "name": "Device Backup",\r\n            "type": "data_source",\r\n            "id": 4,\r\n            "value": 50,\r\n            "datasize": 33409254\r\n        }, {\r\n            "name": "Data Archive (Internal)",\r\n            "type": "data_source",\r\n            "id": 5,\r\n            "value": 104,\r\n            "datasize": 35125228\r\n        }, {\r\n            "name": "Exchange",\r\n            "type": "data_source",\r\n            "id": 6,\r\n            "value": 173,\r\n            "datasize": 108749816\r\n        }, {\r\n            "name": "Archived",\r\n            "type": "disposition_type",\r\n            "id": 7,\r\n            "value": 12,\r\n            "datasize": 14860510\r\n        }, {\r\n            "name": "Deleted",\r\n            "type": "disposition_type",\r\n            "id": 8,\r\n            "value": 34,\r\n            "datasize": 32517566\r\n        }, {\r\n            "name": "On Hold",\r\n            "type": "disposition_type",\r\n            "id": 9,\r\n            "value": 68,\r\n            "datasize": 535140573\r\n        }, {\r\n            "name": "Image",\r\n            "type": "extraction_type",\r\n            "id": 10,\r\n            "value": 16,\r\n            "datasize": 2286386\r\n        }, {\r\n            "name": "Audio",\r\n            "type": "extraction_type",\r\n            "id": 11,\r\n            "value": 22,\r\n            "datasize": 525843218\r\n        }, {\r\n            "name": "Text",\r\n            "type": "extraction_type",\r\n            "id": 12,\r\n            "value": 335,\r\n            "datasize": 161342216\r\n        }],\r\n        "links": [{\r\n            "source": 0,\r\n            "target": 7,\r\n            "value": 4,\r\n            "datasize": 348\r\n        }, {\r\n            "source": 0,\r\n            "target": 8,\r\n            "value": 4,\r\n            "datasize": 23572\r\n        }, {\r\n            "source": 1,\r\n            "target": 7,\r\n            "value": 8,\r\n            "datasize": 14860162\r\n        }, {\r\n            "source": 1,\r\n            "target": 9,\r\n            "value": 27,\r\n            "datasize": 217971281\r\n        }, {\r\n            "source": 1,\r\n            "target": 8,\r\n            "value": 30,\r\n            "datasize": 32493994\r\n        }, {\r\n            "source": 0,\r\n            "target": 9,\r\n            "value": 41,\r\n            "datasize": 317169292\r\n        }, {\r\n            "source": 5,\r\n            "target": 11,\r\n            "value": 4,\r\n            "datasize": 6741424\r\n        }, {\r\n            "source": 6,\r\n            "target": 11,\r\n            "value": 4,\r\n            "datasize": 6976432\r\n        }, {\r\n            "source": 5,\r\n            "target": 10,\r\n            "value": 6,\r\n            "datasize": 73059\r\n        }, {\r\n            "source": 6,\r\n            "target": 10,\r\n            "value": 10,\r\n            "datasize": 2213327\r\n        }, {\r\n            "source": 2,\r\n            "target": 11,\r\n            "value": 14,\r\n            "datasize": 512125362\r\n        }, {\r\n            "source": 3,\r\n            "target": 12,\r\n            "value": 32,\r\n            "datasize": 62160\r\n        }, {\r\n            "source": 4,\r\n            "target": 12,\r\n            "value": 50,\r\n            "datasize": 33409254\r\n        }, {\r\n            "source": 5,\r\n            "target": 12,\r\n            "value": 94,\r\n            "datasize": 28310745\r\n        }, {\r\n            "source": 6,\r\n            "target": 12,\r\n            "value": 159,\r\n            "datasize": 99560057\r\n        }, {\r\n            "source": 11,\r\n            "target": 1,\r\n            "value": 4,\r\n            "datasize": 187339593\r\n        }, {\r\n            "source": 10,\r\n            "target": 0,\r\n            "value": 6,\r\n            "datasize": 226298\r\n        }, {\r\n            "source": 10,\r\n            "target": 1,\r\n            "value": 10,\r\n            "datasize": 2060088\r\n        }, {\r\n            "source": 11,\r\n            "target": 0,\r\n            "value": 18,\r\n            "datasize": 338503625\r\n        }, {\r\n            "source": 12,\r\n            "target": 0,\r\n            "value": 105,\r\n            "datasize": 24239726\r\n        }, {\r\n            "source": 12,\r\n            "target": 1,\r\n            "value": 230,\r\n            "datasize": 137102490\r\n        }]\r\n    };\r\n\r\n    vm.options = {\r\n        linkHoverHL: true,\r\n        col: {\r\n            headerLabelSpacing: 25,\r\n            paddingTop: 0,\r\n            paddingBottom: 0,\r\n            headerLabelLength: 18\r\n        },\r\n        block: {\r\n            truncateThreshold: 18,\r\n            minWidth: 120,\r\n            calloutData: {\r\n                topLeft: {\r\n                    key: \'datasize\',\r\n                    nodeLabel: false,\r\n                    defaultShow: false,\r\n                    valueUnit: \'B\',\r\n                    label: \'data\'\r\n                },\r\n                topRight: {\r\n                    key: \'value\',\r\n                    nodeLabel: false,\r\n                    defaultShow: true,\r\n                    valueUnit: null,\r\n                    label: \'items\'\r\n                },\r\n                bottomRight: {},\r\n                bottomLeft: {\r\n                    key: \'name\',\r\n                    nodeLabel: true,\r\n                    defaultShow: true\r\n                }\r\n            }\r\n        },\r\n        overflow: {\r\n            tooltip: {\r\n                label: \'items\',\r\n                showTooltip: true\r\n            }\r\n        }\r\n    };\r\n}'},function(e,t){e.exports="angular.module(\"app\").controller(\"TabsTableCtrl\", TabsTableCtrl);\r\n\r\nfunction TabsTableCtrl() {\r\n    var vm = this;\r\n    vm.sampleTableData = [{\r\n        id: 1,\r\n        Data: 156,\r\n        User: chance.name(),\r\n        Task: '40%',\r\n        Date: 'July 14, 2016'\r\n    }, {\r\n        id: 2,\r\n        Data: 226,\r\n        User: chance.name(),\r\n        Task: '-20%',\r\n        Date: 'July 15, 2016'\r\n    }, {\r\n        id: 3,\r\n        Data: 52,\r\n        User: chance.name(),\r\n        Task: '26%',\r\n        Date: 'July 21, 2016'\r\n    }, {\r\n        id: 4,\r\n        Data: 461,\r\n        User: chance.name(),\r\n        Task: '-23%',\r\n        Date: 'July 19, 2016'\r\n    }, {\r\n        id: 5,\r\n        Data: 119,\r\n        User: chance.name(),\r\n        Task: '16%',\r\n        Date: 'June 14, 2016'\r\n    }, {\r\n        id: 6,\r\n        Data: 145,\r\n        User: chance.name(),\r\n        Task: '30%',\r\n        Date: 'August 14, 2016'\r\n    }, {\r\n        id: 7,\r\n        Data: 455,\r\n        User: chance.name(),\r\n        Task: '-28%',\r\n        Date: 'September 14, 2016'\r\n    }, {\r\n        id: 8,\r\n        Data: 156,\r\n        User: chance.name(),\r\n        Task: '80%',\r\n        Date: 'October 14, 2016'\r\n    }, {\r\n        id: 9,\r\n        Data: 240,\r\n        User: chance.name(),\r\n        Task: '-22%',\r\n        Date: 'November 14, 2016'\r\n    }];\r\n\r\n}"},function(e,t){e.exports=".stacked-tabs-icon {\r\n\tmin-height: 195px;\r\n}\r\n.stacked-tabs-icon-and-text {\r\n\tmin-height: 250px;\r\n}\r\n.stacked-tabs-text {\r\n\tmin-height: 195px;\r\n}"},function(e,t){e.exports='<div class="row">\r\n    <div class="col-md-6">\r\n        <h4>Tabs - left</h4><br/>\r\n        <div class="tabs-left stacked-tabs-icon">\r\n            <tabset class="outline-tab">\r\n                <tab align="text-center" ng-repeat="tab in ::vm.stackedTabs">\r\n                    <tab-heading>\r\n                        <i class="hpe-icon" ng-class="tab.icon" aria-hidden="true"></i>\r\n                    </tab-heading>\r\n                    <h4 ng-bind="::tab.title"></h4>\r\n                    <span ng-bind="::tab.content"></span>\r\n                </tab>\r\n            </tabset>\r\n        </div>\r\n    </div>\r\n    <div class="col-md-6">\r\n        <h4>Tabs - right</h4><br/>\r\n        <div class="tabs-right stacked-tabs-icon">\r\n            <tabset class="outline-tab">\r\n                <tab align="text-center" ng-repeat="tab in ::vm.stackedTabs">\r\n                    <tab-heading>\r\n                        <i class="hpe-icon" ng-class="tab.icon" aria-hidden="true"></i>\r\n                    </tab-heading>\r\n                    <h4 ng-bind="::tab.title"></h4>\r\n                    <span ng-bind="::tab.content"></span>\r\n                </tab>\r\n            </tabset>\r\n        </div>\r\n    </div>\r\n</div>'},function(e,t){e.exports='angular.module("app").controller("TabsCtrl", TabsCtrl);\r\n\r\nfunction TabsCtrl() {\r\n    var vm = this;\r\n\r\n    vm.stackedTabs = [\r\n        { title:"Schedule", icon:"hpe-schedule", content:"Lorem ipsum dolor sit amet, charetra varius quam sit amet vulputate.Quisque mauris augue, molestie tincidunt condimentum vitae, gravida a libero. " },\r\n        { title:"Protection", icon:"hpe-shield", content:"Secondo sed ac orci quis tortor imperdiet venenatis. Duis elementum auctor accumsan. Aliquam in felis sit amet augue." },\r\n        { title:"Solution", icon:"hpe-information", content:"Thirdamuno, ipsum dolor sit amet, consectetur adipiscing elit. Duis pharetra varius quam sit amet vulputate. Quisque mauris augue, molestie tincidunt condimentum vitae." }\r\n    ];\r\n}'},function(e,t){e.exports='<h3>Icon Only</h3>\r\n<div class="m-b-lg">\r\n    <tabset type="tabs minimal-tab">\r\n        <tab align="text-center" ng-repeat="tab in vm.tabs">\r\n            <tab-heading>\r\n                <i class="hpe-icon" ng-class="tab.icon" aria-hidden="true"></i>&nbsp;\r\n                <span class="sr-only" ng-bind="tab.title"></span>\r\n            </tab-heading>\r\n            <ng-include src="tab.content"></ng-include>\r\n        </tab>\r\n    </tabset>\r\n</div>\r\n\r\n<h3>Text and Icon</h3>\r\n<div class="m-b-lg">\r\n    <tabset type="tabs minimal-tab">\r\n        <tab ng-repeat="tab in vm.tabs">\r\n            <tab-heading>\r\n                <i class="hpe-icon" ng-class="tab.icon" aria-hidden="true"></i>&nbsp;\r\n                <span class="tab-title" ng-bind="tab.title"></span>\r\n            </tab-heading>\r\n            <ng-include src="tab.content"></ng-include>\r\n        </tab>\r\n    </tabset>\r\n</div>\r\n\r\n<h3>Text Only</h3>\r\n<div class="m-b-lg">\r\n    <tabset type="tabs minimal-tab">\r\n        <tab ng-repeat="tab in vm.tabs">\r\n            <tab-heading>\r\n                <span class="tab-title" ng-bind="tab.title"></span>\r\n            </tab-heading>\r\n            <ng-include src="tab.content"></ng-include>\r\n        </tab>\r\n    </tabset>\r\n</div>\r\n\r\n<h3>Alternative Style</h3>\r\n<div class="m-b-lg">\r\n    <tabset class="outline-tab">\r\n        <tab ng-repeat="tab in vm.tabs">\r\n            <tab-heading>\r\n                <span ng-bind="tab.title"></span>\r\n            </tab-heading>\r\n            <ng-include src="tab.content"></ng-include>\r\n        </tab>\r\n    </tabset>\r\n    </div>\r\n\r\n<h3>Dynamic Tabs</h3>\r\n<div class="m-b-lg">\r\n    <tabset type="tabs minimal-tab">\r\n        <tab align="text-center" ng-repeat="tab in vm.dynamicTabs">\r\n            <tab-heading>\r\n                <span class="tab-title" ng-bind="tab.title"></span>\r\n            </tab-heading>\r\n            <ng-include src="tab.content"></ng-include>\r\n        </tab>\r\n        <div class="btn-group tab-dropdown" dropdown>\r\n            <div dropdown-toggle>\r\n                <button type="button" class="btn btn-icon btn-circular button-accent btn-sm" aria-label="Contract">\r\n                    <span class="hpe-icon hpe-add" aria-hidden="true"></span>\r\n                </button>\r\n                <span class="tab-title">Add</span>\r\n            </div>\r\n            <ul class="dropdown-menu" role="menu">\r\n                <li ng-repeat="option in vm.inlineDropDownOptions"><a href="" ng-click="vm.dropClick($index)" ng-class="{\'tab-option-selected\': vm.tabSelected(option) }" ng-bind="option"></a></li>\r\n            </ul>\r\n        </div>\r\n    </tabset>\r\n</div>'},function(e,t){e.exports='angular.module("app").controller("TabsCtrl", TabsCtrl);\r\n\r\nfunction TabsCtrl() {\r\n    var vm = this;\r\n\r\n    vm.tabs = [\r\n        { title:"Schedule", icon:"hpe-schedule", content:"tab.html" },\r\n        { title:"Protection", icon:"hpe-shield", content:"tab.html" },\r\n        { title:"Solution", icon:"hpe-information", content:"tab.html" },\r\n        { title:"Analytics", icon:"hpe-analytics", content:"tab.html" }\r\n    ];\r\n\r\n    vm.dynamicTabs = [\r\n      { title: "Schedule", icon: "hpe-schedule", content: "tab.html" },\r\n      { title: "Protection", icon: "hpe-shield", content: "tab.html" },\r\n      { title: "Solution", icon: "hpe-information", content: "tab.html" },\r\n      { title: "Analytics", icon: "hpe-analytics", content: "tab.html" }\r\n    ];\r\n\r\n    vm.inlineDropDownOptions = [\'Security\', \'Progress\', \'Actions\'];\r\n\r\n    var dropDownOptionTabs = [\r\n      { title: "Security", icon: "hpe-secure", content: "tab.html" },\r\n      { title: "Progress", icon: "hpe-optimization", content: "tab.html" },\r\n      { title: "Actions", icon: "hpe-actions", content: "tab.html" }\r\n    ];\r\n\r\n    vm.dropClick = function(index) {\r\n\r\n      if(vm.dynamicTabs.indexOf(dropDownOptionTabs[index]) === - 1) {\r\n          vm.dynamicTabs.push(dropDownOptionTabs[index]);\r\n      }\r\n    };\r\n\r\n    vm.tabSelected = function(tab_name) {\r\n\r\n      var matching_tabs = vm.dynamicTabs.filter(function(tab) {\r\n        return tab.title === tab_name;\r\n      });\r\n\r\n      return matching_tabs.length !== 0;\r\n    };\r\n}'},function(e,t){e.exports='<button class="btn button-primary" ng-click="vm.addEvent()">Add New Event</button>\r\n<br/><br/><br/>\r\n<timeline>\r\n    <timeline-event ng-repeat="event in vm.events">\r\n        <timeline-badge ng-class="event.badgeClass">\r\n            <span ng-bind="event.badgeTitle"></span>\r\n        </timeline-badge>\r\n        <timeline-panel>\r\n            <timeline-heading>\r\n                <h4 ng-bind="event.title"></h4>\r\n                <p ng-if="event.when">\r\n                    <small class="text-muted"><i class="hpe-icon hpe-document-time"></i> <span ng-bind="event.when"></span></small>\r\n                </p>\r\n            </timeline-heading>\r\n            <p ng-bind="event.content"></p>\r\n            <span ng-bind-html="event.contentHtml" class="ng-binding ng-scope"></span>\r\n        </timeline-panel>\r\n    </timeline-event>\r\n</timeline>'},function(e,t){e.exports="angular.module(\"app\").controller(\"TimelineCtrl\", TimelineCtrl);\r\n\r\nfunction TimelineCtrl() {\r\n    var vm = this;\r\n    vm.events = [{\r\n        badgeClass: 'accent',\r\n        title: 'First heading',\r\n        badgeTitle: 'Jan 31',\r\n        when: 'Jan 31st via Twitter',\r\n        content: 'This is an accent class.',\r\n        contentHtml: '<a class=\"hyperlink\" href=\"#/\">Load page</a>',\r\n    }, {\r\n        badgeClass: 'success',\r\n        title: 'Second heading',\r\n        badgeTitle: 'Jan 30',\r\n        when: 'Jan 30th via Twitter',\r\n        content: 'This is a success class.'\r\n    }, {\r\n        badgeClass: 'warning',\r\n        title: 'Third heading',\r\n        badgeTitle: 'Jan 29',\r\n        when: 'Jan 29th via Twitter',\r\n        content: 'This is a warning class.'\r\n    }, {\r\n        badgeClass: 'critical',\r\n        title: 'Fourth heading',\r\n        badgeTitle: 'Jan 28',\r\n        when: 'Jan 28th via Twitter',\r\n        content: 'This is a critical class.'\r\n    }];\r\n    vm.index = 0;\r\n    vm.addEvent = function () {\r\n        vm.index++;\r\n        var badgeClass = 'primary';\r\n        var day = 28;\r\n        if (vm.index < 28) day = vm.index;\r\n        var suffix = 'th';\r\n        if (day === 1 || day === 21) suffix = 'st';\r\n        if (day === 2 || day === 22) suffix = 'nd';\r\n        if (day === 3 || day === 23) suffix = 'rd';\r\n        vm.events.unshift({\r\n            badgeClass: badgeClass,\r\n            badgeTitle: 'Feb ' + day,\r\n            title: 'New Event - ' + vm.index,\r\n            when: 'Feb ' + day + suffix + ' via Twitter',\r\n            content: 'Lorem ipsum dolor sit amet, charetra varius quam sit amet vulputate.'\r\n        });\r\n    };\r\n}"},function(e,t){e.exports=".overflow-tooltip-demo {\r\n  box-shadow: 0px 0px 15px 0px #eee;\r\n  display: inline-block;\r\n  width: 25%;\r\n  height: 120px;\r\n  padding: 20px;\r\n  margin-top: 180px;\r\n}"},function(e,t){e.exports='<p class="overflow-tooltip-demo" overflow-tooltip>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nec vero sum \r\n    nescius esse utilitatem in historia, non modo voluptatem. Si quicquam extra virtutem habeatur in bonis. Aliud igitur \r\n    esse censet gaudere, aliud non dolere. Tum ille timide vel potius verecunde: Facio, inquit. Quae hic rei publicae \r\n    vulnera inponebat, eadem ille sanabat. Hoc non est positum in nostra actione. Immo videri fortasse. Duo Reges: \r\n    constructio interrete. Nam aliquando posse recte fieri dicunt nulla expectata nec quaesita voluptate. \r\n    Si longus, levis.</p>'},function(e,t){e.exports=".single-line-overflow-tooltip-demo {\r\n  box-shadow: 0px 0px 15px 0px #eee;\r\n  display: inline-block;\r\n  width: 25%;\r\n  height: 62px;\r\n  padding: 20px;\r\n  margin-top: 180px;\r\n}"},function(e,t){e.exports='<p class="single-line-overflow-tooltip-demo" single-line-overflow-tooltip>Lorem ipsum dolor sit amet, consectetur \r\n    adipiscing elit. Nec vero sum nescius esse utilitatem in historia, non modo voluptatem. Si quicquam extra \r\n    virtutem habeatur in bonis. Aliud igitur esse censet gaudere, aliud non dolere. Tum ille timide vel potius \r\n    verecunde: Facio, inquit. Quae hic rei publicae vulnera inponebat, eadem ille sanabat. Hoc non est positum \r\n    in nostra actione. Immo videri fortasse. Duo Reges: constructio interrete. Nam aliquando posse recte fieri \r\n    dicunt nulla expectata nec quaesita voluptate. Si longus, levis.</p>\r\n'},function(e,t){e.exports='<div class="text-center">\r\n    <button type="button" class="btn button-primary" static-tooltip content="vm.content" dismiss-text="vm.dismissText" direction="vm.direction"\r\n    position="vm.position" offset-x="vm.offsetX" offset-y="vm.offsetY" z-index="vm.zIndex">Static Tooltip Example</button>\r\n</div>'},function(e,t){e.exports="angular.module(\"app\").controller(\"StaticTooltipDemoCtrl\", StaticTooltipDemoCtrl);\r\n\r\nfunction StaticTooltipDemoCtrl() {\r\n    var vm = this;\r\n\r\n    vm.content = 'This is an example of a static tooltip. It will appear when the page is loaded until dismissed. It is useful for giving the user information about a specific control.';\r\n    vm.dismissText = 'HIDE TIPS';\r\n    vm.direction = 'up';\r\n    vm.position = 'middle';\r\n    vm.offsetX = 0;\r\n    vm.offsetY = 5;\r\n    vm.zIndex = 9998;\r\n}"},function(e,t){e.exports='<div class="row">\r\n    <div class="col-sm-6 col-xs-12">\r\n        <div class="form-group">\r\n            <label>Button text</label>\r\n            <input type="text" ng-model="vm.buttonText" class="form-control">\r\n        </div>\r\n        <div class="form-group">\r\n            <label>Tooltip text</label>\r\n            <input type="text" ng-model="vm.tooltipText" class="form-control">\r\n        </div>\r\n    </div>\r\n</div>\r\n<button type="button" class="btn button-primary" ng-bind="vm.buttonText ? vm.buttonText : \'&nbsp;\'" tooltip="{{vm.tooltipText}}" aria-label="{{vm.buttonText}} {{vm.tooltipText}}">\r\n</button>'},function(e,t){e.exports='angular.module("app").controller("TooltipsCtrl", TooltipsCtrl);\r\n\r\nfunction TooltipsCtrl() {\r\n    var vm = this;\r\n\r\n    vm.buttonText = "Button with tooltip";\r\n    vm.tooltipText = "Tooltip text";\r\n}'},function(e,t){e.exports='angular.module("app").controller("TreeGridAsyncDemoCtrl", TreeGridAsyncDemoCtrl);\r\n\r\nTreeGridAsyncDemoCtrl.$inject = ["$scope", "$q", "$timeout"];\r\n\r\nfunction TreeGridAsyncDemoCtrl($scope, $q, $timeout) {\r\n    var vm = this;\r\n\r\n    var topLevelFolder = [{\r\n        type: "folder",\r\n        dataPage: 0,\r\n        document: "Folder 1",\r\n        name: "",\r\n        dateString: ""\r\n    }, {\r\n        type: "folder",\r\n        dataPage: 1,\r\n        document: "Folder 2",\r\n        name: "",\r\n        dateString: ""\r\n    }, {\r\n        type: "folder",\r\n        dataPage: 2,\r\n        document: "Folder 3",\r\n        name: "",\r\n        dateString: ""\r\n    }];\r\n\r\n    // Asynchronous loading function\r\n    // parent is the item being expanded, or undefined if the top level is being requested\r\n    vm.loadData = function (parent) {\r\n        var deferred = $q.defer();\r\n        if (!parent) {\r\n            // Load top level items\r\n            $timeout(function () {\r\n                deferred.resolve(topLevelFolder);\r\n            }, 1000);\r\n        } else {\r\n            // Load children of parent\r\n            $timeout(function () {\r\n                var children = vm.sourceData[parent.dataPage];\r\n                deferred.resolve(children);\r\n            }, 2000);\r\n        }\r\n        return deferred.promise;\r\n    };\r\n\r\n    vm.columns = [{\r\n        name: "NAME",\r\n        value: "document",\r\n        width: "40%"\r\n    }, {\r\n        name: "AUTHOR",\r\n        value: "name",\r\n        width: "20%"\r\n    }, {\r\n        name: "DATE",\r\n        value: "dateString",\r\n        width: "20%"\r\n    }, {\r\n        name: "PRIORITY",\r\n        template: "template.html",\r\n        width: "20%",\r\n        headerClass: "text-center",\r\n        cellClass: "text-center"\r\n    }];\r\n\r\n    vm.selected = null;\r\n\r\n    vm.options = {\r\n        hasChildren: function (dataItem) {\r\n            return dataItem.type === "folder";\r\n        }\r\n    };\r\n\r\n    vm.inProgress = false;\r\n\r\n    vm.expandAllFolders = function () {\r\n        var folders = findRows(vm.treeData, "type", "folder");\r\n        var promises = [];\r\n        vm.inProgress = true;\r\n        // Call expand on each folder\r\n        for (var i = 0; i < folders.length; i += 1) {\r\n            var promise = folders[i].api.expand();\r\n            promises.push(promise);\r\n        }\r\n        // Unset inProgress when all promises are complete\r\n        $q.all(promises).finally(function () {\r\n            vm.inProgress = false;\r\n        });\r\n    };\r\n\r\n    vm.contractAllFolders = function () {\r\n        var folders = findRows(vm.treeData, "type", "folder");\r\n        // Call contract on each folder\r\n        for (var i = 0; i < folders.length; i += 1) {\r\n            folders[i].api.contract();\r\n        }\r\n    };\r\n\r\n    vm.reloadAllFolders = function () {\r\n        var folders = findRows(vm.treeData, "type", "folder");\r\n        var promises = [];\r\n        vm.inProgress = true;\r\n        // Call reload on each folder\r\n        for (var i = 0; i < folders.length; i += 1) {\r\n            var promise = folders[i].api.reload();\r\n            promises.push(promise);\r\n        }\r\n        // Unset inProgress when all promises are complete\r\n        $q.all(promises).finally(function () {\r\n            vm.inProgress = false;\r\n        });\r\n    };\r\n\r\n    vm.highPriorityItems = [];\r\n\r\n    // Deep watch of the tree-data structure\r\n    $scope.$watch("vm.treeData", function () {\r\n        if (vm.treeData) {\r\n            vm.highPriorityItems = findRows(vm.treeData, "priority", "High");\r\n        }\r\n    }, true);\r\n\r\n    // Recursively searches the tree-data structure for items of interest\r\n    function findRows(treeData, property, value) {\r\n        var results = [];\r\n        for (var i = 0; i < treeData.length; i += 1) {\r\n            if (treeData[i].dataItem[property] === value) {\r\n                results.push(treeData[i]);\r\n            }\r\n            if (treeData[i].children.length > 0) {\r\n                results = results.concat(findRows(treeData[i].children, property, value));\r\n            }\r\n        }\r\n        return results;\r\n    }\r\n\r\n    vm.sourceData = [\r\n        [{\r\n                "id": 0,\r\n                "name": "Jayden Hampton",\r\n                "dateString": "Today",\r\n                "document": "Document 1.pdf"\r\n            },\r\n            // ...\r\n        ]\r\n    ];\r\n\r\n}'},function(e,t){e.exports='<div class="m-b-md">\r\n    <button class="btn button-secondary m-r-xs" ng-click="vm.expandAllFolders()" ng-disabled="vm.inProgress"><i class="hpe-icon hpe-down"></i> Expand All Folders</button>\r\n    <button class="btn button-secondary m-r-xs" ng-click="vm.contractAllFolders()" ng-disabled="vm.inProgress"><i class="hpe-icon hpe-next"></i> Contract All Folders</button>\r\n    <button class="btn button-secondary m-r-xs" ng-click="vm.reloadAllFolders()" ng-disabled="vm.inProgress"><i class="hpe-icon hpe-refresh"></i> Reload All Folders</button>\r\n</div>\r\n<treegrid data="vm.loadData" columns="vm.columns" tree-data="vm.treeData" selected="vm.selected" options="vm.options"></treegrid>\r\n<p class="m-t-md">High priority: <span ng-repeat="item in vm.highPriorityItems" ng-bind="item.dataItem.document + ($last ? \'.\' : \', \')"></span></p>'},function(e,t){e.exports='angular.module("app").controller("TreeGridAsyncDemoCtrl", TreeGridAsyncDemoCtrl);\r\n\r\nTreeGridAsyncDemoCtrl.$inject = ["$scope", "$q", "$timeout"];\r\n\r\nfunction TreeGridAsyncDemoCtrl($scope, $q, $timeout) {\r\n    var vm = this;\r\n\r\n    var topLevelFolder = [{\r\n        type: "folder",\r\n        dataPage: 0,\r\n        document: "Folder 1",\r\n        name: "",\r\n        dateString: ""\r\n    }, {\r\n        type: "folder",\r\n        dataPage: 1,\r\n        document: "Folder 2",\r\n        name: "",\r\n        dateString: ""\r\n    }, {\r\n        type: "folder",\r\n        dataPage: 2,\r\n        document: "Folder 3",\r\n        name: "",\r\n        dateString: ""\r\n    }];\r\n\r\n    // Asynchronous loading function\r\n    // parent is the item being expanded, or undefined if the top level is being requested\r\n    vm.loadData = function (parent) {\r\n        var deferred = $q.defer();\r\n        if (!parent) {\r\n            // Load top level items\r\n            $timeout(function () {\r\n                deferred.resolve(topLevelFolder);\r\n            }, 1000);\r\n        } else {\r\n            // Load children of parent\r\n            $timeout(function () {\r\n                var children = vm.sourceData[parent.dataPage];\r\n                deferred.resolve(children);\r\n            }, 2000);\r\n        }\r\n        return deferred.promise;\r\n    };\r\n\r\n    vm.columns = [{\r\n        name: "NAME",\r\n        value: "document",\r\n        width: "40%"\r\n    }, {\r\n        name: "AUTHOR",\r\n        value: "name",\r\n        width: "20%"\r\n    }, {\r\n        name: "DATE",\r\n        value: "dateString",\r\n        width: "20%"\r\n    }, {\r\n        name: "PRIORITY",\r\n        template: "template.html",\r\n        width: "20%",\r\n        headerClass: "text-center",\r\n        cellClass: "text-center"\r\n    }];\r\n\r\n    vm.selected = null;\r\n\r\n    vm.options = {\r\n        hasChildren: function (dataItem) {\r\n            return dataItem.type === "folder";\r\n        }\r\n    };\r\n\r\n    vm.inProgress = false;\r\n\r\n    vm.expandAllFolders = function () {\r\n        var folders = findRows(vm.treeData, "type", "folder");\r\n        var promises = [];\r\n        vm.inProgress = true;\r\n        // Call expand on each folder\r\n        for (var i = 0; i < folders.length; i += 1) {\r\n            var promise = folders[i].api.expand();\r\n            promises.push(promise);\r\n        }\r\n        // Unset inProgress when all promises are complete\r\n        $q.all(promises).finally(function () {\r\n            vm.inProgress = false;\r\n        });\r\n    };\r\n\r\n    vm.contractAllFolders = function () {\r\n        var folders = findRows(vm.treeData, "type", "folder");\r\n        // Call contract on each folder\r\n        for (var i = 0; i < folders.length; i += 1) {\r\n            folders[i].api.contract();\r\n        }\r\n    };\r\n\r\n    vm.reloadAllFolders = function () {\r\n        var folders = findRows(vm.treeData, "type", "folder");\r\n        var promises = [];\r\n        vm.inProgress = true;\r\n        // Call reload on each folder\r\n        for (var i = 0; i < folders.length; i += 1) {\r\n            var promise = folders[i].api.reload();\r\n            promises.push(promise);\r\n        }\r\n        // Unset inProgress when all promises are complete\r\n        $q.all(promises).finally(function () {\r\n            vm.inProgress = false;\r\n        });\r\n    };\r\n\r\n    vm.highPriorityItems = [];\r\n\r\n    // Deep watch of the tree-data structure\r\n    $scope.$watch("vm.treeData", function () {\r\n        if (vm.treeData) {\r\n            vm.highPriorityItems = findRows(vm.treeData, "priority", "High");\r\n        }\r\n    }, true);\r\n\r\n    // Recursively searches the tree-data structure for items of interest\r\n    function findRows(treeData, property, value) {\r\n        var results = [];\r\n        for (var i = 0; i < treeData.length; i += 1) {\r\n            if (treeData[i].dataItem[property] === value) {\r\n                results.push(treeData[i]);\r\n            }\r\n            if (treeData[i].children.length > 0) {\r\n                results = results.concat(findRows(treeData[i].children, property, value));\r\n            }\r\n        }\r\n        return results;\r\n    }\r\n\r\n    vm.sourceData = [\r\n        [{\r\n                "id": 0,\r\n                "name": "Jayden Hampton",\r\n                "dateString": "Today",\r\n                "document": "Document 1.pdf"\r\n            },\r\n            {\r\n                "id": 2,\r\n                "name": "Lura Bell",\r\n                "dateString": "20 Jan 2017",\r\n                "document": "Document 3.doc"\r\n            },\r\n            {\r\n                "id": 3,\r\n                "name": "Jackson Zimmerman",\r\n                "dateString": "17 Feb 2016",\r\n                "document": "Document 4.pdf"\r\n            },\r\n            {\r\n                "id": 4,\r\n                "name": "Brandon Kelley",\r\n                "dateString": "9 Feb 2017",\r\n                "document": "Document 5.xls"\r\n            },\r\n            {\r\n                "id": 5,\r\n                "name": "Jackson Zimmerman",\r\n                "dateString": "Today",\r\n                "document": "Document 6.doc"\r\n            },\r\n            {\r\n                "id": 6,\r\n                "name": "Walter Cortez",\r\n                "dateString": "Today",\r\n                "document": "Document 7.html"\r\n            },\r\n            {\r\n                "id": 7,\r\n                "name": "Herbert Padilla",\r\n                "dateString": "20 Jan 2017",\r\n                "document": "Document 8.html"\r\n            },\r\n            {\r\n                "id": 8,\r\n                "name": "Maud Grant",\r\n                "dateString": "17 Feb 2016",\r\n                "document": "Document 9.ppt"\r\n            },\r\n            {\r\n                "id": 9,\r\n                "name": "Emma Lynch",\r\n                "dateString": "9 Feb 2017",\r\n                "document": "Document 10.pdf"\r\n            }\r\n        ],\r\n        [{\r\n                "id": 10,\r\n                "name": "Mike Marsh",\r\n                "dateString": "Today",\r\n                "document": "Document 11.pdf"\r\n            },\r\n            {\r\n                "id": 11,\r\n                "name": "Herbert Padilla",\r\n                "dateString": "10 Feb 2017",\r\n                "document": "Document 12.pdf"\r\n            },\r\n            {\r\n                "id": 12,\r\n                "name": "Eunice Harvey",\r\n                "dateString": "Today",\r\n                "document": "Document 13.pdf"\r\n            },\r\n            {\r\n                "id": 13,\r\n                "name": "Eunice Tyler",\r\n                "dateString": "17 Feb 2016",\r\n                "document": "Document 14.doc"\r\n            },\r\n            {\r\n                "id": 14,\r\n                "name": "Cordelia Moore",\r\n                "dateString": "9 Feb 2017",\r\n                "document": "Document 15.pdf"\r\n            },\r\n            {\r\n                "id": 15,\r\n                "name": "Jeanette Fowler",\r\n                "dateString": "Today",\r\n                "document": "Document 16.ppt"\r\n            },\r\n            {\r\n                "id": 16,\r\n                "name": "Lura Bell",\r\n                "dateString": "10 Feb 2017",\r\n                "document": "Document 17.xls"\r\n            },\r\n            {\r\n                "id": 17,\r\n                "name": "Landon Green",\r\n                "dateString": "20 Jan 2017",\r\n                "document": "Document 18.ppt"\r\n            },\r\n            {\r\n                "id": 18,\r\n                "name": "Eunice Harvey",\r\n                "dateString": "Today",\r\n                "document": "Document 19.pdf"\r\n            },\r\n            {\r\n                "id": 19,\r\n                "name": "Alex Martinez",\r\n                "dateString": "9 Feb 2017",\r\n                "document": "Document 20.xls"\r\n            }\r\n        ],\r\n        [{\r\n                "id": 20,\r\n                "name": "Herbert Padilla",\r\n                "dateString": "Today",\r\n                "document": "Document 21.xls"\r\n            },\r\n            {\r\n                "id": 21,\r\n                "name": "Alex Martinez",\r\n                "dateString": "10 Feb 2017",\r\n                "document": "Document 22.xls"\r\n            },\r\n            {\r\n                "id": 22,\r\n                "name": "Landon Green",\r\n                "dateString": "20 Jan 2017",\r\n                "document": "Document 23.xls"\r\n            },\r\n            {\r\n                "id": 23,\r\n                "name": "Landon Green",\r\n                "dateString": "17 Feb 2016",\r\n                "document": "Document 24.doc"\r\n            },\r\n            {\r\n                "id": 24,\r\n                "name": "Agnes Bates",\r\n                "dateString": "Today",\r\n                "document": "Document 25.pdf"\r\n            },\r\n            {\r\n                "id": 25,\r\n                "name": "Herbert Padilla",\r\n                "dateString": "Today",\r\n                "document": "Document 26.pdf"\r\n            },\r\n            {\r\n                "id": 26,\r\n                "name": "Jeanette Fowler",\r\n                "dateString": "10 Feb 2017",\r\n                "document": "Document 27.xls"\r\n            },\r\n            {\r\n                "id": 27,\r\n                "name": "Cordelia Moore",\r\n                "dateString": "20 Jan 2017",\r\n                "document": "Document 28.xls"\r\n            },\r\n            {\r\n                "id": 28,\r\n                "name": "Agnes Bates",\r\n                "dateString": "17 Feb 2016",\r\n                "document": "Document 29.xls"\r\n            },\r\n            {\r\n                "id": 29,\r\n                "name": "Maud Grant",\r\n                "dateString": "9 Feb 2017",\r\n                "document": "Document 30.doc"\r\n            }\r\n        ]\r\n    ];\r\n\r\n}'},function(e,t){e.exports='<div class="btn-group" ng-click="$event.stopPropagation()" ng-if="item.type !== \'folder\'">\r\n    <button type="button" class="btn btn-sm button-toggle-primary" ng-model="item.priority" btn-radio="\'Low\'">Low</button>\r\n    <button type="button" class="btn btn-sm button-toggle-primary" ng-model="item.priority" btn-radio="\'Medium\'">Medium</button>\r\n    <button type="button" class="btn btn-sm button-toggle-primary" ng-model="item.priority" btn-radio="\'High\'">High</button>\r\n</div>'},function(e,t){e.exports='angular.module("app").controller("TreeGridActionsCtrl", TreeGridActionsCtrl);\r\n\r\nfunction TreeGridActionsCtrl() {\r\n  var vm = this;\r\n\r\n  vm.share = function(item) {\r\n    // Action button behaviour goes here\r\n  };\r\n\r\n  vm.goToDetails = function(item) {\r\n    // Action button behaviour goes here\r\n  };\r\n\r\n  vm.delete = function(item) {\r\n    // Action button behaviour goes here\r\n  };\r\n}'},function(e,t){e.exports="function findItems(treeData, property, value) {\r\n    var results = [];\r\n    for (var i = 0; i < treeData.length; i += 1) {\r\n        if (treeData[i].dataItem[property] === value) {\r\n            results.push(treeData[i].dataItem);\r\n        }\r\n        if (treeData[i].children.length > 0) {\r\n            results = results.concat(findItems(treeData[i].children, property, value));\r\n        }\r\n    }\r\n    return results;\r\n}"},function(e,t){e.exports='vm.options = {\r\n    childrenProperty: "nodes",\r\n    expander: {\r\n        type: "class",\r\n        contracted: "hpe-add",\r\n        expanded: "hpe-subtract"\r\n    },\r\n    icons: {\r\n        type: "class",\r\n        get: function (item, expanded) {\r\n            // Use the childrenProperty to determine if it\'s a folder\r\n            if (item.hasOwnProperty("nodes")) {\r\n                return expanded ? "hpe-folder-open" : "hpe-folder";\r\n            }\r\n            // Use file extension to select icon\r\n            if (item.name.toLowerCase().endsWidth(".pdf")) {\r\n                return "hpe-document-pdf";\r\n            }\r\n            if (item.name.toLowerCase().endsWidth(".msg")) {\r\n                return "hpe-mail";\r\n            }\r\n            // ...\r\n            return "hpe-document";\r\n        }\r\n    }\r\n};'},function(e,t){e.exports='vm.options = {\r\n    childrenProperty: "nodes",\r\n    expander: {\r\n        type: "url",\r\n        contracted: "../img/ExpanderContracted16x16.png",\r\n        expanded: "../img/ExpanderExpanded16x16.png",\r\n        expanding: "../img/ExpanderExpanding16x16.png"\r\n    },\r\n    icons: {\r\n        type: "url",\r\n        get: function (item, expanded) {\r\n            // Use a specific property to select icon type\r\n            switch (item.type) {\r\n                case "email":\r\n                    return expanded ? "../img/IconEmail16x16.png" : "../img/IconEmailOpen16x16.png";\r\n                case "pdf":\r\n                    return "../img/IconPdf16x16.png";\r\n                case "word":\r\n                    return "../img/IconDoc16x16.png";\r\n                    // ...\r\n            }\r\n            return "../img/IconUnknown16x16.png";\r\n        }\r\n    }\r\n};'},function(e,t){e.exports='$scope.$broadcast("treegrid.reload");'},function(e,t){e.exports='<checkbox ng-model="vm.enableDisplayPanel" class="pull-right">Display Panel</checkbox>\r\n<treegrid data="vm.data" columns="vm.columns" selected="vm.selected" current-row="vm.currentRow" options="vm.options"></treegrid>\r\n<p class="m-t-md">Selected items: <span ng-repeat="item in vm.selected" ng-bind="item.title + ($last ? \'.\' : \', \')"></span></p>'},function(e,t){e.exports="angular.module(\"app\").controller(\"TreeGridCtrl\", TreeGridCtrl);\r\n\r\nTreeGridCtrl.$inject = [\"$scope\", \"$displayPanel\"];\r\n\r\nfunction TreeGridCtrl($scope, $displayPanel) {\r\n  var vm = this;\r\n\r\n  vm.data = [{\r\n    id: 1,\r\n    title: 'Documents',\r\n    date: new Date('2013-02-16'),\r\n    type: 'folder',\r\n    nodes: [{\r\n      id: 12,\r\n      title: 'Pictures',\r\n      date: new Date('2013-05-28'),\r\n      type: 'folder',\r\n      nodes: [{\r\n        title: 'Alcazar',\r\n        date: new Date('2014-05-15'),\r\n        type: 'item'\r\n      }, {\r\n        title: 'Citadel',\r\n        date: new Date('2015-09-02'),\r\n        type: 'item'\r\n      }, {\r\n        title: 'Donjon',\r\n        date: new Date('2014-04-10'),\r\n        type: 'item'\r\n      }]\r\n    }, {\r\n      id: 11,\r\n      title: 'Word files',\r\n      date: new Date('2013-09-25'),\r\n      type: 'folder',\r\n      nodes: [{\r\n        id: 111,\r\n        title: 'Accounts',\r\n        date: new Date('2013-10-04'),\r\n        type: 'folder',\r\n        nodes: [{\r\n          title: 'Castle',\r\n          date: new Date('2014-05-15'),\r\n          type: 'item'\r\n        }, {\r\n          title: 'Estate',\r\n          date: new Date('2015-08-03'),\r\n          type: 'item'\r\n        }, {\r\n          title: 'Manor',\r\n          date: new Date('2014-05-30'),\r\n          type: 'item'\r\n        }, {\r\n          title: 'Mansion',\r\n          date: new Date('2014-04-23'),\r\n          type: 'item'\r\n        }, {\r\n          title: 'Villa',\r\n          date: new Date('2015-09-21'),\r\n          type: 'item'\r\n        }]\r\n      }]\r\n    }]\r\n  }, {\r\n    id: 2,\r\n    title: 'Emails',\r\n    date: new Date('2013-03-17'),\r\n    type: 'folder',\r\n    nodes: [{\r\n      id: 21,\r\n      title: 'Inbox',\r\n      date: new Date('2013-03-17'),\r\n      type: 'folder',\r\n      nodes: []\r\n    }, {\r\n      id: 22,\r\n      title: 'Outbox',\r\n      date: new Date('2013-03-17'),\r\n      type: 'folder',\r\n      nodes: []\r\n    }]\r\n  }, {\r\n    id: 3,\r\n    title: 'Empty',\r\n    date: new Date('2016-06-02'),\r\n    type: 'folder',\r\n    nodes: []\r\n  }];\r\n\r\n  vm.columns = [{\r\n    name: \"TITLE\",\r\n    value: \"title\",\r\n    width: \"50%\"\r\n  }, {\r\n    name: \"DATE\",\r\n    value: function (dataItem) {\r\n      return dataItem.date ? dataItem.date.toLocaleDateString() : \"\";\r\n    },\r\n    width: \"25%\",\r\n    tooltip: \"{{item.date | date : 'fullDate'}}\"\r\n  }, {\r\n    name: \"ACTIONS\",\r\n    template: \"actions.html\",\r\n    width: \"25%\",\r\n    headerClass: \"text-center\",\r\n    cellClass: \"item-actions text-center\"\r\n  }];\r\n\r\n  vm.selected = null;\r\n\r\n  vm.options = {\r\n    childrenProperty: \"nodes\"\r\n  };\r\n\r\n  // Display Panel\r\n  vm.enableDisplayPanel = false;\r\n  $scope.$watch(\"vm.enableDisplayPanel\", function(nv) {\r\n    if (nv && vm.currentRow) {\r\n      showDisplayPanel(vm.currentRow);\r\n    }\r\n    else {\r\n      hideDisplayPanel();\r\n    }\r\n  });\r\n\r\n  // Watch the row with focus to show and update the display panel\r\n  $scope.$watch(\"vm.currentRow\", function(nv) {\r\n    if (vm.enableDisplayPanel && nv) {\r\n      showDisplayPanel(nv);\r\n    }\r\n  });\r\n\r\n  // Events triggered by \"Previous\" and \"Next\" buttons\r\n  $scope.$on(\"$displayPanelPrevious\", function() {\r\n    $displayPanel.movePrev();\r\n  });\r\n  $scope.$on(\"$displayPanelNext\", function() {\r\n    $displayPanel.moveNext();\r\n  });\r\n\r\n  var displayPanelScope = $scope.$new(true);\r\n  function showDisplayPanel(row) {\r\n    displayPanelScope.item = row.item;\r\n    var modalOptions = {\r\n      title: row.item.title,\r\n      main: \"displayPanel.html\",\r\n      footer: \"displayPanelFooter.html\",\r\n      modalColumns: \"col-lg-6 col-md-7 col-sm-9 col-xs-10\",\r\n      top: 50,\r\n      scope: displayPanelScope\r\n    };\r\n    var enablePrev = (row.element.prevAll(\"tr\").length > 0);\r\n    var enableNext = (row.element.nextAll(\"tr\").length > 0);\r\n    $displayPanel.open(row.element, modalOptions, false, enablePrev, enableNext);\r\n  }\r\n\r\n  function hideDisplayPanel() {\r\n    if ($displayPanel.panelOpen()) {\r\n      $displayPanel.close({ animate: false });\r\n    }\r\n  }\r\n\r\n}"},function(e,t){e.exports='<tree-view data="vm.data" selected="vm.selected" add-item="vm.addItem" icons="vm.iconConfig" delete="vm.deleteFn" options="vm.treeOptions"></tree-view>\r\n\r\n<hr>\r\n\r\n<p>This panel illustrates how a View accompanying a Tree View can interact with the tree. Within this context, if the selected\r\n    node is changed, the tree will update, allowing drill-down in both contexts.</p>\r\n\r\n<br>\r\n<br>\r\n<h4>Find Node</h4>\r\n\r\n<form role="form" class="form-inline ng-pristine ng-valid m-b" novalidate="">\r\n    <div class="form-group m-r">\r\n        <label class="form-label sr-only">Title</label>\r\n        <input placeholder="Title" ng-model="vm.findText" class="form-control">\r\n    </div>\r\n    <button class="btn button-secondary" ng-click="vm.findNodeByTitle(vm.findText)">Find</button>\r\n</form>\r\n\r\n<br>\r\n<h4>Selected Node</h4>\r\n\r\n<em ng-show="!vm.selected.title">None</em>\r\n<span ng-bind="vm.selected.title"></span>\r\n<pre ng-show="vm.selected.title">{{ vm.selected | json:2 }}</pre>\r\n\r\n<br>\r\n<br>\r\n<h4>Add a New Node</h4>\r\n\r\n<form role="form" class="form-inline ng-pristine ng-valid m-b" novalidate="">\r\n    <div class="form-group m-r">\r\n        <label class="form-label sr-only">New Item Name</label>\r\n        <input placeholder="New item name" ng-model="vm.newValue.title" class="form-control">\r\n    </div>\r\n\r\n    <div class="form-group m-r">\r\n        <div class="check">\r\n            <checkbox ng-model="vm.newValue.allowChildren">Folder</checkbox>\r\n        </div>\r\n    </div>\r\n    <button class="button btn button-accent" ng-disabled="!vm.selected.allowChildren" ng-click="vm.addItem()"><span class="hpe-icon hpe-add" aria-hidden="true"></span>&nbsp;New Item</button>\r\n</form>\r\n\r\n<br>\r\n<h4>Remove Node</h4>\r\n\r\n<button class="button btn button-secondary" ng-click="vm.deleteFn()" ng-disabled="!vm.selected.title">Delete</button>'},function(e,t){e.exports="angular.module('app').controller('TreeViewCompanionViewCtrl', TreeViewCompanionViewCtrl);\r\n\r\nfunction TreeViewCompanionViewCtrl() {\r\n    var vm = this;\r\n\r\n    vm.selected = { id: \"0\", title: \"\" };\r\n\r\n    vm.newValue = {\r\n      allowChildren: false,\r\n      title: \"\",\r\n    };\r\n\r\n    vm.iconConfig = {\r\n      folder: \"hpe-folder\",\r\n      item: \"hpe-document\"\r\n    };\r\n\r\n    vm.treeOptions = {\r\n      showTreeLines: false,\r\n      openOnSelect: false\r\n    };\r\n\r\n    vm.findNodeByTitle = function(title) {\r\n      vm.selected = findItem(title, vm.data);\r\n    };\r\n\r\n    vm.addItem = function() {\r\n      return {\r\n          id: -1,\r\n          allowChildren: vm.newValue.allowChildren,\r\n          title: vm.newValue.title || 'New User Defined Item',\r\n          type: vm.newValue.allowChildren ? 'folder' : 'item',\r\n          nodes: []\r\n        };\r\n    };\r\n\r\n    vm.deleteFn = function() {\r\n      return true;\r\n    };\r\n\r\n    function findItem(title, data) {\r\n      var result = null;\r\n      for (var i = 0; i < data.length; i += 1) {\r\n        if (data[i].title.toLowerCase() === title.toLowerCase()) {\r\n          result = data[i];\r\n        }\r\n        else if (data[i].nodes) {\r\n          result = findItem(title, data[i].nodes);\r\n        }\r\n        if (result !== null) break;\r\n      }\r\n      return result;\r\n    }\r\n\r\n    vm.data = [{\r\n      'id': 1,\r\n      'title': 'Documents',\r\n      'allowChildren': true,\r\n      'type': 'folder',\r\n      'nodes': [{\r\n        'id': 12,\r\n        'title': 'Pictures',\r\n        'allowChildren': true,\r\n        'type': 'folder',\r\n        'nodes': [{\r\n          'title': 'Alcazar',\r\n          'type': 'item'\r\n        }, {\r\n          'title': 'Citadel',\r\n          'type': 'item'\r\n        }, {\r\n          'title': 'Donjon',\r\n          'type': 'item'\r\n        }]\r\n      }, {\r\n        'id': 11,\r\n        'title': 'Word files',\r\n        'allowChildren': true,\r\n        'type': 'folder',\r\n        'nodes': [{\r\n          'id': 111,\r\n          'title': 'Accounts',\r\n          'allowChildren': true,\r\n          'type': 'folder',\r\n          'nodes': [{\r\n            'title': 'Castle',\r\n            'type': 'item'\r\n          }, {\r\n            'title': 'Estate',\r\n            'type': 'item'\r\n          }, {\r\n            'title': 'Manor',\r\n            'type': 'item'\r\n          }, {\r\n            'title': 'Mansion',\r\n            'type': 'item'\r\n          }, {\r\n            'title': 'Villa',\r\n            'type': 'item'\r\n          }]\r\n        }]\r\n      }]\r\n    }, {\r\n      'id': 2,\r\n      'title': 'Emails',\r\n      'allowChildren': true,\r\n      'type': 'folder',\r\n      'nodes': [{\r\n        'id': 21,\r\n        'title': 'Inbox',\r\n        'allowChildren': true,\r\n        'type': 'folder',\r\n        'nodes': []\r\n      }, {\r\n        'id': 22,\r\n        'title': 'Outbox',\r\n        'allowChildren': true,\r\n        'type': 'folder',\r\n        'nodes': []\r\n      }]\r\n    }, {\r\n      'id': 3,\r\n      'title': 'Permissions Examples',\r\n      'allowChildren': true,\r\n      'type': 'folder',\r\n      'nodes': [{\r\n        'id': 32,\r\n        'title': 'Add Disabled',\r\n        'permissions': {\r\n          add: false,\r\n          edit: true,\r\n          delete: true\r\n        },\r\n        'allowChildren': true,\r\n        'type': 'folder',\r\n        'nodes': []\r\n      }, {\r\n        'id': 31,\r\n        'title': 'Edit Disabled',\r\n        'permissions': {\r\n          edit: false,\r\n          add: true,\r\n          delete: true\r\n        },\r\n        'allowChildren': true,\r\n        'type': 'folder',\r\n        'nodes': []\r\n      }, {\r\n        'id': 33,\r\n        'title': 'Delete Disabled',\r\n        'permissions': {\r\n          delete: false,\r\n          add: true,\r\n          edit: true\r\n        },\r\n        'allowChildren': true,\r\n        'type': 'folder',\r\n        'nodes': []\r\n      }]\r\n    }];\r\n}"},function(e,t){e.exports='<tree-view data="vm.data" selected="vm.selected" add-item="vm.addItem" icons="vm.iconConfig" delete="vm.deleteFn" options="vm.treeOptions"></tree-view>'},function(e,t){e.exports="angular.module('app').controller('TreeViewDocumentationCtrl', TreeViewDocumentationCtrl);\r\n\r\n  function TreeViewDocumentationCtrl() {\r\n    var vm = this;\r\n\r\n    vm.selected = {\r\n      id: '0',\r\n      title: ''\r\n    };\r\n\r\n    vm.newValue = {\r\n      allowChildren: false,\r\n      title: '',\r\n    };\r\n\r\n    vm.iconConfig = {\r\n      folder: {\r\n        collapsed: 'hpe-folder',\r\n        expanded: 'hpe-folder-open'\r\n      },\r\n      item: 'hpe-document',\r\n      'default': 'hpe-3d'\r\n    };\r\n\r\n    vm.treeOptions = {\r\n      showTreeLines: false,\r\n      openOnSelect: false,\r\n      loadHeight: 72\r\n    };\r\n\r\n    vm.addItem = function () {\r\n      var item = {\r\n        id: -1,\r\n        allowChildren: vm.newValue.allowChildren,\r\n        title: vm.newValue.title || 'New User Defined Item',\r\n        type: vm.newValue.allowChildren ? 'folder' : 'item',\r\n        nodes: []\r\n      };\r\n\r\n      return item;\r\n    };\r\n\r\n    vm.deleteFn = function () {\r\n      return true;\r\n    };\r\n\r\n    vm.data = [{\r\n      'id': 1,\r\n      'title': 'Documents',\r\n      'allowChildren': true,\r\n      'type': 'folder',\r\n      'nodes': [{\r\n        'id': 12,\r\n        'title': 'Pictures',\r\n        'allowChildren': true,\r\n        'type': 'folder',\r\n        'nodes': [{\r\n          'title': 'Alcazar',\r\n          'type': 'item'\r\n        }, {\r\n          'title': 'Citadel',\r\n          'type': 'item'\r\n        }, {\r\n          'title': 'Donjon',\r\n          'type': 'item'\r\n        }]\r\n      }, {\r\n        'id': 11,\r\n        'title': 'Word files',\r\n        'allowChildren': true,\r\n        'type': 'folder',\r\n        'nodes': [{\r\n          'id': 111,\r\n          'title': 'Accounts',\r\n          'allowChildren': true,\r\n          'type': 'folder',\r\n          'nodes': [{\r\n            'title': 'Castle',\r\n            'type': 'item'\r\n          }, {\r\n            'title': 'Estate',\r\n            'type': 'item'\r\n          }, {\r\n            'title': 'Manor',\r\n            'type': 'item'\r\n          }, {\r\n            'title': 'Mansion',\r\n            'type': 'item'\r\n          }, {\r\n            'title': 'Villa',\r\n            'type': 'item'\r\n          }]\r\n        }]\r\n      }]\r\n    }, {\r\n      'id': 2,\r\n      'title': 'Emails',\r\n      'allowChildren': true,\r\n      'type': 'folder',\r\n      'nodes': [{\r\n        'id': 21,\r\n        'title': 'Inbox',\r\n        'allowChildren': true,\r\n        'type': 'folder',\r\n        'nodes': []\r\n      }, {\r\n        'id': 22,\r\n        'title': 'Outbox',\r\n        'allowChildren': true,\r\n        'type': 'folder',\r\n        'nodes': []\r\n      }]\r\n    }, {\r\n      'id': 3,\r\n      'title': 'Permissions Examples',\r\n      'allowChildren': true,\r\n      'type': 'folder',\r\n      'nodes': [{\r\n        'id': 32,\r\n        'title': 'Add Disabled',\r\n        'permissions': {\r\n          add: false,\r\n          edit: true,\r\n          delete: true\r\n        },\r\n        'allowChildren': true,\r\n        'type': 'folder',\r\n        'nodes': []\r\n      }, {\r\n        'id': 31,\r\n        'title': 'Edit Disabled',\r\n        'permissions': {\r\n          edit: false,\r\n          add: true,\r\n          delete: true\r\n        },\r\n        'allowChildren': true,\r\n        'type': 'folder',\r\n        'nodes': []\r\n      }, {\r\n        'id': 33,\r\n        'title': 'Delete Disabled',\r\n        'permissions': {\r\n          delete: false,\r\n          add: true,\r\n          edit: true\r\n        },\r\n        'allowChildren': true,\r\n        'type': 'folder',\r\n        'nodes': []\r\n      }]\r\n    }];\r\n\r\n  }"},function(e,t){e.exports='vm.iconConfig = {\r\n    folder: {\r\n        collapsed:"hpe-folder",\r\n        expanded:"hpe-folder-open"\r\n    },\r\n    item: "hpe-document"\r\n};'},function(e,t){e.exports="<body>\r\n   <div ui-view></div>\r\n</body>"},function(e,t){e.exports="<li ng-class=\"{ active: $state.includes('patterns'),selected: $state.includes('patterns')}\">\r\n    <ul ng-class=\"{ in: $state.includes('patterns')} \">\r\n        <li ng-class=\"{ active: $state.includes('patterns.uirouter') }\">\r\n           <a ui-sref=\"patterns.uirouter\">UI Router</a>\r\n        </li>\r\n    </ul>\r\n</li>"},function(e,t){e.exports='$urlRouterProvider.otherwise("/");\r\n\r\n$stateProvider.state("/", {\r\n    url: "/",\r\n    templateUrl: "app/views/blank.html"\r\n})\r\n.state("patterns", {\r\n    abstract: "true",\r\n    url: "/patterns",\r\n    template: "<ui-view autoscroll=\\"true\\"/>"\r\n})\r\n.state("patterns.sidenavigation", {\r\n    url: "/sidenavigation",\r\n    templateUrl: "app/sideNavigation/sideNavigation.html",\r\n    controller: "SideNavigationCtrl as sn",\r\n    data: {\r\n        pageTitle:"Navigation"\r\n    }\r\n})\r\n.state("patterns.uirouter", {\r\n    url: "/uirouter",\r\n    templateUrl: "app/uiRouter/uiRouter.html",\r\n    data: {\r\n        pageTitle: "UI Router"\r\n    }\r\n});'},function(e,t){e.exports="angular.module('app').controller('UtilitiesCtrl', UtilitiesCtrl);\r\n\r\nUtilitiesCtrl.$inject = ['$colorService'];\r\n\r\nfunction UtilitiesCtrl($colorService) {\r\n    var vm = this;\r\n\r\n    vm.colors = {\r\n        chartColor: $colorService.getColor('primary').toRgb(),\r\n        chartFill: $colorService.getColor('accent').setAlpha(0.2).toRgba(),\r\n        gridColor: $colorService.getColor('chart1').toHex(),\r\n    };\r\n\r\n}"},function(e,t){e.exports='<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse condimentum tortor eu dolor sodales luctus. Etiam\r\n        aliquet metus et mauris convallis tincidunt. Integer odio tellus, feugiat ac massa eu, tincidunt maximus mauris.</p>\r\n\r\n<p ng-if="vm.expanded">Vestibulum laoreet tortor eu ex mattis sagittis. Sed quam justo, bibendum sit amet nibh id, dignissim ornare tortor.\r\n    Curabitur porttitor, nulla at pretium commodo, est diam auctor magna, vel iaculis odio velit et lacus. Nam quis tincidunt\r\n    est, sit amet interdum turpis. Suspendisse id scelerisque dui. Vestibulum diam nunc, pulvinar ut finibus a, aliquet\r\n    quis lectus. Curabitur pharetra porttitor augue eu gravida. Curabitur tincidunt arcu sit amet enim efficitur, sit\r\n    amet scelerisque dolor sollicitudin. Pellentesque ultrices arcu odio, non egestas erat tincidunt eu. Duis et sem\r\n    accumsan, tristique dolor cursus, tempor neque. Morbi egestas purus erat, at blandit risus interdum sit amet.</p>\r\n\r\n<a class="hyperlink" href="" ng-bind="vm.expanded ? \'Show less\' : \'Read more\'" ng-click="vm.expanded = !vm.expanded"></a>'},function(e,t){e.exports="angular.module('app').controller('ExpandingContentCtrl', ExpandingContentCtrl);\r\n\r\nfunction ExpandingContentCtrl() {\r\n    var vm = this;\r\n\r\n    vm.expanded = false;\r\n}"},function(e,t){e.exports='<div class="container-fluid m-t-md" ng-init="pwVisible = false">\r\n  <div class="row">\r\n    <div class="col-sm-6 col-xs-12">\r\n      <form role="form" novalidate>\r\n        <div class="form-group">\r\n          <label class="form-label">Email</label>\r\n          <input type="email" placeholder="Enter email" class="form-control" force-focus>\r\n        </div>\r\n        <div class="form-group">\r\n          <label class="form-label">Password</label> <button class="btn btn-link button-secondary" ng-click="pwVisible = !pwVisible">{{ pwVisible ? "Hide" : "Show" }}</button>\r\n          <input type="password" placeholder="Enter password" class="form-control" ng-show="pwVisible" focus-on-show>\r\n        </div>\r\n        <div>\r\n          <button class="btn button-primary pull-right" type="submit">Log in</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>'},function(e,t){e.exports='<input type="email" name="email" placeholder="Enter email" class="form-control m-b"\r\n force-focus timeout="1000" prevent-focus="false">'},function(e,t){e.exports='<div class="row">\r\n    <div class="col-sm-6 m-b-sm">\r\n        <input type="text" placeholder="Enter text" class="form-control" ng-model="vm.filterText">\r\n    </div>\r\n</div>\r\n<div class="row">\r\n    <ul list-item-filter filter-text="vm.filterText">\r\n        <li class="m-t-xs m-b-xs" ng-repeat="name in vm.names" key="{{ name }}">{{ name }}</li>\r\n    </ul>\r\n</div>'},function(e,t){e.exports="angular.module('app').controller('ListItemFilterCtrl', ListItemFilterCtrl);\r\n\r\nfunction ListItemFilterCtrl() {\r\n    var vm = this;\r\n\r\n    // store the text to filter lists\r\n    vm.filterText = '';\r\n\r\n    // store a list of names\r\n    vm.names = [];\r\n\r\n    // generate names using chance\r\n    for (var i = 0; i < 10; i++) {\r\n        vm.names.push(chance.name());\r\n    }\r\n  \r\n}"},function(e,t){e.exports='<button class="btn btn-primary" ng-click="vm.createTable()">Create PDF Document</button>'},function(e,t){e.exports="angular.module('app').controller('PdfServiceCtrl', PdfServiceCtrl);\r\n\r\nPdfServiceCtrl.$inject = ['$pdf'];\r\n\r\nfunction PdfServiceCtrl($pdf) {\r\n    var vm = this;\r\n\r\n    vm.columns = [{\r\n        title: 'Name',\r\n        value: 'name',\r\n        width: '*'\r\n    }, {\r\n        title: 'Author',\r\n        value: function(data) {\r\n            return data.author;\r\n        },\r\n        width: '*'\r\n    }, {\r\n        title: 'Date Modified',\r\n        value: 'date',\r\n        width: '*'\r\n    }, {\r\n        title: 'Work Completed (%)',\r\n        value: 'completed',\r\n        width: '*'\r\n    }, {\r\n        title: 'Status',\r\n        value: 'status',\r\n        width: '*'\r\n    }];\r\n\r\n    vm.rows = [];\r\n\r\n    for (var i = 0; i < 200; i++) {\r\n        vm.rows.push({\r\n            name: 'Document ' + i,\r\n            author: chance.name(),\r\n            date: chance.date({\r\n                string: true,\r\n                year: 2016\r\n            }),\r\n            completed: chance.integer({\r\n                min: 0,\r\n                max: 100\r\n            }),\r\n            status: chance.bool() ? 'Active' : 'Inactive'\r\n        });\r\n    }\r\n\r\n    vm.createTable = function () {\r\n\r\n        // create the document\r\n        var document = $pdf.createTable(vm.columns, vm.rows, {});\r\n\r\n        // download the document\r\n        document.download('document.pdf');\r\n    };\r\n}"},function(e,t){e.exports="// generate the document\r\nvar document = $pdf.createTable(vm.columns, vm.rows, vm.options);\r\n\r\n// download the document\r\ndocument.download('output-filename-here.pdf');"},function(e,t){e.exports="var safeIntervalInstance = safeInterval.create($scope);"},function(e,t){e.exports='var safeIntervalInstance = safeInterval.create($scope);\r\nsafeIntervalInstance.interval(function(){\r\n    console.log("runs every 100ms");\r\n}, 100);'},function(e,t){e.exports='var interval = safeIntervalInstance.interval(function(){\r\n    console.log("runs every 100ms");\r\n}, 100);\r\nsafeIntervalInstance.cancel(interval);'},function(e,t){e.exports="var safeTimeoutInstance = safeTimeout.create($scope);"},function(e,t){e.exports='var safeTimeoutInstance = safeTimeout.create($scope);\r\nsafeTimeoutInstance.timeout(function(){\r\n    console.log("run in 100ms");\r\n}, 100);'},function(e,t){e.exports='var timer = safeTimeoutInstance.timeout(function(){\r\n    console.log("run in 100ms");\r\n}, 100);\r\nsafeTimeoutInstance.cancel(timer);'},function(e,t){e.exports='<p><b>Time since this page loaded:</b> <span time-ago="vm.loadTime"></span></p>'},function(e,t){e.exports="angular.module('app').controller('TimeAgoCtrl', TimeAgoCtrl);\r\n\r\nfunction TimeAgoCtrl() {\r\n    var vm = this;\r\n\r\n    //store the time this page was navigated to\r\n    vm.loadTime = new Date();\r\n}"},function(e,t){e.exports="angular.module('elements').controller('UtilitiesCtrl', UtilitiesCtrl);\r\n\r\nUtilitiesCtrl.$inject = ['timeAgoService'];\r\n\r\nfunction UtilitiesCtrl(timeAgoService) {\r\n    var vm = this;\r\n\r\n    //date from the past - 1 April 2016 00:00\r\n    var pastDate = new Date(1459465200000);\r\n\r\n    //time from now\r\n    var timeFromNow = timeAgoService.timeSinceNow(pastDate);\r\n\r\n    //time from the 1 January 2017 00:00\r\n    var startDate = new Date(1483228800000);\r\n\r\n    var timeFromDate = timeAgoService.timeSince(pastDate, startDate);\r\n}"},function(e,t){e.exports="var defaultStrings = {\r\n    lessThanSecond: 'less than a second ago',\r\n    second: '1 second ago',\r\n    seconds: '{x} seconds ago',\r\n    minute: '1 minute ago',\r\n    minutes: '{x} minutes ago',\r\n    hour: '1 hour ago',\r\n    hours: '{x} hours ago',\r\n    day: '1 day ago',\r\n    days: '{x} days ago',\r\n    week: '1 week ago',\r\n    weeks: '{x} weeks ago',\r\n    month: '1 month ago',\r\n    months: '{x} months ago',\r\n    year: '1 year ago',\r\n    years: '{x} years ago'\r\n};"},function(e,t){e.exports="angular.module('elements').controller('UtilitiesCtrl', UtilitiesCtrl);\r\n\r\nUtilitiesCtrl.$inject = ['$scope', 'windowCommunicationService'];\r\n\r\nfunction UtilitiesCtrl($scope, windowCommunicationService) {\r\n    var vm = this;\r\n\r\n    vm.openInNewWindow = function() {\r\n        var newWindow = windowCommunicationService.createWindow(\"Test\", $scope, \"test.html\")\r\n    };\r\n\r\n}"},function(e,t){e.exports='<div class="row">\r\n    <div class="col-xs-7">\r\n        <div class="form-group">\r\n            <label class="form-label">Name</label>\r\n            <input type="text" placeholder="Enter name" class="form-control" force-focus>\r\n        </div>\r\n\r\n        <div class="form-group">\r\n            <label class="form-label">Description</label>\r\n            <textarea placeholder="Enter Description" class="form-control"></textarea>\r\n        </div>\r\n    </div>\r\n</div>'},function(e,t){e.exports='<div class="row">\r\n    <div class="col-xs-7">\r\n        <div class="form-group" ng-class="{\'has-error\':!form.requiredText.$valid && !form.requiredText.$pristine || !form.requiredText.$valid && form.$submitted }">\r\n            <label for="requiredText" class="control-label">Required Text <span class="form-control-validation">*</span>\r\n\t\t\t</label>\r\n            <input type="text" name="requiredText" placeholder="Text" class="form-control" required ng-model="vm.text">\r\n            <span class="hpe-icon hpe-alert form-control-feedback" aria-hidden="true"></span>\r\n        </div>\r\n        <div class="form-group form-group-validation">\r\n            <label class="control-label"><span class="form-control-validation">*</span>&nbsp;required</label>\r\n        </div>\r\n    </div>\r\n</div>'},function(e,t){e.exports='<button type="button" class="btn button-primary" ng-click="vm.openModal()">\r\n  <span class="hpe-icon hpe-deployment" aria-hidden="true"></span> Launch Marquee Wizard\r\n</button>'},function(e,t){e.exports="angular.module(\"app\").controller(\"MarqueeModalCtrl\", [\"$modal\", MarqueeModalCtrl]);\r\n\r\nfunction MarqueeModalCtrl($modal) {\r\n    var mc = this;\r\n\r\n    mc.openModal = function () {\r\n\r\n        var modalInstance = $modal.open({\r\n            animation: false,\r\n            templateUrl: 'sample.html',\r\n            controller: 'MarqueeWizardModalCtrl',\r\n            controllerAs: 'vm',\r\n            keyboard: 'true',\r\n            size: 'lg',\r\n            windowClass: 'marquee-modal-window'\r\n        });\r\n\r\n        modalInstance.result.then(function () {\r\n            //result passed into closed function;\r\n        });\r\n    };\r\n}"},function(e,t){e.exports=".inline-title {\r\n    font-family: 'Source Sans Pro';\r\n    font-weight: 200;\r\n    font-size: 1.125rem;\r\n    display: inline;\r\n    padding-left: 10px;\r\n}"},function(e,t){e.exports="angular.module(\"app\").controller(\"MarqueeWizardModalCtrl\", MarqueeWizardModalCtrl);\r\n\r\nMarqueeWizardModalCtrl.$inject = ['$scope', '$modalInstance'];\r\n\r\nfunction MarqueeWizardModalCtrl($scope, $modalInstance) {\r\n    var vm = this;\r\n\r\n    vm.steps = [{\r\n        title: 'First step',\r\n        html: '<div><i class=\"hpe-icon hpe-soa\"></i><p class=\"inline-title\">First step</p></div>',\r\n        header: 'Marquee wizard',\r\n        templateUrl: 'first.html'\r\n    }, {\r\n        title: 'Second step',\r\n        html: '<div><i class=\"hpe-icon hpe-schedule-clone\"></i><p class=\"inline-title\">Second step</p></div>',\r\n        header: 'Second step title',\r\n        templateUrl: 'second.html'\r\n    }, {\r\n        title: 'Third step',\r\n        html: '<div><i class=\"hpe-icon hpe-sync\"></i><p class=\"inline-title\">Third step</p></div>',\r\n        header: 'Third step title',\r\n        templateUrl: 'third.html'\r\n    }, {\r\n        title: 'Fourth step',\r\n        html: '<div><i class=\"hpe-icon hpe-scorecard\"></i><p class=\"inline-title\">Fourth step</p></div>',\r\n        header: 'Fourth step title',\r\n        templateUrl: 'fourth.html'\r\n    }];\r\n\r\n    vm.buttonOptions = {\r\n      previousTooltip: 'Previous Step',\r\n      nextTooltip: 'Next Step',\r\n      finishTooltip: 'Finish'\r\n    };\r\n\r\n    vm.isVisited = false;\r\n\r\n    vm.onChanging = function(from, to) {\r\n        //do stuff here on page changing\r\n    };\r\n\r\n    //for performing validation when the finish button is pressed\r\n    vm.onFinishing = function() {\r\n        //sets the submitted value on the form to true\r\n        $scope.requiredInput.$setSubmitted();\r\n\r\n        //returns boolean value for validation check\r\n        return $scope.requiredInput.requiredText.$valid;\r\n    };\r\n\r\n    vm.onFinished = function() {\r\n        //do stuff here when finished\r\n\r\n        //including dismissing the modal\r\n        $modalInstance.dismiss('ok');\r\n    };\r\n\r\n    vm.onCanceled = function() {\r\n        //do stuff here if user attempts to close modal\r\n\r\n        //including dismissing the modal\r\n        $modalInstance.dismiss('ok');\r\n    };\r\n\r\n}"},function(e,t){e.exports='<div class="row">\r\n    <div class="col-xs-7">\r\n        <p class="marquee-wizard-text">Content of second step</p>\r\n    </div>\r\n</div>'},function(e,t){e.exports='<div class="row">\r\n    <div class="col-xs-7">\r\n        <p class="marquee-wizard-text">Content of third step</p>\r\n    </div>\r\n</div>'},function(e,t){e.exports='<wizard class="vertical" button-options="vm.buttonOptions">\r\n    <step ng-repeat="item in vm.steps">\r\n        <step-heading>\r\n            <span ng-bind="item.title"></span>\r\n        </step-heading>\r\n        <p ng-bind="item.content"></p>\r\n    </step>\r\n</wizard>'},function(e,t){e.exports='angular.module("app").controller("VerticalWizardCtrl", VerticalWizardCtrl);\r\n\r\nfunction VerticalWizardCtrl() {\r\n    var vm = this;\r\n\r\n    vm.steps = [\r\n        { title:"First Step",content:"Content of step 1." },\r\n        { title:"Second Step",content:"Content of step 2." },\r\n        { title:"Third Step",content:"Content of step 3." },\r\n        { title:"Fourth Step",content:"Content of step 4." }\r\n    ];\r\n\r\n    vm.buttonOptions = {\r\n        previousTooltip: "Go to the previous step",\r\n        nextTooltip: "Go to the next step",\r\n        cancelTooltip: "Cancel the wizard",\r\n        finishTooltip: "Finish the wizard"\r\n    };\r\n}'},function(e,t){e.exports='<wizard button-options="vm.buttonOptions">\r\n    <step ng-repeat="item in vm.steps">\r\n        <step-heading>\r\n            <span ng-bind="item.title"></span>\r\n        </step-heading>\r\n        <p ng-bind="item.content"></p>\r\n    </step>\r\n</wizard>'},function(e,t){e.exports='angular.module("app").controller("WizardCtrl", WizardCtrl);\r\n\r\nfunction WizardCtrl() {\r\n    var vm = this;\r\n\r\n    vm.steps = [\r\n        { title:"First Step",content:"Content of step 1." },\r\n        { title:"Second Step",content:"Content of step 2." },\r\n        { title:"Third Step",content:"Content of step 3." },\r\n        { title:"Fourth Step",content:"Content of step 4." }\r\n    ];\r\n\r\n    vm.buttonOptions = {\r\n        previousTooltip: "Go to the previous step",\r\n        nextTooltip: "Go to the next step",\r\n        cancelTooltip: "Cancel the wizard",\r\n        finishTooltip: "Finish the wizard"\r\n    };\r\n}\r\n'},function(e,t){e.exports='<form name="vm.requiredInput">\r\n    <wizard button-options="vm.buttonOptions" on-finishing="vm.validate()">\r\n        <step>\r\n            <step-heading>\r\n                <span> First Step</span>\r\n            </step-heading>\r\n            <p>Nothing to validate in here.</p>\r\n        </step>\r\n        <step>\r\n            <step-heading>\r\n                <span> Second Step</span>\r\n            </step-heading>\r\n            <div class="form-group" ng-class="{\'has-error\':vm.requiredInput.requiredText.$valid===false}">\r\n                <label for="requiredText" class="control-label">Required Text <span\r\n                    class="form-control-validation">*</span>\r\n                </label>\r\n                <input type="text" name="requiredText" placeholder="Text" class="form-control" required\r\n                       ng-model="vm.text">\r\n                <span class="hpe-icon hpe-alert form-control-feedback" aria-hidden="true"></span>\r\n            </div>\r\n            <div class="form-group form-group-validation">\r\n                <label class="control-label"><span\r\n                    class="form-control-validation">*</span>&nbsp;required</label>\r\n            </div>\r\n        </step>\r\n    </wizard>\r\n</form>'},function(e,t){e.exports='angular.module("app").controller("WizardValidationCtrl", ["$scope", WizardCtrl]);\r\n\r\nfunction WizardCtrl($scope) {\r\n    var vm = this;\r\n\r\n    vm.text = "";\r\n    vm.validate = validate;\r\n\r\n    vm.buttonOptions = {\r\n        previousTooltip: "Go to the previous step",\r\n        nextTooltip: "Go to the next step",\r\n        cancelTooltip: "Cancel the wizard",\r\n        finishTooltip: "Finish the wizard"\r\n    };\r\n\r\n    function validate() {\r\n        return $scope.vm.requiredInput.requiredText.$valid;\r\n    }\r\n}'},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,function(e,t){e.exports=".features-dropdown {\n  width: 250px;\n}\n.dropdown-submenu > .case-dropdown {\n  top: -52px;\n}\n.case-filter {\n  margin: 9px;\n}\n.case-items {\n  height: 195px;\n  width: 160px;\n  overflow: auto;\n}\n.case-items ul {\n  width: 100%;\n  list-style: none outside none;\n  padding: 0;\n}\n.case-items ul > li > a {\n  color: inherit;\n  line-height: 25px;\n  text-align: left;\n  font-weight: normal;\n  font-size: 1rem;\n  display: block;\n  padding: 7px 20px;\n  clear: both;\n  white-space: nowrap;\n}\n"},function(e,t){e.exports=".thumbnails-example-container {\n  display: flex;\n  flex-wrap: wrap;\n}\n.thumbnail-example {\n  display: flex;\n  align-items: center;\n  height: 45px;\n  padding: 5px 10px;\n}\n.thumbnail-example .hpe-download {\n  margin-left: auto;\n  color: #989da0;\n}\n.thumbnail-example .hpe-download:hover {\n  color: #676a6c;\n  cursor: pointer;\n}\n.thumbnail-example p {\n  margin-bottom: -4px;\n}\n.thumbnail-example p > span {\n  font-size: 14px;\n  color: #333131;\n}\n.thumbnail-example p > span + span {\n  color: #828282;\n  margin-left: 4px;\n  font-size: 13px;\n}\n.thumbnail-example .word-icon {\n  background: url(assets/img/doc-icons/IconWordColorized.png) no-repeat;\n  width: 18px;\n  height: 18px;\n  flex: 0 0 auto;\n  background-size: cover;\n}\n.thumbnail-example .pdf-icon {\n  background: url(assets/img/doc-icons/IconPDFColorized.png) no-repeat;\n  width: 18px;\n  height: 18px;\n  flex: 0 0 auto;\n  background-size: cover;\n}\n.thumbnail-example .excel-icon {\n  background: url(assets/img/doc-icons/IconExcelColorized.png) no-repeat;\n  width: 18px;\n  height: 18px;\n  flex: 0 0 auto;\n  background-size: cover;\n}\n.thumbnail-example .html-icon {\n  background: url(assets/img/doc-icons/IconHTMLColorized.png) no-repeat;\n  width: 18px;\n  height: 18px;\n  flex: 0 0 auto;\n  background-size: cover;\n}\n.thumbnail-example .powerpoint-icon {\n  background: url(assets/img/doc-icons/IconPowerPointColorized.png) no-repeat;\n  width: 18px;\n  height: 18px;\n  flex: 0 0 auto;\n  background-size: cover;\n}\n.thumbnail-example .email-icon {\n  background: url(assets/img/doc-icons/IconEmailColorized.png) no-repeat;\n  width: 18px;\n  height: 18px;\n  flex: 0 0 auto;\n  background-size: cover;\n}\n.thumbnails-example-container .front,\n.thumbnails-example-container .back {\n  box-shadow: none;\n}\n.thumbnails-example-container .front .thumbnail-example {\n  padding: 10px;\n}\n.thumbnails-example-container .back {\n  background-color: #f2eff6;\n  border: 1px solid #cfd2d6;\n}\n.thumbnails-example-container .thumbnail-title {\n  font-weight: 600;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n.thumbnails-example-container .back .thumbnail-example {\n  height: 100%;\n  align-items: flex-start;\n  padding: 15px 10px;\n}\n.thumbnails-example-container .back .thumbnail-title {\n  white-space: normal;\n  line-height: 18px;\n}\n.thumbnails-example-container .back .hpe-download {\n  bottom: 20px;\n  position: absolute;\n}\n"},function(e,t){e.exports=".contact-overflow-scroll-pane {\n  height: 300px;\n}\n.contact-overflow-modal-item-row {\n  padding: 5px 8px;\n  border-bottom: 1px solid lightgray;\n  margin-right: 7px;\n}\n.contact-overflow-modal-item-label {\n  width: 30px;\n  text-align: center;\n  color: #fff;\n  background-color: #835996;\n  padding: 2px 0;\n}\n"},function(e,t){e.exports=".draggable-card-list-demo {\n  width: 100%;\n  height: 470px;\n}\n.workbook-col {\n  width: 180px;\n}\n.workbook-col span {\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n.items-col {\n  width: 58px;\n}\n.last-accessed-col {\n  width: 125px;\n}\n.author-col {\n  width: 121px;\n}\n.draggable-example {\n  background-color: #FAFAFA;\n}\n.card-content {\n  width: 100%;\n  height: 100%;\n  padding-top: 5px;\n}\n.card-content .chart-container {\n  display: inline-block;\n  width: 60px;\n  height: 60px;\n  vertical-align: top;\n}\n.card-content .text-container {\n  display: inline-block;\n  width: calc(100% - 70px);\n  padding-left: 10px;\n}\n.card-content .text-container .status {\n  width: 100%;\n  height: 15px;\n  line-height: 12px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  color: #4b4d4e;\n}\n"},function(e,t){e.exports=".draggable-card-demo {\n  width: 400px;\n  height: 500px;\n}\n.card-content {\n  width: 100%;\n  height: 100%;\n  padding-top: 5px;\n}\n.card-content .chart-container {\n  display: inline-block;\n  width: 60px;\n  height: 60px;\n  vertical-align: top;\n}\n.card-content .text-container {\n  display: inline-block;\n  width: calc(30%);\n  padding-left: 10px;\n}\n.card-content .text-container .status {\n  width: 100%;\n  height: 15px;\n  line-height: 12px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  color: #4b4d4e;\n}\n.card-content .text-container .description {\n  width: 100%;\n  height: 44px;\n  overflow: hidden;\n  font-size: 14px;\n}\n"},function(e,t){e.exports=".draggable-panel-list-demo {\n  background-color: #f7f7f7;\n  height: 400px;\n}\n.body-dark .draggable-panel-list-demo {\n  background-color: #404040;\n}\n.body-dark .draggable-panel-list-demo div {\n  background-color: #444444;\n}\n.draggable-panel-list-demo div {\n  background-color: #ffffff;\n}\n.list-item-large-demo {\n  height: 130px;\n}\n.list-item-small-demo {\n  height: 50px;\n}\n"},function(e,t){e.exports=".hotkey-demo-only {\n  width: 210px;\n  height: 80px;\n  border: 2px solid #f1f1f1;\n  border-radius: 3px;\n}\n.hotkey-demo-only .hotkey-group-hint {\n  margin-left: -2px;\n  margin-top: -2px;\n}\n.hotkey-demo-only-button-layout {\n  padding-left: 30px;\n  padding-top: 20px;\n}\n"},function(e,t){e.exports=".person-icon {\n  width: 48px;\n  height: 48px;\n  background-image: url('assets/img/IconUser.png');\n  background-size: 100% 100%;\n}\n.case-modal {\n  height: 520px;\n}\n.case-modal .case-label {\n  font-size: 18px;\n}\n.case-logo {\n  color: #85D2BE;\n}\n"},function(e,t){e.exports=".inset-scroll {\n  overflow: auto;\n  height: 100%;\n}\n"},function(e,t){e.exports=".notification-modal {\n  width: 340px;\n}\n.notification-scroll-container {\n  height: 100%;\n}\n.notification-panel {\n  display: table;\n  border-top: 1px solid #E5E5E5;\n  padding: 6px 0;\n}\n.notification-panel .notification-panel-icon {\n  display: table-cell;\n  width: 20px;\n  padding-right: 15px;\n  text-align: center;\n  vertical-align: middle;\n  font-size: 22px;\n  color: #888;\n}\n.notification-panel .notification-panel-text {\n  display: table-cell;\n}\n.notification-panel .notification-panel-text .notification-text {\n  margin: 0;\n  color: #666666;\n  font-size: 16px;\n  line-height: 1.2em;\n}\n.notification-panel .notification-panel-timestamp {\n  display: table-cell;\n  width: 110px;\n  text-align: right;\n  vertical-align: middle;\n}\n.notification-panel .notification-panel-timestamp .notification-timestamp {\n  margin: 0;\n  color: #999;\n  font-size: 14px;\n  padding-right: 5px;\n}\n.inset-scroll {\n  overflow: auto;\n  height: 100%;\n}\n"},function(e,t){e.exports=".color-palette {\n  padding-top: 5px;\n}\n.color-palette .color-box {\n  display: inline-block;\n  width: 25px;\n  height: 25px;\n  margin: 0 3px;\n  border: 2px solid rgba(0, 0, 0, 0.3);\n  cursor: pointer;\n}\n.color-display {\n  border: 2px solid rgba(0, 0, 0, 0.3) !important;\n  transition: background-color 0.3s linear;\n}\n"},function(e,t){e.exports=".modal-inset {\n  height: calc(100% - 10px);\n  margin: 5px;\n}\n.modal-inset .scroll-container {\n  height: 100%;\n}\n.user-scroll-container {\n  margin: 0 15px;\n}\n.disk-space-list {\n  list-style-type: none;\n  padding: 0;\n}\n.disk-space-list-item .user-container {\n  display: table;\n  border-bottom: 1px solid #eee;\n  padding: 5px 0px;\n}\n.disk-space-list-item .user-container .icon-container {\n  display: table-cell;\n  vertical-align: middle;\n}\n.disk-space-list-item .user-container .user-info-container {\n  display: table-cell;\n  width: 100%;\n  padding-left: 10px;\n}\n.disk-space-list-item .user-container .spark-label-1 {\n  font-size: 11px;\n  line-height: 22px;\n}\n"},function(e,t){e.exports=".popover-example {\n  display: inline-block;\n  margin-left: 20px;\n}\n.popover-example .popover-example-highlight {\n  background-color: rgba(123, 99, 163, 0.3);\n  color: black;\n}\n.popover-example-class {\n  min-width: 400px;\n  padding: 0px;\n  border-radius: 0px;\n  box-shadow: 1px 2px 8px -2px #999999;\n}\n.popover-example-class.bottom {\n  margin-top: 0px;\n}\n.popover-example-class > .arrow {\n  display: none;\n}\n.popover-example-class .popover-content {\n  padding: 0px;\n}\n.popover-email-example {\n  padding: 20px 10px 15px 20px;\n}\n.popover-email-example .hpe-more {\n  right: 20px;\n  position: absolute;\n  margin-top: 5px;\n  transition: all 0.1s;\n}\n.popover-email-example .hpe-more:hover {\n  color: #3f3f3f;\n  cursor: pointer;\n}\n.popover-recipient {\n  display: flex;\n}\n.popover-recipient-to-from {\n  opacity: 0.9;\n  width: 60px;\n}\n.popover-person-container {\n  display: flex;\n}\n.popover-person-container p {\n  margin-bottom: -5px;\n}\n.popover-person-details-container {\n  margin-left: 12px;\n}\n.popover-person-name {\n  color: black;\n}\n.popover-person-search {\n  display: inline-block;\n  opacity: 0.9;\n  margin-left: 5px;\n  font-size: 11px;\n}\n.popover-person-container .hpe-user,\n.popover-person-container .hpe-user-manager {\n  color: #999;\n  margin-top: 8px;\n}\n.popover-footer {\n  height: 40px;\n  background-color: #D6DDE5;\n  padding: 0px 10px;\n  align-items: center;\n}\n.popover-footer .icon-left {\n  position: absolute;\n  left: 20px;\n  opacity: 0.8;\n  margin-top: 7px;\n}\n.popover-footer .icon-right {\n  position: absolute;\n  right: 25px;\n  opacity: 0.8;\n  margin-top: 7px;\n}\n.radio-popover {\n  padding: 20px;\n  width: 200px;\n  border-radius: 1px;\n  box-shadow: 1px 2px 8px -5px #999999;\n}\n.radio-popover label {\n  display: block;\n}\n"},function(e,t){e.exports=".scroll-example {\n  overflow: auto;\n  height: 300px;\n  border: 1px solid #e7eaec;\n}\n.scroll-example h4 {\n  margin-top: 0;\n}\n"},function(e,t){e.exports=".employee-list-container {\n  border: 1px solid #ddd;\n  padding: 5px;\n  padding-left: 0;\n}\n.employee-list {\n  width: 100%;\n  height: 250px;\n}\n.employee-item {\n  width: 100%;\n  height: 65px;\n  padding: 10px 20px;\n  border-bottom: 1px solid #eee;\n}\n.body-dark .employee-list {\n  border: 1px solid #666666;\n}\n.body-dark .employee-item {\n  border-bottom: 1px solid #666666;\n}\n.body-dark .employee-item .text-black {\n  color: #fff !important;\n}\n"},function(e,t){e.exports=".employee-list-container {\n  border: 1px solid #ddd;\n  padding: 5px;\n  padding-left: 0;\n}\n.employee-list {\n  width: 100%;\n  height: 250px;\n}\n.employee-item {\n  width: 100%;\n  height: 65px;\n  padding: 10px 20px;\n  border-bottom: 1px solid #eee;\n}\n.body-dark .employee-list {\n  border: 1px solid #666666;\n}\n.body-dark .employee-item {\n  border-bottom: 1px solid #666666;\n}\n.body-dark .employee-item .text-black {\n  color: #fff !important;\n}\n"},function(e,t){e.exports=".search-icon {\n  width: 30px;\n  height: 30px;\n  background-image: url('assets/img/IconSearchColorized.png');\n  background-size: 100% 100%;\n  margin-top: 8px;\n  margin-right: 15px;\n  min-width: 30px;\n}\n.search-builder-header-inline {\n  display: flex;\n}\n.search-builder-spark-padding {\n  padding-top: 6px;\n  min-width: 210px;\n}\n@media (max-width: 440px) {\n  .search-builder-spark-padding {\n    display: none;\n  }\n}\n.search-builder-title-icon {\n  font-size: 33px;\n  margin-right: 15px;\n}\n.add-field-list {\n  list-style-type: none;\n  padding: 0;\n  margin: 8px 5px;\n}\n.add-field-list .field-name {\n  font-size: 17px;\n  padding: 3px 10px;\n  cursor: pointer;\n}\n.add-field-list .field-name:hover {\n  background-color: #f2f2f2;\n}\n.body-dark .add-field-list .field-name:hover {\n  background-color: #262626;\n}\n.add-field-list .field-name .repository-check {\n  margin-right: 10px;\n  transition: opacity 0.2s linear;\n}\n.add-field-list .field-name.option-deselected .option-check {\n  opacity: 0;\n}\n.add-field-list .field-name.option-deselected:hover .option-check {\n  opacity: 0.5;\n}\n.add-field-list .field-name.option-selected .option-check {\n  opacity: 1;\n}\n.show-panel-btn {\n  cursor: pointer;\n}\n/* Code Modal */\n.code-modal-body {\n  height: 520px;\n  overflow-y: hidden;\n}\n.code-modal-list {\n  list-style-type: none;\n  width: 100%;\n  padding: 0;\n}\n.code-modal-list .code-section {\n  font-size: 18px;\n  padding: 10px 20px;\n  color: #fff;\n  transition: background-color 0.3s linear;\n  cursor: pointer;\n}\n.code-modal-list .code-section:hover,\n.code-modal-list .code-section.active {\n  background-color: rgba(0, 0, 0, 0.2);\n}\n"},function(e,t){e.exports=".search-history-container {\n  width: 350px;\n  height: 600px;\n  overflow: auto;\n}\n.search-history-scrollpane {\n  height: 100%;\n}\n.search-history-container .search-history {\n  display: flex;\n  flex-direction: row;\n  padding: 10px 10px 8px 15px;\n}\n.search-history-container .search-history .search-history-icon {\n  flex: none;\n  vertical-align: middle;\n  margin-top: 3px;\n}\n.search-history-container .search-history .search-history-detail {\n  flex: 1;\n  padding: 0px 15px;\n  overflow: hidden;\n}\n.search-history-container .search-history .search-history-detail p {\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n  height: 25px;\n  margin-bottom: 3px;\n}\n.search-history-container .search-history .search-history-detail .search-criteria {\n  font-size: 13px;\n}\n.search-history-container .search-history .search-history-detail .search-criteria span {\n  font-size: 16px;\n  margin-left: 5px;\n}\n.search-history-container .search-history .search-history-detail .search-criteria:last-of-type span {\n  color: #CE6A79;\n  font-size: 16px;\n  margin-left: 5px;\n}\n.search-history-container li:last-of-type hr {\n  display: none;\n}\n.search-history-container li hr {\n  margin: 0px;\n}\n.search-history-container li:hover {\n  background-color: #F6F7F8;\n  cursor: pointer;\n}\n.search-history-modal-header {\n  display: flex;\n  background-color: #f2f2f2;\n  padding: 20px;\n}\n.search-history-modal-header-title {\n  margin-top: 0px;\n  color: black;\n}\n.search-history-modal-content {\n  padding: 0px 20px 10px 20px;\n}\n.search-history-modal-content .section {\n  margin-top: 20px;\n}\n.search-history-modal-footer {\n  padding: 20px;\n  text-align: right;\n}\n"},function(e,t){e.exports=".splitter-demo {\n  width: 100%;\n  height: 400px;\n  border: 1px solid #f2f2f2;\n}\n"},function(e,t){e.exports=".splitter-demo {\n  width: 100%;\n  height: 400px;\n  border: 1px solid #f2f2f2;\n}\n"},function(e,t){e.exports=".splitter-demo {\n  width: 100%;\n  height: 400px;\n  border: 1px solid #f2f2f2;\n}\n"},function(e,t){e.exports=".splitter-demo {\n  width: 100%;\n  height: 400px;\n  border: 1px solid #f2f2f2;\n}\n"}]));