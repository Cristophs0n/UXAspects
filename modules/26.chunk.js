webpackJsonp([26],{1617:function(n,s,a){"use strict";Object.defineProperty(s,"__esModule",{value:!0});var t=function(){function n(n){var s=this;this.snippets={compiled:{},raw:{}},n.keys().forEach(function(a){var t=a.replace("./","").replace(/\W+(\w)/g,function(n){return n[1].toUpperCase()}),p=n(a);p.snippet&&(s.snippets.compiled[t]=p.snippet),p.example&&(s.snippets.raw[t]=p.example)})}return n}();s.BaseDocumentationSection=t},2862:function(n,s,a){"use strict";var t=this&&this.__decorate||function(n,s,a,t){var p,e=arguments.length,o=e<3?s:null===t?t=Object.getOwnPropertyDescriptor(s,a):t;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(n,s,a,t);else for(var c=n.length-1;c>=0;c--)(p=n[c])&&(o=(e<3?p(o):e>3?p(s,a,o):p(s,a))||o);return e>3&&o&&Object.defineProperty(s,a,o),o},p=this&&this.__metadata||function(n,s){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(n,s)};Object.defineProperty(s,"__esModule",{value:!0});var e=a(0),o=a(23),c=a(320),l=a(171),i=a(321),u=a(2863),r=a(2868),k=a(2873),d=a(2878),h=a(322),m=a(323),f=[u.ComponentsWizardNg1Component,r.ComponentsWizardValidationNg1Component,k.ComponentsVerticalWizardNg1Component,d.ComponentsMarqueeWizardNg1Component],g=[{path:"**",component:i.DocumentationCategoryComponent,data:{category:l.ResolverService.resolveCategoryData(l.DocumentationPage.Components,"Wizard")}}],v=function(){function n(n,s){s.registerResolver(n)}return n}();v=t([e.NgModule({imports:[m.WrappersModule,h.TabsModule,c.DocumentationComponentsModule,o.RouterModule.forChild(g)],exports:f,declarations:f,entryComponents:f}),p("design:paramtypes",[e.ComponentFactoryResolver,l.ResolverService])],v),s.ComponentsWizardModule=v},2863:function(n,s,a){"use strict";var t=this&&this.__extends||function(){var n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,s){n.__proto__=s}||function(n,s){for(var a in s)s.hasOwnProperty(a)&&(n[a]=s[a])};return function(s,a){function t(){this.constructor=s}n(s,a),s.prototype=null===a?Object.create(a):(t.prototype=a.prototype,new t)}}(),p=this&&this.__decorate||function(n,s,a,t){var p,e=arguments.length,o=e<3?s:null===t?t=Object.getOwnPropertyDescriptor(s,a):t;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(n,s,a,t);else for(var c=n.length-1;c>=0;c--)(p=n[c])&&(o=(e<3?p(o):e>3?p(s,a,o):p(s,a))||o);return e>3&&o&&Object.defineProperty(s,a,o),o},e=this&&this.__metadata||function(n,s){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(n,s)};Object.defineProperty(s,"__esModule",{value:!0});var o=a(0),c=a(319),l=a(1617),i=function(n){function s(){var s=n.call(this,a(2864))||this;return s.codepen={html:s.snippets.raw.sampleHtml,htmlAttributes:{"ng-controller":"WizardCtrl as vm"},js:[s.snippets.raw.sampleJs]},s}return t(s,n),s}(l.BaseDocumentationSection);i=p([o.Component({selector:"uxd-components-wizard-ng1",template:a(2867),changeDetection:o.ChangeDetectionStrategy.OnPush}),c.DocumentationSectionComponent("ComponentsWizardNg1Component"),e("design:paramtypes",[])],i),s.ComponentsWizardNg1Component=i},2864:function(n,s,a){function t(n){return a(p(n))}function p(n){var s=e[n];if(!(s+1))throw new Error("Cannot find module '"+n+"'.");return s}var e={"./sample.html":2865,"./sample.js":2866};t.keys=function(){return Object.keys(e)},t.resolve=p,n.exports=t,t.id=2864},2865:function(n,s){n.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>wizard</span> <span class="token attr-name">button-options</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vm.buttonOptions<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\r\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>step</span> <span class="token attr-name">ng-repeat</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>item in vm.steps<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\r\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>step-heading</span><span class="token punctuation">></span></span>\r\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">ng-bind</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>item.title<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\r\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>step-heading</span><span class="token punctuation">></span></span>\r\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">ng-bind</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>item.content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\r\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>step</span><span class="token punctuation">></span></span>\r\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>wizard</span><span class="token punctuation">></span></span>',example:'<wizard button-options="vm.buttonOptions">\r\n    <step ng-repeat="item in vm.steps">\r\n        <step-heading>\r\n            <span ng-bind="item.title"></span>\r\n        </step-heading>\r\n        <p ng-bind="item.content"></p>\r\n    </step>\r\n</wizard>'}},2866:function(n,s){n.exports={snippet:'angular<span class="token punctuation">.</span><span class="token function">module</span><span class="token punctuation">(</span><span class="token string">"app"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">controller</span><span class="token punctuation">(</span><span class="token string">"WizardCtrl"</span><span class="token punctuation">,</span> WizardCtrl<span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n\r\n<span class="token keyword">function</span> <span class="token function">WizardCtrl</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\r\n    <span class="token keyword">var</span> vm <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>\r\n\r\n    vm<span class="token punctuation">.</span>steps <span class="token operator">=</span> <span class="token punctuation">[</span>\r\n        <span class="token punctuation">{</span> title<span class="token punctuation">:</span><span class="token string">"First Step"</span><span class="token punctuation">,</span>content<span class="token punctuation">:</span><span class="token string">"Content of step 1."</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\r\n        <span class="token punctuation">{</span> title<span class="token punctuation">:</span><span class="token string">"Second Step"</span><span class="token punctuation">,</span>content<span class="token punctuation">:</span><span class="token string">"Content of step 2."</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\r\n        <span class="token punctuation">{</span> title<span class="token punctuation">:</span><span class="token string">"Third Step"</span><span class="token punctuation">,</span>content<span class="token punctuation">:</span><span class="token string">"Content of step 3."</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\r\n        <span class="token punctuation">{</span> title<span class="token punctuation">:</span><span class="token string">"Fourth Step"</span><span class="token punctuation">,</span>content<span class="token punctuation">:</span><span class="token string">"Content of step 4."</span> <span class="token punctuation">}</span>\r\n    <span class="token punctuation">]</span><span class="token punctuation">;</span>\r\n\r\n    vm<span class="token punctuation">.</span>buttonOptions <span class="token operator">=</span> <span class="token punctuation">{</span>\r\n        previousTooltip<span class="token punctuation">:</span> <span class="token string">"Go to the previous step"</span><span class="token punctuation">,</span>\r\n        nextTooltip<span class="token punctuation">:</span> <span class="token string">"Go to the next step"</span><span class="token punctuation">,</span>\r\n        cancelTooltip<span class="token punctuation">:</span> <span class="token string">"Cancel the wizard"</span><span class="token punctuation">,</span>\r\n        finishTooltip<span class="token punctuation">:</span> <span class="token string">"Finish the wizard"</span>\r\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\r\n<span class="token punctuation">}</span>\r\n',example:'angular.module("app").controller("WizardCtrl", WizardCtrl);\r\n\r\nfunction WizardCtrl() {\r\n    var vm = this;\r\n\r\n    vm.steps = [\r\n        { title:"First Step",content:"Content of step 1." },\r\n        { title:"Second Step",content:"Content of step 2." },\r\n        { title:"Third Step",content:"Content of step 3." },\r\n        { title:"Fourth Step",content:"Content of step 4." }\r\n    ];\r\n\r\n    vm.buttonOptions = {\r\n        previousTooltip: "Go to the previous step",\r\n        nextTooltip: "Go to the next step",\r\n        cancelTooltip: "Cancel the wizard",\r\n        finishTooltip: "Finish the wizard"\r\n    };\r\n}\r\n'}},2867:function(n,s){n.exports='<uxd-wizard-wrapper></uxd-wizard-wrapper>\r\n\r\n<hr>\r\n\r\n<p>Wizards are defined inside a <code>wizard</code> element. Each step is defined using a <code>step</code> element. Use the\r\n    <code>step-heading</code> element to define the html for the step heading. Note that the number of the step is automatically\r\n    prepended to the HTML. Everything not inside the <code>step-heading</code> is considered the content of the step. An\r\n    <code>overflow-tooltip</code>can be added to the wizard and will require <code>max-height</code>and <code>max-width</code>    to be added to the element. Alternatively a <code>single-line-overflow-tooltip</code>can be added to the wizard which\r\n    will require a <code>max-width</code> to be set and <code>vertical-align</code>to be set to bottom.</p>\r\n\r\n<p>Attributes that can be defined on the <code>wizard</code> element are:</p>\r\n\r\n<div class="demo-attributes table-responsive">\r\n    <table class="table m-t">\r\n        <tr>\r\n            <th>Name</th>\r\n            <th>Type</th>\r\n            <th>Binding</th>\r\n            <th>Description</th>\r\n            <th>Optional</th>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">button-options</td>\r\n            <td>object</td>\r\n            <td>variable</td>\r\n            <td>Defines the text, tooltip and visibility of a button.\r\n                <ul>\r\n                    <li><code>nextText</code> - (default:"Next") - defines the text for the \'Next\' button.</li>\r\n                    <li><code>previousText</code> - (default:"Previous") - defines the text for the \'Previous\' button.</li>\r\n                    <li><code>cancelText</code> - (default:"Cancel") - defines the text for the \'Cancel\' button.</li>\r\n                    <li><code>finishText</code> - (default:"Finish") - defines the text for the \'Finish\' button.</li>\r\n                    <li><code>showNext</code> - (default: true) - defines whether or not to show the \'Next\' button.</li>\r\n                    <li><code>showPrevious</code> - (default: true) - defines whether or not to show the \'Previous\' button.</li>\r\n                    <li><code>showCancel</code> - (default: true) - defines whether or not to show the \'Cancel\' button.</li>\r\n                    <li><code>showFinish</code> - (default: true) - defines whether or not to show the \'Finish\' button.</li>\r\n                    <li><code>nextTooltip</code> - optional attribute that allows you to set the tooltip for the \'Next\' button.</li>\r\n                    <li><code>previousTooltip</code> - optional attribute that allows you to set the tooltip for the \'Previous\'\r\n                        button.</li>\r\n                    <li><code>cancelTooltip</code> - optional attribute that allows you to set the tooltip for the \'Cancel\' button.</li>\r\n                    <li><code>finishTooltip</code> - optional attribute that allows you to set the tooltip for the \'Finish\' button.</li>\r\n                    <li><code>hideCancelOnFinish</code> - (default: true) - defines whether or not the show the \'Cancel\' button\r\n                        when on the final (finish) step.</li>\r\n                    <li><code>previousEnabled</code> - (default: true) - defines whether or not the \'Previous\' button is enabled.</li>\r\n                    <li><code>nextEnabled</code> - (default: true) - defines whether or not the \'Next\' button is enabled.</li>\r\n                    <li><code>cancelEnabled</code> - (default: true) - defines whether or not the \'Cancel\' button is enabled.</li>\r\n                    <li><code>finishEnabled</code> - (default: true) - defines whether or not the \'Finish\' button is enabled.</li>\r\n                    <li><code>alwaysShowFinish</code> - (default: false) - defines whether or not the \'Finish\' button is shown\r\n                        in all the steps.</li>\r\n                </ul>\r\n            </td>\r\n            <td>false</td>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">on-changing</td>\r\n            <td>function</td>\r\n            <td>variable</td>\r\n            <td>Expression that is called when changing steps. The expression should take in two parameters, from and to, which\r\n                are the indexes of the steps involved in the change. If it returns false then the current step goes into\r\n                error state and the step change is stopped. e.g. <code>on-changing="canChange(from,to)"</code>. The expression\r\n                can also return a number representing a step index to move to, overriding the <code>to</code> parameter.</td>\r\n            <td>true</td>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">on-finishing</td>\r\n            <td>function</td>\r\n            <td>variable</td>\r\n            <td>Expression that is called when Finish is clicked but before <code>on-finished</code> expression is evaluated.\r\n                The expression should return a boolean result. If false current step goes into error state and the step change\r\n                is stopped. e.g. <code>on-finishing="canChange()"</code>.</td>\r\n            <td>true</td>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">on-finished</td>\r\n            <td>function</td>\r\n            <td>variable</td>\r\n            <td>Expression that is called when Finish is clicked, after <code>on-finishing</code> expression is evaluated. e.g.\r\n                <code>on-finished="wizardComplete()"</code>.</td>\r\n            <td>true</td>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">on-canceled</td>\r\n            <td>function</td>\r\n            <td>variable</td>\r\n            <td>Expression that is called when Cancel is clicked. e.g. <code>on-canceled="wizardCanceled()"</code>.</td>\r\n            <td>true</td>\r\n        </tr>\r\n        <tr>\r\n            <td class="attribute">is-visited</td>\r\n            <td>boolean</td>\r\n            <td>variable</td>\r\n            <td>Set to indicate if a wizard is already visited(edited) and to enable all the steps (default: false).</td>\r\n            <td>false</td>\r\n        </tr>\r\n    </table>\r\n</div>\r\n\r\n<tabset>\r\n    <tab heading="HTML">\r\n        <uxd-snippet [content]="snippets.compiled.sampleHtml"></uxd-snippet>\r\n    </tab>\r\n    <tab heading="JavaScript">\r\n        <uxd-snippet language="javascript" [content]="snippets.compiled.sampleJs"></uxd-snippet>\r\n    </tab>\r\n</tabset>'},2868:function(n,s,a){"use strict";var t=this&&this.__extends||function(){var n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,s){n.__proto__=s}||function(n,s){for(var a in s)s.hasOwnProperty(a)&&(n[a]=s[a])};return function(s,a){function t(){this.constructor=s}n(s,a),s.prototype=null===a?Object.create(a):(t.prototype=a.prototype,new t)}}(),p=this&&this.__decorate||function(n,s,a,t){var p,e=arguments.length,o=e<3?s:null===t?t=Object.getOwnPropertyDescriptor(s,a):t;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(n,s,a,t);else for(var c=n.length-1;c>=0;c--)(p=n[c])&&(o=(e<3?p(o):e>3?p(s,a,o):p(s,a))||o);return e>3&&o&&Object.defineProperty(s,a,o),o},e=this&&this.__metadata||function(n,s){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(n,s)};Object.defineProperty(s,"__esModule",{value:!0});var o=a(0),c=a(319),l=a(1617),i=function(n){function s(){var s=n.call(this,a(2869))||this;return s.codepen={html:s.snippets.raw.sampleHtml,htmlAttributes:{"ng-controller":"WizardValidationCtrl as vm"},js:[s.snippets.raw.sampleJs]},s}return t(s,n),s}(l.BaseDocumentationSection);i=p([o.Component({selector:"uxd-components-wizard-validation-ng1",template:a(2872),changeDetection:o.ChangeDetectionStrategy.OnPush}),c.DocumentationSectionComponent("ComponentsWizardValidationNg1Component"),e("design:paramtypes",[])],i),s.ComponentsWizardValidationNg1Component=i},2869:function(n,s,a){function t(n){return a(p(n))}function p(n){var s=e[n];if(!(s+1))throw new Error("Cannot find module '"+n+"'.");return s}var e={"./sample.html":2870,"./sample.js":2871};t.keys=function(){return Object.keys(e)},t.resolve=p,n.exports=t,t.id=2869},2870:function(n,s){n.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vm.requiredInput<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\r\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>wizard</span> <span class="token attr-name">button-options</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vm.buttonOptions<span class="token punctuation">"</span></span> <span class="token attr-name">on-finishing</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vm.validate()<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\r\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>step</span><span class="token punctuation">></span></span>\r\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>step-heading</span><span class="token punctuation">></span></span>\r\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span> First Step<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\r\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>step-heading</span><span class="token punctuation">></span></span>\r\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>Nothing to validate in here.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\r\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>step</span><span class="token punctuation">></span></span>\r\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>step</span><span class="token punctuation">></span></span>\r\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>step-heading</span><span class="token punctuation">></span></span>\r\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span> Second Step<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\r\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>step-heading</span><span class="token punctuation">></span></span>\r\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form-group<span class="token punctuation">"</span></span> <span class="token attr-name">ng-class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>{<span class="token punctuation">\'</span>has-error<span class="token punctuation">\'</span>:vm.requiredInput.requiredText.$valid<span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span>false}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\r\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>requiredText<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>control-label<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Required Text <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span>\r\n                    <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form-control-validation<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>*<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\r\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>\r\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>requiredText<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Text<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form-control<span class="token punctuation">"</span></span> <span class="token attr-name">required</span>\r\n                       <span class="token attr-name">ng-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vm.text<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\r\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>hpe-icon hpe-alert form-control-feedback<span class="token punctuation">"</span></span> <span class="token attr-name">aria-hidden</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\r\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\r\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form-group form-group-validation<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\r\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>control-label<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span>\r\n                    <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form-control-validation<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>*<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token entity" title="&nbsp;">&amp;nbsp;</span>required<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>\r\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\r\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>step</span><span class="token punctuation">></span></span>\r\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>wizard</span><span class="token punctuation">></span></span>\r\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span>',example:'<form name="vm.requiredInput">\r\n    <wizard button-options="vm.buttonOptions" on-finishing="vm.validate()">\r\n        <step>\r\n            <step-heading>\r\n                <span> First Step</span>\r\n            </step-heading>\r\n            <p>Nothing to validate in here.</p>\r\n        </step>\r\n        <step>\r\n            <step-heading>\r\n                <span> Second Step</span>\r\n            </step-heading>\r\n            <div class="form-group" ng-class="{\'has-error\':vm.requiredInput.requiredText.$valid===false}">\r\n                <label for="requiredText" class="control-label">Required Text <span\r\n                    class="form-control-validation">*</span>\r\n                </label>\r\n                <input type="text" name="requiredText" placeholder="Text" class="form-control" required\r\n                       ng-model="vm.text">\r\n                <span class="hpe-icon hpe-alert form-control-feedback" aria-hidden="true"></span>\r\n            </div>\r\n            <div class="form-group form-group-validation">\r\n                <label class="control-label"><span\r\n                    class="form-control-validation">*</span>&nbsp;required</label>\r\n            </div>\r\n        </step>\r\n    </wizard>\r\n</form>'}},2871:function(n,s){n.exports={snippet:'angular<span class="token punctuation">.</span><span class="token function">module</span><span class="token punctuation">(</span><span class="token string">"app"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">controller</span><span class="token punctuation">(</span><span class="token string">"WizardValidationCtrl"</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">"$scope"</span><span class="token punctuation">,</span> WizardCtrl<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n\r\n<span class="token keyword">function</span> <span class="token function">WizardCtrl</span><span class="token punctuation">(</span>$scope<span class="token punctuation">)</span> <span class="token punctuation">{</span>\r\n    <span class="token keyword">var</span> vm <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>\r\n\r\n    vm<span class="token punctuation">.</span>text <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>\r\n    vm<span class="token punctuation">.</span>validate <span class="token operator">=</span> validate<span class="token punctuation">;</span>\r\n\r\n    vm<span class="token punctuation">.</span>buttonOptions <span class="token operator">=</span> <span class="token punctuation">{</span>\r\n        previousTooltip<span class="token punctuation">:</span> <span class="token string">"Go to the previous step"</span><span class="token punctuation">,</span>\r\n        nextTooltip<span class="token punctuation">:</span> <span class="token string">"Go to the next step"</span><span class="token punctuation">,</span>\r\n        cancelTooltip<span class="token punctuation">:</span> <span class="token string">"Cancel the wizard"</span><span class="token punctuation">,</span>\r\n        finishTooltip<span class="token punctuation">:</span> <span class="token string">"Finish the wizard"</span>\r\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\r\n\r\n    <span class="token keyword">function</span> <span class="token function">validate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\r\n        <span class="token keyword">return</span> $scope<span class="token punctuation">.</span>vm<span class="token punctuation">.</span>requiredInput<span class="token punctuation">.</span>requiredText<span class="token punctuation">.</span>$valid<span class="token punctuation">;</span>\r\n    <span class="token punctuation">}</span>\r\n<span class="token punctuation">}</span>',example:'angular.module("app").controller("WizardValidationCtrl", ["$scope", WizardCtrl]);\r\n\r\nfunction WizardCtrl($scope) {\r\n    var vm = this;\r\n\r\n    vm.text = "";\r\n    vm.validate = validate;\r\n\r\n    vm.buttonOptions = {\r\n        previousTooltip: "Go to the previous step",\r\n        nextTooltip: "Go to the next step",\r\n        cancelTooltip: "Cancel the wizard",\r\n        finishTooltip: "Finish the wizard"\r\n    };\r\n\r\n    function validate() {\r\n        return $scope.vm.requiredInput.requiredText.$valid;\r\n    }\r\n}'}},2872:function(n,s){n.exports='<uxd-wizard-validation-wrapper></uxd-wizard-validation-wrapper>\r\n\r\n<hr>\r\n\r\n<p>To validate a wizard use the <code>on-changing</code> and <code>on-finishing</code> attributes to execute validation on the current form to see if its valid or not. Return <code>false</code> to prevent wizard from continuing.</p>\r\n\r\n<p>Add attribute <code>is-visited</code> (default: false) to indicate that a wizard is visited and all steps are enabled.</p>\r\n\r\n<tabset>\r\n    <tab heading="HTML">\r\n        <uxd-snippet [content]="snippets.compiled.sampleHtml"></uxd-snippet>\r\n    </tab>\r\n    <tab heading="JavaScript">\r\n        <uxd-snippet language="javascript" [content]="snippets.compiled.sampleJs"></uxd-snippet>\r\n    </tab>\r\n</tabset>'},2873:function(n,s,a){"use strict";var t=this&&this.__extends||function(){var n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,s){n.__proto__=s}||function(n,s){for(var a in s)s.hasOwnProperty(a)&&(n[a]=s[a])};return function(s,a){function t(){this.constructor=s}n(s,a),s.prototype=null===a?Object.create(a):(t.prototype=a.prototype,new t)}}(),p=this&&this.__decorate||function(n,s,a,t){var p,e=arguments.length,o=e<3?s:null===t?t=Object.getOwnPropertyDescriptor(s,a):t;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(n,s,a,t);else for(var c=n.length-1;c>=0;c--)(p=n[c])&&(o=(e<3?p(o):e>3?p(s,a,o):p(s,a))||o);return e>3&&o&&Object.defineProperty(s,a,o),o},e=this&&this.__metadata||function(n,s){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(n,s)};Object.defineProperty(s,"__esModule",{value:!0});var o=a(0),c=a(319),l=a(1617),i=function(n){function s(){var s=n.call(this,a(2874))||this;return s.codepen={html:s.snippets.raw.sampleHtml,htmlAttributes:{"ng-controller":"VerticalWizardCtrl as vm"},js:[s.snippets.raw.sampleJs]},s}return t(s,n),s}(l.BaseDocumentationSection);i=p([o.Component({selector:"uxd-components-vertical-wizard-ng1",template:a(2877),changeDetection:o.ChangeDetectionStrategy.OnPush}),c.DocumentationSectionComponent("ComponentsVerticalWizardNg1Component"),e("design:paramtypes",[])],i),s.ComponentsVerticalWizardNg1Component=i},2874:function(n,s,a){function t(n){return a(p(n))}function p(n){var s=e[n];if(!(s+1))throw new Error("Cannot find module '"+n+"'.");return s}var e={"./sample.html":2875,"./sample.js":2876};t.keys=function(){return Object.keys(e)},t.resolve=p,n.exports=t,t.id=2874},2875:function(n,s){n.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>wizard</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vertical<span class="token punctuation">"</span></span> <span class="token attr-name">button-options</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vm.buttonOptions<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\r\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>step</span> <span class="token attr-name">ng-repeat</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>item in vm.steps<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\r\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>step-heading</span><span class="token punctuation">></span></span>\r\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">ng-bind</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>item.title<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\r\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>step-heading</span><span class="token punctuation">></span></span>\r\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">ng-bind</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>item.content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\r\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>step</span><span class="token punctuation">></span></span>\r\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>wizard</span><span class="token punctuation">></span></span>',example:'<wizard class="vertical" button-options="vm.buttonOptions">\r\n    <step ng-repeat="item in vm.steps">\r\n        <step-heading>\r\n            <span ng-bind="item.title"></span>\r\n        </step-heading>\r\n        <p ng-bind="item.content"></p>\r\n    </step>\r\n</wizard>'}},2876:function(n,s){n.exports={snippet:'angular<span class="token punctuation">.</span><span class="token function">module</span><span class="token punctuation">(</span><span class="token string">"app"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">controller</span><span class="token punctuation">(</span><span class="token string">"VerticalWizardCtrl"</span><span class="token punctuation">,</span> VerticalWizardCtrl<span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n\r\n<span class="token keyword">function</span> <span class="token function">VerticalWizardCtrl</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\r\n    <span class="token keyword">var</span> vm <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>\r\n\r\n    vm<span class="token punctuation">.</span>steps <span class="token operator">=</span> <span class="token punctuation">[</span>\r\n        <span class="token punctuation">{</span> title<span class="token punctuation">:</span><span class="token string">"First Step"</span><span class="token punctuation">,</span>content<span class="token punctuation">:</span><span class="token string">"Content of step 1."</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\r\n        <span class="token punctuation">{</span> title<span class="token punctuation">:</span><span class="token string">"Second Step"</span><span class="token punctuation">,</span>content<span class="token punctuation">:</span><span class="token string">"Content of step 2."</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\r\n        <span class="token punctuation">{</span> title<span class="token punctuation">:</span><span class="token string">"Third Step"</span><span class="token punctuation">,</span>content<span class="token punctuation">:</span><span class="token string">"Content of step 3."</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\r\n        <span class="token punctuation">{</span> title<span class="token punctuation">:</span><span class="token string">"Fourth Step"</span><span class="token punctuation">,</span>content<span class="token punctuation">:</span><span class="token string">"Content of step 4."</span> <span class="token punctuation">}</span>\r\n    <span class="token punctuation">]</span><span class="token punctuation">;</span>\r\n\r\n    vm<span class="token punctuation">.</span>buttonOptions <span class="token operator">=</span> <span class="token punctuation">{</span>\r\n        previousTooltip<span class="token punctuation">:</span> <span class="token string">"Go to the previous step"</span><span class="token punctuation">,</span>\r\n        nextTooltip<span class="token punctuation">:</span> <span class="token string">"Go to the next step"</span><span class="token punctuation">,</span>\r\n        cancelTooltip<span class="token punctuation">:</span> <span class="token string">"Cancel the wizard"</span><span class="token punctuation">,</span>\r\n        finishTooltip<span class="token punctuation">:</span> <span class="token string">"Finish the wizard"</span>\r\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\r\n<span class="token punctuation">}</span>',example:'angular.module("app").controller("VerticalWizardCtrl", VerticalWizardCtrl);\r\n\r\nfunction VerticalWizardCtrl() {\r\n    var vm = this;\r\n\r\n    vm.steps = [\r\n        { title:"First Step",content:"Content of step 1." },\r\n        { title:"Second Step",content:"Content of step 2." },\r\n        { title:"Third Step",content:"Content of step 3." },\r\n        { title:"Fourth Step",content:"Content of step 4." }\r\n    ];\r\n\r\n    vm.buttonOptions = {\r\n        previousTooltip: "Go to the previous step",\r\n        nextTooltip: "Go to the next step",\r\n        cancelTooltip: "Cancel the wizard",\r\n        finishTooltip: "Finish the wizard"\r\n    };\r\n}'}},2877:function(n,s){n.exports='<uxd-vertical-wizard-wrapper></uxd-vertical-wizard-wrapper>\r\n\r\n<hr>\r\n\r\n<p>The Vertical Wizard can be implemented with the use of the <code>vertical</code> class being included within the <code>wizard</code> element.</p>\r\n\r\n<p>Attributes that can be defined on the <code>wizard</code> element, as well as controller logic, can be seen in the above Wizard example.</p>\r\n\r\n<uxd-snippet [content]="snippets.compiled.sampleHtml"></uxd-snippet>'},2878:function(n,s,a){"use strict";var t=this&&this.__extends||function(){var n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,s){n.__proto__=s}||function(n,s){for(var a in s)s.hasOwnProperty(a)&&(n[a]=s[a])};return function(s,a){function t(){this.constructor=s}n(s,a),s.prototype=null===a?Object.create(a):(t.prototype=a.prototype,new t)}}(),p=this&&this.__decorate||function(n,s,a,t){var p,e=arguments.length,o=e<3?s:null===t?t=Object.getOwnPropertyDescriptor(s,a):t;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(n,s,a,t);else for(var c=n.length-1;c>=0;c--)(p=n[c])&&(o=(e<3?p(o):e>3?p(s,a,o):p(s,a))||o);return e>3&&o&&Object.defineProperty(s,a,o),o},e=this&&this.__metadata||function(n,s){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(n,s)};Object.defineProperty(s,"__esModule",{value:!0});var o=a(0),c=a(319),l=a(1617),i=function(n){function s(){var s=n.call(this,a(2879))||this;return s.codepen={html:s.snippets.raw.modalHtml,htmlAttributes:{"ng-controller":"MarqueeModalCtrl as vm"},htmlTemplates:[{id:"sample.html",content:s.snippets.raw.sampleHtml},{id:"first.html",content:s.snippets.raw.firstHtml},{id:"second.html",content:s.snippets.raw.secondHtml},{id:"third.html",content:s.snippets.raw.thirdHtml},{id:"fourth.html",content:s.snippets.raw.fourthHtml},{id:"fifth.html",content:s.snippets.raw.fifthHtml},{id:"sixth.html",content:s.snippets.raw.sixthHtml}],css:[s.snippets.raw.sampleCss],js:[s.snippets.raw.modalJs,s.snippets.raw.sampleJs]},s}return t(s,n),s}(l.BaseDocumentationSection);i=p([o.Component({selector:"uxd-components-marquee-wizard-ng1",template:a(2891),changeDetection:o.ChangeDetectionStrategy.OnPush}),c.DocumentationSectionComponent("ComponentsMarqueeWizardNg1Component"),e("design:paramtypes",[])],i),s.ComponentsMarqueeWizardNg1Component=i},2879:function(n,s,a){function t(n){return a(p(n))}function p(n){var s=e[n];if(!(s+1))throw new Error("Cannot find module '"+n+"'.");return s}var e={"./fifth.html":2880,"./first.html":2881,"./fourth.html":2882,"./modal.html":2883,"./modal.js":2884,"./sample.css":2885,"./sample.html":2886,"./sample.js":2887,"./second.html":2888,"./sixth.html":2889,"./third.html":2890};t.keys=function(){return Object.keys(e)},t.resolve=p,n.exports=t,t.id=2879},2880:function(n,s){n.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>row<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\r\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>col-xs-7<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\r\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>marquee-wizard-text<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Content of fifth step<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\r\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\r\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>',example:'<div class="row">\r\n    <div class="col-xs-7">\r\n        <p class="marquee-wizard-text">Content of fifth step</p>\r\n    </div>\r\n</div>'}},2881:function(n,s){n.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>row<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\r\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>col-xs-7<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\r\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form-group<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\r\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form-label<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Name<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>\r\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Enter name<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form-control<span class="token punctuation">"</span></span> <span class="token attr-name">force-focus</span><span class="token punctuation">></span></span>\r\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\r\n\r\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form-group<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\r\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form-label<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Description<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>\r\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>textarea</span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Enter Description<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form-control<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>textarea</span><span class="token punctuation">></span></span>\r\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\r\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\r\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>',example:'<div class="row">\r\n    <div class="col-xs-7">\r\n        <div class="form-group">\r\n            <label class="form-label">Name</label>\r\n            <input type="text" placeholder="Enter name" class="form-control" force-focus>\r\n        </div>\r\n\r\n        <div class="form-group">\r\n            <label class="form-label">Description</label>\r\n            <textarea placeholder="Enter Description" class="form-control"></textarea>\r\n        </div>\r\n    </div>\r\n</div>'}},2882:function(n,s){n.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>row<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\r\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>col-xs-7<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\r\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>marquee-wizard-text<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Content of fourth step<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\r\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\r\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>',example:'<div class="row">\r\n    <div class="col-xs-7">\r\n        <p class="marquee-wizard-text">Content of fourth step</p>\r\n    </div>\r\n</div>'}},2883:function(n,s){n.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn button-primary<span class="token punctuation">"</span></span> <span class="token attr-name">ng-click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vm.openModal()<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\r\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>hpe-icon hpe-deployment<span class="token punctuation">"</span></span> <span class="token attr-name">aria-hidden</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span> Launch Marquee Wizard\r\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>',example:'<button type="button" class="btn button-primary" ng-click="vm.openModal()">\r\n  <span class="hpe-icon hpe-deployment" aria-hidden="true"></span> Launch Marquee Wizard\r\n</button>'}},2884:function(n,s){n.exports={snippet:'angular<span class="token punctuation">.</span><span class="token function">module</span><span class="token punctuation">(</span><span class="token string">"app"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">controller</span><span class="token punctuation">(</span><span class="token string">"MarqueeModalCtrl"</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">"$modal"</span><span class="token punctuation">,</span> MarqueeModalCtrl<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n\r\n<span class="token keyword">function</span> <span class="token function">MarqueeModalCtrl</span><span class="token punctuation">(</span>$modal<span class="token punctuation">)</span> <span class="token punctuation">{</span>\r\n    <span class="token keyword">var</span> mc <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>\r\n\r\n    mc<span class="token punctuation">.</span>openModal <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\r\n\r\n        <span class="token keyword">var</span> modalInstance <span class="token operator">=</span> $modal<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\r\n            animation<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\r\n            templateUrl<span class="token punctuation">:</span> <span class="token string">\'sample.html\'</span><span class="token punctuation">,</span>\r\n            controller<span class="token punctuation">:</span> <span class="token string">\'MarqueeWizardModalCtrl\'</span><span class="token punctuation">,</span>\r\n            controllerAs<span class="token punctuation">:</span> <span class="token string">\'vm\'</span><span class="token punctuation">,</span>\r\n            keyboard<span class="token punctuation">:</span> <span class="token string">\'true\'</span><span class="token punctuation">,</span>\r\n            size<span class="token punctuation">:</span> <span class="token string">\'lg\'</span><span class="token punctuation">,</span>\r\n            windowClass<span class="token punctuation">:</span> <span class="token string">\'marquee-modal-window\'</span>\r\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n\r\n        modalInstance<span class="token punctuation">.</span>result<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\r\n            <span class="token comment" spellcheck="true">//result passed into closed function;</span>\r\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\r\n<span class="token punctuation">}</span>',example:"angular.module(\"app\").controller(\"MarqueeModalCtrl\", [\"$modal\", MarqueeModalCtrl]);\r\n\r\nfunction MarqueeModalCtrl($modal) {\r\n    var mc = this;\r\n\r\n    mc.openModal = function () {\r\n\r\n        var modalInstance = $modal.open({\r\n            animation: false,\r\n            templateUrl: 'sample.html',\r\n            controller: 'MarqueeWizardModalCtrl',\r\n            controllerAs: 'vm',\r\n            keyboard: 'true',\r\n            size: 'lg',\r\n            windowClass: 'marquee-modal-window'\r\n        });\r\n\r\n        modalInstance.result.then(function () {\r\n            //result passed into closed function;\r\n        });\r\n    };\r\n}"}},2885:function(n,s){n.exports={snippet:'<span class="token selector">.inline-title</span> <span class="token punctuation">{</span>\r\n    <span class="token property">font-family</span><span class="token punctuation">:</span> <span class="token string">\'Source Sans Pro\'</span><span class="token punctuation">;</span>\r\n    <span class="token property">font-weight</span><span class="token punctuation">:</span> 200<span class="token punctuation">;</span>\r\n    <span class="token property">font-size</span><span class="token punctuation">:</span> 1.125rem<span class="token punctuation">;</span>\r\n    <span class="token property">display</span><span class="token punctuation">:</span> inline<span class="token punctuation">;</span>\r\n    <span class="token property">padding-left</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>\r\n<span class="token punctuation">}</span>',example:".inline-title {\r\n    font-family: 'Source Sans Pro';\r\n    font-weight: 200;\r\n    font-size: 1.125rem;\r\n    display: inline;\r\n    padding-left: 10px;\r\n}"}},2886:function(n,s){n.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>requiredInput<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\r\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>marquee-wizard</span>   <span class="token attr-name">wizard-icon</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vm.icon<span class="token punctuation">"</span></span>\r\n                    <span class="token attr-name">wizard-steps</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vm.steps<span class="token punctuation">"</span></span>\r\n                    <span class="token attr-name">button-options</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vm.buttonOptions<span class="token punctuation">"</span></span>\r\n                    <span class="token attr-name">on-changing</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vm.onChanging<span class="token punctuation">"</span></span>\r\n                    <span class="token attr-name">on-finishing</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vm.onFinishing<span class="token punctuation">"</span></span>\r\n                    <span class="token attr-name">on-finished</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vm.onFinished<span class="token punctuation">"</span></span>\r\n                    <span class="token attr-name">on-canceled</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vm.onCanceled<span class="token punctuation">"</span></span>\r\n                    <span class="token attr-name">is-visited</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vm.isVisited<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\r\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>marquee-wizard</span><span class="token punctuation">></span></span>\r\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span>',example:'<form name="requiredInput">\r\n  <marquee-wizard   wizard-icon="vm.icon"\r\n                    wizard-steps="vm.steps"\r\n                    button-options="vm.buttonOptions"\r\n                    on-changing="vm.onChanging"\r\n                    on-finishing="vm.onFinishing"\r\n                    on-finished="vm.onFinished"\r\n                    on-canceled="vm.onCanceled"\r\n                    is-visited="vm.isVisited">\r\n  </marquee-wizard>\r\n</form>'}},2887:function(n,s){n.exports={snippet:'angular<span class="token punctuation">.</span><span class="token function">module</span><span class="token punctuation">(</span><span class="token string">"app"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">controller</span><span class="token punctuation">(</span><span class="token string">"MarqueeWizardModalCtrl"</span><span class="token punctuation">,</span> MarqueeWizardModalCtrl<span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n\r\nMarqueeWizardModalCtrl<span class="token punctuation">.</span>$inject <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">\'$scope\'</span><span class="token punctuation">,</span> <span class="token string">\'$modalInstance\'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\r\n\r\n<span class="token keyword">function</span> <span class="token function">MarqueeWizardModalCtrl</span><span class="token punctuation">(</span>$scope<span class="token punctuation">,</span> $modalInstance<span class="token punctuation">)</span> <span class="token punctuation">{</span>\r\n    <span class="token keyword">var</span> vm <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>\r\n\r\n    vm<span class="token punctuation">.</span>steps <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>\r\n        title<span class="token punctuation">:</span> <span class="token string">\'First step\'</span><span class="token punctuation">,</span>\r\n        html<span class="token punctuation">:</span> <span class="token string">\'&lt;div>&lt;i class="hpe-icon hpe-soa">&lt;/i>&lt;p class="inline-title">First step&lt;/p>&lt;/div>\'</span><span class="token punctuation">,</span>\r\n        header<span class="token punctuation">:</span> <span class="token string">\'Marquee wizard\'</span><span class="token punctuation">,</span>\r\n        templateUrl<span class="token punctuation">:</span> <span class="token string">\'first.html\'</span>\r\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\r\n        title<span class="token punctuation">:</span> <span class="token string">\'Second step\'</span><span class="token punctuation">,</span>\r\n        html<span class="token punctuation">:</span> <span class="token string">\'&lt;div>&lt;i class="hpe-icon hpe-schedule-clone">&lt;/i>&lt;p class="inline-title">Second step&lt;/p>&lt;/div>\'</span><span class="token punctuation">,</span>\r\n        header<span class="token punctuation">:</span> <span class="token string">\'Second step title\'</span><span class="token punctuation">,</span>\r\n        templateUrl<span class="token punctuation">:</span> <span class="token string">\'second.html\'</span>\r\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\r\n        title<span class="token punctuation">:</span> <span class="token string">\'Third step\'</span><span class="token punctuation">,</span>\r\n        html<span class="token punctuation">:</span> <span class="token string">\'&lt;div>&lt;i class="hpe-icon hpe-sync">&lt;/i>&lt;p class="inline-title">Third step&lt;/p>&lt;/div>\'</span><span class="token punctuation">,</span>\r\n        header<span class="token punctuation">:</span> <span class="token string">\'Third step title\'</span><span class="token punctuation">,</span>\r\n        templateUrl<span class="token punctuation">:</span> <span class="token string">\'third.html\'</span>\r\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\r\n        title<span class="token punctuation">:</span> <span class="token string">\'Fourth step\'</span><span class="token punctuation">,</span>\r\n        html<span class="token punctuation">:</span> <span class="token string">\'&lt;div>&lt;i class="hpe-icon hpe-scorecard">&lt;/i>&lt;p class="inline-title">Fourth step&lt;/p>&lt;/div>\'</span><span class="token punctuation">,</span>\r\n        header<span class="token punctuation">:</span> <span class="token string">\'Fourth step title\'</span><span class="token punctuation">,</span>\r\n        templateUrl<span class="token punctuation">:</span> <span class="token string">\'fourth.html\'</span>\r\n    <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span>\r\n        title<span class="token punctuation">:</span> <span class="token string">\'Fifth step\'</span><span class="token punctuation">,</span>\r\n        html<span class="token punctuation">:</span> <span class="token string">\'&lt;div>&lt;i class="hpe-icon hpe-storage">&lt;/i>&lt;p class="inline-title">Fifth step&lt;/p>&lt;/div>\'</span><span class="token punctuation">,</span>\r\n        header<span class="token punctuation">:</span> <span class="token string">\'Fifth step title\'</span><span class="token punctuation">,</span>\r\n        templateUrl<span class="token punctuation">:</span> <span class="token string">\'fifth.html\'</span>\r\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\r\n        title<span class="token punctuation">:</span> <span class="token string">\'Sixth step\'</span><span class="token punctuation">,</span>\r\n        html<span class="token punctuation">:</span> <span class="token string">\'&lt;div>&lt;i class="hpe-icon hpe-scorecard">&lt;/i>&lt;p class="inline-title">Sixth step&lt;/p>&lt;/div>\'</span><span class="token punctuation">,</span>\r\n        header<span class="token punctuation">:</span> <span class="token string">\'Sixth step title\'</span><span class="token punctuation">,</span>\r\n        templateUrl<span class="token punctuation">:</span> <span class="token string">\'sixth.html\'</span>\r\n    <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\r\n\r\n    vm<span class="token punctuation">.</span>buttonOptions <span class="token operator">=</span> <span class="token punctuation">{</span>\r\n      previousTooltip<span class="token punctuation">:</span> <span class="token string">\'Previous Step\'</span><span class="token punctuation">,</span>\r\n      nextTooltip<span class="token punctuation">:</span> <span class="token string">\'Next Step\'</span><span class="token punctuation">,</span>\r\n      finishTooltip<span class="token punctuation">:</span> <span class="token string">\'Finish\'</span>\r\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\r\n\r\n    vm<span class="token punctuation">.</span>isVisited <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\r\n\r\n    vm<span class="token punctuation">.</span>onChanging <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token keyword">from</span><span class="token punctuation">,</span> to<span class="token punctuation">)</span> <span class="token punctuation">{</span>\r\n        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">from</span> <span class="token operator">===</span> <span class="token number">1</span> <span class="token operator">&amp;&amp;</span> $scope<span class="token punctuation">.</span>requiredInput<span class="token punctuation">.</span>errorDemo<span class="token punctuation">)</span> <span class="token punctuation">{</span>\r\n            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\r\n        <span class="token punctuation">}</span>\r\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\r\n\r\n    $scope<span class="token punctuation">.</span><span class="token function">$watch</span><span class="token punctuation">(</span><span class="token string">\'requiredInput.errorDemo\'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span>nv<span class="token punctuation">,</span> ov<span class="token punctuation">)</span> <span class="token punctuation">{</span>\r\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>nv <span class="token operator">!==</span> ov<span class="token punctuation">)</span> <span class="token punctuation">{</span>\r\n            <span class="token keyword">if</span> <span class="token punctuation">(</span>nv <span class="token operator">===</span> <span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\r\n                vm<span class="token punctuation">.</span>steps<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>error <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\r\n                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> vm<span class="token punctuation">.</span>steps<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\r\n                    vm<span class="token punctuation">.</span>steps<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>completed <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\r\n                    vm<span class="token punctuation">.</span>steps<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>visited <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\r\n                <span class="token punctuation">}</span>\r\n            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\r\n                vm<span class="token punctuation">.</span>steps<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>error <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\r\n            <span class="token punctuation">}</span>\r\n        <span class="token punctuation">}</span>\r\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n\r\n    $scope<span class="token punctuation">.</span><span class="token function">$watch</span><span class="token punctuation">(</span><span class="token string">\'requiredInput.skipSteps\'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span>nv<span class="token punctuation">,</span> ov<span class="token punctuation">)</span> <span class="token punctuation">{</span>\r\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>nv <span class="token operator">!==</span> ov<span class="token punctuation">)</span> <span class="token punctuation">{</span>\r\n            <span class="token keyword">if</span> <span class="token punctuation">(</span>nv <span class="token operator">===</span> <span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\r\n                vm<span class="token punctuation">.</span>steps<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">.</span>hidden <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\r\n                vm<span class="token punctuation">.</span>steps<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">.</span>hidden <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\r\n            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\r\n                vm<span class="token punctuation">.</span>steps<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">.</span>hidden <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\r\n                vm<span class="token punctuation">.</span>steps<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">.</span>hidden <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\r\n            <span class="token punctuation">}</span>\r\n        <span class="token punctuation">}</span>\r\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n\r\n    <span class="token comment" spellcheck="true">// for performing validation when the finish button is pressed</span>\r\n    vm<span class="token punctuation">.</span>onFinishing <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\r\n        <span class="token comment" spellcheck="true">// sets the submitted value on the form to true</span>\r\n        $scope<span class="token punctuation">.</span>requiredInput<span class="token punctuation">.</span><span class="token function">$setSubmitted</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n\r\n        <span class="token comment" spellcheck="true">// returns boolean value for validation check</span>\r\n        <span class="token keyword">return</span> $scope<span class="token punctuation">.</span>requiredInput<span class="token punctuation">.</span>requiredText<span class="token punctuation">.</span>$valid<span class="token punctuation">;</span>\r\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\r\n\r\n    vm<span class="token punctuation">.</span>onFinished <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\r\n        <span class="token comment" spellcheck="true">// do stuff here when finished</span>\r\n\r\n        <span class="token comment" spellcheck="true">// including dismissing the modal</span>\r\n        $modalInstance<span class="token punctuation">.</span><span class="token function">dismiss</span><span class="token punctuation">(</span><span class="token string">\'ok\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\r\n\r\n    vm<span class="token punctuation">.</span>onCanceled <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\r\n        <span class="token comment" spellcheck="true">// do stuff here if user attempts to close modal</span>\r\n\r\n        <span class="token comment" spellcheck="true">// including dismissing the modal</span>\r\n        $modalInstance<span class="token punctuation">.</span><span class="token function">dismiss</span><span class="token punctuation">(</span><span class="token string">\'ok\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\r\n\r\n<span class="token punctuation">}</span>',example:"angular.module(\"app\").controller(\"MarqueeWizardModalCtrl\", MarqueeWizardModalCtrl);\r\n\r\nMarqueeWizardModalCtrl.$inject = ['$scope', '$modalInstance'];\r\n\r\nfunction MarqueeWizardModalCtrl($scope, $modalInstance) {\r\n    var vm = this;\r\n\r\n    vm.steps = [{\r\n        title: 'First step',\r\n        html: '<div><i class=\"hpe-icon hpe-soa\"></i><p class=\"inline-title\">First step</p></div>',\r\n        header: 'Marquee wizard',\r\n        templateUrl: 'first.html'\r\n    }, {\r\n        title: 'Second step',\r\n        html: '<div><i class=\"hpe-icon hpe-schedule-clone\"></i><p class=\"inline-title\">Second step</p></div>',\r\n        header: 'Second step title',\r\n        templateUrl: 'second.html'\r\n    }, {\r\n        title: 'Third step',\r\n        html: '<div><i class=\"hpe-icon hpe-sync\"></i><p class=\"inline-title\">Third step</p></div>',\r\n        header: 'Third step title',\r\n        templateUrl: 'third.html'\r\n    }, {\r\n        title: 'Fourth step',\r\n        html: '<div><i class=\"hpe-icon hpe-scorecard\"></i><p class=\"inline-title\">Fourth step</p></div>',\r\n        header: 'Fourth step title',\r\n        templateUrl: 'fourth.html'\r\n    },{\r\n        title: 'Fifth step',\r\n        html: '<div><i class=\"hpe-icon hpe-storage\"></i><p class=\"inline-title\">Fifth step</p></div>',\r\n        header: 'Fifth step title',\r\n        templateUrl: 'fifth.html'\r\n    }, {\r\n        title: 'Sixth step',\r\n        html: '<div><i class=\"hpe-icon hpe-scorecard\"></i><p class=\"inline-title\">Sixth step</p></div>',\r\n        header: 'Sixth step title',\r\n        templateUrl: 'sixth.html'\r\n    }];\r\n\r\n    vm.buttonOptions = {\r\n      previousTooltip: 'Previous Step',\r\n      nextTooltip: 'Next Step',\r\n      finishTooltip: 'Finish'\r\n    };\r\n\r\n    vm.isVisited = false;\r\n\r\n    vm.onChanging = function(from, to) {\r\n        if (from === 1 && $scope.requiredInput.errorDemo) {\r\n            return false;\r\n        }\r\n    };\r\n\r\n    $scope.$watch('requiredInput.errorDemo', function(nv, ov) {\r\n        if (nv !== ov) {\r\n            if (nv === true) {\r\n                vm.steps[1].error = true;\r\n                for (var i = 2; i < vm.steps.length; i++) {\r\n                    vm.steps[i].completed = false;\r\n                    vm.steps[i].visited = false;\r\n                }\r\n            } else {\r\n                vm.steps[1].error = false;\r\n            }\r\n        }\r\n    });\r\n\r\n    $scope.$watch('requiredInput.skipSteps', function(nv, ov) {\r\n        if (nv !== ov) {\r\n            if (nv === true) {\r\n                vm.steps[3].hidden = true;\r\n                vm.steps[4].hidden = true;\r\n            } else {\r\n                vm.steps[3].hidden = false;\r\n                vm.steps[4].hidden = false;\r\n            }\r\n        }\r\n    });\r\n\r\n    // for performing validation when the finish button is pressed\r\n    vm.onFinishing = function() {\r\n        // sets the submitted value on the form to true\r\n        $scope.requiredInput.$setSubmitted();\r\n\r\n        // returns boolean value for validation check\r\n        return $scope.requiredInput.requiredText.$valid;\r\n    };\r\n\r\n    vm.onFinished = function() {\r\n        // do stuff here when finished\r\n\r\n        // including dismissing the modal\r\n        $modalInstance.dismiss('ok');\r\n    };\r\n\r\n    vm.onCanceled = function() {\r\n        // do stuff here if user attempts to close modal\r\n\r\n        // including dismissing the modal\r\n        $modalInstance.dismiss('ok');\r\n    };\r\n\r\n}"}},2888:function(n,s){n.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>row<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\r\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>col-xs-7<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\r\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>marquee-wizard-text<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Content of second step<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\r\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>checkbox</span> <span class="token attr-name">ng-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form.errorDemo<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Set this step to error state<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>checkbox</span><span class="token punctuation">></span></span>\r\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\r\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>',example:'<div class="row">\r\n    <div class="col-xs-7">\r\n        <p class="marquee-wizard-text">Content of second step</p>\r\n        <checkbox ng-model="form.errorDemo">Set this step to error state</checkbox>\r\n    </div>\r\n</div>'}},2889:function(n,s){n.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>row<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\r\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>col-xs-7<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\r\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form-group<span class="token punctuation">"</span></span> <span class="token attr-name">ng-class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>{<span class="token punctuation">\'</span>has-error<span class="token punctuation">\'</span>:!form.requiredText.$valid &amp;&amp; !form.requiredText.$pristine || !form.requiredText.$valid &amp;&amp; form.$submitted }<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\r\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>requiredText<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>control-label<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Required Text <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form-control-validation<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>*<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\r\n\t\t\t<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>\r\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>requiredText<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Text<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form-control<span class="token punctuation">"</span></span> <span class="token attr-name">required</span> <span class="token attr-name">ng-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vm.text<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\r\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>hpe-icon hpe-alert form-control-feedback<span class="token punctuation">"</span></span> <span class="token attr-name">aria-hidden</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\r\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\r\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form-group form-group-validation<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\r\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>control-label<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form-control-validation<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>*<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token entity" title="&nbsp;">&amp;nbsp;</span>required<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>\r\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\r\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\r\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>',example:'<div class="row">\r\n    <div class="col-xs-7">\r\n        <div class="form-group" ng-class="{\'has-error\':!form.requiredText.$valid && !form.requiredText.$pristine || !form.requiredText.$valid && form.$submitted }">\r\n            <label for="requiredText" class="control-label">Required Text <span class="form-control-validation">*</span>\r\n\t\t\t</label>\r\n            <input type="text" name="requiredText" placeholder="Text" class="form-control" required ng-model="vm.text">\r\n            <span class="hpe-icon hpe-alert form-control-feedback" aria-hidden="true"></span>\r\n        </div>\r\n        <div class="form-group form-group-validation">\r\n            <label class="control-label"><span class="form-control-validation">*</span>&nbsp;required</label>\r\n        </div>\r\n    </div>\r\n</div>'}},2890:function(n,s){n.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>row<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\r\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>col-xs-7<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\r\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>marquee-wizard-text<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Content of third step<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\r\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>checkbox</span> <span class="token attr-name">ng-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form.skipSteps<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Skip to step 6<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>checkbox</span><span class="token punctuation">></span></span>\r\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\r\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>',example:'<div class="row">\r\n    <div class="col-xs-7">\r\n        <p class="marquee-wizard-text">Content of third step</p>\r\n        <checkbox ng-model="form.skipSteps">Skip to step 6</checkbox>\r\n    </div>\r\n</div>'}},2891:function(n,s){n.exports='<uxd-marquee-wizard-wrapper></uxd-marquee-wizard-wrapper>\r\n\r\n<hr>\r\n\r\n<p>The Marquee Wizard can be implemented within a modal with the use of a <code>button</code> to initialize the modal. The controller\r\n  for our example is as follows:</p>\r\n\r\n<uxd-snippet language="javascript" [content]="snippets.compiled.modalJs"></uxd-snippet>\r\n\r\n<blockquote>\r\n  <p>Refer to the <a routerLink="/components/modals">Modal View</a> page for an example of how use a modal.</p>\r\n</blockquote>\r\n\r\n<p>The below HTML is used in the above example to launch the modal.</p>\r\n\r\n<uxd-snippet [content]="snippets.compiled.modalHtml"></uxd-snippet>\r\n\r\n<p>We specify the options for the modal, such as the <code>templateUrl</code>, <code>controller</code> and <code>windowClass</code>.</p>\r\n\r\n<p>The below HTML and javascript controller code is for the template we use in the Marquee Wizard example above. Note the use\r\n  of the <code>marquee-wizard</code> tag.</p>\r\n\r\n<tabset>\r\n  <tab heading="HTML">\r\n    <uxd-snippet [content]="snippets.compiled.sampleHtml"></uxd-snippet>\r\n  </tab>\r\n  <tab heading="JavaScript">\r\n    <uxd-snippet language="javascript" [content]="snippets.compiled.sampleJs"></uxd-snippet>\r\n  </tab>\r\n  <tab heading="Css">\r\n    <uxd-snippet language="css" [content]="snippets.compiled.sampleCss"></uxd-snippet>\r\n  </tab>\r\n</tabset>\r\n\r\n<p>Attributes that can be defined for the Marquee Wizard:</p>\r\n\r\n<div class="demo-attributes table-responsive">\r\n  <table class="table m-t">\r\n    <tr>\r\n      <th>Name</th>\r\n      <th>Type</th>\r\n      <th>Binding</th>\r\n      <th>Description</th>\r\n      <th>Optional</th>\r\n    </tr>\r\n    <tr>\r\n      <td class="attribute">wizard-icon</td>\r\n      <td>string</td>\r\n      <td>variable</td>\r\n      <td>Specifies the icon for the wizard.</td>\r\n      <td>false</td>\r\n    </tr>\r\n    <tr>\r\n      <td class="attribute">wizard-steps</td>\r\n      <td>array</td>\r\n      <td>variable</td>\r\n      <td>Specifies the behaviour of each step:\r\n        <ul>\r\n          <li><code>title</code> - String for the title of the step.</li>\r\n          <li><code>html</code> - HTML code for the content of the step.</li>\r\n          <li><code>header</code> - String for the title of the wizard step.</li>\r\n          <li><code>templateUrl</code> - Template for the content of the wizard step.</li>\r\n          <li><code>hidden</code> - When set to true the step will be hidden from the marquee wizard</li>\r\n          <li><code>error</code> - When set to true the step will be highlighted in red.</li>\r\n          <li><code>completed</code> - This value will update as each step is completed but can be overwritten by setting the boolean value.</li>\r\n          <li><code>visited</code> - This value will update as each step is visited but can be overwritten by setting the boolean value.</li>\r\n        </ul>\r\n      </td>\r\n      <td>false</td>\r\n    </tr>\r\n    <tr>\r\n      <td class="attribute">button-options</td>\r\n      <td>object</td>\r\n      <td>variable</td>\r\n      <td>Defines the text, tooltip and visibility of a button.\r\n        <ul>\r\n          <li><code>nextText</code> - (default:"Next") - defines the text for the \'Next\' button.</li>\r\n          <li><code>previousText</code> - (default:"Previous") - defines the text for the \'Previous\' button.</li>\r\n          <li><code>finishText</code> - (default:"Finish") - defines the text for the \'Finish\' button.</li>\r\n          <li><code>showNext</code> - (default: true) - defines whether or not to show the \'Next\' button.</li>\r\n          <li><code>showPrevious</code> - (default: true) - defines whether or not to show the \'Previous\' button.</li>\r\n          <li><code>showFinish</code> - (default: true) - defines whether or not to show the \'Finish\' button.</li>\r\n          <li><code>nextTooltip</code> - optional attribute that allows you to set the tooltip for the \'Next\' button.</li>\r\n          <li><code>previousTooltip</code> - optional attribute that allows you to set the tooltip for the \'Previous\' button.</li>\r\n          <li><code>finishTooltip</code> - optional attribute that allows you to set the tooltip for the \'Finish\' button.</li>\r\n          <li><code>previousEnabled</code> - (default: true) - defines whether or not the \'Previous\' button is enabled.</li>\r\n          <li><code>nextEnabled</code> - (default: true) - defines whether or not the \'Next\' button is enabled.</li>\r\n          <li><code>finishEnabled</code> - (default: true) - defines whether or not the \'Finish\' button is enabled.</li>\r\n        </ul>\r\n      </td>\r\n      <td>false</td>\r\n    </tr>\r\n    <tr>\r\n      <td class="attribute">on-changing</td>\r\n      <td>function</td>\r\n      <td>variable</td>\r\n      <td>Expression that is called when changing steps. The expression should take in two parameters, from and to, which are\r\n        the indexes of the steps involved in the change. If it returns false then the current step goes into error state\r\n        and the step change is stopped. e.g. <code>on-changing="canChange(from,to)"</code>. The expression can also return\r\n        a number representing a step index to move to, overriding the <code>to</code> parameter.</td>\r\n      <td>true</td>\r\n    </tr>\r\n    <tr>\r\n      <td class="attribute">on-finishing</td>\r\n      <td>function</td>\r\n      <td>variable</td>\r\n      <td>Expression that is called when Finish is clicked but before <code>on-finished</code> expression is evaluated. The expression\r\n        should return a boolean or number result. If the function returns a number the wizard will go to that step. If it returns false current step goes into error state and the step change is stopped. e.g.\r\n        <code>on-finishing="canChange()"</code>.</td>\r\n      <td>true</td>\r\n    </tr>\r\n    <tr>\r\n      <td class="attribute">on-finished</td>\r\n      <td>function</td>\r\n      <td>variable</td>\r\n      <td>Expression that is called when Finish is clicked, after <code>on-finishing</code> expression is evaluated. e.g. <code>on-finished="wizardComplete()"</code>.</td>\r\n      <td>true</td>\r\n    </tr>\r\n    <tr>\r\n      <td class="attribute">on-canceled</td>\r\n      <td>function</td>\r\n      <td>variable</td>\r\n      <td>Expression that is called when Cancel is clicked. e.g. <code>on-canceled="wizardCanceled()"</code>.</td>\r\n      <td>true</td>\r\n    </tr>\r\n    <tr>\r\n      <td class="attribute">is-visited</td>\r\n      <td>boolean</td>\r\n      <td>variable</td>\r\n      <td>Set to indicate if a wizard is already visited(edited) and to enable all the steps (default: false).</td>\r\n      <td>true</td>\r\n    </tr>\r\n    <tr>\r\n      <td class="attribute">side-info</td>\r\n      <td>string</td>\r\n      <td>variable</td>\r\n      <td>Object to define the side panel info between the icon and the steps.\r\n        <ul>\r\n          <li><code>title</code> - optional string to define the title in the side info panel.</li>\r\n          <li><code>description</code> - optional string to define the description in the side info panel.</li>\r\n        </ul>\r\n      </td>\r\n      <td>true</td>\r\n    </tr>\r\n  </table>\r\n</div>\r\n\r\n<p>See below an example of the HTML first.html step template.</p>\r\n\r\n<uxd-snippet [content]="snippets.compiled.firstHtml"></uxd-snippet>\r\n\r\n<p>See below an example of the HTML fourth.html step template which contains validation.</p>\r\n\r\n<p>The <code>FormController</code> can be referenced using <code>form</code>.</p>\r\n\r\n<uxd-snippet [content]="snippets.compiled.fourthHtml"></uxd-snippet>\r\n\r\n<p>To see all the code required to make the demo see the codepen</p>'}});